{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "numActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "numManagerMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxManagerMembers",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isMember",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strMember[]",
          "name": "arrMembers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMember",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msgh",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "RecoverSignerFromSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_signerWallet",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "ValiSignInvt",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "ValidateSingOffChainVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/CLHouse/ApiCLHouse.sol",
    "2": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/ApiCLHouse.sol",
    "exportedSymbols": {
      "ApiCLHouse": [
        458
      ],
      "DebugDLGTCLL": [
        486
      ],
      "ICLHouse": [
        803
      ],
      "IERC20": [
        881
      ],
      "InvalidGovernanceType": [
        480
      ],
      "__GOV_COMMITTEE__": [
        471
      ],
      "__GOV_DICTATORSHIP__": [
        466
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        476
      ],
      "assetsEvent": [
        500
      ],
      "memberEvent": [
        493
      ],
      "proposalEvent": [
        504
      ],
      "proposalType": [
        514
      ],
      "strDataAddMember": [
        559
      ],
      "strDataGovRules": [
        571
      ],
      "strDataTxAssets": [
        568
      ],
      "strMember": [
        525
      ],
      "strOffChainVote": [
        580
      ],
      "strProposal": [
        545
      ],
      "strVote": [
        552
      ]
    },
    "id": 459,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "contracts/CLHouse/ICLHouse.sol",
        "file": "./ICLHouse.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 804,
        "src": "58:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ApiCLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "84:124:1",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 458,
        "linearizedBaseContracts": [
          458
        ],
        "name": "ApiCLHouse",
        "nameLocation": "217:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "651:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18,
                        "name": "_msgh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "679:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 19,
                        "name": "_v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "686:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 20,
                        "name": "_r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "690:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 21,
                        "name": "_s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "694:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 17,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "668:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 16,
                  "id": 23,
                  "nodeType": "Return",
                  "src": "661:36:1"
                }
              ]
            },
            "documentation": {
              "id": 4,
              "nodeType": "StructuredDocumentation",
              "src": "235:201:1",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msgh Signed message\n @param _v V\n @param _r R\n @param _s S\n @return sender The address of the signer"
            },
            "functionSelector": "06bca808",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "RecoverSignerFromSignature",
            "nameLocation": "450:26:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "_msgh",
                  "nameLocation": "495:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "486:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_v",
                  "nameLocation": "516:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "510:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_r",
                  "nameLocation": "536:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "528:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "_s",
                  "nameLocation": "556:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "548:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:88:1"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "630:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "622:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:38:1"
            },
            "scope": 458,
            "src": "441:263:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1339:642:1",
              "statements": [
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1358:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1349:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$803",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 42,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 803,
                          "src": "1349:8:1"
                        },
                        "referencedDeclaration": 803,
                        "src": "1349:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$803",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1377:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 44,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "1367:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$803_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$803",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:40:1"
                },
                {
                  "assignments": [
                    49
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1408:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1400:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1400:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1434:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1414:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$803",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 693,
                      "src": "1414:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1400:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1467:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 57,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "1472:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1467:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1478:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:43:1"
                },
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "mutability": "mutable",
                      "name": "houseMember",
                      "nameLocation": "1529:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1512:28:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                        "typeString": "struct strMember"
                      },
                      "typeName": {
                        "id": 63,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62,
                          "name": "strMember",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 525,
                          "src": "1512:9:1"
                        },
                        "referencedDeclaration": 525,
                        "src": "1512:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strMember_$525_storage_ptr",
                          "typeString": "struct strMember"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:28:1"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 66,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1555:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 516,
                          "src": "1555:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 69,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1591:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 518,
                          "src": "1591:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 71,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1621:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 520,
                          "src": "1621:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 73,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1654:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 522,
                          "src": "1654:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 75,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1688:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 524,
                          "src": "1688:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 77,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1551:160:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "1733:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 78,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1714:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$803",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrMembers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 635,
                        "src": "1714:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1551:187:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:187:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1758:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 86,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1766:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 522,
                          "src": "1766:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1758:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206973206e6f742061204d656d626572",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12ee78a4e3256880c48ef33e849500f4527b78edcdc23ebd7414ee510854c8fc",
                          "typeString": "literal_string \"User is not a Member\""
                        },
                        "value": "User is not a Member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12ee78a4e3256880c48ef33e849500f4527b78edcdc23ebd7414ee510854c8fc",
                          "typeString": "literal_string \"User is not a Member\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1749:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1749:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:65:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 92,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1846:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 518,
                        "src": "1846:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 94,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1876:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 520,
                        "src": "1876:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 96,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1909:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 522,
                        "src": "1909:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 98,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1943:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 524,
                        "src": "1943:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 100,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1832:142:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 40,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1825:149:1"
                }
              ]
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "710:350:1",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isMember true if is member\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1074:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1120:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1104:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1148:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1140:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:71:1"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1239:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1225:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1262:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1257:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "isMember",
                  "nameLocation": "1288:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1283:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1315:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1310:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:123:1"
            },
            "scope": 458,
            "src": "1065:916:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2305:795:1",
              "statements": [
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2324:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2315:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$803",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 113,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 803,
                          "src": "2315:8:1"
                        },
                        "referencedDeclaration": 803,
                        "src": "2315:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$803",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2343:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "2333:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$803_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$803",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2315:40:1"
                },
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "numActiveMembers",
                      "nameLocation": "2372:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2366:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2366:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 122,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2391:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$803",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numActiveMembers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "2391:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2391:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2366:51:1"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "arrMembersLength",
                      "nameLocation": "2435:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2427:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2427:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 128,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2454:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$803",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrMembersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 718,
                      "src": "2454:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2427:55:1"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "_arrMembers",
                      "nameLocation": "2511:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2492:30:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strMember_$525_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strMember[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 133,
                            "name": "strMember",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 525,
                            "src": "2492:9:1"
                          },
                          "referencedDeclaration": 525,
                          "src": "2492:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$525_storage_ptr",
                            "typeString": "struct strMember"
                          }
                        },
                        "id": 135,
                        "nodeType": "ArrayTypeName",
                        "src": "2492:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strMember_$525_storage_$dyn_storage_ptr",
                          "typeString": "struct strMember[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "numActiveMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2543:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2525:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strMember_$525_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strMember memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 138,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 137,
                            "name": "strMember",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 525,
                            "src": "2529:9:1"
                          },
                          "referencedDeclaration": 525,
                          "src": "2529:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$525_storage_ptr",
                            "typeString": "struct strMember"
                          }
                        },
                        "id": 139,
                        "nodeType": "ArrayTypeName",
                        "src": "2529:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strMember_$525_storage_$dyn_storage_ptr",
                          "typeString": "struct strMember[]"
                        }
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$525_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strMember memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2492:69:1"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2578:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2572:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2586:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:15:1"
                },
                {
                  "body": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2655:411:1",
                    "statements": [
                      {
                        "assignments": [
                          160
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 160,
                            "mutability": "mutable",
                            "name": "houseMember",
                            "nameLocation": "2686:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 195,
                            "src": "2669:28:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                              "typeString": "struct strMember"
                            },
                            "typeName": {
                              "id": 159,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 158,
                                "name": "strMember",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 525,
                                "src": "2669:9:1"
                              },
                              "referencedDeclaration": 525,
                              "src": "2669:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strMember_$525_storage_ptr",
                                "typeString": "struct strMember"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 161,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2669:28:1"
                      },
                      {
                        "expression": {
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 162,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2716:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 516,
                                "src": "2716:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 165,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2756:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 166,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 518,
                                "src": "2756:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 167,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2790:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 168,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 520,
                                "src": "2790:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 169,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2827:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isMember",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 522,
                                "src": "2827:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 171,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2865:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 172,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 524,
                                "src": "2865:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 173,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2712:176:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 176,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 149,
                                "src": "2910:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 174,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "2891:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$803",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrMembers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 635,
                              "src": "2891:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2891:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "2712:203:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "2712:203:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2934:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 181,
                              "name": "houseMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "2942:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                "typeString": "struct strMember memory"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 522,
                            "src": "2942:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2934:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 194,
                        "nodeType": "IfStatement",
                        "src": "2930:126:1",
                        "trueBody": {
                          "id": 193,
                          "nodeType": "Block",
                          "src": "2964:92:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 184,
                                    "name": "_arrMembers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 136,
                                    "src": "2982:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strMember_$525_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strMember memory[] memory"
                                    }
                                  },
                                  "id": 186,
                                  "indexExpression": {
                                    "id": 185,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145,
                                    "src": "2995:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2982:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 187,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "3005:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "src": "2982:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strMember_$525_memory_ptr",
                                  "typeString": "struct strMember memory"
                                }
                              },
                              "id": 189,
                              "nodeType": "ExpressionStatement",
                              "src": "2982:34:1"
                            },
                            {
                              "expression": {
                                "id": 191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3034:7:1",
                                "subExpression": {
                                  "id": 190,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "3034:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 192,
                              "nodeType": "ExpressionStatement",
                              "src": "3034:7:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 152,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2622:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 153,
                      "name": "arrMembersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2628:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2622:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 196,
                  "initializationExpression": {
                    "assignments": [
                      149
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2612:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "2604:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2604:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2618:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2604:15:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2647:5:1",
                      "subExpression": {
                        "id": 155,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2647:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 157,
                    "nodeType": "ExpressionStatement",
                    "src": "2647:5:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2599:467:1"
                },
                {
                  "expression": {
                    "id": 197,
                    "name": "_arrMembers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 136,
                    "src": "3082:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$525_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strMember memory[] memory"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "3075:18:1"
                }
              ]
            },
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "1987:142:1",
              "text": "@notice The list of all members address\n @param _houseAddr address of the CLH\n @return arrMembers array with list of members"
            },
            "functionSelector": "b698be8d",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2143:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2185:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2169:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2159:42:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "arrMembers",
                  "nameLocation": "2280:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2261:29:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strMember_$525_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strMember[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 109,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 108,
                        "name": "strMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 525,
                        "src": "2261:9:1"
                      },
                      "referencedDeclaration": 525,
                      "src": "2261:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strMember_$525_storage_ptr",
                        "typeString": "struct strMember"
                      }
                    },
                    "id": 110,
                    "nodeType": "ArrayTypeName",
                    "src": "2261:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$525_storage_$dyn_storage_ptr",
                      "typeString": "struct strMember[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:53:1"
            },
            "scope": 458,
            "src": "2134:966:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "4193:415:1",
              "statements": [
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4212:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "4203:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$803",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 222,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 803,
                          "src": "4203:8:1"
                        },
                        "referencedDeclaration": 803,
                        "src": "4203:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$803",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 226,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "4231:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 225,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "4221:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$803_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$803",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4203:40:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 229,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 590,
                          "src": "4274:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4274:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 232,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4307:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 595,
                          "src": "4307:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4307:31:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 235,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4352:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 585,
                          "src": "4352:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4352:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 238,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4387:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numActiveMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 600,
                          "src": "4387:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4387:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 241,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4426:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagerMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 605,
                          "src": "4426:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4426:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 244,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4466:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 610,
                          "src": "4466:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4466:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 247,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4512:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxActiveMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 615,
                          "src": "4512:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4512:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 250,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4558:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$803",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagerMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 620,
                          "src": "4558:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4558:33:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 253,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4260:341:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(string memory,bytes32,bool,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 221,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "4254:347:1"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "3106:644:1",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return numActiveMembers Current members of a CLH\n @return numManagerMembers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n @return govRuleMaxActiveMembers Max of all members (including managers)\n @return govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "3764:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "3800:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3792:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3782:34:1"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "3890:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3876:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "3922:22:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3914:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "3963:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3958:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "numActiveMembers",
                  "nameLocation": "3995:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3989:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "numManagerMembers",
                  "nameLocation": "4031:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4025:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4068:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4062:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "govRuleMaxActiveMembers",
                  "nameLocation": "4111:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4105:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagerMembers",
                  "nameLocation": "4154:24:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4148:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3862:326:1"
            },
            "scope": 458,
            "src": "3755:853:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "4869:1392:1",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "4885:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "4877:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4877:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "expression": {
                      "id": 275,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4895:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "4895:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4877:31:1"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "eip712DomainHash",
                      "nameLocation": "4925:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "4917:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4917:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 299,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                    "id": 286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5037:84:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    },
                                    "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 284,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5001:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5001:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5001:136:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 283,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4991:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4991:147:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "434c486f757365",
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5164:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                },
                                "value": "CLHouse"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                }
                              ],
                              "id": 289,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5154:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5154:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "302e302e3130",
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5200:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                },
                                "value": "0.0.10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                }
                              ],
                              "id": 292,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5190:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5190:19:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 295,
                            "name": "chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "5225:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 296,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "5248:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 281,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4965:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4965:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4965:305:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 280,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4944:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4944:334:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4917:361:1"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "hashStruct",
                      "nameLocation": "5295:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5287:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5287:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 322,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "7374724f6666436861696e566f7465286164647265737320766f7465722c75696e743235362070726f7049642c626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6e29",
                                    "id": 308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5397:81:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_29db90f499fc17d858adf930fec9986f376f0ba9b76d35b25f1db7afb7f4b60c",
                                      "typeString": "literal_string \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\""
                                    },
                                    "value": "strOffChainVote(address voter,uint256 propId,bool support,string justification)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_29db90f499fc17d858adf930fec9986f376f0ba9b76d35b25f1db7afb7f4b60c",
                                      "typeString": "literal_string \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 306,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5363:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5363:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5363:131:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 305,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5353:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5353:142:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 311,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "5511:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 312,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "5533:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 313,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "5556:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 317,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 266,
                                    "src": "5607:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 315,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5590:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5590:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5590:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 314,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5580:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5580:43:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 303,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5327:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5327:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5327:308:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 302,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5308:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:335:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5287:356:1"
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5660:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5652:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5652:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5698:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 329,
                            "name": "eip712DomainHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5710:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 330,
                            "name": "hashStruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "5728:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 326,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5681:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5681:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5681:58:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 325,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5671:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5671:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5652:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 335,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "5764:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5764:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5785:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "5764:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5789:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5755:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:58:1"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "5830:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5822:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5822:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5822:13:1"
                },
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "5851:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5843:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5843:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5843:13:1"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "5870:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5864:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5864:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5864:11:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5893:294:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5954:38:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "5975:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5987:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5970:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5970:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5963:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5963:29:1"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "5954:5:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6028:38:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "6049:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6061:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6044:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6044:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6037:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6037:29:1"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "6028:5:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6131:48:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6146:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "6161:10:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6173:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6156:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6156:21:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6149:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6149:29:1"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "6140:4:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6140:39:1"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "6131:5:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 268,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5975:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 268,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6049:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 268,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6161:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 343,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5954:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 346,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6028:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 349,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6131:5:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 351,
                  "nodeType": "InlineAssembly",
                  "src": "5884:303:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 352,
                      "name": "_voter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "6202:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 354,
                          "name": "singhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "6223:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 355,
                          "name": "signV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "6233:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 356,
                          "name": "signR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "6240:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 357,
                          "name": "signS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "6247:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 353,
                        "name": "ecrecover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -6,
                        "src": "6212:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6212:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6202:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 272,
                  "id": 360,
                  "nodeType": "Return",
                  "src": "6195:59:1"
                }
              ]
            },
            "functionSelector": "2eeb1bb1",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ValidateSingOffChainVote",
            "nameLocation": "4623:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4665:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4657:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "4693:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4685:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "4714:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4709:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4709:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "4736:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4731:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "4768:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4754:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4805:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4792:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4647:174:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4858:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4856:8:1"
            },
            "scope": 458,
            "src": "4614:1647:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "6460:1307:1",
              "statements": [
                {
                  "assignments": [
                    376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "6476:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "6468:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 375,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6468:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 379,
                  "initialValue": {
                    "expression": {
                      "id": 377,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "6486:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "6486:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6468:31:1"
                },
                {
                  "assignments": [
                    381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 381,
                      "mutability": "mutable",
                      "name": "eip712DomainHash",
                      "nameLocation": "6516:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "6508:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 380,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6508:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 401,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                    "id": 388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6628:84:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    },
                                    "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 386,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6592:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6592:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6592:136:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 385,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6582:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6582:147:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "434c486f757365",
                                "id": 392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6755:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                },
                                "value": "CLHouse"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                }
                              ],
                              "id": 391,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6745:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6745:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "302e302e3130",
                                "id": 395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6791:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                },
                                "value": "0.0.10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                }
                              ],
                              "id": 394,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6781:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6781:19:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 397,
                            "name": "chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "6816:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 398,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "6839:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 383,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6556:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6556:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6556:305:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 382,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6535:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6535:334:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6508:361:1"
                },
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "hashStruct",
                      "nameLocation": "6886:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "6878:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 402,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6878:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 417,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "7374724f6666436861696e496e7669746174696f6e2861646472657373207369676e657257616c6c65742c626f6f6c20616363657074616e636529",
                                    "id": 410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6988:61:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b741a51026fb46bf90e3a94768014d3b8ea09d9b368c949907e8e8bedf72c88f",
                                      "typeString": "literal_string \"strOffChainInvitation(address signerWallet,bool acceptance)\""
                                    },
                                    "value": "strOffChainInvitation(address signerWallet,bool acceptance)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_b741a51026fb46bf90e3a94768014d3b8ea09d9b368c949907e8e8bedf72c88f",
                                      "typeString": "literal_string \"strOffChainInvitation(address signerWallet,bool acceptance)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 408,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6954:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6954:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6954:111:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 407,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6944:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6944:122:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 413,
                            "name": "_signerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "7082:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 414,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "7111:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 405,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6918:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6918:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6918:216:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 404,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6899:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6899:243:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6878:264:1"
                },
                {
                  "assignments": [
                    419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 419,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7159:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "7151:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 418,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7151:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7197:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 424,
                            "name": "eip712DomainHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "7209:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 425,
                            "name": "hashStruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "7227:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 421,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7180:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7180:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7180:58:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 420,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7170:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7170:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7151:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 430,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "7263:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7263:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7284:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "7263:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7288:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7254:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7254:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:58:1"
                },
                {
                  "assignments": [
                    438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 438,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "7329:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "7321:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 437,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7321:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7321:13:1"
                },
                {
                  "assignments": [
                    441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 441,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "7350:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "7342:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 440,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7342:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 442,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7342:13:1"
                },
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "7369:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "7363:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7363:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 445,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7363:11:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "7392:294:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7453:38:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "7474:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7486:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7469:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7469:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7462:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7462:29:1"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "7453:5:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7527:38:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "7548:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7560:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7543:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7543:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7536:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7536:29:1"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "7527:5:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7630:48:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7645:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "7660:10:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7672:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7655:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7655:21:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7648:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7648:29:1"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "7639:4:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7639:39:1"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "7630:5:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 370,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7474:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 370,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7548:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 370,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7660:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 438,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7453:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 441,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7527:5:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 444,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7630:5:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 446,
                  "nodeType": "InlineAssembly",
                  "src": "7383:303:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 447,
                      "name": "_signerWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "7701:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 449,
                          "name": "singhash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "7729:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 450,
                          "name": "signV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "7739:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 451,
                          "name": "signR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7746:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 452,
                          "name": "signS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "7753:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 448,
                        "name": "ecrecover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -6,
                        "src": "7718:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7718:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7701:59:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 374,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "7694:66:1"
                }
              ]
            },
            "functionSelector": "2763e6ec",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ValiSignInvt",
            "nameLocation": "6276:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6306:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6298:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "_signerWallet",
                  "nameLocation": "6334:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6326:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6326:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "6362:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6357:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6357:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6396:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6383:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6383:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6288:124:1"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "6449:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6449:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6447:8:1"
            },
            "scope": 458,
            "src": "6267:1500:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 459,
        "src": "208:7561:1",
        "usedErrors": []
      }
    ],
    "src": "32:7737:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50611505806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306bca808146100675780632763e6ec146100975780632eeb1bb1146100ba57806386abd826146100cd5780638750bc3e146100f0578063b698be8d14610117575b600080fd5b61007a610075366004610e6b565b610137565b6040516001600160a01b0390911681526020015b60405180910390f35b6100aa6100a5366004610f90565b61019f565b604051901515815260200161008e565b6100aa6100c8366004611005565b61040a565b6100e06100db3660046110a9565b6106dd565b60405161008e949392919061113e565b6101036100fe36600461116f565b6108a9565b60405161008e989796959493929190611193565b61012a61012536600461116f565b610bea565b60405161008e91906111e6565b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561018b573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b60008046905060006040516020016101b69061128a565b60408051601f198184030181528282528051602091820120908301527f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875908201527f07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c646060820152608081018390526001600160a01b03881660a082015260c00160405160208183030381529060405280519060200120905060006040516020016102a9907f7374724f6666436861696e496e7669746174696f6e286164647265737320736981527f676e657257616c6c65742c626f6f6c20616363657074616e63652900000000006020820152603b0190565b60408051808303601f190181528282528051602091820120818401526001600160a01b038a16838301528815156060808501919091528251808503909101815260808401909252815191012061190160f01b60a083015260a2820184905260c28201819052915060009060e201604051602081830303815290604052805190602001209050855160411461037b5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b6020868101516040808901516060808b015183516000808252968101808652889052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa1580156103db573d6000803e3d6000fd5b505050602060405103516001600160a01b03168b6001600160a01b031614975050505050505050949350505050565b60008046905060006040516020016104219061128a565b60408051601f198184030181528282528051602091820120908301527f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875908201527f07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c646060820152608081018390526001600160a01b038a1660a082015260c001604051602081830303815290604052805190602001209050600060405160200161052c907f7374724f6666436861696e566f7465286164647265737320766f7465722c756981527f6e743235362070726f7049642c626f6f6c20737570706f72742c737472696e6760208201526e206a757374696669636174696f6e2960881b6040820152604f0190565b604051602081830303815290604052805190602001208989898960405160200161055691906112f4565b604051602081830303815290604052805190602001206040516020016105a99594939291909485526001600160a01b03939093166020850152604084019190915215156060830152608082015260a00190565b604051602081830303815290604052805190602001209050600082826040516020016105ec92919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050855160411461064c5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b6044820152606401610372565b6020868101516040808901516060808b015183516000808252968101808652889052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa1580156106ac573d6000803e3d6000fd5b505050602060405103516001600160a01b03168d6001600160a01b0316149750505050505050509695505050505050565b6040516309c57df760e01b81526001600160a01b03828116600483015260609160009182918291879183918316906309c57df790602401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190611310565b90508061079a5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b6044820152606401610372565b6107a2610e1d565b604051638532cbf760e01b8152600481018390526001600160a01b03841690638532cbf790602401600060405180830381865afa1580156107e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080f9190810190611376565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146108825760405162461bcd60e51b81526020600482015260146024820152732ab9b2b91034b9903737ba10309026b2b6b132b960611b6044820152606401610372565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092091908101906113f9565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190611310565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e4919061142e565b836001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a46919061144b565b846001600160a01b0316638668eafc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa8919061144b565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a919061144b565b866001600160a01b031663ab44997b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c919061144b565b876001600160a01b03166305fe66636040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce919061144b565b9850985098509850985098509850985050919395975091939597565b606060008290506000816001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c55919061144b565b90506000826001600160a01b031663824c88da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbb9190611310565b905060008260ff1667ffffffffffffffff811115610cdb57610cdb610ecb565b604051908082528060200260200182016040528015610d1457816020015b610d01610e1d565b815260200190600190039081610cf95790505b509050600060015b83811015610e1157610d2c610e1d565b604051638532cbf760e01b8152600481018390526001600160a01b03881690638532cbf790602401600060405180830381865afa158015610d71573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d999190810190611376565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011415610dfe5780848460ff1681518110610de457610de4611468565b60200260200101819052508280610dfa90611494565b9350505b5080610e09816114b4565b915050610d1c565b50909695505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b60ff81168114610e6857600080fd5b50565b60008060008060808587031215610e8157600080fd5b843593506020850135610e9381610e59565b93969395505050506040820135916060013590565b6001600160a01b0381168114610e6857600080fd5b8015158114610e6857600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f0a57610f0a610ecb565b604052919050565b600067ffffffffffffffff821115610f2c57610f2c610ecb565b50601f01601f191660200190565b600082601f830112610f4b57600080fd5b8135610f5e610f5982610f12565b610ee1565b818152846020838601011115610f7357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610fa657600080fd5b8435610fb181610ea8565b93506020850135610fc181610ea8565b92506040850135610fd181610ebd565b9150606085013567ffffffffffffffff811115610fed57600080fd5b610ff987828801610f3a565b91505092959194509250565b60008060008060008060c0878903121561101e57600080fd5b863561102981610ea8565b9550602087013561103981610ea8565b945060408701359350606087013561105081610ebd565b9250608087013567ffffffffffffffff8082111561106d57600080fd5b6110798a838b01610f3a565b935060a089013591508082111561108f57600080fd5b5061109c89828a01610f3a565b9150509295509295509295565b600080604083850312156110bc57600080fd5b82356110c781610ea8565b915060208301356110d781610ea8565b809150509250929050565b60005b838110156110fd5781810151838201526020016110e5565b8381111561110c576000848401525b50505050565b6000815180845261112a8160208601602086016110e2565b601f01601f19169290920160200192915050565b6080815260006111516080830187611112565b60208301959095525091151560408301521515606090910152919050565b60006020828403121561118157600080fd5b813561118c81610ea8565b9392505050565b60006101008083526111a78184018c611112565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561127c57888303603f19018552815180516001600160a01b031684528781015160a08986018190529061124682870182611112565b838a0151878b0152606080850151151590880152608093840151151593909601929092525050938601939086019060010161120d565b509098975050505050505050565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b600082516113068184602087016110e2565b9190910192915050565b60006020828403121561132257600080fd5b5051919050565b600082601f83011261133a57600080fd5b8151611348610f5982610f12565b81815284602083860101111561135d57600080fd5b61136e8260208301602087016110e2565b949350505050565b600080600080600060a0868803121561138e57600080fd5b855161139981610ea8565b602087015190955067ffffffffffffffff8111156113b657600080fd5b6113c288828901611329565b9450506040860151925060608601516113da81610ebd565b60808701519092506113eb81610ebd565b809150509295509295909350565b60006020828403121561140b57600080fd5b815167ffffffffffffffff81111561142257600080fd5b61136e84828501611329565b60006020828403121561144057600080fd5b815161118c81610ebd565b60006020828403121561145d57600080fd5b815161118c81610e59565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156114ab576114ab61147e565b60010192915050565b60006000198214156114c8576114c861147e565b506001019056fea26469706673582212206ea23b43e39e2f3dd6a5f84f37344562c9f3317e9b44c7b51151cbedafe47fba64736f6c634300080c0033",
  "bytecodeSha1": "106ae3f4caefbbf1222304f329f5baa040209631",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ApiCLHouse",
  "coverageMap": {
    "branches": {
      "1": {
        "ApiCLHouse.GetHouseUserList": {
          "19": [
            2934,
            2962,
            false
          ]
        },
        "ApiCLHouse.GetUserInfoByAddress": {
          "17": [
            1467,
            1475,
            true
          ],
          "18": [
            1758,
            1786,
            true
          ]
        },
        "ApiCLHouse.ValiSignInvt": {
          "15": [
            7263,
            7286,
            true
          ]
        },
        "ApiCLHouse.ValidateSingOffChainVote": {
          "16": [
            5764,
            5787,
            true
          ]
        }
      },
      "2": {}
    },
    "statements": {
      "1": {
        "ApiCLHouse.GetHouseProperties": {
          "9": [
            4254,
            4601
          ]
        },
        "ApiCLHouse.GetHouseUserList": {
          "10": [
            2712,
            2915
          ],
          "11": [
            2982,
            3016
          ],
          "12": [
            3034,
            3041
          ],
          "13": [
            2647,
            2652
          ],
          "14": [
            3075,
            3093
          ]
        },
        "ApiCLHouse.GetUserInfoByAddress": {
          "5": [
            1458,
            1501
          ],
          "6": [
            1551,
            1738
          ],
          "7": [
            1749,
            1814
          ],
          "8": [
            1825,
            1974
          ]
        },
        "ApiCLHouse.RecoverSignerFromSignature": {
          "0": [
            661,
            697
          ]
        },
        "ApiCLHouse.ValiSignInvt": {
          "1": [
            7254,
            7312
          ],
          "2": [
            7694,
            7760
          ]
        },
        "ApiCLHouse.ValidateSingOffChainVote": {
          "3": [
            5755,
            5813
          ],
          "4": [
            6195,
            6254
          ]
        }
      },
      "2": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c806306bca808146100675780632763e6ec146100975780632eeb1bb1146100ba57806386abd826146100cd5780638750bc3e146100f0578063b698be8d14610117575b600080fd5b61007a610075366004610e6b565b610137565b6040516001600160a01b0390911681526020015b60405180910390f35b6100aa6100a5366004610f90565b61019f565b604051901515815260200161008e565b6100aa6100c8366004611005565b61040a565b6100e06100db3660046110a9565b6106dd565b60405161008e949392919061113e565b6101036100fe36600461116f565b6108a9565b60405161008e989796959493929190611193565b61012a61012536600461116f565b610bea565b60405161008e91906111e6565b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561018b573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b60008046905060006040516020016101b69061128a565b60408051601f198184030181528282528051602091820120908301527f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875908201527f07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c646060820152608081018390526001600160a01b03881660a082015260c00160405160208183030381529060405280519060200120905060006040516020016102a9907f7374724f6666436861696e496e7669746174696f6e286164647265737320736981527f676e657257616c6c65742c626f6f6c20616363657074616e63652900000000006020820152603b0190565b60408051808303601f190181528282528051602091820120818401526001600160a01b038a16838301528815156060808501919091528251808503909101815260808401909252815191012061190160f01b60a083015260a2820184905260c28201819052915060009060e201604051602081830303815290604052805190602001209050855160411461037b5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b6020868101516040808901516060808b015183516000808252968101808652889052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa1580156103db573d6000803e3d6000fd5b505050602060405103516001600160a01b03168b6001600160a01b031614975050505050505050949350505050565b60008046905060006040516020016104219061128a565b60408051601f198184030181528282528051602091820120908301527f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875908201527f07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c646060820152608081018390526001600160a01b038a1660a082015260c001604051602081830303815290604052805190602001209050600060405160200161052c907f7374724f6666436861696e566f7465286164647265737320766f7465722c756981527f6e743235362070726f7049642c626f6f6c20737570706f72742c737472696e6760208201526e206a757374696669636174696f6e2960881b6040820152604f0190565b604051602081830303815290604052805190602001208989898960405160200161055691906112f4565b604051602081830303815290604052805190602001206040516020016105a99594939291909485526001600160a01b03939093166020850152604084019190915215156060830152608082015260a00190565b604051602081830303815290604052805190602001209050600082826040516020016105ec92919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050855160411461064c5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b6044820152606401610372565b6020868101516040808901516060808b015183516000808252968101808652889052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa1580156106ac573d6000803e3d6000fd5b505050602060405103516001600160a01b03168d6001600160a01b0316149750505050505050509695505050505050565b6040516309c57df760e01b81526001600160a01b03828116600483015260609160009182918291879183918316906309c57df790602401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190611310565b90508061079a5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b6044820152606401610372565b6107a2610e1d565b604051638532cbf760e01b8152600481018390526001600160a01b03841690638532cbf790602401600060405180830381865afa1580156107e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080f9190810190611376565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146108825760405162461bcd60e51b81526020600482015260146024820152732ab9b2b91034b9903737ba10309026b2b6b132b960611b6044820152606401610372565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092091908101906113f9565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190611310565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e4919061142e565b836001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a46919061144b565b846001600160a01b0316638668eafc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa8919061144b565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a919061144b565b866001600160a01b031663ab44997b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c919061144b565b876001600160a01b03166305fe66636040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce919061144b565b9850985098509850985098509850985050919395975091939597565b606060008290506000816001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c55919061144b565b90506000826001600160a01b031663824c88da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbb9190611310565b905060008260ff1667ffffffffffffffff811115610cdb57610cdb610ecb565b604051908082528060200260200182016040528015610d1457816020015b610d01610e1d565b815260200190600190039081610cf95790505b509050600060015b83811015610e1157610d2c610e1d565b604051638532cbf760e01b8152600481018390526001600160a01b03881690638532cbf790602401600060405180830381865afa158015610d71573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d999190810190611376565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011415610dfe5780848460ff1681518110610de457610de4611468565b60200260200101819052508280610dfa90611494565b9350505b5080610e09816114b4565b915050610d1c565b50909695505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b60ff81168114610e6857600080fd5b50565b60008060008060808587031215610e8157600080fd5b843593506020850135610e9381610e59565b93969395505050506040820135916060013590565b6001600160a01b0381168114610e6857600080fd5b8015158114610e6857600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f0a57610f0a610ecb565b604052919050565b600067ffffffffffffffff821115610f2c57610f2c610ecb565b50601f01601f191660200190565b600082601f830112610f4b57600080fd5b8135610f5e610f5982610f12565b610ee1565b818152846020838601011115610f7357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610fa657600080fd5b8435610fb181610ea8565b93506020850135610fc181610ea8565b92506040850135610fd181610ebd565b9150606085013567ffffffffffffffff811115610fed57600080fd5b610ff987828801610f3a565b91505092959194509250565b60008060008060008060c0878903121561101e57600080fd5b863561102981610ea8565b9550602087013561103981610ea8565b945060408701359350606087013561105081610ebd565b9250608087013567ffffffffffffffff8082111561106d57600080fd5b6110798a838b01610f3a565b935060a089013591508082111561108f57600080fd5b5061109c89828a01610f3a565b9150509295509295509295565b600080604083850312156110bc57600080fd5b82356110c781610ea8565b915060208301356110d781610ea8565b809150509250929050565b60005b838110156110fd5781810151838201526020016110e5565b8381111561110c576000848401525b50505050565b6000815180845261112a8160208601602086016110e2565b601f01601f19169290920160200192915050565b6080815260006111516080830187611112565b60208301959095525091151560408301521515606090910152919050565b60006020828403121561118157600080fd5b813561118c81610ea8565b9392505050565b60006101008083526111a78184018c611112565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561127c57888303603f19018552815180516001600160a01b031684528781015160a08986018190529061124682870182611112565b838a0151878b0152606080850151151590880152608093840151151593909601929092525050938601939086019060010161120d565b509098975050505050505050565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b600082516113068184602087016110e2565b9190910192915050565b60006020828403121561132257600080fd5b5051919050565b600082601f83011261133a57600080fd5b8151611348610f5982610f12565b81815284602083860101111561135d57600080fd5b61136e8260208301602087016110e2565b949350505050565b600080600080600060a0868803121561138e57600080fd5b855161139981610ea8565b602087015190955067ffffffffffffffff8111156113b657600080fd5b6113c288828901611329565b9450506040860151925060608601516113da81610ebd565b60808701519092506113eb81610ebd565b809150509295509295909350565b60006020828403121561140b57600080fd5b815167ffffffffffffffff81111561142257600080fd5b61136e84828501611329565b60006020828403121561144057600080fd5b815161118c81610ebd565b60006020828403121561145d57600080fd5b815161118c81610e59565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156114ab576114ab61147e565b60010192915050565b60006000198214156114c8576114c861147e565b506001019056fea26469706673582212206ea23b43e39e2f3dd6a5f84f37344562c9f3317e9b44c7b51151cbedafe47fba64736f6c634300080c0033",
  "deployedSourceMap": "208:7561:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:263;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;750:32:3;;;732:51;;720:2;705:18;441:263:1;;;;;;;;6267:1500;;;;;;:::i;:::-;;:::i;:::-;;;3025:14:3;;3018:22;3000:41;;2988:2;2973:18;6267:1500:1;2860:187:3;4614:1647:1;;;;;;:::i;:::-;;:::i;1065:916::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3755:853::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2134:966::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;441:263::-;668:29;;;622:14;668:29;;;;;;;;;8372:25:3;;;8445:4;8433:17;;8413:18;;;8406:45;;;;8467:18;;;8460:34;;;8510:18;;;8503:34;;;668:29:1;;8344:19:3;;668:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;668:29:1;;-1:-1:-1;;668:29:1;;;441:263;-1:-1:-1;;;;;;441:263:1:o;6267:1500::-;6449:4;6468:15;6486:13;6468:31;;6508:24;6592:136;;;;;;;:::i;:::-;;;;-1:-1:-1;;6592:136:1;;;;;;;;;6582:147;;6592:136;6582:147;;;;6556:305;;;9211:25:3;6745:20:1;9252:18:3;;;9245:34;6781:19:1;9295:18:3;;;9288:34;9338:18;;;9331:34;;;-1:-1:-1;;;;;9402:32:3;;9381:19;;;9374:61;9183:19;;6556:305:1;;;;;;;;;;;;6535:334;;;;;;6508:361;;6878:18;6954:111;;;;;;9660:34:3;9648:47;;9725:29;9720:2;9711:12;;9704:51;9780:2;9771:12;;9446:343;6954:111:1;;;;;;;-1:-1:-1;;6954:111:1;;;;;;6944:122;;6954:111;6944:122;;;;6918:216;;;9990:25:3;-1:-1:-1;;;;;10051:32:3;;10031:18;;;10024:60;10127:14;;10120:22;10100:18;;;;10093:50;;;;6918:216:1;;;;;;;;;;9963:18:3;;;6918:216:1;;;6899:243;;;;;-1:-1:-1;;;7180:58:1;;;10412:27:3;10455:11;;;10448:27;;;10491:12;;;10484:28;;;6899:243:1;-1:-1:-1;;;10528:12:3;;7180:58:1;;;;;;;;;;;;7170:69;;;;;;7151:88;;7263:10;:17;7284:2;7263:23;7254:58;;;;-1:-1:-1;;;7254:58:1;;10753:2:3;7254:58:1;;;10735:21:3;10792:2;10772:18;;;10765:30;-1:-1:-1;;;10811:18:3;;;10804:50;10871:18;;7254:58:1;;;;;;;;;7486:2;7469:21;;;7462:29;7560:2;7543:21;;;7536:29;7672:2;7655:21;;;7648:29;7718:42;;7321:13;7718:42;;;;;;;;;8372:25:3;;;7639:39:1;;8413:18:3;;;8406:45;;;8467:18;;8460:34;;;8510:18;;;8503:34;;;7462:29:1;;7718:42;;8344:19:3;;7718:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7701:59:1;:13;-1:-1:-1;;;;;7701:59:1;;7694:66;;;;;;;;;6267:1500;;;;;;:::o;4614:1647::-;4858:4;4877:15;4895:13;4877:31;;4917:24;5001:136;;;;;;;:::i;:::-;;;;-1:-1:-1;;5001:136:1;;;;;;;;;4991:147;;5001:136;4991:147;;;;4965:305;;;9211:25:3;5154:20:1;9252:18:3;;;9245:34;5190:19:1;9295:18:3;;;9288:34;9338:18;;;9331:34;;;-1:-1:-1;;;;;9402:32:3;;9381:19;;;9374:61;9183:19;;4965:305:1;;;;;;;;;;;;4944:334;;;;;;4917:361;;5287:18;5363:131;;;;;;11114:34:3;11102:47;;11179:34;11174:2;11165:12;;11158:56;-1:-1:-1;;;11239:2:3;11230:12;;11223:39;11287:2;11278:12;;10900:396;5363:131:1;;;;;;;;;;;;;5353:142;;;;;;5511:6;5533:7;5556:8;5607:14;5590:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;5580:43;;;;;;5327:308;;;;;;;;;;;11835:25:3;;;-1:-1:-1;;;;;11896:32:3;;;;11891:2;11876:18;;11869:60;11960:2;11945:18;;11938:34;;;;12015:14;12008:22;12003:2;11988:18;;11981:50;12062:3;12047:19;;12040:35;11822:3;11807:19;;11582:499;5327:308:1;;;;;;;;;;;;;5308:335;;;;;;5287:356;;5652:16;5710;5728:10;5681:58;;;;;;;;-1:-1:-1;;;10412:27:3;;10464:1;10455:11;;10448:27;;;;10500:2;10491:12;;10484:28;10537:2;10528:12;;10154:392;5681:58:1;;;;;;;;;;;;;5671:69;;;;;;5652:88;;5764:10;:17;5785:2;5764:23;5755:58;;;;-1:-1:-1;;;5755:58:1;;10753:2:3;5755:58:1;;;10735:21:3;10792:2;10772:18;;;10765:30;-1:-1:-1;;;10811:18:3;;;10804:50;10871:18;;5755:58:1;10551:344:3;5755:58:1;5987:2;5970:21;;;5963:29;6061:2;6044:21;;;6037:29;6173:2;6156:21;;;6149:29;6212:42;;5822:13;6212:42;;;;;;;;;8372:25:3;;;6140:39:1;;8413:18:3;;;8406:45;;;8467:18;;8460:34;;;8510:18;;;8503:34;;;5963:29:1;;6212:42;;8344:19:3;;6212:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6202:52:1;:6;-1:-1:-1;;;;;6202:52:1;;6195:59;;;;;;;;;4614:1647;;;;;;;;:::o;1065:916::-;1414:33;;-1:-1:-1;;;1414:33:1;;-1:-1:-1;;;;;750:32:3;;;1414:33:1;;;732:51:3;1225:18:1;;1257:12;;;;;;1377:10;;1257:12;;1414:18;;;;;705::3;;1414:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1400:47;-1:-1:-1;1467:8:1;1458:43;;;;-1:-1:-1;;;1458:43:1;;12477:2:3;1458:43:1;;;12459:21:3;12516:2;12496:18;;;12489:30;-1:-1:-1;;;12535:18:3;;;12528:49;12594:18;;1458:43:1;12275:343:3;1458:43:1;1512:28;;:::i;:::-;1714:24;;-1:-1:-1;;;1714:24:1;;;;;12769:25:3;;;-1:-1:-1;;;;;1714:17:1;;;;;12742:18:3;;1714:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1714:24:1;;;;;;;;;;;;:::i;:::-;1551:187;;1688:21;;;1551:187;;;1654:20;;;1551:187;;;1621:19;;;1551:187;;;;1591:16;;;1551:187;;;;-1:-1:-1;;;;;1551:187:1;;;;;1758:4;:28;1749:65;;;;-1:-1:-1;;;1749:65:1;;14230:2:3;1749:65:1;;;14212:21:3;14269:2;14249:18;;;14242:30;-1:-1:-1;;;14288:18:3;;;14281:50;14348:18;;1749:65:1;14028:344:3;1749:65:1;1846:16;;;;1876:19;;;;1909:20;;;;1943:21;;;;;1846:16;;1876:19;;-1:-1:-1;1909:20:1;;-1:-1:-1;1943:21:1;-1:-1:-1;1065:916:1;-1:-1:-1;;;;;1065:916:1:o;3755:853::-;3876:24;3914:30;3958:17;3989:22;4025:23;4062:29;4105;4148:30;4203:15;4231:10;4203:40;;4274:6;-1:-1:-1;;;;;4274:17:1;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4274:19:1;;;;;;;;;;;;:::i;:::-;4307:6;-1:-1:-1;;;;;4307:29:1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4352:6;-1:-1:-1;;;;;4352:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4387:6;-1:-1:-1;;;;;4387:23:1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4426:6;-1:-1:-1;;;;;4426:24:1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4466:6;-1:-1:-1;;;;;4466:30:1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4512:6;-1:-1:-1;;;;;4512:30:1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4558:6;-1:-1:-1;;;;;4558:31:1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4254:347;;;;;;;;;;;;;;;;;3755:853;;;;;;;;;:::o;2134:966::-;2261:29;2315:15;2343:10;2315:40;;2366:22;2391:6;-1:-1:-1;;;;;2391:23:1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2366:51;;2427:24;2454:6;-1:-1:-1;;;;;2454:26:1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2427:55;;2492:30;2543:16;2525:36;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2492:69:1;-1:-1:-1;2572:11:1;2618:1;2599:467;2628:16;2622:3;:22;2599:467;;;2669:28;;:::i;:::-;2891:24;;-1:-1:-1;;;2891:24:1;;;;;12769:25:3;;;-1:-1:-1;;;;;2891:17:1;;;;;12742:18:3;;2891:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2891:24:1;;;;;;;;;;;;:::i;:::-;2712:203;;2865:21;;;2712:203;;;2827:20;;;2712:203;;;2790:19;;;2712:203;;;;2756:16;;;2712:203;;;;-1:-1:-1;;;;;2712:203:1;;;;;2934:4;:28;2930:126;;;3005:11;2982;2995:5;2982:20;;;;;;;;;;:::i;:::-;;;;;;:34;;;;3034:7;;;;;:::i;:::-;;;;2930:126;-1:-1:-1;2647:5:1;;;;:::i;:::-;;;;2599:467;;;-1:-1:-1;3082:11:1;;2134:966;-1:-1:-1;;;;;;2134:966:1:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:114:3:-;98:4;91:5;87:16;80:5;77:27;67:55;;118:1;115;108:12;67:55;14:114;:::o;133:448::-;217:6;225;233;241;294:3;282:9;273:7;269:23;265:33;262:53;;;311:1;308;301:12;262:53;347:9;334:23;324:33;;407:2;396:9;392:18;379:32;420:29;443:5;420:29;:::i;:::-;133:448;;468:5;;-1:-1:-1;;;;520:2:3;505:18;;492:32;;571:2;556:18;543:32;;133:448::o;794:131::-;-1:-1:-1;;;;;869:31:3;;859:42;;849:70;;915:1;912;905:12;930:118;1016:5;1009:13;1002:21;995:5;992:32;982:60;;1038:1;1035;1028:12;1053:127;1114:10;1109:3;1105:20;1102:1;1095:31;1145:4;1142:1;1135:15;1169:4;1166:1;1159:15;1185:275;1256:2;1250:9;1321:2;1302:13;;-1:-1:-1;;1298:27:3;1286:40;;1356:18;1341:34;;1377:22;;;1338:62;1335:88;;;1403:18;;:::i;:::-;1439:2;1432:22;1185:275;;-1:-1:-1;1185:275:3:o;1465:186::-;1513:4;1546:18;1538:6;1535:30;1532:56;;;1568:18;;:::i;:::-;-1:-1:-1;1634:2:3;1613:15;-1:-1:-1;;1609:29:3;1640:4;1605:40;;1465:186::o;1656:462::-;1698:5;1751:3;1744:4;1736:6;1732:17;1728:27;1718:55;;1769:1;1766;1759:12;1718:55;1805:6;1792:20;1836:48;1852:31;1880:2;1852:31;:::i;:::-;1836:48;:::i;:::-;1909:2;1900:7;1893:19;1955:3;1948:4;1943:2;1935:6;1931:15;1927:26;1924:35;1921:55;;;1972:1;1969;1962:12;1921:55;2037:2;2030:4;2022:6;2018:17;2011:4;2002:7;1998:18;1985:55;2085:1;2060:16;;;2078:4;2056:27;2049:38;;;;2064:7;1656:462;-1:-1:-1;;;1656:462:3:o;2123:732::-;2215:6;2223;2231;2239;2292:3;2280:9;2271:7;2267:23;2263:33;2260:53;;;2309:1;2306;2299:12;2260:53;2348:9;2335:23;2367:31;2392:5;2367:31;:::i;:::-;2417:5;-1:-1:-1;2474:2:3;2459:18;;2446:32;2487:33;2446:32;2487:33;:::i;:::-;2539:7;-1:-1:-1;2598:2:3;2583:18;;2570:32;2611:30;2570:32;2611:30;:::i;:::-;2660:7;-1:-1:-1;2718:2:3;2703:18;;2690:32;2745:18;2734:30;;2731:50;;;2777:1;2774;2767:12;2731:50;2800:49;2841:7;2832:6;2821:9;2817:22;2800:49;:::i;:::-;2790:59;;;2123:732;;;;;;;:::o;3052:1022::-;3172:6;3180;3188;3196;3204;3212;3265:3;3253:9;3244:7;3240:23;3236:33;3233:53;;;3282:1;3279;3272:12;3233:53;3321:9;3308:23;3340:31;3365:5;3340:31;:::i;:::-;3390:5;-1:-1:-1;3447:2:3;3432:18;;3419:32;3460:33;3419:32;3460:33;:::i;:::-;3512:7;-1:-1:-1;3566:2:3;3551:18;;3538:32;;-1:-1:-1;3622:2:3;3607:18;;3594:32;3635:30;3594:32;3635:30;:::i;:::-;3684:7;-1:-1:-1;3742:3:3;3727:19;;3714:33;3766:18;3796:14;;;3793:34;;;3823:1;3820;3813:12;3793:34;3846:49;3887:7;3878:6;3867:9;3863:22;3846:49;:::i;:::-;3836:59;;3948:3;3937:9;3933:19;3920:33;3904:49;;3978:2;3968:8;3965:16;3962:36;;;3994:1;3991;3984:12;3962:36;;4017:51;4060:7;4049:8;4038:9;4034:24;4017:51;:::i;:::-;4007:61;;;3052:1022;;;;;;;;:::o;4079:396::-;4155:6;4163;4216:2;4204:9;4195:7;4191:23;4187:32;4184:52;;;4232:1;4229;4222:12;4184:52;4271:9;4258:23;4290:31;4315:5;4290:31;:::i;:::-;4340:5;-1:-1:-1;4397:2:3;4382:18;;4369:32;4410:33;4369:32;4410:33;:::i;:::-;4462:7;4452:17;;;4079:396;;;;;:::o;4480:258::-;4552:1;4562:113;4576:6;4573:1;4570:13;4562:113;;;4652:11;;;4646:18;4633:11;;;4626:39;4598:2;4591:10;4562:113;;;4693:6;4690:1;4687:13;4684:48;;;4728:1;4719:6;4714:3;4710:16;4703:27;4684:48;;4480:258;;;:::o;4743:::-;4785:3;4823:5;4817:12;4850:6;4845:3;4838:19;4866:63;4922:6;4915:4;4910:3;4906:14;4899:4;4892:5;4888:16;4866:63;:::i;:::-;4983:2;4962:15;-1:-1:-1;;4958:29:3;4949:39;;;;4990:4;4945:50;;4743:258;-1:-1:-1;;4743:258:3:o;5006:455::-;5227:3;5216:9;5209:22;5190:4;5248:46;5289:3;5278:9;5274:19;5266:6;5248:46;:::i;:::-;5325:2;5310:18;;5303:34;;;;-1:-1:-1;5380:14:3;;5373:22;5368:2;5353:18;;5346:50;5439:14;5432:22;5427:2;5412:18;;;5405:50;5240:54;5006:455;-1:-1:-1;5006:455:3:o;5466:247::-;5525:6;5578:2;5566:9;5557:7;5553:23;5549:32;5546:52;;;5594:1;5591;5584:12;5546:52;5633:9;5620:23;5652:31;5677:5;5652:31;:::i;:::-;5702:5;5466:247;-1:-1:-1;;;5466:247:3:o;5718:788::-;6000:4;6029:3;6059:2;6048:9;6041:21;6079:45;6120:2;6109:9;6105:18;6097:6;6079:45;:::i;:::-;6155:2;6140:18;;6133:34;;;;-1:-1:-1;;6210:14:3;;6203:22;6198:2;6183:18;;6176:50;6274:4;6262:17;;;6257:2;6242:18;;6235:45;6317:17;;;6311:3;6296:19;;6289:46;6372:17;;;6366:3;6351:19;;6344:46;6427:17;;6421:3;6406:19;;6399:46;6482:17;6476:3;6461:19;;;6454:46;6071:53;5718:788;-1:-1:-1;5718:788:3:o;6771:1369::-;6965:4;6994:2;7034;7023:9;7019:18;7064:2;7053:9;7046:21;7087:6;7122;7116:13;7153:6;7145;7138:22;7179:2;7169:12;;7212:2;7201:9;7197:18;7190:25;;7274:2;7264:6;7261:1;7257:14;7246:9;7242:30;7238:39;7312:2;7304:6;7300:15;7333:1;7343:768;7357:6;7354:1;7351:13;7343:768;;;7422:22;;;-1:-1:-1;;7418:36:3;7406:49;;7478:13;;7550:9;;-1:-1:-1;;;;;7546:35:3;7531:51;;7621:11;;;7615:18;7514:4;7653:15;;;7646:27;;;7514:4;7700:48;7732:15;;;7615:18;7700:48;:::i;:::-;7791:11;;;7785:18;7768:15;;;7761:43;7827:4;7888:11;;;7882:18;7875:26;7868:34;7851:15;;;7844:59;7926:4;7987:11;;;7981:18;7974:26;7967:34;7950:15;;;;7943:59;;;;-1:-1:-1;;8089:12:3;;;;8054:15;;;;7379:1;7372:9;7343:768;;;-1:-1:-1;8128:6:3;;6771:1369;-1:-1:-1;;;;;;;;6771:1369:3:o;8548:399::-;8762:34;8750:47;;8827:34;8822:2;8813:12;;8806:56;-1:-1:-1;;;8887:2:3;8878:12;;8871:42;8938:2;8929:12;;8548:399::o;11301:276::-;11432:3;11470:6;11464:13;11486:53;11532:6;11527:3;11520:4;11512:6;11508:17;11486:53;:::i;:::-;11555:16;;;;;11301:276;-1:-1:-1;;11301:276:3:o;12086:184::-;12156:6;12209:2;12197:9;12188:7;12184:23;12180:32;12177:52;;;12225:1;12222;12215:12;12177:52;-1:-1:-1;12248:16:3;;12086:184;-1:-1:-1;12086:184:3:o;12805:429::-;12859:5;12912:3;12905:4;12897:6;12893:17;12889:27;12879:55;;12930:1;12927;12920:12;12879:55;12959:6;12953:13;12990:48;13006:31;13034:2;13006:31;:::i;12990:48::-;13063:2;13054:7;13047:19;13109:3;13102:4;13097:2;13089:6;13085:15;13081:26;13078:35;13075:55;;;13126:1;13123;13116:12;13075:55;13139:64;13200:2;13193:4;13184:7;13180:18;13173:4;13165:6;13161:17;13139:64;:::i;:::-;13221:7;12805:429;-1:-1:-1;;;;12805:429:3:o;13239:784::-;13349:6;13357;13365;13373;13381;13434:3;13422:9;13413:7;13409:23;13405:33;13402:53;;;13451:1;13448;13441:12;13402:53;13483:9;13477:16;13502:31;13527:5;13502:31;:::i;:::-;13601:2;13586:18;;13580:25;13552:5;;-1:-1:-1;13628:18:3;13617:30;;13614:50;;;13660:1;13657;13650:12;13614:50;13683:61;13736:7;13727:6;13716:9;13712:22;13683:61;:::i;:::-;13673:71;;;13784:2;13773:9;13769:18;13763:25;13753:35;;13833:2;13822:9;13818:18;13812:25;13846:30;13868:7;13846:30;:::i;:::-;13947:3;13932:19;;13926:26;13895:7;;-1:-1:-1;13961:30:3;13926:26;13961:30;:::i;:::-;14010:7;14000:17;;;13239:784;;;;;;;;:::o;14377:337::-;14457:6;14510:2;14498:9;14489:7;14485:23;14481:32;14478:52;;;14526:1;14523;14516:12;14478:52;14559:9;14553:16;14592:18;14584:6;14581:30;14578:50;;;14624:1;14621;14614:12;14578:50;14647:61;14700:7;14691:6;14680:9;14676:22;14647:61;:::i;14908:245::-;14975:6;15028:2;15016:9;15007:7;15003:23;14999:32;14996:52;;;15044:1;15041;15034:12;14996:52;15076:9;15070:16;15095:28;15117:5;15095:28;:::i;15158:247::-;15226:6;15279:2;15267:9;15258:7;15254:23;15250:32;15247:52;;;15295:1;15292;15285:12;15247:52;15327:9;15321:16;15346:29;15369:5;15346:29;:::i;15410:127::-;15471:10;15466:3;15462:20;15459:1;15452:31;15502:4;15499:1;15492:15;15526:4;15523:1;15516:15;15542:127;15603:10;15598:3;15594:20;15591:1;15584:31;15634:4;15631:1;15624:15;15658:4;15655:1;15648:15;15674:175;15711:3;15755:4;15748:5;15744:16;15784:4;15775:7;15772:17;15769:43;;;15792:18;;:::i;:::-;15841:1;15828:15;;15674:175;-1:-1:-1;;15674:175:3:o;15854:135::-;15893:3;-1:-1:-1;;15914:17:3;;15911:43;;;15934:18;;:::i;:::-;-1:-1:-1;15981:1:3;15970:13;;15854:135::o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagerMembers`",
          "govRuleMaxActiveMembers": "Max of all members (including managers)",
          "govRuleMaxManagerMembers": "Max of manager member that CLH can accept (only for COMMITTEE )",
          "housePrivate": "True if is private",
          "numActiveMembers": "Current members of a CLH",
          "numManagerMembers": "Current managers of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all members address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrMembers": "array with list of members"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isMember": "true if is member",
          "name": "Nickname ot other user identificaction"
        }
      },
      "RecoverSignerFromSignature(bytes32,uint8,bytes32,bytes32)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msgh": "Signed message",
          "_r": "R",
          "_s": "S",
          "_v": "V"
        },
        "returns": {
          "sender": "The address of the signer"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    208,
    7769
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BCA808 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2763E6EC EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2EEB1BB1 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xAA PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x116F JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP8 SWAP1 MSTORE PUSH1 0xFF DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE PUSH32 0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875 SWAP1 DUP3 ADD MSTORE PUSH32 0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A9 SWAP1 PUSH32 0x7374724F6666436861696E496E7669746174696F6E2861646472657373207369 DUP2 MSTORE PUSH32 0x676E657257616C6C65742C626F6F6C20616363657074616E6365290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP4 DUP4 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xC2 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0xE2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP6 MLOAD PUSH1 0x41 EQ PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP7 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH1 0x60 DUP1 DUP12 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP9 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 POP POP POP POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x421 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE PUSH32 0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875 SWAP1 DUP3 ADD MSTORE PUSH32 0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x52C SWAP1 PUSH32 0x7374724F6666436861696E566F7465286164647265737320766F7465722C7569 DUP2 MSTORE PUSH32 0x6E743235362070726F7049642C626F6F6C20737570706F72742C737472696E67 PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x206A757374696669636174696F6E29 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4F ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EC SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP6 MLOAD PUSH1 0x41 EQ PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x20 DUP7 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH1 0x60 DUP1 DUP12 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP9 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9C57DF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x9C57DF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x731 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x7A2 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8532CBF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x8532CBF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x80F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1376 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B91034B9903737BA10309026B2B6B132B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x920 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x13F9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9BCA21 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8668EAFC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB44997B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FE6663 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBCE SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9BCA21 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x144B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x824C88DA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDB PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD14 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xD01 PUSH2 0xE1D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCF9 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xD2C PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8532CBF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x8532CBF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD99 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1376 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0xDFE JUMPI DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xDE4 JUMPI PUSH2 0xDE4 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0xDFA SWAP1 PUSH2 0x1494 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0xE09 DUP2 PUSH2 0x14B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD1C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xE93 DUP2 PUSH2 0xE59 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF0A PUSH2 0xECB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2C PUSH2 0xECB JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF5E PUSH2 0xF59 DUP3 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0xEE1 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xF73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xFB1 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xFC1 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xFD1 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF9 DUP8 DUP3 DUP9 ADD PUSH2 0xF3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1029 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1039 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1050 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x106D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1079 DUP11 DUP4 DUP12 ADD PUSH2 0xF3A JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x108F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109C DUP10 DUP3 DUP11 ADD PUSH2 0xF3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10C7 DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x10D7 DUP2 PUSH2 0xEA8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10E5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x112A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1151 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x118C DUP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x11A7 DUP2 DUP5 ADD DUP13 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP SWAP6 ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xFF SWAP5 DUP6 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x80 DUP7 ADD MSTORE SWAP1 DUP4 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP3 AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x127C JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1246 DUP3 DUP8 ADD DUP3 PUSH2 0x1112 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x120D JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1306 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x133A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1348 PUSH2 0xF59 DUP3 PUSH2 0xF12 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x135D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136E DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x10E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1399 DUP2 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C2 DUP9 DUP3 DUP10 ADD PUSH2 0x1329 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x13DA DUP2 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x13EB DUP2 PUSH2 0xEBD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136E DUP5 DUP3 DUP6 ADD PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x118C DUP2 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x118C DUP2 PUSH2 0xE59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x14AB JUMPI PUSH2 0x14AB PUSH2 0x147E JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x14C8 JUMPI PUSH2 0x14C8 PUSH2 0x147E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xA23B43E39E2F3DD6A5F84F37344562 0xC9 RETURN BALANCE PUSH31 0x9B44C7B51151CBEDAFE47FBA64736F6C634300080C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6BCA808"
    },
    "38": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2763E6EC"
    },
    "49": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2EEB1BB1"
    },
    "60": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA"
    },
    "64": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x86ABD826"
    },
    "71": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCD"
    },
    "75": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8750BC3E"
    },
    "82": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF0"
    },
    "86": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB698BE8D"
    },
    "93": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x117"
    },
    "97": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        208,
        7769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "103": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "104": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "107": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75"
    },
    "110": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "111": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "113": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE6B"
    },
    "116": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "jump": "i",
      "offset": [
        441,
        704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "117": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "118": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x137"
    },
    "121": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "jump": "i",
      "offset": [
        441,
        704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "122": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "123": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "125": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "132": {
      "op": "SHL"
    },
    "133": {
      "op": "SUB"
    },
    "134": {
      "op": "SWAP1"
    },
    "135": {
      "op": "SWAP2"
    },
    "136": {
      "op": "AND"
    },
    "137": {
      "op": "DUP2"
    },
    "138": {
      "op": "MSTORE"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "141": {
      "op": "ADD"
    },
    "142": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "143": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "145": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "146": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "147": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "148": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SUB",
      "path": "1"
    },
    "149": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "150": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "RETURN",
      "path": "1"
    },
    "151": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "155": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5"
    },
    "158": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "159": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "161": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF90"
    },
    "164": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "jump": "i",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "165": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "166": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19F"
    },
    "169": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "jump": "i",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "170": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "171": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "173": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "174": {
      "op": "SWAP1"
    },
    "175": {
      "op": "ISZERO"
    },
    "176": {
      "op": "ISZERO"
    },
    "177": {
      "op": "DUP2"
    },
    "178": {
      "op": "MSTORE"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "181": {
      "op": "ADD"
    },
    "182": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E"
    },
    "185": {
      "op": "JUMP"
    },
    "186": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "187": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "190": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8"
    },
    "193": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "194": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "196": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1005"
    },
    "199": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        4614,
        6261
      ],
      "op": "JUMP",
      "path": "1"
    },
    "200": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "201": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40A"
    },
    "204": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        4614,
        6261
      ],
      "op": "JUMP",
      "path": "1"
    },
    "205": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "206": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0"
    },
    "209": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "212": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "213": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "215": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A9"
    },
    "218": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "219": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6DD"
    },
    "223": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "224": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "225": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "227": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "228": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E"
    },
    "231": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "232": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "233": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "234": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "235": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "236": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113E"
    },
    "239": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "240": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "241": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103"
    },
    "244": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFE"
    },
    "247": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "248": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "250": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116F"
    },
    "253": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "254": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "255": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A9"
    },
    "258": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "259": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "260": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "262": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "263": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E"
    },
    "266": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "267": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "268": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "269": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "270": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "271": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "272": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "273": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "274": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "275": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1193"
    },
    "278": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "279": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "280": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "283": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "286": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "287": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "289": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116F"
    },
    "292": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "293": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "294": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBEA"
    },
    "297": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "298": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "299": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "301": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "302": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E"
    },
    "305": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "306": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "307": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11E6"
    },
    "310": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "311": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "312": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x40"
    },
    "314": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "315": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "316": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        622,
        636
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "318": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "319": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP3",
      "path": "1"
    },
    "320": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "321": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "323": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP3",
      "path": "1"
    },
    "324": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ADD",
      "path": "1"
    },
    "325": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "326": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP5",
      "path": "1"
    },
    "327": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "328": {
      "op": "DUP8"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "333": {
      "op": "DUP7"
    },
    "334": {
      "op": "AND"
    },
    "335": {
      "op": "SWAP3"
    },
    "336": {
      "op": "DUP3"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "op": "SWAP3"
    },
    "339": {
      "op": "SWAP1"
    },
    "340": {
      "op": "SWAP3"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "344": {
      "op": "DUP2"
    },
    "345": {
      "op": "ADD"
    },
    "346": {
      "op": "DUP5"
    },
    "347": {
      "op": "SWAP1"
    },
    "348": {
      "op": "MSTORE"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "351": {
      "op": "DUP2"
    },
    "352": {
      "op": "ADD"
    },
    "353": {
      "op": "DUP4"
    },
    "354": {
      "op": "SWAP1"
    },
    "355": {
      "op": "MSTORE"
    },
    "356": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "358": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "ADD"
    },
    "362": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "364": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "366": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "367": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "369": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP2",
      "path": "1"
    },
    "370": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SUB",
      "path": "1"
    },
    "371": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "372": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "373": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP5",
      "path": "1"
    },
    "374": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SUB",
      "path": "1"
    },
    "375": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "376": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP6",
      "path": "1"
    },
    "377": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "GAS",
      "path": "1"
    },
    "378": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "379": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "380": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "381": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "382": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18B"
    },
    "385": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "386": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "387": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "389": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "390": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "391": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "392": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "394": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "REVERT",
      "path": "1"
    },
    "395": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "400": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "403": {
      "op": "NOT"
    },
    "404": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ADD",
      "path": "1"
    },
    "405": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "406": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "407": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "408": {
      "op": "POP"
    },
    "409": {
      "op": "POP"
    },
    "410": {
      "op": "POP"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "op": "POP"
    },
    "414": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "jump": "o",
      "offset": [
        441,
        704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "415": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "416": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6449,
        6453
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "418": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6468,
        6483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "419": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6486,
        6499
      ],
      "op": "CHAINID",
      "path": "1"
    },
    "420": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6468,
        6499
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "421": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6468,
        6499
      ],
      "op": "POP",
      "path": "1"
    },
    "422": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6508,
        6532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "424": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "426": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "427": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "429": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "ADD",
      "path": "1"
    },
    "430": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B6"
    },
    "433": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "434": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128A"
    },
    "437": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "jump": "i",
      "offset": [
        6592,
        6728
      ],
      "op": "JUMP",
      "path": "1"
    },
    "438": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "439": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "441": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "442": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "445": {
      "op": "NOT"
    },
    "446": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "447": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "DUP5",
      "path": "1"
    },
    "448": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "SUB",
      "path": "1"
    },
    "449": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "ADD",
      "path": "1"
    },
    "450": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "451": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "452": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "453": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "454": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "455": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6582,
        6729
      ],
      "op": "DUP1",
      "path": "1"
    },
    "456": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6582,
        6729
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "457": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6592,
        6728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "459": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6582,
        6729
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "460": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6582,
        6729
      ],
      "op": "DUP3",
      "path": "1"
    },
    "461": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6582,
        6729
      ],
      "op": "ADD",
      "path": "1"
    },
    "462": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6582,
        6729
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "463": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "464": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "DUP4",
      "path": "1"
    },
    "465": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "ADD",
      "path": "1"
    },
    "466": {
      "op": "MSTORE"
    },
    "467": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6745,
        6765
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875"
    },
    "500": {
      "op": "SWAP1"
    },
    "501": {
      "op": "DUP3"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6781,
        6800
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "539": {
      "op": "DUP3"
    },
    "540": {
      "op": "ADD"
    },
    "541": {
      "op": "MSTORE"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "544": {
      "op": "DUP2"
    },
    "545": {
      "op": "ADD"
    },
    "546": {
      "op": "DUP4"
    },
    "547": {
      "op": "SWAP1"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "555": {
      "op": "SHL"
    },
    "556": {
      "op": "SUB"
    },
    "557": {
      "op": "DUP9"
    },
    "558": {
      "op": "AND"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "561": {
      "op": "DUP3"
    },
    "562": {
      "op": "ADD"
    },
    "563": {
      "op": "MSTORE"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "566": {
      "op": "ADD"
    },
    "567": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "569": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "570": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "572": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "DUP2",
      "path": "1"
    },
    "573": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "DUP4",
      "path": "1"
    },
    "574": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "SUB",
      "path": "1"
    },
    "575": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "SUB",
      "path": "1"
    },
    "576": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "DUP2",
      "path": "1"
    },
    "577": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "578": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "579": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "581": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6556,
        6861
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "582": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6535,
        6869
      ],
      "op": "DUP1",
      "path": "1"
    },
    "583": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6535,
        6869
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "584": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6535,
        6869
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "585": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6535,
        6869
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "587": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6535,
        6869
      ],
      "op": "ADD",
      "path": "1"
    },
    "588": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6535,
        6869
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "589": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6508,
        6869
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "590": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6508,
        6869
      ],
      "op": "POP",
      "path": "1"
    },
    "591": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6878,
        6896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "593": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "595": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "596": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "598": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "ADD",
      "path": "1"
    },
    "599": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A9"
    },
    "602": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "603": {
      "op": "PUSH32",
      "value": "0x7374724F6666436861696E496E7669746174696F6E2861646472657373207369"
    },
    "636": {
      "op": "DUP2"
    },
    "637": {
      "op": "MSTORE"
    },
    "638": {
      "op": "PUSH32",
      "value": "0x676E657257616C6C65742C626F6F6C20616363657074616E6365290000000000"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "678": {
      "op": "ADD"
    },
    "679": {
      "op": "SWAP1"
    },
    "680": {
      "op": "JUMP"
    },
    "681": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "682": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "684": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "685": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "686": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "687": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "DUP4",
      "path": "1"
    },
    "688": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "SUB",
      "path": "1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "691": {
      "op": "NOT"
    },
    "692": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "ADD",
      "path": "1"
    },
    "693": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "DUP2",
      "path": "1"
    },
    "694": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "695": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "696": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "697": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "698": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6944,
        7066
      ],
      "op": "DUP1",
      "path": "1"
    },
    "699": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6944,
        7066
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "700": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6954,
        7065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "702": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6944,
        7066
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "703": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6944,
        7066
      ],
      "op": "DUP3",
      "path": "1"
    },
    "704": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6944,
        7066
      ],
      "op": "ADD",
      "path": "1"
    },
    "705": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6944,
        7066
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "706": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "707": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "DUP5",
      "path": "1"
    },
    "708": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "ADD",
      "path": "1"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "op": "DUP11"
    },
    "719": {
      "op": "AND"
    },
    "720": {
      "op": "DUP4"
    },
    "721": {
      "op": "DUP4"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "DUP9"
    },
    "725": {
      "op": "ISZERO"
    },
    "726": {
      "op": "ISZERO"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "729": {
      "op": "DUP1"
    },
    "730": {
      "op": "DUP6"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "SWAP2"
    },
    "733": {
      "op": "SWAP1"
    },
    "734": {
      "op": "SWAP2"
    },
    "735": {
      "op": "MSTORE"
    },
    "736": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "DUP3",
      "path": "1"
    },
    "737": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "738": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "739": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "DUP6",
      "path": "1"
    },
    "740": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "SUB",
      "path": "1"
    },
    "741": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "742": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "743": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "ADD",
      "path": "1"
    },
    "744": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "748": {
      "op": "DUP5"
    },
    "749": {
      "op": "ADD"
    },
    "750": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "752": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6918,
        7134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "753": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6899,
        7142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "754": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6899,
        7142
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "755": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6899,
        7142
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "756": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6899,
        7142
      ],
      "op": "ADD",
      "path": "1"
    },
    "757": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6899,
        7142
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "758": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "766": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "DUP4",
      "path": "1"
    },
    "767": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "ADD",
      "path": "1"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "771": {
      "op": "DUP3"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "op": "DUP5"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "778": {
      "op": "DUP3"
    },
    "779": {
      "op": "ADD"
    },
    "780": {
      "op": "DUP2"
    },
    "781": {
      "op": "SWAP1"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6899,
        7142
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "787": {
      "op": "SWAP1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "790": {
      "op": "ADD"
    },
    "791": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "793": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "794": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "796": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "797": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "DUP4",
      "path": "1"
    },
    "798": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "SUB",
      "path": "1"
    },
    "799": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "SUB",
      "path": "1"
    },
    "800": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "DUP2",
      "path": "1"
    },
    "801": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "802": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "803": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "805": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7180,
        7238
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "806": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7170,
        7239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "807": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7170,
        7239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "808": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7170,
        7239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "809": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7170,
        7239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "811": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7170,
        7239
      ],
      "op": "ADD",
      "path": "1"
    },
    "812": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7170,
        7239
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "813": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7151,
        7239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "814": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7151,
        7239
      ],
      "op": "POP",
      "path": "1"
    },
    "815": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7263,
        7273
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 1
    },
    "816": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7263,
        7280
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "817": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7284,
        7286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x41"
    },
    "819": {
      "branch": 15,
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7263,
        7286
      ],
      "op": "EQ",
      "path": "1"
    },
    "820": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37B"
    },
    "823": {
      "branch": 15,
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "824": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "826": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "DUP2",
      "path": "1"
    },
    "835": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "838": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "840": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "DUP3",
      "path": "1"
    },
    "841": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "ADD",
      "path": "1"
    },
    "842": {
      "op": "MSTORE"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "847": {
      "op": "DUP3"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "876": {
      "op": "DUP3"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "op": "MSTORE"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "881": {
      "op": "ADD"
    },
    "882": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "883": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "885": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "886": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "DUP1",
      "path": "1"
    },
    "887": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "888": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "SUB",
      "path": "1"
    },
    "889": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "890": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "891": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7254,
        7312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "892": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7486,
        7488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "894": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7469,
        7490
      ],
      "op": "DUP7",
      "path": "1"
    },
    "895": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7469,
        7490
      ],
      "op": "DUP2",
      "path": "1"
    },
    "896": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7469,
        7490
      ],
      "op": "ADD",
      "path": "1"
    },
    "897": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7462,
        7491
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "898": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7560,
        7562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "900": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7543,
        7564
      ],
      "op": "DUP1",
      "path": "1"
    },
    "901": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7543,
        7564
      ],
      "op": "DUP10",
      "path": "1"
    },
    "902": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7543,
        7564
      ],
      "op": "ADD",
      "path": "1"
    },
    "903": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7536,
        7565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "904": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7672,
        7674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "906": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7655,
        7676
      ],
      "op": "DUP1",
      "path": "1"
    },
    "907": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7655,
        7676
      ],
      "op": "DUP12",
      "path": "1"
    },
    "908": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7655,
        7676
      ],
      "op": "ADD",
      "path": "1"
    },
    "909": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7648,
        7677
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "910": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 2
    },
    "911": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "912": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7321,
        7334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "914": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "915": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP3",
      "path": "1"
    },
    "916": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "917": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "918": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP2",
      "path": "1"
    },
    "919": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "ADD",
      "path": "1"
    },
    "920": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "921": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP7",
      "path": "1"
    },
    "922": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "923": {
      "op": "DUP9"
    },
    "924": {
      "op": "SWAP1"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7639,
        7678
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "927": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7639,
        7678
      ],
      "op": "BYTE",
      "path": "1"
    },
    "928": {
      "op": "SWAP3"
    },
    "929": {
      "op": "DUP6"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "DUP4"
    },
    "932": {
      "op": "SWAP1"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "DUP5"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "DUP4"
    },
    "937": {
      "op": "SWAP1"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "941": {
      "op": "DUP5"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "op": "DUP2"
    },
    "944": {
      "op": "SWAP1"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7462,
        7491
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "947": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7462,
        7491
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "948": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "950": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "ADD"
    },
    "954": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "956": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "958": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "959": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "961": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP2",
      "path": "1"
    },
    "962": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SUB",
      "path": "1"
    },
    "963": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "964": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "965": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP5",
      "path": "1"
    },
    "966": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SUB",
      "path": "1"
    },
    "967": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "968": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP6",
      "path": "1"
    },
    "969": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "GAS",
      "path": "1"
    },
    "970": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "971": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "972": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "973": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "974": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DB"
    },
    "977": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "978": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "979": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "981": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "982": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "983": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "984": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "986": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "REVERT",
      "path": "1"
    },
    "987": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "988": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "989": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "990": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "991": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "993": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "995": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "996": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "SUB",
      "path": "1"
    },
    "997": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7718,
        7760
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1004": {
      "op": "SHL"
    },
    "1005": {
      "op": "SUB"
    },
    "1006": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7701,
        7760
      ],
      "op": "AND",
      "path": "1"
    },
    "1007": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7701,
        7714
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "op": "SUB"
    },
    "1016": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7701,
        7760
      ],
      "op": "AND",
      "path": "1"
    },
    "1017": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7701,
        7760
      ],
      "op": "EQ",
      "path": "1"
    },
    "1018": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "1019": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1020": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1021": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1022": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1023": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1024": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1025": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1026": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        7694,
        7760
      ],
      "op": "POP",
      "path": "1"
    },
    "1027": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1028": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1029": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "POP",
      "path": "1"
    },
    "1030": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "POP",
      "path": "1"
    },
    "1031": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "POP",
      "path": "1"
    },
    "1032": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "offset": [
        6267,
        7767
      ],
      "op": "POP",
      "path": "1"
    },
    "1033": {
      "fn": "ApiCLHouse.ValiSignInvt",
      "jump": "o",
      "offset": [
        6267,
        7767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1034": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1035": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4858,
        4862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1037": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4877,
        4892
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1038": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4895,
        4908
      ],
      "op": "CHAINID",
      "path": "1"
    },
    "1039": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4877,
        4908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1040": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4877,
        4908
      ],
      "op": "POP",
      "path": "1"
    },
    "1041": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4917,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1043": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1045": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1046": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1048": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "ADD",
      "path": "1"
    },
    "1049": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1052": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1053": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128A"
    },
    "1056": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        5001,
        5137
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1057": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1058": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1060": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1061": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1064": {
      "op": "NOT"
    },
    "1065": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1066": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1067": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "SUB",
      "path": "1"
    },
    "1068": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "ADD",
      "path": "1"
    },
    "1069": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1070": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1071": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1072": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1073": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1074": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1075": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1076": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1078": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1079": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1080": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "ADD",
      "path": "1"
    },
    "1081": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1082": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1083": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1084": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "ADD",
      "path": "1"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5154,
        5174
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875"
    },
    "1119": {
      "op": "SWAP1"
    },
    "1120": {
      "op": "DUP3"
    },
    "1121": {
      "op": "ADD"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5190,
        5209
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1158": {
      "op": "DUP3"
    },
    "1159": {
      "op": "ADD"
    },
    "1160": {
      "op": "MSTORE"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "DUP4"
    },
    "1166": {
      "op": "SWAP1"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1174": {
      "op": "SHL"
    },
    "1175": {
      "op": "SUB"
    },
    "1176": {
      "op": "DUP11"
    },
    "1177": {
      "op": "AND"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "DUP3"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1188": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1189": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1191": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1192": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1193": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SUB",
      "path": "1"
    },
    "1194": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SUB",
      "path": "1"
    },
    "1195": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1196": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1197": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1198": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1200": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1201": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1202": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1203": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1204": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1206": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "ADD",
      "path": "1"
    },
    "1207": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1208": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4917,
        5278
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1209": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4917,
        5278
      ],
      "op": "POP",
      "path": "1"
    },
    "1210": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5287,
        5305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1212": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1214": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1215": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1217": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "ADD",
      "path": "1"
    },
    "1218": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52C"
    },
    "1221": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1222": {
      "op": "PUSH32",
      "value": "0x7374724F6666436861696E566F7465286164647265737320766F7465722C7569"
    },
    "1255": {
      "op": "DUP2"
    },
    "1256": {
      "op": "MSTORE"
    },
    "1257": {
      "op": "PUSH32",
      "value": "0x6E743235362070726F7049642C626F6F6C20737570706F72742C737472696E67"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH15",
      "value": "0x206A757374696669636174696F6E29"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x4F"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "op": "SWAP1"
    },
    "1323": {
      "op": "JUMP"
    },
    "1324": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1325": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1327": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1328": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1330": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1331": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1332": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SUB",
      "path": "1"
    },
    "1333": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SUB",
      "path": "1"
    },
    "1334": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1335": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1336": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1337": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1339": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1340": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1341": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1342": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1343": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1345": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "ADD",
      "path": "1"
    },
    "1346": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1347": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5511,
        5517
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1348": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5533,
        5540
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1349": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5556,
        5564
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1350": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5607,
        5621
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1351": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1353": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1354": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1356": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "ADD",
      "path": "1"
    },
    "1357": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x556"
    },
    "1360": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1361": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1362": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F4"
    },
    "1365": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        5590,
        5622
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1366": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1367": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1369": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1370": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1372": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1373": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1374": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SUB",
      "path": "1"
    },
    "1375": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SUB",
      "path": "1"
    },
    "1376": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1377": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1378": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1379": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1381": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1382": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1383": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1384": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1385": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1387": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "ADD",
      "path": "1"
    },
    "1388": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1389": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1391": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1392": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1394": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "ADD",
      "path": "1"
    },
    "1395": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A9"
    },
    "1398": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1399": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1400": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1401": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1402": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1403": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1404": {
      "op": "SWAP5"
    },
    "1405": {
      "op": "DUP6"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1413": {
      "op": "SHL"
    },
    "1414": {
      "op": "SUB"
    },
    "1415": {
      "op": "SWAP4"
    },
    "1416": {
      "op": "SWAP1"
    },
    "1417": {
      "op": "SWAP4"
    },
    "1418": {
      "op": "AND"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1421": {
      "op": "DUP6"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1426": {
      "op": "DUP5"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "SWAP2"
    },
    "1429": {
      "op": "SWAP1"
    },
    "1430": {
      "op": "SWAP2"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "ISZERO"
    },
    "1433": {
      "op": "ISZERO"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1436": {
      "op": "DUP4"
    },
    "1437": {
      "op": "ADD"
    },
    "1438": {
      "op": "MSTORE"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1441": {
      "op": "DUP3"
    },
    "1442": {
      "op": "ADD"
    },
    "1443": {
      "op": "MSTORE"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "ADD"
    },
    "1447": {
      "op": "SWAP1"
    },
    "1448": {
      "op": "JUMP"
    },
    "1449": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1450": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1452": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1453": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1455": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1456": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1457": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SUB",
      "path": "1"
    },
    "1458": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SUB",
      "path": "1"
    },
    "1459": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1460": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1461": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1462": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1464": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1465": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1466": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1467": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1468": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1470": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "ADD",
      "path": "1"
    },
    "1471": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1472": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5287,
        5643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1473": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5287,
        5643
      ],
      "op": "POP",
      "path": "1"
    },
    "1474": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5652,
        5668
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1476": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5710,
        5726
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1477": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5728,
        5738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1478": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1480": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1481": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1483": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "ADD",
      "path": "1"
    },
    "1484": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5EC"
    },
    "1487": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1488": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1489": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1490": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "DUP2"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1500": {
      "op": "DUP2"
    },
    "1501": {
      "op": "ADD"
    },
    "1502": {
      "op": "SWAP3"
    },
    "1503": {
      "op": "SWAP1"
    },
    "1504": {
      "op": "SWAP3"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1508": {
      "op": "DUP3"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "op": "MSTORE"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "op": "SWAP1"
    },
    "1515": {
      "op": "JUMP"
    },
    "1516": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1517": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1519": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1520": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1522": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1523": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1524": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "SUB",
      "path": "1"
    },
    "1525": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "SUB",
      "path": "1"
    },
    "1526": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1527": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1528": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1529": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1531": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5681,
        5739
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1532": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5671,
        5740
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1533": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5671,
        5740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1534": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5671,
        5740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1535": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5671,
        5740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1537": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5671,
        5740
      ],
      "op": "ADD",
      "path": "1"
    },
    "1538": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5671,
        5740
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1539": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5652,
        5740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1540": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5652,
        5740
      ],
      "op": "POP",
      "path": "1"
    },
    "1541": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5764,
        5774
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 3
    },
    "1542": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5764,
        5781
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1543": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5785,
        5787
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x41"
    },
    "1545": {
      "branch": 16,
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5764,
        5787
      ],
      "op": "EQ",
      "path": "1"
    },
    "1546": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64C"
    },
    "1549": {
      "branch": 16,
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1550": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1552": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1561": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1564": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1566": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1567": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "ADD",
      "path": "1"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1573": {
      "op": "DUP3"
    },
    "1574": {
      "op": "ADD"
    },
    "1575": {
      "op": "MSTORE"
    },
    "1576": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1602": {
      "op": "DUP3"
    },
    "1603": {
      "op": "ADD"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x372"
    },
    "1611": {
      "op": "JUMP"
    },
    "1612": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5755,
        5813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1613": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5987,
        5989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1615": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5970,
        5991
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1616": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5970,
        5991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1617": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5970,
        5991
      ],
      "op": "ADD",
      "path": "1"
    },
    "1618": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5963,
        5992
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1619": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6061,
        6063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1621": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6044,
        6065
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1622": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6044,
        6065
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1623": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6044,
        6065
      ],
      "op": "ADD",
      "path": "1"
    },
    "1624": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6037,
        6066
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1625": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6173,
        6175
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1627": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6156,
        6177
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1628": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6156,
        6177
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1629": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6156,
        6177
      ],
      "op": "ADD",
      "path": "1"
    },
    "1630": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6149,
        6178
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1631": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 4
    },
    "1632": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1633": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5822,
        5835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1635": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1636": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1637": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1638": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1639": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1640": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "ADD",
      "path": "1"
    },
    "1641": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1642": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1643": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1644": {
      "op": "DUP9"
    },
    "1645": {
      "op": "SWAP1"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6140,
        6179
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1648": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6140,
        6179
      ],
      "op": "BYTE",
      "path": "1"
    },
    "1649": {
      "op": "SWAP3"
    },
    "1650": {
      "op": "DUP6"
    },
    "1651": {
      "op": "ADD"
    },
    "1652": {
      "op": "DUP4"
    },
    "1653": {
      "op": "SWAP1"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "DUP5"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "op": "DUP4"
    },
    "1658": {
      "op": "SWAP1"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1662": {
      "op": "DUP5"
    },
    "1663": {
      "op": "ADD"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "SWAP1"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5963,
        5992
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1668": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5963,
        5992
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1669": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1671": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1677": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1679": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1680": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1682": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1683": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SUB",
      "path": "1"
    },
    "1684": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1685": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1686": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1687": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SUB",
      "path": "1"
    },
    "1688": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1689": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1690": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "GAS",
      "path": "1"
    },
    "1691": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1692": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1693": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1694": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1695": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "1698": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1699": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1700": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1702": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1703": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1704": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1705": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1707": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1708": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1709": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1710": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1711": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1712": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1714": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1716": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1717": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "SUB",
      "path": "1"
    },
    "1718": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6212,
        6254
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "op": "SUB"
    },
    "1727": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6202,
        6254
      ],
      "op": "AND",
      "path": "1"
    },
    "1728": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6202,
        6208
      ],
      "op": "DUP14",
      "path": "1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "op": "SUB"
    },
    "1737": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6202,
        6254
      ],
      "op": "AND",
      "path": "1"
    },
    "1738": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6202,
        6254
      ],
      "op": "EQ",
      "path": "1"
    },
    "1739": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "1740": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1741": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1742": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1743": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1744": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1745": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1746": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1747": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6195,
        6254
      ],
      "op": "POP",
      "path": "1"
    },
    "1748": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1749": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1750": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "POP",
      "path": "1"
    },
    "1751": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "POP",
      "path": "1"
    },
    "1752": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "POP",
      "path": "1"
    },
    "1753": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "POP",
      "path": "1"
    },
    "1754": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "POP",
      "path": "1"
    },
    "1755": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6261
      ],
      "op": "POP",
      "path": "1"
    },
    "1756": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "o",
      "offset": [
        4614,
        6261
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1757": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1758": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1760": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1761": {
      "op": "PUSH4",
      "value": "0x9C57DF7"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1770": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "op": "DUP3"
    },
    "1780": {
      "op": "DUP2"
    },
    "1781": {
      "op": "AND"
    },
    "1782": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1784": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1785": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1786": {
      "op": "MSTORE"
    },
    "1787": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1225,
        1243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1789": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1225,
        1243
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1790": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1792": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1793": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1794": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1795": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1796": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1797": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1377,
        1387
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1798": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1377,
        1387
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1799": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1800": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1801": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1802": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "AND",
      "path": "1"
    },
    "1803": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1804": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9C57DF7"
    },
    "1809": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1815": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1817": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1818": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1819": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1820": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SUB",
      "path": "1"
    },
    "1821": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1822": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1823": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "GAS",
      "path": "1"
    },
    "1824": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1825": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1826": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1827": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1828": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x731"
    },
    "1831": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1832": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1833": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1835": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1836": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1837": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1838": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1840": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1841": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1842": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1843": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1844": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1845": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1846": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1848": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1849": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1850": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1852": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "NOT",
      "path": "1"
    },
    "1853": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1855": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1856": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1857": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "AND",
      "path": "1"
    },
    "1858": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1859": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1860": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1861": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1863": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1864": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1865": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1866": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1867": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1868": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x755"
    },
    "1871": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1872": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1873": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1310"
    },
    "1876": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1877": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1878": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1400,
        1447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "branch": 17,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1467,
        1475
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 5
    },
    "1881": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79A"
    },
    "1884": {
      "branch": 17,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1885": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1887": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1894": {
      "op": "SHL"
    },
    "1895": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1896": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1899": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1901": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1902": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "ADD",
      "path": "1"
    },
    "1903": {
      "op": "MSTORE"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1908": {
      "op": "DUP3"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "MSTORE"
    },
    "1911": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1933": {
      "op": "SHL"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1936": {
      "op": "DUP3"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "MSTORE"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1941": {
      "op": "ADD"
    },
    "1942": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x372"
    },
    "1945": {
      "op": "JUMP"
    },
    "1946": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1947": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1512,
        1540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A2"
    },
    "1950": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1512,
        1540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1D"
    },
    "1953": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1512,
        1540
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1954": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1512,
        1540
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1955": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x40"
    },
    "1957": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1958": {
      "op": "PUSH4",
      "value": "0x8532CBF7"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1967": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1968": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1970": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1971": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "1972": {
      "op": "DUP4"
    },
    "1973": {
      "op": "SWAP1"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "op": "SUB"
    },
    "1983": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1984": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "AND",
      "path": "1"
    },
    "1985": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1986": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8532CBF7"
    },
    "1991": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1994": {
      "op": "ADD"
    },
    "1995": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1997": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1999": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2000": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2001": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2002": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SUB",
      "path": "1"
    },
    "2003": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2004": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2005": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "GAS",
      "path": "1"
    },
    "2006": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2007": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2008": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2009": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2010": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E7"
    },
    "2013": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2014": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2015": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2017": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2018": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2019": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2020": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2022": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2023": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2024": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "2025": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "2026": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "2027": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "2028": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2030": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2031": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2032": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2034": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2035": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2036": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2038": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2039": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2040": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2041": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2044": {
      "op": "NOT"
    },
    "2045": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "AND",
      "path": "1"
    },
    "2046": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2047": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "2048": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2050": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2051": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80F"
    },
    "2054": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2055": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2056": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2057": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "2058": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2059": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1376"
    },
    "2062": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2063": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2064": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2065": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2066": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1688,
        1709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2068": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1688,
        1709
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2069": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1688,
        1709
      ],
      "op": "ADD",
      "path": "1"
    },
    "2070": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2071": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2072": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2073": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1654,
        1674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2075": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1654,
        1674
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2076": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1654,
        1674
      ],
      "op": "ADD",
      "path": "1"
    },
    "2077": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2078": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2079": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2080": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1621,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2082": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1621,
        1640
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2083": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1621,
        1640
      ],
      "op": "ADD",
      "path": "1"
    },
    "2084": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2085": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2086": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2087": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2088": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1591,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2090": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1591,
        1607
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2091": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1591,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2092": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2093": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2094": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2095": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2105": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2106": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "AND",
      "path": "1"
    },
    "2107": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2108": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2109": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1758,
        1762
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "2111": {
      "branch": 18,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1758,
        1786
      ],
      "op": "EQ",
      "path": "1"
    },
    "2112": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x882"
    },
    "2115": {
      "branch": 18,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2116": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2118": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2127": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2130": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2132": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2133": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "ADD",
      "path": "1"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2139": {
      "op": "DUP3"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "PUSH20",
      "value": "0x2AB9B2B91034B9903737BA10309026B2B6B132B9"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2168": {
      "op": "DUP3"
    },
    "2169": {
      "op": "ADD"
    },
    "2170": {
      "op": "MSTORE"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2173": {
      "op": "ADD"
    },
    "2174": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x372"
    },
    "2177": {
      "op": "JUMP"
    },
    "2178": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2179": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x20"
    },
    "2181": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2182": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "ADD",
      "path": "1"
    },
    "2183": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2184": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2186": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2187": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "ADD",
      "path": "1"
    },
    "2188": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2189": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2191": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2192": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "ADD",
      "path": "1"
    },
    "2193": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2194": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2196": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2197": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2198": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "ADD",
      "path": "1"
    },
    "2199": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2200": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2201": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "SWAP12",
      "path": "1"
    },
    "2202": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2203": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "SWAP11",
      "path": "1"
    },
    "2204": {
      "op": "POP"
    },
    "2205": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2206": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2217": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2218": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3876,
        3900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2220": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3914,
        3944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2222": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3958,
        3975
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2223": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3989,
        4011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2225": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4025,
        4048
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2226": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4062,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2228": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4105,
        4134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2229": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4148,
        4178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2231": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4203,
        4218
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2232": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4231,
        4241
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2233": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4203,
        4243
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2234": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4203,
        4243
      ],
      "op": "POP",
      "path": "1"
    },
    "2235": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4280
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 9
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "op": "SUB"
    },
    "2244": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4291
      ],
      "op": "AND",
      "path": "1"
    },
    "2245": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4291
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x59CA2D03"
    },
    "2250": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2252": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2253": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2254": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2259": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "AND",
      "path": "1"
    },
    "2260": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2262": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SHL",
      "path": "1"
    },
    "2263": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2264": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2265": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2267": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "2268": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2270": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2272": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2273": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2274": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2275": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SUB",
      "path": "1"
    },
    "2276": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2277": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2278": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "GAS",
      "path": "1"
    },
    "2279": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2280": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2281": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2282": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2283": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F8"
    },
    "2286": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2287": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2288": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2290": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2291": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2292": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2293": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2295": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2296": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2297": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "2298": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "2299": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "2300": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "2301": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2303": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2304": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2305": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2307": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2308": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2309": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2311": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2312": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2313": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2314": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2317": {
      "op": "NOT"
    },
    "2318": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "AND",
      "path": "1"
    },
    "2319": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2320": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "2321": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2323": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2324": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "2327": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2328": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2329": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2330": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "2331": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2332": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13F9"
    },
    "2335": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2336": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2337": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4336
      ],
      "op": "AND",
      "path": "1"
    },
    "2347": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4336
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1D5FD3CA"
    },
    "2352": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2354": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2355": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2356": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2361": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "AND",
      "path": "1"
    },
    "2362": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2364": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SHL",
      "path": "1"
    },
    "2365": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2366": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2367": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2369": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "2370": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2372": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2374": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2375": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2376": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2377": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SUB",
      "path": "1"
    },
    "2378": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2379": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2380": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "GAS",
      "path": "1"
    },
    "2381": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2382": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2383": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2384": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2385": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95E"
    },
    "2388": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2389": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2390": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2392": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2393": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2394": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2395": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2397": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2398": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2399": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "2400": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "2401": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "2402": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "2403": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2405": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2406": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2407": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2409": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "NOT",
      "path": "1"
    },
    "2410": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2412": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2413": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "2414": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "AND",
      "path": "1"
    },
    "2415": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2416": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "2417": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2418": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2420": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2421": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "2422": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2423": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "2424": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2425": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x982"
    },
    "2428": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2429": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2430": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1310"
    },
    "2433": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2434": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2435": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4358
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "AND",
      "path": "1"
    },
    "2445": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF00D6274"
    },
    "2450": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2452": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2453": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2454": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2459": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "AND",
      "path": "1"
    },
    "2460": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2462": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SHL",
      "path": "1"
    },
    "2463": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2464": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2465": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2467": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "2468": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2470": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2472": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2473": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2474": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2475": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SUB",
      "path": "1"
    },
    "2476": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2477": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2478": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "GAS",
      "path": "1"
    },
    "2479": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2480": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2481": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2482": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2483": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C0"
    },
    "2486": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2487": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2488": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2490": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2491": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2492": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2493": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2495": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2496": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2497": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "2498": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "2499": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "2500": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "2501": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2503": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2504": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2505": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2507": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "NOT",
      "path": "1"
    },
    "2508": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2510": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2511": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "2512": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "AND",
      "path": "1"
    },
    "2513": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2514": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "2515": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2516": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2518": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2519": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "2520": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2521": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "2522": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2523": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E4"
    },
    "2526": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2527": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2528": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x142E"
    },
    "2531": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2532": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2533": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4393
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4410
      ],
      "op": "AND",
      "path": "1"
    },
    "2543": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4410
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDA9BCA21"
    },
    "2548": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2550": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2551": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2552": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2557": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "AND",
      "path": "1"
    },
    "2558": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2560": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SHL",
      "path": "1"
    },
    "2561": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2562": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2563": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2565": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2566": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2568": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2570": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2571": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2572": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2573": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SUB",
      "path": "1"
    },
    "2574": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2575": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2576": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "GAS",
      "path": "1"
    },
    "2577": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2578": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2579": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2580": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2581": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA22"
    },
    "2584": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2585": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2586": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2588": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2589": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2590": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2591": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2593": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2594": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2595": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2596": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2597": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2598": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2599": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2601": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2602": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2603": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2605": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "NOT",
      "path": "1"
    },
    "2606": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2608": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2609": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2610": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "AND",
      "path": "1"
    },
    "2611": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2612": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2613": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2614": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2616": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2617": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2618": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2619": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2620": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2621": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA46"
    },
    "2624": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2625": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2626": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144B"
    },
    "2629": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2630": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2631": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4432
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "op": "SUB"
    },
    "2640": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4450
      ],
      "op": "AND",
      "path": "1"
    },
    "2641": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4450
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8668EAFC"
    },
    "2646": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2648": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2649": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2650": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2655": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "AND",
      "path": "1"
    },
    "2656": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2658": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SHL",
      "path": "1"
    },
    "2659": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2660": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2661": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2663": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2664": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2666": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2668": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2669": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2670": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2671": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SUB",
      "path": "1"
    },
    "2672": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2673": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2674": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "GAS",
      "path": "1"
    },
    "2675": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2676": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2677": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2678": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2679": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA84"
    },
    "2682": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2683": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2684": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2686": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2687": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2688": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2689": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2691": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2692": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2693": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2694": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2695": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2696": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2697": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2699": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2700": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2701": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2703": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "NOT",
      "path": "1"
    },
    "2704": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2706": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2707": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2708": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "AND",
      "path": "1"
    },
    "2709": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2710": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2711": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2712": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2714": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2715": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2716": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2717": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2718": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2719": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA8"
    },
    "2722": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2723": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2724": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144B"
    },
    "2727": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2728": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2729": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4472
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "SUB"
    },
    "2738": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4496
      ],
      "op": "AND",
      "path": "1"
    },
    "2739": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4496
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9C630A88"
    },
    "2744": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2746": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2747": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2748": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2753": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "AND",
      "path": "1"
    },
    "2754": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2756": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SHL",
      "path": "1"
    },
    "2757": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2758": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2759": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2761": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2762": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2764": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2766": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2767": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2768": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2769": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SUB",
      "path": "1"
    },
    "2770": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2771": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2772": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "GAS",
      "path": "1"
    },
    "2773": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2774": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2775": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2776": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2777": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE6"
    },
    "2780": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2781": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2782": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2784": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2785": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2786": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2787": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2789": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2790": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2791": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2792": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2793": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2794": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2795": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2797": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2798": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2799": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2801": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "NOT",
      "path": "1"
    },
    "2802": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2804": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2805": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2806": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "AND",
      "path": "1"
    },
    "2807": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2808": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2809": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2810": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2812": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2813": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2814": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2815": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2816": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2817": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0A"
    },
    "2820": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2821": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2822": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144B"
    },
    "2825": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2826": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2827": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4518
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2834": {
      "op": "SHL"
    },
    "2835": {
      "op": "SUB"
    },
    "2836": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4542
      ],
      "op": "AND",
      "path": "1"
    },
    "2837": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4542
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xAB44997B"
    },
    "2842": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2844": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2845": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2846": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2851": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "AND",
      "path": "1"
    },
    "2852": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2854": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SHL",
      "path": "1"
    },
    "2855": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2856": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2857": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2859": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2860": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2862": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2864": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2865": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2866": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2867": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SUB",
      "path": "1"
    },
    "2868": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2869": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2870": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "GAS",
      "path": "1"
    },
    "2871": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2872": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2873": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2874": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2875": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB48"
    },
    "2878": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2879": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2880": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2882": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2883": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2884": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2885": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2887": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2888": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2889": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2890": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2891": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2892": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2893": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2895": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2896": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2897": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2899": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "NOT",
      "path": "1"
    },
    "2900": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2902": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2903": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2904": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "AND",
      "path": "1"
    },
    "2905": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2906": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2907": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2908": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2910": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2911": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2912": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2913": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2914": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2915": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6C"
    },
    "2918": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2919": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2920": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144B"
    },
    "2923": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2924": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2925": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4564
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2932": {
      "op": "SHL"
    },
    "2933": {
      "op": "SUB"
    },
    "2934": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4589
      ],
      "op": "AND",
      "path": "1"
    },
    "2935": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4589
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5FE6663"
    },
    "2940": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2942": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2943": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2944": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2949": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "AND",
      "path": "1"
    },
    "2950": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2952": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SHL",
      "path": "1"
    },
    "2953": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2954": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2955": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2957": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "2958": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2960": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2962": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2963": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2964": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2965": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SUB",
      "path": "1"
    },
    "2966": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2967": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2968": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "GAS",
      "path": "1"
    },
    "2969": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2970": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2971": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2972": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2973": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBAA"
    },
    "2976": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2977": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2978": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2980": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2981": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2982": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2983": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2985": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2986": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2987": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2988": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2989": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2990": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2991": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2993": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2994": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2995": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2997": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "NOT",
      "path": "1"
    },
    "2998": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3000": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3001": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3002": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "AND",
      "path": "1"
    },
    "3003": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3004": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3005": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3006": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3008": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3009": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "3010": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3011": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3012": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3013": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBCE"
    },
    "3016": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3017": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3018": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144B"
    },
    "3021": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3022": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3023": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3024": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3025": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3026": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3027": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3028": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3029": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3030": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3031": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3032": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3033": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3034": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3035": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3036": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3037": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "3038": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3039": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "3040": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3041": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3042": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3043": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "3044": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "POP",
      "path": "1"
    },
    "3045": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3046": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3047": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3048": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "3049": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "o",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3050": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3051": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2261,
        2290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3053": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2315,
        2330
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3055": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2343,
        2353
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3056": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2315,
        2355
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3057": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2315,
        2355
      ],
      "op": "POP",
      "path": "1"
    },
    "3058": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2366,
        2388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3060": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2397
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "op": "SUB"
    },
    "3069": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2414
      ],
      "op": "AND",
      "path": "1"
    },
    "3070": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2414
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDA9BCA21"
    },
    "3075": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3077": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3078": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3079": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3084": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "3085": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "3087": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SHL",
      "path": "1"
    },
    "3088": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3089": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3090": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3092": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "3093": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3095": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3097": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3098": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3099": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3100": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SUB",
      "path": "1"
    },
    "3101": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3102": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3103": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "GAS",
      "path": "1"
    },
    "3104": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3105": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3106": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3107": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3108": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC31"
    },
    "3111": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3112": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3113": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3115": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3116": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3117": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3118": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3120": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3121": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3122": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "3123": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "3124": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "3125": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "3126": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3128": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3129": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3130": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3132": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "NOT",
      "path": "1"
    },
    "3133": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3135": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3136": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "3137": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "3138": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3139": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "3140": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3141": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3143": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3144": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "3145": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3146": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "3147": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3148": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC55"
    },
    "3151": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3152": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3153": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144B"
    },
    "3156": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3157": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3158": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2366,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3159": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2366,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "3160": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2427,
        2451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3162": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2460
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3169": {
      "op": "SHL"
    },
    "3170": {
      "op": "SUB"
    },
    "3171": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2480
      ],
      "op": "AND",
      "path": "1"
    },
    "3172": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2480
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x824C88DA"
    },
    "3177": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3179": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3180": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3181": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3186": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "AND",
      "path": "1"
    },
    "3187": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "3189": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SHL",
      "path": "1"
    },
    "3190": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3191": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3192": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3194": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "3195": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3197": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3199": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3200": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3201": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3202": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SUB",
      "path": "1"
    },
    "3203": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3204": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3205": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "GAS",
      "path": "1"
    },
    "3206": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3207": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3208": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3209": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3210": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC97"
    },
    "3213": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3214": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3215": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3217": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3218": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3219": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3220": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3222": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3223": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3224": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "3225": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "3226": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "3227": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "3228": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3230": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3231": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3232": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3234": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "NOT",
      "path": "1"
    },
    "3235": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3237": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3238": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "3239": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "AND",
      "path": "1"
    },
    "3240": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3241": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "3242": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3243": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3245": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3246": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "3247": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3248": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "3249": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3250": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBB"
    },
    "3253": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3254": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3255": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1310"
    },
    "3258": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3259": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3260": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2427,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3261": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2427,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "3262": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2492,
        2522
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3264": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2543,
        2559
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3265": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3267": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "AND",
      "path": "1"
    },
    "3268": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3277": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3278": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "GT",
      "path": "1"
    },
    "3279": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3280": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDB"
    },
    "3283": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3284": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDB"
    },
    "3287": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xECB"
    },
    "3290": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3291": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3292": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3294": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3295": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3296": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3297": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3298": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3299": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3300": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3302": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MUL",
      "path": "1"
    },
    "3303": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3305": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "3306": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3307": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "3308": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3310": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3311": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3312": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3313": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD14"
    },
    "3316": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3317": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3318": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3320": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "3321": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3322": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD01"
    },
    "3325": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1D"
    },
    "3328": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3329": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3330": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3331": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3332": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3334": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "3335": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3336": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3338": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3339": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SUB",
      "path": "1"
    },
    "3340": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3341": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3342": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF9"
    },
    "3345": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3346": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3347": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "3348": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2492,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2572,
        2583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3354": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2618,
        2619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3356": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3357": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2628,
        2644
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3358": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2622,
        2625
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3359": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2622,
        2644
      ],
      "op": "LT",
      "path": "1"
    },
    "3360": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3361": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE11"
    },
    "3364": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3365": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2669,
        2697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD2C"
    },
    "3368": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2669,
        2697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1D"
    },
    "3371": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2669,
        2697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3372": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2669,
        2697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3373": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x40"
    },
    "3375": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3376": {
      "op": "PUSH4",
      "value": "0x8532CBF7"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3383": {
      "op": "SHL"
    },
    "3384": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3385": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3386": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3388": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3389": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "3390": {
      "op": "DUP4"
    },
    "3391": {
      "op": "SWAP1"
    },
    "3392": {
      "op": "MSTORE"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "op": "SUB"
    },
    "3401": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3402": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "AND",
      "path": "1"
    },
    "3403": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3404": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8532CBF7"
    },
    "3409": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3415": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3417": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3418": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3419": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3420": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SUB",
      "path": "1"
    },
    "3421": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3422": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3423": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "GAS",
      "path": "1"
    },
    "3424": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3425": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3426": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3427": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3428": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD71"
    },
    "3431": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3432": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3433": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3435": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3436": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3437": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3438": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3440": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3441": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3442": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "3443": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "3444": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "3445": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "3446": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3448": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3449": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3450": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3452": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3453": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3454": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3456": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3457": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3458": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3459": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3462": {
      "op": "NOT"
    },
    "3463": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "AND",
      "path": "1"
    },
    "3464": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3465": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "3466": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3468": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3469": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD99"
    },
    "3472": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3473": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3474": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3475": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "3476": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3477": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1376"
    },
    "3480": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3481": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3482": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3483": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3484": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2865,
        2886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "3486": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2865,
        2886
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3487": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2865,
        2886
      ],
      "op": "ADD",
      "path": "1"
    },
    "3488": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3489": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3490": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3491": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2827,
        2847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3493": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2827,
        2847
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3494": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2827,
        2847
      ],
      "op": "ADD",
      "path": "1"
    },
    "3495": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3496": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3497": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3498": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2790,
        2809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3500": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2790,
        2809
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3501": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2790,
        2809
      ],
      "op": "ADD",
      "path": "1"
    },
    "3502": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3503": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3504": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3505": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3506": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2756,
        2772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3508": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2756,
        2772
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3509": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2756,
        2772
      ],
      "op": "ADD",
      "path": "1"
    },
    "3510": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3511": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3512": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3513": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3523": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3524": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "AND",
      "path": "1"
    },
    "3525": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3526": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3527": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2934,
        2938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3529": {
      "branch": 19,
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2934,
        2962
      ],
      "op": "EQ",
      "path": "1"
    },
    "3530": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3531": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDFE"
    },
    "3534": {
      "branch": 19,
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3535": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3005,
        3016
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "3536": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        2993
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3537": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2995,
        3000
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3538": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3540": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "AND",
      "path": "1"
    },
    "3541": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3542": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3543": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3544": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "LT",
      "path": "1"
    },
    "3545": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE4"
    },
    "3548": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3549": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE4"
    },
    "3552": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1468"
    },
    "3555": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2982,
        3002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3556": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3557": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3559": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "MUL",
      "path": "1"
    },
    "3560": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3562": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "ADD",
      "path": "1"
    },
    "3563": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "ADD",
      "path": "1"
    },
    "3564": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3565": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3566": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3567": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "3568": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 12
    },
    "3569": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3570": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDFA"
    },
    "3573": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3574": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1494"
    },
    "3577": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        3034,
        3041
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3578": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3579": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3580": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "POP",
      "path": "1"
    },
    "3581": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "POP",
      "path": "1"
    },
    "3582": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 13
    },
    "3585": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE09"
    },
    "3588": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3589": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B4"
    },
    "3592": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2647,
        2652
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3593": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3594": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3595": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "POP",
      "path": "1"
    },
    "3596": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "POP",
      "path": "1"
    },
    "3597": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD1C"
    },
    "3600": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3601": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3082,
        3093
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 14
    },
    "3604": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3082,
        3093
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "3605": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "POP"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "op": "POP"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "o",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3616": {
      "op": "MLOAD"
    },
    "3617": {
      "op": "DUP1"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "DUP1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "SUB"
    },
    "3635": {
      "op": "AND"
    },
    "3636": {
      "op": "DUP2"
    },
    "3637": {
      "op": "MSTORE"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3643": {
      "op": "DUP2"
    },
    "3644": {
      "op": "MSTORE"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3647": {
      "op": "ADD"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3650": {
      "op": "DUP2"
    },
    "3651": {
      "op": "MSTORE"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3654": {
      "op": "ADD"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3657": {
      "op": "ISZERO"
    },
    "3658": {
      "op": "ISZERO"
    },
    "3659": {
      "op": "DUP2"
    },
    "3660": {
      "op": "MSTORE"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3663": {
      "op": "ADD"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3666": {
      "op": "ISZERO"
    },
    "3667": {
      "op": "ISZERO"
    },
    "3668": {
      "op": "DUP2"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "POP"
    },
    "3671": {
      "op": "SWAP1"
    },
    "3672": {
      "jump": "o",
      "op": "JUMP"
    },
    "3673": {
      "op": "JUMPDEST"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3676": {
      "op": "DUP2"
    },
    "3677": {
      "op": "AND"
    },
    "3678": {
      "op": "DUP2"
    },
    "3679": {
      "op": "EQ"
    },
    "3680": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3683": {
      "op": "JUMPI"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3686": {
      "op": "DUP1"
    },
    "3687": {
      "op": "REVERT"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "jump": "o",
      "op": "JUMP"
    },
    "3691": {
      "op": "JUMPDEST"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3694": {
      "op": "DUP1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3697": {
      "op": "DUP1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3700": {
      "op": "DUP6"
    },
    "3701": {
      "op": "DUP8"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "op": "SLT"
    },
    "3704": {
      "op": "ISZERO"
    },
    "3705": {
      "op": "PUSH2",
      "value": "0xE81"
    },
    "3708": {
      "op": "JUMPI"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3711": {
      "op": "DUP1"
    },
    "3712": {
      "op": "REVERT"
    },
    "3713": {
      "op": "JUMPDEST"
    },
    "3714": {
      "op": "DUP5"
    },
    "3715": {
      "op": "CALLDATALOAD"
    },
    "3716": {
      "op": "SWAP4"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3720": {
      "op": "DUP6"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "op": "CALLDATALOAD"
    },
    "3723": {
      "op": "PUSH2",
      "value": "0xE93"
    },
    "3726": {
      "op": "DUP2"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "3730": {
      "jump": "i",
      "op": "JUMP"
    },
    "3731": {
      "op": "JUMPDEST"
    },
    "3732": {
      "op": "SWAP4"
    },
    "3733": {
      "op": "SWAP7"
    },
    "3734": {
      "op": "SWAP4"
    },
    "3735": {
      "op": "SWAP6"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3742": {
      "op": "DUP3"
    },
    "3743": {
      "op": "ADD"
    },
    "3744": {
      "op": "CALLDATALOAD"
    },
    "3745": {
      "op": "SWAP2"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "CALLDATALOAD"
    },
    "3750": {
      "op": "SWAP1"
    },
    "3751": {
      "jump": "o",
      "op": "JUMP"
    },
    "3752": {
      "op": "JUMPDEST"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3759": {
      "op": "SHL"
    },
    "3760": {
      "op": "SUB"
    },
    "3761": {
      "op": "DUP2"
    },
    "3762": {
      "op": "AND"
    },
    "3763": {
      "op": "DUP2"
    },
    "3764": {
      "op": "EQ"
    },
    "3765": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3768": {
      "op": "JUMPI"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "REVERT"
    },
    "3773": {
      "op": "JUMPDEST"
    },
    "3774": {
      "op": "DUP1"
    },
    "3775": {
      "op": "ISZERO"
    },
    "3776": {
      "op": "ISZERO"
    },
    "3777": {
      "op": "DUP2"
    },
    "3778": {
      "op": "EQ"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3782": {
      "op": "JUMPI"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3785": {
      "op": "DUP1"
    },
    "3786": {
      "op": "REVERT"
    },
    "3787": {
      "op": "JUMPDEST"
    },
    "3788": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3808": {
      "op": "REVERT"
    },
    "3809": {
      "op": "JUMPDEST"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3812": {
      "op": "MLOAD"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3819": {
      "op": "NOT"
    },
    "3820": {
      "op": "AND"
    },
    "3821": {
      "op": "DUP2"
    },
    "3822": {
      "op": "ADD"
    },
    "3823": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3832": {
      "op": "DUP2"
    },
    "3833": {
      "op": "GT"
    },
    "3834": {
      "op": "DUP3"
    },
    "3835": {
      "op": "DUP3"
    },
    "3836": {
      "op": "LT"
    },
    "3837": {
      "op": "OR"
    },
    "3838": {
      "op": "ISZERO"
    },
    "3839": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3842": {
      "op": "JUMPI"
    },
    "3843": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3849": {
      "jump": "i",
      "op": "JUMP"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3853": {
      "op": "MSTORE"
    },
    "3854": {
      "op": "SWAP2"
    },
    "3855": {
      "op": "SWAP1"
    },
    "3856": {
      "op": "POP"
    },
    "3857": {
      "jump": "o",
      "op": "JUMP"
    },
    "3858": {
      "op": "JUMPDEST"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3870": {
      "op": "DUP3"
    },
    "3871": {
      "op": "GT"
    },
    "3872": {
      "op": "ISZERO"
    },
    "3873": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3876": {
      "op": "JUMPI"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3880": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3883": {
      "jump": "i",
      "op": "JUMP"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3891": {
      "op": "NOT"
    },
    "3892": {
      "op": "AND"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "SWAP1"
    },
    "3897": {
      "jump": "o",
      "op": "JUMP"
    },
    "3898": {
      "op": "JUMPDEST"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3904": {
      "op": "DUP4"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "SLT"
    },
    "3907": {
      "op": "PUSH2",
      "value": "0xF4B"
    },
    "3910": {
      "op": "JUMPI"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "DUP1"
    },
    "3914": {
      "op": "REVERT"
    },
    "3915": {
      "op": "JUMPDEST"
    },
    "3916": {
      "op": "DUP2"
    },
    "3917": {
      "op": "CALLDATALOAD"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xF5E"
    },
    "3921": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "3924": {
      "op": "DUP3"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "3928": {
      "jump": "i",
      "op": "JUMP"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "PUSH2",
      "value": "0xEE1"
    },
    "3933": {
      "jump": "i",
      "op": "JUMP"
    },
    "3934": {
      "op": "JUMPDEST"
    },
    "3935": {
      "op": "DUP2"
    },
    "3936": {
      "op": "DUP2"
    },
    "3937": {
      "op": "MSTORE"
    },
    "3938": {
      "op": "DUP5"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3941": {
      "op": "DUP4"
    },
    "3942": {
      "op": "DUP7"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "ADD"
    },
    "3945": {
      "op": "GT"
    },
    "3946": {
      "op": "ISZERO"
    },
    "3947": {
      "op": "PUSH2",
      "value": "0xF73"
    },
    "3950": {
      "op": "JUMPI"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3953": {
      "op": "DUP1"
    },
    "3954": {
      "op": "REVERT"
    },
    "3955": {
      "op": "JUMPDEST"
    },
    "3956": {
      "op": "DUP2"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3959": {
      "op": "DUP6"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3963": {
      "op": "DUP4"
    },
    "3964": {
      "op": "ADD"
    },
    "3965": {
      "op": "CALLDATACOPY"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3968": {
      "op": "SWAP2"
    },
    "3969": {
      "op": "DUP2"
    },
    "3970": {
      "op": "ADD"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "SWAP2"
    },
    "3975": {
      "op": "SWAP1"
    },
    "3976": {
      "op": "SWAP2"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "SWAP4"
    },
    "3979": {
      "op": "SWAP3"
    },
    "3980": {
      "op": "POP"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "jump": "o",
      "op": "JUMP"
    },
    "3984": {
      "op": "JUMPDEST"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3990": {
      "op": "DUP1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3993": {
      "op": "DUP6"
    },
    "3994": {
      "op": "DUP8"
    },
    "3995": {
      "op": "SUB"
    },
    "3996": {
      "op": "SLT"
    },
    "3997": {
      "op": "ISZERO"
    },
    "3998": {
      "op": "PUSH2",
      "value": "0xFA6"
    },
    "4001": {
      "op": "JUMPI"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4004": {
      "op": "DUP1"
    },
    "4005": {
      "op": "REVERT"
    },
    "4006": {
      "op": "JUMPDEST"
    },
    "4007": {
      "op": "DUP5"
    },
    "4008": {
      "op": "CALLDATALOAD"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4012": {
      "op": "DUP2"
    },
    "4013": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4016": {
      "jump": "i",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "SWAP4"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4022": {
      "op": "DUP6"
    },
    "4023": {
      "op": "ADD"
    },
    "4024": {
      "op": "CALLDATALOAD"
    },
    "4025": {
      "op": "PUSH2",
      "value": "0xFC1"
    },
    "4028": {
      "op": "DUP2"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4032": {
      "jump": "i",
      "op": "JUMP"
    },
    "4033": {
      "op": "JUMPDEST"
    },
    "4034": {
      "op": "SWAP3"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4038": {
      "op": "DUP6"
    },
    "4039": {
      "op": "ADD"
    },
    "4040": {
      "op": "CALLDATALOAD"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0xFD1"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "4048": {
      "jump": "i",
      "op": "JUMP"
    },
    "4049": {
      "op": "JUMPDEST"
    },
    "4050": {
      "op": "SWAP2"
    },
    "4051": {
      "op": "POP"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4054": {
      "op": "DUP6"
    },
    "4055": {
      "op": "ADD"
    },
    "4056": {
      "op": "CALLDATALOAD"
    },
    "4057": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4066": {
      "op": "DUP2"
    },
    "4067": {
      "op": "GT"
    },
    "4068": {
      "op": "ISZERO"
    },
    "4069": {
      "op": "PUSH2",
      "value": "0xFED"
    },
    "4072": {
      "op": "JUMPI"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4075": {
      "op": "DUP1"
    },
    "4076": {
      "op": "REVERT"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4081": {
      "op": "DUP8"
    },
    "4082": {
      "op": "DUP3"
    },
    "4083": {
      "op": "DUP9"
    },
    "4084": {
      "op": "ADD"
    },
    "4085": {
      "op": "PUSH2",
      "value": "0xF3A"
    },
    "4088": {
      "jump": "i",
      "op": "JUMP"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "op": "SWAP2"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "op": "SWAP3"
    },
    "4094": {
      "op": "SWAP6"
    },
    "4095": {
      "op": "SWAP2"
    },
    "4096": {
      "op": "SWAP5"
    },
    "4097": {
      "op": "POP"
    },
    "4098": {
      "op": "SWAP3"
    },
    "4099": {
      "op": "POP"
    },
    "4100": {
      "jump": "o",
      "op": "JUMP"
    },
    "4101": {
      "op": "JUMPDEST"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4107": {
      "op": "DUP1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4110": {
      "op": "DUP1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4113": {
      "op": "DUP8"
    },
    "4114": {
      "op": "DUP10"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "op": "SLT"
    },
    "4117": {
      "op": "ISZERO"
    },
    "4118": {
      "op": "PUSH2",
      "value": "0x101E"
    },
    "4121": {
      "op": "JUMPI"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4124": {
      "op": "DUP1"
    },
    "4125": {
      "op": "REVERT"
    },
    "4126": {
      "op": "JUMPDEST"
    },
    "4127": {
      "op": "DUP7"
    },
    "4128": {
      "op": "CALLDATALOAD"
    },
    "4129": {
      "op": "PUSH2",
      "value": "0x1029"
    },
    "4132": {
      "op": "DUP2"
    },
    "4133": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4136": {
      "jump": "i",
      "op": "JUMP"
    },
    "4137": {
      "op": "JUMPDEST"
    },
    "4138": {
      "op": "SWAP6"
    },
    "4139": {
      "op": "POP"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4142": {
      "op": "DUP8"
    },
    "4143": {
      "op": "ADD"
    },
    "4144": {
      "op": "CALLDATALOAD"
    },
    "4145": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4148": {
      "op": "DUP2"
    },
    "4149": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4152": {
      "jump": "i",
      "op": "JUMP"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "SWAP5"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4158": {
      "op": "DUP8"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "CALLDATALOAD"
    },
    "4161": {
      "op": "SWAP4"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4165": {
      "op": "DUP8"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "CALLDATALOAD"
    },
    "4168": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4171": {
      "op": "DUP2"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "4175": {
      "jump": "i",
      "op": "JUMP"
    },
    "4176": {
      "op": "JUMPDEST"
    },
    "4177": {
      "op": "SWAP3"
    },
    "4178": {
      "op": "POP"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4181": {
      "op": "DUP8"
    },
    "4182": {
      "op": "ADD"
    },
    "4183": {
      "op": "CALLDATALOAD"
    },
    "4184": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4193": {
      "op": "DUP1"
    },
    "4194": {
      "op": "DUP3"
    },
    "4195": {
      "op": "GT"
    },
    "4196": {
      "op": "ISZERO"
    },
    "4197": {
      "op": "PUSH2",
      "value": "0x106D"
    },
    "4200": {
      "op": "JUMPI"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4203": {
      "op": "DUP1"
    },
    "4204": {
      "op": "REVERT"
    },
    "4205": {
      "op": "JUMPDEST"
    },
    "4206": {
      "op": "PUSH2",
      "value": "0x1079"
    },
    "4209": {
      "op": "DUP11"
    },
    "4210": {
      "op": "DUP4"
    },
    "4211": {
      "op": "DUP12"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "op": "PUSH2",
      "value": "0xF3A"
    },
    "4216": {
      "jump": "i",
      "op": "JUMP"
    },
    "4217": {
      "op": "JUMPDEST"
    },
    "4218": {
      "op": "SWAP4"
    },
    "4219": {
      "op": "POP"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4222": {
      "op": "DUP10"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "CALLDATALOAD"
    },
    "4225": {
      "op": "SWAP2"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "op": "DUP1"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "GT"
    },
    "4230": {
      "op": "ISZERO"
    },
    "4231": {
      "op": "PUSH2",
      "value": "0x108F"
    },
    "4234": {
      "op": "JUMPI"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4237": {
      "op": "DUP1"
    },
    "4238": {
      "op": "REVERT"
    },
    "4239": {
      "op": "JUMPDEST"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4244": {
      "op": "DUP10"
    },
    "4245": {
      "op": "DUP3"
    },
    "4246": {
      "op": "DUP11"
    },
    "4247": {
      "op": "ADD"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0xF3A"
    },
    "4251": {
      "jump": "i",
      "op": "JUMP"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "SWAP2"
    },
    "4254": {
      "op": "POP"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "SWAP3"
    },
    "4257": {
      "op": "SWAP6"
    },
    "4258": {
      "op": "POP"
    },
    "4259": {
      "op": "SWAP3"
    },
    "4260": {
      "op": "SWAP6"
    },
    "4261": {
      "op": "POP"
    },
    "4262": {
      "op": "SWAP3"
    },
    "4263": {
      "op": "SWAP6"
    },
    "4264": {
      "jump": "o",
      "op": "JUMP"
    },
    "4265": {
      "op": "JUMPDEST"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4268": {
      "op": "DUP1"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4271": {
      "op": "DUP4"
    },
    "4272": {
      "op": "DUP6"
    },
    "4273": {
      "op": "SUB"
    },
    "4274": {
      "op": "SLT"
    },
    "4275": {
      "op": "ISZERO"
    },
    "4276": {
      "op": "PUSH2",
      "value": "0x10BC"
    },
    "4279": {
      "op": "JUMPI"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4282": {
      "op": "DUP1"
    },
    "4283": {
      "op": "REVERT"
    },
    "4284": {
      "op": "JUMPDEST"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "CALLDATALOAD"
    },
    "4287": {
      "op": "PUSH2",
      "value": "0x10C7"
    },
    "4290": {
      "op": "DUP2"
    },
    "4291": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4294": {
      "jump": "i",
      "op": "JUMP"
    },
    "4295": {
      "op": "JUMPDEST"
    },
    "4296": {
      "op": "SWAP2"
    },
    "4297": {
      "op": "POP"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4300": {
      "op": "DUP4"
    },
    "4301": {
      "op": "ADD"
    },
    "4302": {
      "op": "CALLDATALOAD"
    },
    "4303": {
      "op": "PUSH2",
      "value": "0x10D7"
    },
    "4306": {
      "op": "DUP2"
    },
    "4307": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4310": {
      "jump": "i",
      "op": "JUMP"
    },
    "4311": {
      "op": "JUMPDEST"
    },
    "4312": {
      "op": "DUP1"
    },
    "4313": {
      "op": "SWAP2"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "op": "SWAP3"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "SWAP3"
    },
    "4319": {
      "op": "SWAP1"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "jump": "o",
      "op": "JUMP"
    },
    "4322": {
      "op": "JUMPDEST"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4325": {
      "op": "JUMPDEST"
    },
    "4326": {
      "op": "DUP4"
    },
    "4327": {
      "op": "DUP2"
    },
    "4328": {
      "op": "LT"
    },
    "4329": {
      "op": "ISZERO"
    },
    "4330": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4333": {
      "op": "JUMPI"
    },
    "4334": {
      "op": "DUP2"
    },
    "4335": {
      "op": "DUP2"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "MLOAD"
    },
    "4338": {
      "op": "DUP4"
    },
    "4339": {
      "op": "DUP3"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "MSTORE"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x10E5"
    },
    "4348": {
      "op": "JUMP"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "DUP4"
    },
    "4351": {
      "op": "DUP2"
    },
    "4352": {
      "op": "GT"
    },
    "4353": {
      "op": "ISZERO"
    },
    "4354": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "4357": {
      "op": "JUMPI"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4360": {
      "op": "DUP5"
    },
    "4361": {
      "op": "DUP5"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "MSTORE"
    },
    "4364": {
      "op": "JUMPDEST"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "op": "POP"
    },
    "4367": {
      "op": "POP"
    },
    "4368": {
      "op": "POP"
    },
    "4369": {
      "jump": "o",
      "op": "JUMP"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "DUP2"
    },
    "4374": {
      "op": "MLOAD"
    },
    "4375": {
      "op": "DUP1"
    },
    "4376": {
      "op": "DUP5"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4381": {
      "op": "DUP2"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4384": {
      "op": "DUP7"
    },
    "4385": {
      "op": "ADD"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4388": {
      "op": "DUP7"
    },
    "4389": {
      "op": "ADD"
    },
    "4390": {
      "op": "PUSH2",
      "value": "0x10E2"
    },
    "4393": {
      "jump": "i",
      "op": "JUMP"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4400": {
      "op": "NOT"
    },
    "4401": {
      "op": "AND"
    },
    "4402": {
      "op": "SWAP3"
    },
    "4403": {
      "op": "SWAP1"
    },
    "4404": {
      "op": "SWAP3"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "SWAP3"
    },
    "4410": {
      "op": "SWAP2"
    },
    "4411": {
      "op": "POP"
    },
    "4412": {
      "op": "POP"
    },
    "4413": {
      "jump": "o",
      "op": "JUMP"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4417": {
      "op": "DUP2"
    },
    "4418": {
      "op": "MSTORE"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0x1151"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4426": {
      "op": "DUP4"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "DUP8"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4432": {
      "jump": "i",
      "op": "JUMP"
    },
    "4433": {
      "op": "JUMPDEST"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4436": {
      "op": "DUP4"
    },
    "4437": {
      "op": "ADD"
    },
    "4438": {
      "op": "SWAP6"
    },
    "4439": {
      "op": "SWAP1"
    },
    "4440": {
      "op": "SWAP6"
    },
    "4441": {
      "op": "MSTORE"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "SWAP2"
    },
    "4444": {
      "op": "ISZERO"
    },
    "4445": {
      "op": "ISZERO"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4448": {
      "op": "DUP4"
    },
    "4449": {
      "op": "ADD"
    },
    "4450": {
      "op": "MSTORE"
    },
    "4451": {
      "op": "ISZERO"
    },
    "4452": {
      "op": "ISZERO"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4455": {
      "op": "SWAP1"
    },
    "4456": {
      "op": "SWAP2"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "MSTORE"
    },
    "4459": {
      "op": "SWAP2"
    },
    "4460": {
      "op": "SWAP1"
    },
    "4461": {
      "op": "POP"
    },
    "4462": {
      "jump": "o",
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4468": {
      "op": "DUP3"
    },
    "4469": {
      "op": "DUP5"
    },
    "4470": {
      "op": "SUB"
    },
    "4471": {
      "op": "SLT"
    },
    "4472": {
      "op": "ISZERO"
    },
    "4473": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4476": {
      "op": "JUMPI"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4479": {
      "op": "DUP1"
    },
    "4480": {
      "op": "REVERT"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "DUP2"
    },
    "4483": {
      "op": "CALLDATALOAD"
    },
    "4484": {
      "op": "PUSH2",
      "value": "0x118C"
    },
    "4487": {
      "op": "DUP2"
    },
    "4488": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "4491": {
      "jump": "i",
      "op": "JUMP"
    },
    "4492": {
      "op": "JUMPDEST"
    },
    "4493": {
      "op": "SWAP4"
    },
    "4494": {
      "op": "SWAP3"
    },
    "4495": {
      "op": "POP"
    },
    "4496": {
      "op": "POP"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "jump": "o",
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4505": {
      "op": "DUP1"
    },
    "4506": {
      "op": "DUP4"
    },
    "4507": {
      "op": "MSTORE"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x11A7"
    },
    "4511": {
      "op": "DUP2"
    },
    "4512": {
      "op": "DUP5"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "DUP13"
    },
    "4515": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4518": {
      "jump": "i",
      "op": "JUMP"
    },
    "4519": {
      "op": "JUMPDEST"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4522": {
      "op": "DUP5"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "SWAP11"
    },
    "4525": {
      "op": "SWAP1"
    },
    "4526": {
      "op": "SWAP11"
    },
    "4527": {
      "op": "MSTORE"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "SWAP6"
    },
    "4531": {
      "op": "ISZERO"
    },
    "4532": {
      "op": "ISZERO"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4535": {
      "op": "DUP8"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "MSTORE"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4540": {
      "op": "SWAP5"
    },
    "4541": {
      "op": "DUP6"
    },
    "4542": {
      "op": "AND"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4545": {
      "op": "DUP8"
    },
    "4546": {
      "op": "ADD"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "SWAP3"
    },
    "4549": {
      "op": "DUP5"
    },
    "4550": {
      "op": "AND"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4553": {
      "op": "DUP7"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "MSTORE"
    },
    "4556": {
      "op": "SWAP1"
    },
    "4557": {
      "op": "DUP4"
    },
    "4558": {
      "op": "AND"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4561": {
      "op": "DUP6"
    },
    "4562": {
      "op": "ADD"
    },
    "4563": {
      "op": "MSTORE"
    },
    "4564": {
      "op": "DUP3"
    },
    "4565": {
      "op": "AND"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4568": {
      "op": "DUP5"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "MSTORE"
    },
    "4571": {
      "op": "AND"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4574": {
      "op": "SWAP1"
    },
    "4575": {
      "op": "SWAP2"
    },
    "4576": {
      "op": "ADD"
    },
    "4577": {
      "op": "MSTORE"
    },
    "4578": {
      "op": "SWAP2"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "jump": "o",
      "op": "JUMP"
    },
    "4582": {
      "op": "JUMPDEST"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4587": {
      "op": "DUP1"
    },
    "4588": {
      "op": "DUP4"
    },
    "4589": {
      "op": "ADD"
    },
    "4590": {
      "op": "DUP2"
    },
    "4591": {
      "op": "DUP5"
    },
    "4592": {
      "op": "MSTORE"
    },
    "4593": {
      "op": "DUP1"
    },
    "4594": {
      "op": "DUP6"
    },
    "4595": {
      "op": "MLOAD"
    },
    "4596": {
      "op": "DUP1"
    },
    "4597": {
      "op": "DUP4"
    },
    "4598": {
      "op": "MSTORE"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4601": {
      "op": "SWAP3"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "DUP3"
    },
    "4604": {
      "op": "DUP7"
    },
    "4605": {
      "op": "ADD"
    },
    "4606": {
      "op": "SWAP2"
    },
    "4607": {
      "op": "POP"
    },
    "4608": {
      "op": "DUP3"
    },
    "4609": {
      "op": "DUP2"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4612": {
      "op": "SHL"
    },
    "4613": {
      "op": "DUP8"
    },
    "4614": {
      "op": "ADD"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "DUP5"
    },
    "4617": {
      "op": "DUP9"
    },
    "4618": {
      "op": "ADD"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4621": {
      "op": "JUMPDEST"
    },
    "4622": {
      "op": "DUP4"
    },
    "4623": {
      "op": "DUP2"
    },
    "4624": {
      "op": "LT"
    },
    "4625": {
      "op": "ISZERO"
    },
    "4626": {
      "op": "PUSH2",
      "value": "0x127C"
    },
    "4629": {
      "op": "JUMPI"
    },
    "4630": {
      "op": "DUP9"
    },
    "4631": {
      "op": "DUP4"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4635": {
      "op": "NOT"
    },
    "4636": {
      "op": "ADD"
    },
    "4637": {
      "op": "DUP6"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "op": "DUP2"
    },
    "4640": {
      "op": "MLOAD"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "MLOAD"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4649": {
      "op": "SHL"
    },
    "4650": {
      "op": "SUB"
    },
    "4651": {
      "op": "AND"
    },
    "4652": {
      "op": "DUP5"
    },
    "4653": {
      "op": "MSTORE"
    },
    "4654": {
      "op": "DUP8"
    },
    "4655": {
      "op": "DUP2"
    },
    "4656": {
      "op": "ADD"
    },
    "4657": {
      "op": "MLOAD"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4660": {
      "op": "DUP10"
    },
    "4661": {
      "op": "DUP7"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "DUP2"
    },
    "4664": {
      "op": "SWAP1"
    },
    "4665": {
      "op": "MSTORE"
    },
    "4666": {
      "op": "SWAP1"
    },
    "4667": {
      "op": "PUSH2",
      "value": "0x1246"
    },
    "4670": {
      "op": "DUP3"
    },
    "4671": {
      "op": "DUP8"
    },
    "4672": {
      "op": "ADD"
    },
    "4673": {
      "op": "DUP3"
    },
    "4674": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4677": {
      "jump": "i",
      "op": "JUMP"
    },
    "4678": {
      "op": "JUMPDEST"
    },
    "4679": {
      "op": "DUP4"
    },
    "4680": {
      "op": "DUP11"
    },
    "4681": {
      "op": "ADD"
    },
    "4682": {
      "op": "MLOAD"
    },
    "4683": {
      "op": "DUP8"
    },
    "4684": {
      "op": "DUP12"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "MSTORE"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4689": {
      "op": "DUP1"
    },
    "4690": {
      "op": "DUP6"
    },
    "4691": {
      "op": "ADD"
    },
    "4692": {
      "op": "MLOAD"
    },
    "4693": {
      "op": "ISZERO"
    },
    "4694": {
      "op": "ISZERO"
    },
    "4695": {
      "op": "SWAP1"
    },
    "4696": {
      "op": "DUP9"
    },
    "4697": {
      "op": "ADD"
    },
    "4698": {
      "op": "MSTORE"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4701": {
      "op": "SWAP4"
    },
    "4702": {
      "op": "DUP5"
    },
    "4703": {
      "op": "ADD"
    },
    "4704": {
      "op": "MLOAD"
    },
    "4705": {
      "op": "ISZERO"
    },
    "4706": {
      "op": "ISZERO"
    },
    "4707": {
      "op": "SWAP4"
    },
    "4708": {
      "op": "SWAP1"
    },
    "4709": {
      "op": "SWAP7"
    },
    "4710": {
      "op": "ADD"
    },
    "4711": {
      "op": "SWAP3"
    },
    "4712": {
      "op": "SWAP1"
    },
    "4713": {
      "op": "SWAP3"
    },
    "4714": {
      "op": "MSTORE"
    },
    "4715": {
      "op": "POP"
    },
    "4716": {
      "op": "POP"
    },
    "4717": {
      "op": "SWAP4"
    },
    "4718": {
      "op": "DUP7"
    },
    "4719": {
      "op": "ADD"
    },
    "4720": {
      "op": "SWAP4"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "op": "DUP7"
    },
    "4723": {
      "op": "ADD"
    },
    "4724": {
      "op": "SWAP1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "op": "PUSH2",
      "value": "0x120D"
    },
    "4731": {
      "op": "JUMP"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "SWAP1"
    },
    "4735": {
      "op": "SWAP9"
    },
    "4736": {
      "op": "SWAP8"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "POP"
    },
    "4739": {
      "op": "POP"
    },
    "4740": {
      "op": "POP"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "POP"
    },
    "4745": {
      "jump": "o",
      "op": "JUMP"
    },
    "4746": {
      "op": "JUMPDEST"
    },
    "4747": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "4780": {
      "op": "DUP2"
    },
    "4781": {
      "op": "MSTORE"
    },
    "4782": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4817": {
      "op": "DUP3"
    },
    "4818": {
      "op": "ADD"
    },
    "4819": {
      "op": "MSTORE"
    },
    "4820": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4844": {
      "op": "DUP3"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "SWAP1"
    },
    "4851": {
      "jump": "o",
      "op": "JUMP"
    },
    "4852": {
      "op": "JUMPDEST"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4855": {
      "op": "DUP3"
    },
    "4856": {
      "op": "MLOAD"
    },
    "4857": {
      "op": "PUSH2",
      "value": "0x1306"
    },
    "4860": {
      "op": "DUP2"
    },
    "4861": {
      "op": "DUP5"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4864": {
      "op": "DUP8"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "op": "PUSH2",
      "value": "0x10E2"
    },
    "4869": {
      "jump": "i",
      "op": "JUMP"
    },
    "4870": {
      "op": "JUMPDEST"
    },
    "4871": {
      "op": "SWAP2"
    },
    "4872": {
      "op": "SWAP1"
    },
    "4873": {
      "op": "SWAP2"
    },
    "4874": {
      "op": "ADD"
    },
    "4875": {
      "op": "SWAP3"
    },
    "4876": {
      "op": "SWAP2"
    },
    "4877": {
      "op": "POP"
    },
    "4878": {
      "op": "POP"
    },
    "4879": {
      "jump": "o",
      "op": "JUMP"
    },
    "4880": {
      "op": "JUMPDEST"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4885": {
      "op": "DUP3"
    },
    "4886": {
      "op": "DUP5"
    },
    "4887": {
      "op": "SUB"
    },
    "4888": {
      "op": "SLT"
    },
    "4889": {
      "op": "ISZERO"
    },
    "4890": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "4893": {
      "op": "JUMPI"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4896": {
      "op": "DUP1"
    },
    "4897": {
      "op": "REVERT"
    },
    "4898": {
      "op": "JUMPDEST"
    },
    "4899": {
      "op": "POP"
    },
    "4900": {
      "op": "MLOAD"
    },
    "4901": {
      "op": "SWAP2"
    },
    "4902": {
      "op": "SWAP1"
    },
    "4903": {
      "op": "POP"
    },
    "4904": {
      "jump": "o",
      "op": "JUMP"
    },
    "4905": {
      "op": "JUMPDEST"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4908": {
      "op": "DUP3"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4911": {
      "op": "DUP4"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "op": "SLT"
    },
    "4914": {
      "op": "PUSH2",
      "value": "0x133A"
    },
    "4917": {
      "op": "JUMPI"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4920": {
      "op": "DUP1"
    },
    "4921": {
      "op": "REVERT"
    },
    "4922": {
      "op": "JUMPDEST"
    },
    "4923": {
      "op": "DUP2"
    },
    "4924": {
      "op": "MLOAD"
    },
    "4925": {
      "op": "PUSH2",
      "value": "0x1348"
    },
    "4928": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "4931": {
      "op": "DUP3"
    },
    "4932": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "4935": {
      "jump": "i",
      "op": "JUMP"
    },
    "4936": {
      "op": "JUMPDEST"
    },
    "4937": {
      "op": "DUP2"
    },
    "4938": {
      "op": "DUP2"
    },
    "4939": {
      "op": "MSTORE"
    },
    "4940": {
      "op": "DUP5"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4943": {
      "op": "DUP4"
    },
    "4944": {
      "op": "DUP7"
    },
    "4945": {
      "op": "ADD"
    },
    "4946": {
      "op": "ADD"
    },
    "4947": {
      "op": "GT"
    },
    "4948": {
      "op": "ISZERO"
    },
    "4949": {
      "op": "PUSH2",
      "value": "0x135D"
    },
    "4952": {
      "op": "JUMPI"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4955": {
      "op": "DUP1"
    },
    "4956": {
      "op": "REVERT"
    },
    "4957": {
      "op": "JUMPDEST"
    },
    "4958": {
      "op": "PUSH2",
      "value": "0x136E"
    },
    "4961": {
      "op": "DUP3"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4964": {
      "op": "DUP4"
    },
    "4965": {
      "op": "ADD"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4968": {
      "op": "DUP8"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "PUSH2",
      "value": "0x10E2"
    },
    "4973": {
      "jump": "i",
      "op": "JUMP"
    },
    "4974": {
      "op": "JUMPDEST"
    },
    "4975": {
      "op": "SWAP5"
    },
    "4976": {
      "op": "SWAP4"
    },
    "4977": {
      "op": "POP"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "op": "POP"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "jump": "o",
      "op": "JUMP"
    },
    "4982": {
      "op": "JUMPDEST"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4985": {
      "op": "DUP1"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "DUP1"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4993": {
      "op": "DUP7"
    },
    "4994": {
      "op": "DUP9"
    },
    "4995": {
      "op": "SUB"
    },
    "4996": {
      "op": "SLT"
    },
    "4997": {
      "op": "ISZERO"
    },
    "4998": {
      "op": "PUSH2",
      "value": "0x138E"
    },
    "5001": {
      "op": "JUMPI"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5004": {
      "op": "DUP1"
    },
    "5005": {
      "op": "REVERT"
    },
    "5006": {
      "op": "JUMPDEST"
    },
    "5007": {
      "op": "DUP6"
    },
    "5008": {
      "op": "MLOAD"
    },
    "5009": {
      "op": "PUSH2",
      "value": "0x1399"
    },
    "5012": {
      "op": "DUP2"
    },
    "5013": {
      "op": "PUSH2",
      "value": "0xEA8"
    },
    "5016": {
      "jump": "i",
      "op": "JUMP"
    },
    "5017": {
      "op": "JUMPDEST"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5020": {
      "op": "DUP8"
    },
    "5021": {
      "op": "ADD"
    },
    "5022": {
      "op": "MLOAD"
    },
    "5023": {
      "op": "SWAP1"
    },
    "5024": {
      "op": "SWAP6"
    },
    "5025": {
      "op": "POP"
    },
    "5026": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5035": {
      "op": "DUP2"
    },
    "5036": {
      "op": "GT"
    },
    "5037": {
      "op": "ISZERO"
    },
    "5038": {
      "op": "PUSH2",
      "value": "0x13B6"
    },
    "5041": {
      "op": "JUMPI"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5044": {
      "op": "DUP1"
    },
    "5045": {
      "op": "REVERT"
    },
    "5046": {
      "op": "JUMPDEST"
    },
    "5047": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "5050": {
      "op": "DUP9"
    },
    "5051": {
      "op": "DUP3"
    },
    "5052": {
      "op": "DUP10"
    },
    "5053": {
      "op": "ADD"
    },
    "5054": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5057": {
      "jump": "i",
      "op": "JUMP"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "SWAP5"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5064": {
      "op": "DUP7"
    },
    "5065": {
      "op": "ADD"
    },
    "5066": {
      "op": "MLOAD"
    },
    "5067": {
      "op": "SWAP3"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5071": {
      "op": "DUP7"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "op": "MLOAD"
    },
    "5074": {
      "op": "PUSH2",
      "value": "0x13DA"
    },
    "5077": {
      "op": "DUP2"
    },
    "5078": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "5081": {
      "jump": "i",
      "op": "JUMP"
    },
    "5082": {
      "op": "JUMPDEST"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5085": {
      "op": "DUP8"
    },
    "5086": {
      "op": "ADD"
    },
    "5087": {
      "op": "MLOAD"
    },
    "5088": {
      "op": "SWAP1"
    },
    "5089": {
      "op": "SWAP3"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "PUSH2",
      "value": "0x13EB"
    },
    "5094": {
      "op": "DUP2"
    },
    "5095": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "5098": {
      "jump": "i",
      "op": "JUMP"
    },
    "5099": {
      "op": "JUMPDEST"
    },
    "5100": {
      "op": "DUP1"
    },
    "5101": {
      "op": "SWAP2"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "op": "POP"
    },
    "5104": {
      "op": "SWAP3"
    },
    "5105": {
      "op": "SWAP6"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "SWAP3"
    },
    "5108": {
      "op": "SWAP6"
    },
    "5109": {
      "op": "SWAP1"
    },
    "5110": {
      "op": "SWAP4"
    },
    "5111": {
      "op": "POP"
    },
    "5112": {
      "jump": "o",
      "op": "JUMP"
    },
    "5113": {
      "op": "JUMPDEST"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5118": {
      "op": "DUP3"
    },
    "5119": {
      "op": "DUP5"
    },
    "5120": {
      "op": "SUB"
    },
    "5121": {
      "op": "SLT"
    },
    "5122": {
      "op": "ISZERO"
    },
    "5123": {
      "op": "PUSH2",
      "value": "0x140B"
    },
    "5126": {
      "op": "JUMPI"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5129": {
      "op": "DUP1"
    },
    "5130": {
      "op": "REVERT"
    },
    "5131": {
      "op": "JUMPDEST"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "MLOAD"
    },
    "5134": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5143": {
      "op": "DUP2"
    },
    "5144": {
      "op": "GT"
    },
    "5145": {
      "op": "ISZERO"
    },
    "5146": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5149": {
      "op": "JUMPI"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5152": {
      "op": "DUP1"
    },
    "5153": {
      "op": "REVERT"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "PUSH2",
      "value": "0x136E"
    },
    "5158": {
      "op": "DUP5"
    },
    "5159": {
      "op": "DUP3"
    },
    "5160": {
      "op": "DUP6"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "PUSH2",
      "value": "0x1329"
    },
    "5165": {
      "jump": "i",
      "op": "JUMP"
    },
    "5166": {
      "op": "JUMPDEST"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5171": {
      "op": "DUP3"
    },
    "5172": {
      "op": "DUP5"
    },
    "5173": {
      "op": "SUB"
    },
    "5174": {
      "op": "SLT"
    },
    "5175": {
      "op": "ISZERO"
    },
    "5176": {
      "op": "PUSH2",
      "value": "0x1440"
    },
    "5179": {
      "op": "JUMPI"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5182": {
      "op": "DUP1"
    },
    "5183": {
      "op": "REVERT"
    },
    "5184": {
      "op": "JUMPDEST"
    },
    "5185": {
      "op": "DUP2"
    },
    "5186": {
      "op": "MLOAD"
    },
    "5187": {
      "op": "PUSH2",
      "value": "0x118C"
    },
    "5190": {
      "op": "DUP2"
    },
    "5191": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "5194": {
      "jump": "i",
      "op": "JUMP"
    },
    "5195": {
      "op": "JUMPDEST"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5200": {
      "op": "DUP3"
    },
    "5201": {
      "op": "DUP5"
    },
    "5202": {
      "op": "SUB"
    },
    "5203": {
      "op": "SLT"
    },
    "5204": {
      "op": "ISZERO"
    },
    "5205": {
      "op": "PUSH2",
      "value": "0x145D"
    },
    "5208": {
      "op": "JUMPI"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5211": {
      "op": "DUP1"
    },
    "5212": {
      "op": "REVERT"
    },
    "5213": {
      "op": "JUMPDEST"
    },
    "5214": {
      "op": "DUP2"
    },
    "5215": {
      "op": "MLOAD"
    },
    "5216": {
      "op": "PUSH2",
      "value": "0x118C"
    },
    "5219": {
      "op": "DUP2"
    },
    "5220": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "5223": {
      "jump": "i",
      "op": "JUMP"
    },
    "5224": {
      "op": "JUMPDEST"
    },
    "5225": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5232": {
      "op": "SHL"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5235": {
      "op": "MSTORE"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5240": {
      "op": "MSTORE"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5245": {
      "op": "REVERT"
    },
    "5246": {
      "op": "JUMPDEST"
    },
    "5247": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5254": {
      "op": "SHL"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5257": {
      "op": "MSTORE"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5262": {
      "op": "MSTORE"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5267": {
      "op": "REVERT"
    },
    "5268": {
      "op": "JUMPDEST"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5273": {
      "op": "DUP3"
    },
    "5274": {
      "op": "AND"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5277": {
      "op": "DUP2"
    },
    "5278": {
      "op": "EQ"
    },
    "5279": {
      "op": "ISZERO"
    },
    "5280": {
      "op": "PUSH2",
      "value": "0x14AB"
    },
    "5283": {
      "op": "JUMPI"
    },
    "5284": {
      "op": "PUSH2",
      "value": "0x14AB"
    },
    "5287": {
      "op": "PUSH2",
      "value": "0x147E"
    },
    "5290": {
      "jump": "i",
      "op": "JUMP"
    },
    "5291": {
      "op": "JUMPDEST"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5294": {
      "op": "ADD"
    },
    "5295": {
      "op": "SWAP3"
    },
    "5296": {
      "op": "SWAP2"
    },
    "5297": {
      "op": "POP"
    },
    "5298": {
      "op": "POP"
    },
    "5299": {
      "jump": "o",
      "op": "JUMP"
    },
    "5300": {
      "op": "JUMPDEST"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5305": {
      "op": "NOT"
    },
    "5306": {
      "op": "DUP3"
    },
    "5307": {
      "op": "EQ"
    },
    "5308": {
      "op": "ISZERO"
    },
    "5309": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5312": {
      "op": "JUMPI"
    },
    "5313": {
      "op": "PUSH2",
      "value": "0x14C8"
    },
    "5316": {
      "op": "PUSH2",
      "value": "0x147E"
    },
    "5319": {
      "jump": "i",
      "op": "JUMP"
    },
    "5320": {
      "op": "JUMPDEST"
    },
    "5321": {
      "op": "POP"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "SWAP1"
    },
    "5326": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6d314c6f901b923efd47b12158b633fda3dcd600",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract ApiCLHouse {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msgh Signed message\n    /// @param _v V\n    /// @param _r R\n    /// @param _s S\n    /// @return sender The address of the signer\n    function RecoverSignerFromSignature(\n        bytes32  _msgh,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    )\n        public\n        pure\n        returns(\n            address sender\n        )\n    {\n        return ecrecover( _msgh, _v, _r, _s);\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isMember true if is member\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address payable _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isMember,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdMember( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strMember memory houseMember;\n\n        (   houseMember.walletAddr,\n            houseMember.name,\n            houseMember.balance,\n            houseMember.isMember,\n            houseMember.isManager ) = daoCLH.arrMembers( uid );\n\n        require( true == houseMember.isMember  , \"User is not a Member\" );\n\n        return (\n            houseMember.name,\n            houseMember.balance,\n            houseMember.isMember,\n            houseMember.isManager\n        );\n    }\n\n    /// @notice The list of all members address\n    /// @param _houseAddr address of the CLH\n    /// @return arrMembers array with list of members\n    function GetHouseUserList(\n        address payable _houseAddr\n    )\n        external\n        view\n        returns(\n            strMember[] memory arrMembers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint8 numActiveMembers = daoCLH.numActiveMembers( );\n        uint256 arrMembersLength = daoCLH.GetArrMembersLength();\n        strMember[] memory _arrMembers = new strMember[] ( numActiveMembers );\n\n        uint8 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrMembersLength ; uid++ ) {\n            strMember memory houseMember;\n\n            (   houseMember.walletAddr,\n                houseMember.name,\n                houseMember.balance,\n                houseMember.isMember,\n                houseMember.isManager ) = daoCLH.arrMembers( uid );\n\n            if( true == houseMember.isMember ){\n                _arrMembers[ index ] = houseMember;\n                index++;\n            }\n        }\n        return _arrMembers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return numActiveMembers Current members of a CLH\n    /// @return numManagerMembers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n    /// @return govRuleMaxActiveMembers Max of all members (including managers)\n    /// @return govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            uint8 numActiveMembers,\n            uint8 numManagerMembers,\n            uint8 govRuleApprovPercentage,\n            uint8 govRuleMaxActiveMembers,\n            uint8 govRuleMaxManagerMembers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.numActiveMembers(),\n            daoCLH.numManagerMembers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxActiveMembers(),\n            daoCLH.govRuleMaxManagerMembers()\n        );\n    }\n\n    function ValidateSingOffChainVote(\n        address _houseAddr,\n        address _voter,\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    ) \n      external view\n      returns( bool )\n    {\n      uint256 chainId = block.chainid;\n\n      bytes32 eip712DomainHash = keccak256(\n          abi.encode(\n              keccak256(abi.encodePacked(\n                  \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n              )),\n              keccak256(\"CLHouse\"),\n              keccak256(\"0.0.10\"),\n              chainId,\n              _houseAddr\n          )\n      );\n\n      bytes32 hashStruct = keccak256(\n        abi.encode(\n              keccak256(abi.encodePacked(\n                \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\"\n              )),\n              _voter,\n              _propId,\n              _support,\n              keccak256(abi.encodePacked(_justification))\n          )\n      );\n\n      bytes32 singhash = keccak256(abi.encodePacked(\"\\x19\\x01\", eip712DomainHash, hashStruct));\n      \n      require( _signature.length == 65, \"Bad signature length\" );\n\n      bytes32 signR;\n      bytes32 signS;\n      uint8 signV;\n\n      assembly {\n        // first 32 bytes, after the length prefix\n        signR := mload( add( _signature, 32 ))\n        // second 32 bytes\n        signS := mload( add( _signature, 64 ))\n        // final byte (first byte of the next 32 bytes)\n        signV := byte( 0, mload( add( _signature, 96 )))\n      }\n\n      return _voter == ecrecover( singhash, signV, signR, signS );\n    }\n\n    function ValiSignInvt(\n        address _houseAddr,\n        address _signerWallet,\n        bool _acceptance,\n        bytes memory _signature\n    ) \n      external view\n      returns( bool )\n    {\n      uint256 chainId = block.chainid;\n\n      bytes32 eip712DomainHash = keccak256(\n          abi.encode(\n              keccak256(abi.encodePacked(\n                  \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n              )),\n              keccak256(\"CLHouse\"),\n              keccak256(\"0.0.10\"),\n              chainId,\n              _houseAddr\n          )\n      );\n\n      bytes32 hashStruct = keccak256(\n        abi.encode(\n              keccak256(abi.encodePacked(\n                \"strOffChainInvitation(address signerWallet,bool acceptance)\"\n              )),\n              _signerWallet,\n              _acceptance\n          )\n      );\n\n      bytes32 singhash = keccak256(abi.encodePacked(\"\\x19\\x01\", eip712DomainHash, hashStruct));\n      \n      require( _signature.length == 65, \"Bad signature length\" );\n\n      bytes32 signR;\n      bytes32 signS;\n      uint8 signV;\n\n      assembly {\n        // first 32 bytes, after the length prefix\n        signR := mload( add( _signature, 32 ))\n        // second 32 bytes\n        signS := mload( add( _signature, 64 ))\n        // final byte (first byte of the next 32 bytes)\n        signV := byte( 0, mload( add( _signature, 96 )))\n      }\n\n      return _signerWallet == ecrecover( singhash, signV, signR, signS );\n    }\n}",
  "sourceMap": "208:7561:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CLHouse/ApiCLHouse.sol",
  "type": "contract"
}