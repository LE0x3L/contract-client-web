{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "numActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "numManagerMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxManagerMembers",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isMember",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strMember[]",
          "name": "arrMembers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMember",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msgh",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "RecoverSignerFromSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "ValidateSingOffChainVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/CLHouse/ApiCLHouse.sol",
    "2": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/ApiCLHouse.sol",
    "exportedSymbols": {
      "ApiCLHouse": [
        363
      ],
      "DebugDLGTCLL": [
        391
      ],
      "ICLHouse": [
        708
      ],
      "IERC20": [
        786
      ],
      "InvalidGovernanceType": [
        385
      ],
      "__GOV_COMMITTEE__": [
        376
      ],
      "__GOV_DICTATORSHIP__": [
        371
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        381
      ],
      "assetsEvent": [
        405
      ],
      "memberEvent": [
        398
      ],
      "proposalEvent": [
        409
      ],
      "proposalType": [
        419
      ],
      "strDataAddMember": [
        464
      ],
      "strDataGovRules": [
        476
      ],
      "strDataTxAssets": [
        473
      ],
      "strMember": [
        430
      ],
      "strOffChainVote": [
        485
      ],
      "strProposal": [
        450
      ],
      "strVote": [
        457
      ]
    },
    "id": 364,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "contracts/CLHouse/ICLHouse.sol",
        "file": "./ICLHouse.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 709,
        "src": "58:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ApiCLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "84:124:1",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 363,
        "linearizedBaseContracts": [
          363
        ],
        "name": "ApiCLHouse",
        "nameLocation": "217:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "651:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18,
                        "name": "_msgh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "679:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 19,
                        "name": "_v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "686:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 20,
                        "name": "_r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "690:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 21,
                        "name": "_s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "694:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 17,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "668:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 16,
                  "id": 23,
                  "nodeType": "Return",
                  "src": "661:36:1"
                }
              ]
            },
            "documentation": {
              "id": 4,
              "nodeType": "StructuredDocumentation",
              "src": "235:201:1",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msgh Signed message\n @param _v V\n @param _r R\n @param _s S\n @return sender The address of the signer"
            },
            "functionSelector": "06bca808",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "RecoverSignerFromSignature",
            "nameLocation": "450:26:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "_msgh",
                  "nameLocation": "495:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "486:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_v",
                  "nameLocation": "516:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "510:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_r",
                  "nameLocation": "536:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "528:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "_s",
                  "nameLocation": "556:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "548:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:88:1"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "630:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "622:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:38:1"
            },
            "scope": 363,
            "src": "441:263:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1339:642:1",
              "statements": [
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1358:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1349:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$708",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 42,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 708,
                          "src": "1349:8:1"
                        },
                        "referencedDeclaration": 708,
                        "src": "1349:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$708",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1377:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 44,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "1367:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$708_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$708",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:40:1"
                },
                {
                  "assignments": [
                    49
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1408:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1400:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1400:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1434:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1414:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$708",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 598,
                      "src": "1414:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1400:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1467:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 57,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "1472:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1467:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1478:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1458:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:43:1"
                },
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "mutability": "mutable",
                      "name": "houseMember",
                      "nameLocation": "1529:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1512:28:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                        "typeString": "struct strMember"
                      },
                      "typeName": {
                        "id": 63,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62,
                          "name": "strMember",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 430,
                          "src": "1512:9:1"
                        },
                        "referencedDeclaration": 430,
                        "src": "1512:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strMember_$430_storage_ptr",
                          "typeString": "struct strMember"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:28:1"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 66,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1555:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 421,
                          "src": "1555:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 69,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1591:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 423,
                          "src": "1591:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 71,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1621:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 425,
                          "src": "1621:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 73,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1654:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 427,
                          "src": "1654:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 75,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1688:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 429,
                          "src": "1688:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 77,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1551:160:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "1733:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 78,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1714:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$708",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrMembers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 540,
                        "src": "1714:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1551:187:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:187:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1758:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 86,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1766:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 427,
                          "src": "1766:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1758:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206973206e6f742061204d656d626572",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12ee78a4e3256880c48ef33e849500f4527b78edcdc23ebd7414ee510854c8fc",
                          "typeString": "literal_string \"User is not a Member\""
                        },
                        "value": "User is not a Member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12ee78a4e3256880c48ef33e849500f4527b78edcdc23ebd7414ee510854c8fc",
                          "typeString": "literal_string \"User is not a Member\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1749:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1749:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:65:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 92,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1846:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 423,
                        "src": "1846:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 94,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1876:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 425,
                        "src": "1876:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 96,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1909:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 427,
                        "src": "1909:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 98,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1943:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 429,
                        "src": "1943:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 100,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1832:142:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 40,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1825:149:1"
                }
              ]
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "710:350:1",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isMember true if is member\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1074:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1120:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1104:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1148:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1140:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:71:1"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1239:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1225:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1262:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1257:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "isMember",
                  "nameLocation": "1288:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1283:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1315:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1310:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:123:1"
            },
            "scope": 363,
            "src": "1065:916:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2305:795:1",
              "statements": [
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2324:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2315:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$708",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 113,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 708,
                          "src": "2315:8:1"
                        },
                        "referencedDeclaration": 708,
                        "src": "2315:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$708",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2343:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "2333:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$708_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$708",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2315:40:1"
                },
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "numActiveMembers",
                      "nameLocation": "2372:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2366:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2366:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 122,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2391:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$708",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numActiveMembers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 505,
                      "src": "2391:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2391:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2366:51:1"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "arrMembersLength",
                      "nameLocation": "2435:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2427:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2427:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 128,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2454:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$708",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrMembersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 623,
                      "src": "2454:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2427:55:1"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "_arrMembers",
                      "nameLocation": "2511:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2492:30:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strMember_$430_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strMember[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 133,
                            "name": "strMember",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 430,
                            "src": "2492:9:1"
                          },
                          "referencedDeclaration": 430,
                          "src": "2492:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$430_storage_ptr",
                            "typeString": "struct strMember"
                          }
                        },
                        "id": 135,
                        "nodeType": "ArrayTypeName",
                        "src": "2492:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strMember_$430_storage_$dyn_storage_ptr",
                          "typeString": "struct strMember[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 141,
                        "name": "numActiveMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2543:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2525:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strMember_$430_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strMember memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 138,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 137,
                            "name": "strMember",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 430,
                            "src": "2529:9:1"
                          },
                          "referencedDeclaration": 430,
                          "src": "2529:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$430_storage_ptr",
                            "typeString": "struct strMember"
                          }
                        },
                        "id": 139,
                        "nodeType": "ArrayTypeName",
                        "src": "2529:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strMember_$430_storage_$dyn_storage_ptr",
                          "typeString": "struct strMember[]"
                        }
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2525:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$430_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strMember memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2492:69:1"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2578:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "2572:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2586:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:15:1"
                },
                {
                  "body": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "2655:411:1",
                    "statements": [
                      {
                        "assignments": [
                          160
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 160,
                            "mutability": "mutable",
                            "name": "houseMember",
                            "nameLocation": "2686:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 195,
                            "src": "2669:28:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                              "typeString": "struct strMember"
                            },
                            "typeName": {
                              "id": 159,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 158,
                                "name": "strMember",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 430,
                                "src": "2669:9:1"
                              },
                              "referencedDeclaration": 430,
                              "src": "2669:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strMember_$430_storage_ptr",
                                "typeString": "struct strMember"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 161,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2669:28:1"
                      },
                      {
                        "expression": {
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 162,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2716:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 421,
                                "src": "2716:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 165,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2756:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 166,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 423,
                                "src": "2756:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 167,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2790:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 168,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 425,
                                "src": "2790:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 169,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2827:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isMember",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 427,
                                "src": "2827:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 171,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "2865:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 172,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 429,
                                "src": "2865:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 173,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2712:176:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 176,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 149,
                                "src": "2910:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 174,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "2891:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$708",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrMembers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 540,
                              "src": "2891:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2891:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "2712:203:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "2712:203:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2934:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 181,
                              "name": "houseMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "2942:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                "typeString": "struct strMember memory"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 427,
                            "src": "2942:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2934:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 194,
                        "nodeType": "IfStatement",
                        "src": "2930:126:1",
                        "trueBody": {
                          "id": 193,
                          "nodeType": "Block",
                          "src": "2964:92:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 184,
                                    "name": "_arrMembers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 136,
                                    "src": "2982:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strMember_$430_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strMember memory[] memory"
                                    }
                                  },
                                  "id": 186,
                                  "indexExpression": {
                                    "id": 185,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145,
                                    "src": "2995:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2982:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 187,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "3005:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "src": "2982:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strMember_$430_memory_ptr",
                                  "typeString": "struct strMember memory"
                                }
                              },
                              "id": 189,
                              "nodeType": "ExpressionStatement",
                              "src": "2982:34:1"
                            },
                            {
                              "expression": {
                                "id": 191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3034:7:1",
                                "subExpression": {
                                  "id": 190,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "3034:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 192,
                              "nodeType": "ExpressionStatement",
                              "src": "3034:7:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 152,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2622:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 153,
                      "name": "arrMembersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "2628:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2622:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 196,
                  "initializationExpression": {
                    "assignments": [
                      149
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2612:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "2604:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2604:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2618:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2604:15:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2647:5:1",
                      "subExpression": {
                        "id": 155,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2647:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 157,
                    "nodeType": "ExpressionStatement",
                    "src": "2647:5:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2599:467:1"
                },
                {
                  "expression": {
                    "id": 197,
                    "name": "_arrMembers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 136,
                    "src": "3082:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$430_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strMember memory[] memory"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "3075:18:1"
                }
              ]
            },
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "1987:142:1",
              "text": "@notice The list of all members address\n @param _houseAddr address of the CLH\n @return arrMembers array with list of members"
            },
            "functionSelector": "b698be8d",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2143:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2185:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2169:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2159:42:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "arrMembers",
                  "nameLocation": "2280:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2261:29:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strMember_$430_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strMember[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 109,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 108,
                        "name": "strMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 430,
                        "src": "2261:9:1"
                      },
                      "referencedDeclaration": 430,
                      "src": "2261:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strMember_$430_storage_ptr",
                        "typeString": "struct strMember"
                      }
                    },
                    "id": 110,
                    "nodeType": "ArrayTypeName",
                    "src": "2261:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$430_storage_$dyn_storage_ptr",
                      "typeString": "struct strMember[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:53:1"
            },
            "scope": 363,
            "src": "2134:966:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "4193:415:1",
              "statements": [
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4212:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "4203:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$708",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 222,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 708,
                          "src": "4203:8:1"
                        },
                        "referencedDeclaration": 708,
                        "src": "4203:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$708",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 226,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "4231:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 225,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "4221:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$708_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$708",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4203:40:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 229,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 495,
                          "src": "4274:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4274:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 232,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4307:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 500,
                          "src": "4307:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4307:31:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 235,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4352:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 490,
                          "src": "4352:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4352:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 238,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4387:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numActiveMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 505,
                          "src": "4387:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4387:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 241,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4426:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagerMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 510,
                          "src": "4426:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4426:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 244,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4466:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 515,
                          "src": "4466:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4466:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 247,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4512:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxActiveMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 520,
                          "src": "4512:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4512:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 250,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4558:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$708",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagerMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 525,
                          "src": "4558:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4558:33:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 253,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4260:341:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(string memory,bytes32,bool,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 221,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "4254:347:1"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "3106:644:1",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return numActiveMembers Current members of a CLH\n @return numManagerMembers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n @return govRuleMaxActiveMembers Max of all members (including managers)\n @return govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "3764:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "3800:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3792:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3782:34:1"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "3890:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3876:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "3922:22:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3914:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "3963:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3958:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "numActiveMembers",
                  "nameLocation": "3995:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3989:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "numManagerMembers",
                  "nameLocation": "4031:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4025:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4068:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4062:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "govRuleMaxActiveMembers",
                  "nameLocation": "4111:23:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4105:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagerMembers",
                  "nameLocation": "4154:24:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4148:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3862:326:1"
            },
            "scope": 363,
            "src": "3755:853:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "4869:1348:1",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "4885:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "4877:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4877:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "expression": {
                      "id": 275,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4895:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "4895:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4877:31:1"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "eip712DomainHash",
                      "nameLocation": "4925:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "4917:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4917:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 299,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                    "id": 286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5037:84:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    },
                                    "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 284,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5001:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5001:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5001:136:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 283,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4991:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4991:147:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "434c486f757365",
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5164:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                },
                                "value": "CLHouse"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                }
                              ],
                              "id": 289,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5154:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5154:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "302e302e3130",
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5200:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                },
                                "value": "0.0.10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                }
                              ],
                              "id": 292,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5190:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5190:19:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 295,
                            "name": "chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "5225:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 296,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "5248:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 281,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4965:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4965:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4965:305:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 280,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4944:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4944:334:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4917:361:1"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "hashStruct",
                      "nameLocation": "5295:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5287:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5287:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 322,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "7374724f6666436861696e566f7465286164647265737320766f7465722c75696e743235362070726f7049642c626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6e29",
                                    "id": 308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5397:81:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_29db90f499fc17d858adf930fec9986f376f0ba9b76d35b25f1db7afb7f4b60c",
                                      "typeString": "literal_string \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\""
                                    },
                                    "value": "strOffChainVote(address voter,uint256 propId,bool support,string justification)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_29db90f499fc17d858adf930fec9986f376f0ba9b76d35b25f1db7afb7f4b60c",
                                      "typeString": "literal_string \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 306,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5363:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5363:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5363:131:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 305,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5353:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5353:142:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 311,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "5511:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 312,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "5533:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 313,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "5556:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 317,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 266,
                                    "src": "5607:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 315,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5590:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5590:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5590:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 314,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5580:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5580:43:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 303,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5327:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5327:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5327:308:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 302,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5308:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:335:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5287:356:1"
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "5660:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5652:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5652:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5694:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 329,
                            "name": "eip712DomainHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "5706:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 330,
                            "name": "hashStruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "5724:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 326,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5677:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5677:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5677:58:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 325,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5667:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5667:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5652:84:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 335,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "5760:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5760:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5781:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "5760:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5785:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5751:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:58:1"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "5826:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5818:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5818:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5818:9:1"
                },
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "5843:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5835:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5835:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5835:9:1"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "5858:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 361,
                      "src": "5852:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5852:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5852:7:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5877:282:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5938:34:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "5955:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5967:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5950:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5950:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5943:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5943:29:1"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "5938:1:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6008:34:1",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "6025:10:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6037:2:1",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6020:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6020:21:1"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6013:5:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6013:29:1"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "6008:1:1"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6107:44:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6118:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "6133:10:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6145:2:1",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6128:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6128:21:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6121:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6121:29:1"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "6112:4:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6112:39:1"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "6107:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 268,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5955:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 268,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6025:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 268,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6133:10:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 343,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5938:1:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 346,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6008:1:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 349,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6107:1:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 351,
                  "nodeType": "InlineAssembly",
                  "src": "5868:291:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 352,
                      "name": "_voter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "6174:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 354,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "6195:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 355,
                          "name": "v",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "6201:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 356,
                          "name": "r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "6204:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 357,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "6207:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 353,
                        "name": "ecrecover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -6,
                        "src": "6184:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6184:26:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6174:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 272,
                  "id": 360,
                  "nodeType": "Return",
                  "src": "6167:43:1"
                }
              ]
            },
            "functionSelector": "2eeb1bb1",
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ValidateSingOffChainVote",
            "nameLocation": "4623:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4665:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4657:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "4693:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4685:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "4714:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4709:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4709:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "4736:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4731:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "4768:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4754:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4805:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4792:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4647:174:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "4858:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4858:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4856:8:1"
            },
            "scope": 363,
            "src": "4614:1603:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 364,
        "src": "208:6011:1",
        "usedErrors": []
      }
    ],
    "src": "32:6187:1"
  },
  "bytecode": "",
  "bytecodeSha1": "e3bd7e39e10ccde6df0a78b1e5cb94b37f0f2aeb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ApiCLHouse",
  "coverageMap": {
    "branches": {
      "1": {
        "ApiCLHouse.GetHouseUserList": {
          "16": [
            2934,
            2962,
            false
          ]
        },
        "ApiCLHouse.GetUserInfoByAddress": {
          "14": [
            1467,
            1475,
            true
          ],
          "15": [
            1758,
            1786,
            true
          ]
        },
        "ApiCLHouse.ValidateSingOffChainVote": {
          "13": [
            5760,
            5783,
            true
          ]
        }
      },
      "2": {}
    },
    "statements": {
      "1": {
        "ApiCLHouse.GetHouseProperties": {
          "7": [
            4254,
            4601
          ]
        },
        "ApiCLHouse.GetHouseUserList": {
          "8": [
            2712,
            2915
          ],
          "9": [
            2982,
            3016
          ],
          "10": [
            3034,
            3041
          ],
          "11": [
            2647,
            2652
          ],
          "12": [
            3075,
            3093
          ]
        },
        "ApiCLHouse.GetUserInfoByAddress": {
          "3": [
            1458,
            1501
          ],
          "4": [
            1551,
            1738
          ],
          "5": [
            1749,
            1814
          ],
          "6": [
            1825,
            1974
          ]
        },
        "ApiCLHouse.RecoverSignerFromSignature": {
          "0": [
            661,
            697
          ]
        },
        "ApiCLHouse.ValidateSingOffChainVote": {
          "1": [
            5751,
            5809
          ],
          "2": [
            6167,
            6210
          ]
        }
      },
      "2": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806306bca8081461005c5780632eeb1bb11461008c57806386abd826146100af5780638750bc3e146100d2578063b698be8d146100f9575b600080fd5b61006f61006a366004610c4c565b610119565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a366004610d71565b610181565b6040519015158152602001610083565b6100c26100bd366004610e15565b6104be565b6040516100839493929190610eaa565b6100e56100e0366004610edb565b61068a565b604051610083989796959493929190610eff565b61010c610107366004610edb565b6109cb565b6040516100839190610f52565b6040805160008082526020820180845287905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561016d573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b60008046905060006040516020016101fd907f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b60408051601f198184030181528282528051602091820120908301527f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875908201527f07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c646060820152608081018390526001600160a01b038a1660a082015260c0016040516020818303038152906040528051906020012090506000604051602001610308907f7374724f6666436861696e566f7465286164647265737320766f7465722c756981527f6e743235362070726f7049642c626f6f6c20737570706f72742c737472696e6760208201526e206a757374696669636174696f6e2960881b6040820152604f0190565b60405160208183030381529060405280519060200120898989896040516020016103329190610ff6565b604051602081830303815290604052805190602001206040516020016103859594939291909485526001600160a01b03939093166020850152604084019190915215156060830152608082015260a00190565b604051602081830303815290604052805190602001209050600082826040516020016103c892919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050855160411461042d5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b6020868101516040808901516060808b015183516000808252968101808652889052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa15801561048d573d6000803e3d6000fd5b505050602060405103516001600160a01b03168d6001600160a01b0316149750505050505050509695505050505050565b6040516309c57df760e01b81526001600160a01b03828116600483015260609160009182918291879183918316906309c57df790602401602060405180830381865afa158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190611012565b90508061057b5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b6044820152606401610424565b610583610bfe565b604051638532cbf760e01b8152600481018390526001600160a01b03841690638532cbf790602401600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190611078565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146106635760405162461bcd60e51b81526020600482015260146024820152732ab9b2b91034b9903737ba10309026b2b6b132b960611b6044820152606401610424565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156106d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070191908101906110fb565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190611012565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c59190611130565b836001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610803573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610827919061114d565b846001600160a01b0316638668eafc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610889919061114d565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb919061114d565b866001600160a01b031663ab44997b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d919061114d565b876001600160a01b03166305fe66636040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af919061114d565b9850985098509850985098509850985050919395975091939597565b606060008290506000816001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a36919061114d565b90506000826001600160a01b031663824c88da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190611012565b905060008260ff1667ffffffffffffffff811115610abc57610abc610cac565b604051908082528060200260200182016040528015610af557816020015b610ae2610bfe565b815260200190600190039081610ada5790505b509050600060015b83811015610bf257610b0d610bfe565b604051638532cbf760e01b8152600481018390526001600160a01b03881690638532cbf790602401600060405180830381865afa158015610b52573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7a9190810190611078565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011415610bdf5780848460ff1681518110610bc557610bc561116a565b60200260200101819052508280610bdb90611196565b9350505b5080610bea816111b6565b915050610afd565b50909695505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b60ff81168114610c4957600080fd5b50565b60008060008060808587031215610c6257600080fd5b843593506020850135610c7481610c3a565b93969395505050506040820135916060013590565b6001600160a01b0381168114610c4957600080fd5b8015158114610c4957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ceb57610ceb610cac565b604052919050565b600067ffffffffffffffff821115610d0d57610d0d610cac565b50601f01601f191660200190565b600082601f830112610d2c57600080fd5b8135610d3f610d3a82610cf3565b610cc2565b818152846020838601011115610d5457600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215610d8a57600080fd5b8635610d9581610c89565b95506020870135610da581610c89565b9450604087013593506060870135610dbc81610c9e565b9250608087013567ffffffffffffffff80821115610dd957600080fd5b610de58a838b01610d1b565b935060a0890135915080821115610dfb57600080fd5b50610e0889828a01610d1b565b9150509295509295509295565b60008060408385031215610e2857600080fd5b8235610e3381610c89565b91506020830135610e4381610c89565b809150509250929050565b60005b83811015610e69578181015183820152602001610e51565b83811115610e78576000848401525b50505050565b60008151808452610e96816020860160208601610e4e565b601f01601f19169290920160200192915050565b608081526000610ebd6080830187610e7e565b60208301959095525091151560408301521515606090910152919050565b600060208284031215610eed57600080fd5b8135610ef881610c89565b9392505050565b6000610100808352610f138184018c610e7e565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610fe857888303603f19018552815180516001600160a01b031684528781015160a089860181905290610fb282870182610e7e565b838a0151878b01526060808501511515908801526080938401511515939096019290925250509386019390860190600101610f79565b509098975050505050505050565b60008251611008818460208701610e4e565b9190910192915050565b60006020828403121561102457600080fd5b5051919050565b600082601f83011261103c57600080fd5b815161104a610d3a82610cf3565b81815284602083860101111561105f57600080fd5b611070826020830160208701610e4e565b949350505050565b600080600080600060a0868803121561109057600080fd5b855161109b81610c89565b602087015190955067ffffffffffffffff8111156110b857600080fd5b6110c48882890161102b565b9450506040860151925060608601516110dc81610c9e565b60808701519092506110ed81610c9e565b809150509295509295909350565b60006020828403121561110d57600080fd5b815167ffffffffffffffff81111561112457600080fd5b6110708482850161102b565b60006020828403121561114257600080fd5b8151610ef881610c9e565b60006020828403121561115f57600080fd5b8151610ef881610c3a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156111ad576111ad611180565b60010192915050565b60006000198214156111ca576111ca611180565b506001019056fea26469706673582212200758e08f4a70edacf4b3d0c5f89540d14b9ebf30060c5e6ec6c011f1b3913b2a64736f6c634300080c0033",
  "deployedSourceMap": "208:6011:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:263;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;750:32:3;;;732:51;;720:2;705:18;441:263:1;;;;;;;;4614:1603;;;;;;:::i;:::-;;:::i;:::-;;;3320:14:3;;3313:22;3295:41;;3283:2;3268:18;4614:1603:1;3155:187:3;1065:916:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3755:853::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2134:966::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;441:263::-;668:29;;;622:14;668:29;;;;;;;;;7640:25:3;;;7713:4;7701:17;;7681:18;;;7674:45;;;;7735:18;;;7728:34;;;7778:18;;;7771:34;;;668:29:1;;7612:19:3;;668:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;668:29:1;;-1:-1:-1;;668:29:1;;;441:263;-1:-1:-1;;;;;;441:263:1:o;4614:1603::-;4858:4;4877:15;4895:13;4877:31;;4917:24;5001:136;;;;;;8030:34:3;8018:47;;8095:34;8090:2;8081:12;;8074:56;-1:-1:-1;;;8155:2:3;8146:12;;8139:42;8206:2;8197:12;;7816:399;5001:136:1;;;;-1:-1:-1;;5001:136:1;;;;;;;;;4991:147;;5001:136;4991:147;;;;4965:305;;;8479:25:3;5154:20:1;8520:18:3;;;8513:34;5190:19:1;8563:18:3;;;8556:34;8606:18;;;8599:34;;;-1:-1:-1;;;;;8670:32:3;;8649:19;;;8642:61;8451:19;;4965:305:1;;;;;;;;;;;;4944:334;;;;;;4917:361;;5287:18;5363:131;;;;;;8928:34:3;8916:47;;8993:34;8988:2;8979:12;;8972:56;-1:-1:-1;;;9053:2:3;9044:12;;9037:39;9101:2;9092:12;;8714:396;5363:131:1;;;;;;;;;;;;;5353:142;;;;;;5511:6;5533:7;5556:8;5607:14;5590:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;5580:43;;;;;;5327:308;;;;;;;;;;;9649:25:3;;;-1:-1:-1;;;;;9710:32:3;;;;9705:2;9690:18;;9683:60;9774:2;9759:18;;9752:34;;;;9829:14;9822:22;9817:2;9802:18;;9795:50;9876:3;9861:19;;9854:35;9636:3;9621:19;;9396:499;5327:308:1;;;;;;;;;;;;;5308:335;;;;;;5287:356;;5652:12;5706:16;5724:10;5677:58;;;;;;;;-1:-1:-1;;;10158:27:3;;10210:1;10201:11;;10194:27;;;;10246:2;10237:12;;10230:28;10283:2;10274:12;;9900:392;5677:58:1;;;;;;;;;;;;;5667:69;;;;;;5652:84;;5760:10;:17;5781:2;5760:23;5751:58;;;;-1:-1:-1;;;5751:58:1;;10499:2:3;5751:58:1;;;10481:21:3;10538:2;10518:18;;;10511:30;-1:-1:-1;;;10557:18:3;;;10550:50;10617:18;;5751:58:1;;;;;;;;;5967:2;5950:21;;;5943:29;6037:2;6020:21;;;6013:29;6145:2;6128:21;;;6121:29;6184:26;;5818:9;6184:26;;;;;;;;;7640:25:3;;;6112:39:1;;7681:18:3;;;7674:45;;;7735:18;;7728:34;;;7778:18;;;7771:34;;;5943:29:1;;6184:26;;7612:19:3;;6184:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6174:36:1;:6;-1:-1:-1;;;;;6174:36:1;;6167:43;;;;;;;;;4614:1603;;;;;;;;:::o;1065:916::-;1414:33;;-1:-1:-1;;;1414:33:1;;-1:-1:-1;;;;;750:32:3;;;1414:33:1;;;732:51:3;1225:18:1;;1257:12;;;;;;1377:10;;1257:12;;1414:18;;;;;705::3;;1414:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1400:47;-1:-1:-1;1467:8:1;1458:43;;;;-1:-1:-1;;;1458:43:1;;11037:2:3;1458:43:1;;;11019:21:3;11076:2;11056:18;;;11049:30;-1:-1:-1;;;11095:18:3;;;11088:49;11154:18;;1458:43:1;10835:343:3;1458:43:1;1512:28;;:::i;:::-;1714:24;;-1:-1:-1;;;1714:24:1;;;;;11329:25:3;;;-1:-1:-1;;;;;1714:17:1;;;;;11302:18:3;;1714:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1714:24:1;;;;;;;;;;;;:::i;:::-;1551:187;;1688:21;;;1551:187;;;1654:20;;;1551:187;;;1621:19;;;1551:187;;;;1591:16;;;1551:187;;;;-1:-1:-1;;;;;1551:187:1;;;;;1758:4;:28;1749:65;;;;-1:-1:-1;;;1749:65:1;;12791:2:3;1749:65:1;;;12773:21:3;12830:2;12810:18;;;12803:30;-1:-1:-1;;;12849:18:3;;;12842:50;12909:18;;1749:65:1;12589:344:3;1749:65:1;1846:16;;;;1876:19;;;;1909:20;;;;1943:21;;;;;1846:16;;1876:19;;-1:-1:-1;1909:20:1;;-1:-1:-1;1943:21:1;-1:-1:-1;1065:916:1;-1:-1:-1;;;;;1065:916:1:o;3755:853::-;3876:24;3914:30;3958:17;3989:22;4025:23;4062:29;4105;4148:30;4203:15;4231:10;4203:40;;4274:6;-1:-1:-1;;;;;4274:17:1;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4274:19:1;;;;;;;;;;;;:::i;:::-;4307:6;-1:-1:-1;;;;;4307:29:1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4352:6;-1:-1:-1;;;;;4352:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4387:6;-1:-1:-1;;;;;4387:23:1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4426:6;-1:-1:-1;;;;;4426:24:1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4466:6;-1:-1:-1;;;;;4466:30:1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4512:6;-1:-1:-1;;;;;4512:30:1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4558:6;-1:-1:-1;;;;;4558:31:1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4254:347;;;;;;;;;;;;;;;;;3755:853;;;;;;;;;:::o;2134:966::-;2261:29;2315:15;2343:10;2315:40;;2366:22;2391:6;-1:-1:-1;;;;;2391:23:1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2366:51;;2427:24;2454:6;-1:-1:-1;;;;;2454:26:1;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2427:55;;2492:30;2543:16;2525:36;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2492:69:1;-1:-1:-1;2572:11:1;2618:1;2599:467;2628:16;2622:3;:22;2599:467;;;2669:28;;:::i;:::-;2891:24;;-1:-1:-1;;;2891:24:1;;;;;11329:25:3;;;-1:-1:-1;;;;;2891:17:1;;;;;11302:18:3;;2891:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2891:24:1;;;;;;;;;;;;:::i;:::-;2712:203;;2865:21;;;2712:203;;;2827:20;;;2712:203;;;2790:19;;;2712:203;;;;2756:16;;;2712:203;;;;-1:-1:-1;;;;;2712:203:1;;;;;2934:4;:28;2930:126;;;3005:11;2982;2995:5;2982:20;;;;;;;;;;:::i;:::-;;;;;;:34;;;;3034:7;;;;;:::i;:::-;;;;2930:126;-1:-1:-1;2647:5:1;;;;:::i;:::-;;;;2599:467;;;-1:-1:-1;3082:11:1;;2134:966;-1:-1:-1;;;;;;2134:966:1:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:114:3:-;98:4;91:5;87:16;80:5;77:27;67:55;;118:1;115;108:12;67:55;14:114;:::o;133:448::-;217:6;225;233;241;294:3;282:9;273:7;269:23;265:33;262:53;;;311:1;308;301:12;262:53;347:9;334:23;324:33;;407:2;396:9;392:18;379:32;420:29;443:5;420:29;:::i;:::-;133:448;;468:5;;-1:-1:-1;;;;520:2:3;505:18;;492:32;;571:2;556:18;543:32;;133:448::o;794:131::-;-1:-1:-1;;;;;869:31:3;;859:42;;849:70;;915:1;912;905:12;930:118;1016:5;1009:13;1002:21;995:5;992:32;982:60;;1038:1;1035;1028:12;1053:127;1114:10;1109:3;1105:20;1102:1;1095:31;1145:4;1142:1;1135:15;1169:4;1166:1;1159:15;1185:275;1256:2;1250:9;1321:2;1302:13;;-1:-1:-1;;1298:27:3;1286:40;;1356:18;1341:34;;1377:22;;;1338:62;1335:88;;;1403:18;;:::i;:::-;1439:2;1432:22;1185:275;;-1:-1:-1;1185:275:3:o;1465:187::-;1514:4;1547:18;1539:6;1536:30;1533:56;;;1569:18;;:::i;:::-;-1:-1:-1;1635:2:3;1614:15;-1:-1:-1;;1610:29:3;1641:4;1606:40;;1465:187::o;1657:464::-;1700:5;1753:3;1746:4;1738:6;1734:17;1730:27;1720:55;;1771:1;1768;1761:12;1720:55;1807:6;1794:20;1838:49;1854:32;1883:2;1854:32;:::i;:::-;1838:49;:::i;:::-;1912:2;1903:7;1896:19;1958:3;1951:4;1946:2;1938:6;1934:15;1930:26;1927:35;1924:55;;;1975:1;1972;1965:12;1924:55;2040:2;2033:4;2025:6;2021:17;2014:4;2005:7;2001:18;1988:55;2088:1;2063:16;;;2081:4;2059:27;2052:38;;;;2067:7;1657:464;-1:-1:-1;;;1657:464:3:o;2126:1024::-;2246:6;2254;2262;2270;2278;2286;2339:3;2327:9;2318:7;2314:23;2310:33;2307:53;;;2356:1;2353;2346:12;2307:53;2395:9;2382:23;2414:31;2439:5;2414:31;:::i;:::-;2464:5;-1:-1:-1;2521:2:3;2506:18;;2493:32;2534:33;2493:32;2534:33;:::i;:::-;2586:7;-1:-1:-1;2640:2:3;2625:18;;2612:32;;-1:-1:-1;2696:2:3;2681:18;;2668:32;2709:30;2668:32;2709:30;:::i;:::-;2758:7;-1:-1:-1;2816:3:3;2801:19;;2788:33;2840:18;2870:14;;;2867:34;;;2897:1;2894;2887:12;2867:34;2920:50;2962:7;2953:6;2942:9;2938:22;2920:50;:::i;:::-;2910:60;;3023:3;3012:9;3008:19;2995:33;2979:49;;3053:2;3043:8;3040:16;3037:36;;;3069:1;3066;3059:12;3037:36;;3092:52;3136:7;3125:8;3114:9;3110:24;3092:52;:::i;:::-;3082:62;;;2126:1024;;;;;;;;:::o;3347:396::-;3423:6;3431;3484:2;3472:9;3463:7;3459:23;3455:32;3452:52;;;3500:1;3497;3490:12;3452:52;3539:9;3526:23;3558:31;3583:5;3558:31;:::i;:::-;3608:5;-1:-1:-1;3665:2:3;3650:18;;3637:32;3678:33;3637:32;3678:33;:::i;:::-;3730:7;3720:17;;;3347:396;;;;;:::o;3748:258::-;3820:1;3830:113;3844:6;3841:1;3838:13;3830:113;;;3920:11;;;3914:18;3901:11;;;3894:39;3866:2;3859:10;3830:113;;;3961:6;3958:1;3955:13;3952:48;;;3996:1;3987:6;3982:3;3978:16;3971:27;3952:48;;3748:258;;;:::o;4011:::-;4053:3;4091:5;4085:12;4118:6;4113:3;4106:19;4134:63;4190:6;4183:4;4178:3;4174:14;4167:4;4160:5;4156:16;4134:63;:::i;:::-;4251:2;4230:15;-1:-1:-1;;4226:29:3;4217:39;;;;4258:4;4213:50;;4011:258;-1:-1:-1;;4011:258:3:o;4274:455::-;4495:3;4484:9;4477:22;4458:4;4516:46;4557:3;4546:9;4542:19;4534:6;4516:46;:::i;:::-;4593:2;4578:18;;4571:34;;;;-1:-1:-1;4648:14:3;;4641:22;4636:2;4621:18;;4614:50;4707:14;4700:22;4695:2;4680:18;;;4673:50;4508:54;4274:455;-1:-1:-1;4274:455:3:o;4734:247::-;4793:6;4846:2;4834:9;4825:7;4821:23;4817:32;4814:52;;;4862:1;4859;4852:12;4814:52;4901:9;4888:23;4920:31;4945:5;4920:31;:::i;:::-;4970:5;4734:247;-1:-1:-1;;;4734:247:3:o;4986:788::-;5268:4;5297:3;5327:2;5316:9;5309:21;5347:45;5388:2;5377:9;5373:18;5365:6;5347:45;:::i;:::-;5423:2;5408:18;;5401:34;;;;-1:-1:-1;;5478:14:3;;5471:22;5466:2;5451:18;;5444:50;5542:4;5530:17;;;5525:2;5510:18;;5503:45;5585:17;;;5579:3;5564:19;;5557:46;5640:17;;;5634:3;5619:19;;5612:46;5695:17;;5689:3;5674:19;;5667:46;5750:17;5744:3;5729:19;;;5722:46;5339:53;4986:788;-1:-1:-1;4986:788:3:o;6039:1369::-;6233:4;6262:2;6302;6291:9;6287:18;6332:2;6321:9;6314:21;6355:6;6390;6384:13;6421:6;6413;6406:22;6447:2;6437:12;;6480:2;6469:9;6465:18;6458:25;;6542:2;6532:6;6529:1;6525:14;6514:9;6510:30;6506:39;6580:2;6572:6;6568:15;6601:1;6611:768;6625:6;6622:1;6619:13;6611:768;;;6690:22;;;-1:-1:-1;;6686:36:3;6674:49;;6746:13;;6818:9;;-1:-1:-1;;;;;6814:35:3;6799:51;;6889:11;;;6883:18;6782:4;6921:15;;;6914:27;;;6782:4;6968:48;7000:15;;;6883:18;6968:48;:::i;:::-;7059:11;;;7053:18;7036:15;;;7029:43;7095:4;7156:11;;;7150:18;7143:26;7136:34;7119:15;;;7112:59;7194:4;7255:11;;;7249:18;7242:26;7235:34;7218:15;;;;7211:59;;;;-1:-1:-1;;7357:12:3;;;;7322:15;;;;6647:1;6640:9;6611:768;;;-1:-1:-1;7396:6:3;;6039:1369;-1:-1:-1;;;;;;;;6039:1369:3:o;9115:276::-;9246:3;9284:6;9278:13;9300:53;9346:6;9341:3;9334:4;9326:6;9322:17;9300:53;:::i;:::-;9369:16;;;;;9115:276;-1:-1:-1;;9115:276:3:o;10646:184::-;10716:6;10769:2;10757:9;10748:7;10744:23;10740:32;10737:52;;;10785:1;10782;10775:12;10737:52;-1:-1:-1;10808:16:3;;10646:184;-1:-1:-1;10646:184:3:o;11365:430::-;11419:5;11472:3;11465:4;11457:6;11453:17;11449:27;11439:55;;11490:1;11487;11480:12;11439:55;11519:6;11513:13;11550:49;11566:32;11595:2;11566:32;:::i;11550:49::-;11624:2;11615:7;11608:19;11670:3;11663:4;11658:2;11650:6;11646:15;11642:26;11639:35;11636:55;;;11687:1;11684;11677:12;11636:55;11700:64;11761:2;11754:4;11745:7;11741:18;11734:4;11726:6;11722:17;11700:64;:::i;:::-;11782:7;11365:430;-1:-1:-1;;;;11365:430:3:o;11800:784::-;11910:6;11918;11926;11934;11942;11995:3;11983:9;11974:7;11970:23;11966:33;11963:53;;;12012:1;12009;12002:12;11963:53;12044:9;12038:16;12063:31;12088:5;12063:31;:::i;:::-;12162:2;12147:18;;12141:25;12113:5;;-1:-1:-1;12189:18:3;12178:30;;12175:50;;;12221:1;12218;12211:12;12175:50;12244:61;12297:7;12288:6;12277:9;12273:22;12244:61;:::i;:::-;12234:71;;;12345:2;12334:9;12330:18;12324:25;12314:35;;12394:2;12383:9;12379:18;12373:25;12407:30;12429:7;12407:30;:::i;:::-;12508:3;12493:19;;12487:26;12456:7;;-1:-1:-1;12522:30:3;12487:26;12522:30;:::i;:::-;12571:7;12561:17;;;11800:784;;;;;;;;:::o;12938:337::-;13018:6;13071:2;13059:9;13050:7;13046:23;13042:32;13039:52;;;13087:1;13084;13077:12;13039:52;13120:9;13114:16;13153:18;13145:6;13142:30;13139:50;;;13185:1;13182;13175:12;13139:50;13208:61;13261:7;13252:6;13241:9;13237:22;13208:61;:::i;13469:245::-;13536:6;13589:2;13577:9;13568:7;13564:23;13560:32;13557:52;;;13605:1;13602;13595:12;13557:52;13637:9;13631:16;13656:28;13678:5;13656:28;:::i;13719:247::-;13787:6;13840:2;13828:9;13819:7;13815:23;13811:32;13808:52;;;13856:1;13853;13846:12;13808:52;13888:9;13882:16;13907:29;13930:5;13907:29;:::i;13971:127::-;14032:10;14027:3;14023:20;14020:1;14013:31;14063:4;14060:1;14053:15;14087:4;14084:1;14077:15;14103:127;14164:10;14159:3;14155:20;14152:1;14145:31;14195:4;14192:1;14185:15;14219:4;14216:1;14209:15;14235:175;14272:3;14316:4;14309:5;14305:16;14345:4;14336:7;14333:17;14330:43;;;14353:18;;:::i;:::-;14402:1;14389:15;;14235:175;-1:-1:-1;;14235:175:3:o;14415:135::-;14454:3;-1:-1:-1;;14475:17:3;;14472:43;;;14495:18;;:::i;:::-;-1:-1:-1;14542:1:3;14531:13;;14415:135::o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagerMembers`",
          "govRuleMaxActiveMembers": "Max of all members (including managers)",
          "govRuleMaxManagerMembers": "Max of manager member that CLH can accept (only for COMMITTEE )",
          "housePrivate": "True if is private",
          "numActiveMembers": "Current members of a CLH",
          "numManagerMembers": "Current managers of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all members address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrMembers": "array with list of members"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isMember": "true if is member",
          "name": "Nickname ot other user identificaction"
        }
      },
      "RecoverSignerFromSignature(bytes32,uint8,bytes32,bytes32)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msgh": "Signed message",
          "_r": "R",
          "_s": "S",
          "_v": "V"
        },
        "returns": {
          "sender": "The address of the signer"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    208,
    6219
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BCA808 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2EEB1BB1 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0xE5 PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDB JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDB JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP8 SWAP1 MSTORE PUSH1 0xFF DUP7 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FD SWAP1 PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE PUSH32 0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875 SWAP1 DUP3 ADD MSTORE PUSH32 0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x308 SWAP1 PUSH32 0x7374724F6666436861696E566F7465286164647265737320766F7465722C7569 DUP2 MSTORE PUSH32 0x6E743235362070726F7049642C626F6F6C20737570706F72742C737472696E67 PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x206A757374696669636174696F6E29 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4F ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x385 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP6 MLOAD PUSH1 0x41 EQ PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP7 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP10 ADD MLOAD PUSH1 0x60 DUP1 DUP12 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP9 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 POP POP POP POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9C57DF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x9C57DF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x583 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8532CBF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x8532CBF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x5F0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1078 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B91034B9903737BA10309026B2B6B132B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x701 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10FB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9BCA21 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x803 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8668EAFC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB44997B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FE6663 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9BCA21 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x824C88DA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1012 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABC PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF5 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAE2 PUSH2 0xBFE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xADA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0xB0D PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8532CBF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x8532CBF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB7A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1078 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0xBDF JUMPI DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0xBDB SWAP1 PUSH2 0x1196 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0xBEA DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAFD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC74 DUP2 PUSH2 0xC3A JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCEB JUMPI PUSH2 0xCEB PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0D JUMPI PUSH2 0xD0D PUSH2 0xCAC JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD3F PUSH2 0xD3A DUP3 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xD95 DUP2 PUSH2 0xC89 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0xDA5 DUP2 PUSH2 0xC89 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0xDBC DUP2 PUSH2 0xC9E JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE5 DUP11 DUP4 DUP12 ADD PUSH2 0xD1B JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE08 DUP10 DUP3 DUP11 ADD PUSH2 0xD1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE33 DUP2 PUSH2 0xC89 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE43 DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE69 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE51 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE96 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEBD PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEF8 DUP2 PUSH2 0xC89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0xF13 DUP2 DUP5 ADD DUP13 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP SWAP6 ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xFF SWAP5 DUP6 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x80 DUP7 ADD MSTORE SWAP1 DUP4 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP3 AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE8 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0xFB2 DUP3 DUP8 ADD DUP3 PUSH2 0xE7E JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF79 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1008 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE4E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x103C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x104A PUSH2 0xD3A DUP3 PUSH2 0xCF3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1070 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE4E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x109B DUP2 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C4 DUP9 DUP3 DUP10 ADD PUSH2 0x102B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x10DC DUP2 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x10ED DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x110D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1070 DUP5 DUP3 DUP6 ADD PUSH2 0x102B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEF8 DUP2 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xEF8 DUP2 PUSH2 0xC3A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x11AD JUMPI PUSH2 0x11AD PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x11CA JUMPI PUSH2 0x11CA PUSH2 0x1180 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD PC 0xE0 DUP16 0x4A PUSH17 0xEDACF4B3D0C5F89540D14B9EBF30060C5E PUSH15 0xC6C011F1B3913B2A64736F6C634300 ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6BCA808"
    },
    "38": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2EEB1BB1"
    },
    "49": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "53": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x86ABD826"
    },
    "60": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAF"
    },
    "64": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8750BC3E"
    },
    "71": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD2"
    },
    "75": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB698BE8D"
    },
    "82": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF9"
    },
    "86": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        208,
        6219
      ],
      "op": "REVERT",
      "path": "1"
    },
    "92": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "93": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F"
    },
    "96": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A"
    },
    "99": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "100": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "102": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4C"
    },
    "105": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "jump": "i",
      "offset": [
        441,
        704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "106": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "107": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "110": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "jump": "i",
      "offset": [
        441,
        704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "111": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "112": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "114": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "121": {
      "op": "SHL"
    },
    "122": {
      "op": "SUB"
    },
    "123": {
      "op": "SWAP1"
    },
    "124": {
      "op": "SWAP2"
    },
    "125": {
      "op": "AND"
    },
    "126": {
      "op": "DUP2"
    },
    "127": {
      "op": "MSTORE"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "130": {
      "op": "ADD"
    },
    "131": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "132": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "134": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "135": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "136": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "137": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SUB",
      "path": "1"
    },
    "138": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "139": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "RETURN",
      "path": "1"
    },
    "140": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F"
    },
    "144": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A"
    },
    "147": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "148": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "150": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD71"
    },
    "153": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMP",
      "path": "1"
    },
    "154": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "155": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x181"
    },
    "158": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMP",
      "path": "1"
    },
    "159": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "160": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "162": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "163": {
      "op": "SWAP1"
    },
    "164": {
      "op": "ISZERO"
    },
    "165": {
      "op": "ISZERO"
    },
    "166": {
      "op": "DUP2"
    },
    "167": {
      "op": "MSTORE"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "170": {
      "op": "ADD"
    },
    "171": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83"
    },
    "174": {
      "op": "JUMP"
    },
    "175": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "176": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC2"
    },
    "179": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD"
    },
    "182": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "183": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "185": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE15"
    },
    "188": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "189": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "190": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BE"
    },
    "193": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "194": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "195": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "197": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "198": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83"
    },
    "201": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "202": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "203": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "204": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "205": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "206": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEAA"
    },
    "209": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "210": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "211": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE5"
    },
    "214": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0"
    },
    "217": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "218": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "220": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEDB"
    },
    "223": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "224": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "225": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x68A"
    },
    "228": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "229": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "230": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "232": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "233": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83"
    },
    "236": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "237": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "238": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "239": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "240": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "241": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "242": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "243": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "244": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "245": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEFF"
    },
    "248": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "249": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "250": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C"
    },
    "253": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x107"
    },
    "256": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "257": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "259": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEDB"
    },
    "262": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "263": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "264": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9CB"
    },
    "267": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "268": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "269": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "271": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "272": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83"
    },
    "275": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "276": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "277": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF52"
    },
    "280": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "281": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x40"
    },
    "284": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "285": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "286": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        622,
        636
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "288": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "289": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP3",
      "path": "1"
    },
    "290": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "291": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "293": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP3",
      "path": "1"
    },
    "294": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ADD",
      "path": "1"
    },
    "295": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "296": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP5",
      "path": "1"
    },
    "297": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "298": {
      "op": "DUP8"
    },
    "299": {
      "op": "SWAP1"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "303": {
      "op": "DUP7"
    },
    "304": {
      "op": "AND"
    },
    "305": {
      "op": "SWAP3"
    },
    "306": {
      "op": "DUP3"
    },
    "307": {
      "op": "ADD"
    },
    "308": {
      "op": "SWAP3"
    },
    "309": {
      "op": "SWAP1"
    },
    "310": {
      "op": "SWAP3"
    },
    "311": {
      "op": "MSTORE"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "ADD"
    },
    "316": {
      "op": "DUP5"
    },
    "317": {
      "op": "SWAP1"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "321": {
      "op": "DUP2"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "op": "DUP4"
    },
    "324": {
      "op": "SWAP1"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "328": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "ADD"
    },
    "332": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "334": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "336": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "337": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "339": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP2",
      "path": "1"
    },
    "340": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SUB",
      "path": "1"
    },
    "341": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "342": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "343": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP5",
      "path": "1"
    },
    "344": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SUB",
      "path": "1"
    },
    "345": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "346": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP6",
      "path": "1"
    },
    "347": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "GAS",
      "path": "1"
    },
    "348": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "349": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "350": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "351": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "352": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D"
    },
    "355": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "356": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "357": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "359": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "360": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "361": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "362": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "364": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "REVERT",
      "path": "1"
    },
    "365": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "366": {
      "op": "POP"
    },
    "367": {
      "op": "POP"
    },
    "368": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "370": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "373": {
      "op": "NOT"
    },
    "374": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "ADD",
      "path": "1"
    },
    "375": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "376": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        668,
        697
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "377": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "offset": [
        441,
        704
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "op": "POP"
    },
    "380": {
      "op": "POP"
    },
    "381": {
      "op": "POP"
    },
    "382": {
      "op": "POP"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "fn": "ApiCLHouse.RecoverSignerFromSignature",
      "jump": "o",
      "offset": [
        441,
        704
      ],
      "op": "JUMP",
      "path": "1"
    },
    "385": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "386": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4858,
        4862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "388": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4877,
        4892
      ],
      "op": "DUP1",
      "path": "1"
    },
    "389": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4895,
        4908
      ],
      "op": "CHAINID",
      "path": "1"
    },
    "390": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4877,
        4908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "391": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4877,
        4908
      ],
      "op": "POP",
      "path": "1"
    },
    "392": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4917,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "394": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "396": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "397": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "399": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "ADD",
      "path": "1"
    },
    "400": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FD"
    },
    "403": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "404": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "437": {
      "op": "DUP2"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "498": {
      "op": "SHL"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "501": {
      "op": "DUP3"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "SWAP1"
    },
    "508": {
      "op": "JUMP"
    },
    "509": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "510": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "512": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP1",
      "path": "1"
    },
    "513": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "516": {
      "op": "NOT"
    },
    "517": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "518": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP5",
      "path": "1"
    },
    "519": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "SUB",
      "path": "1"
    },
    "520": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "ADD",
      "path": "1"
    },
    "521": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP3",
      "path": "1"
    },
    "524": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "DUP3",
      "path": "1"
    },
    "525": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "526": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "DUP1",
      "path": "1"
    },
    "527": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "528": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5001,
        5137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "530": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "531": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "DUP3",
      "path": "1"
    },
    "532": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "ADD",
      "path": "1"
    },
    "533": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4991,
        5138
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "534": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "535": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP4",
      "path": "1"
    },
    "536": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "ADD",
      "path": "1"
    },
    "537": {
      "op": "MSTORE"
    },
    "538": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5154,
        5174
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875"
    },
    "571": {
      "op": "SWAP1"
    },
    "572": {
      "op": "DUP3"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5190,
        5209
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "ADD"
    },
    "612": {
      "op": "MSTORE"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "615": {
      "op": "DUP2"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "op": "DUP4"
    },
    "618": {
      "op": "SWAP1"
    },
    "619": {
      "op": "MSTORE"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "op": "SUB"
    },
    "628": {
      "op": "DUP11"
    },
    "629": {
      "op": "AND"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "DUP3"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "op": "MSTORE"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "640": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "641": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "643": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP2",
      "path": "1"
    },
    "644": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP4",
      "path": "1"
    },
    "645": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SUB",
      "path": "1"
    },
    "646": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SUB",
      "path": "1"
    },
    "647": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "DUP2",
      "path": "1"
    },
    "648": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "649": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "650": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "652": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4965,
        5270
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "653": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "DUP1",
      "path": "1"
    },
    "654": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "655": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "656": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "658": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "ADD",
      "path": "1"
    },
    "659": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4944,
        5278
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "660": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4917,
        5278
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "661": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4917,
        5278
      ],
      "op": "POP",
      "path": "1"
    },
    "662": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5287,
        5305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "664": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "666": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "667": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "669": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "ADD",
      "path": "1"
    },
    "670": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x308"
    },
    "673": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "674": {
      "op": "PUSH32",
      "value": "0x7374724F6666436861696E566F7465286164647265737320766F7465722C7569"
    },
    "707": {
      "op": "DUP2"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH32",
      "value": "0x6E743235362070726F7049642C626F6F6C20737570706F72742C737472696E67"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "744": {
      "op": "DUP3"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH15",
      "value": "0x206A757374696669636174696F6E29"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "765": {
      "op": "SHL"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "768": {
      "op": "DUP3"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "op": "MSTORE"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x4F"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "JUMP"
    },
    "776": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "777": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "779": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "780": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "782": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "783": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "DUP4",
      "path": "1"
    },
    "784": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SUB",
      "path": "1"
    },
    "785": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SUB",
      "path": "1"
    },
    "786": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "DUP2",
      "path": "1"
    },
    "787": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "788": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "789": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "791": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5363,
        5494
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "792": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "DUP1",
      "path": "1"
    },
    "793": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "794": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "795": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "797": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "ADD",
      "path": "1"
    },
    "798": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5353,
        5495
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "799": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5511,
        5517
      ],
      "op": "DUP10",
      "path": "1"
    },
    "800": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5533,
        5540
      ],
      "op": "DUP10",
      "path": "1"
    },
    "801": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5556,
        5564
      ],
      "op": "DUP10",
      "path": "1"
    },
    "802": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5607,
        5621
      ],
      "op": "DUP10",
      "path": "1"
    },
    "803": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "805": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "806": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "808": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "ADD",
      "path": "1"
    },
    "809": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "812": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "813": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "814": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF6"
    },
    "817": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "i",
      "offset": [
        5590,
        5622
      ],
      "op": "JUMP",
      "path": "1"
    },
    "818": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "819": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "821": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "822": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "824": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP2",
      "path": "1"
    },
    "825": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP4",
      "path": "1"
    },
    "826": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SUB",
      "path": "1"
    },
    "827": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SUB",
      "path": "1"
    },
    "828": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "DUP2",
      "path": "1"
    },
    "829": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "830": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "831": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "833": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5590,
        5622
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "834": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "835": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "836": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "837": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "839": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "ADD",
      "path": "1"
    },
    "840": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5580,
        5623
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "841": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "843": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "844": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "846": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "ADD",
      "path": "1"
    },
    "847": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x385"
    },
    "850": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "851": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "852": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "853": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "854": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "855": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "856": {
      "op": "SWAP5"
    },
    "857": {
      "op": "DUP6"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "SUB"
    },
    "867": {
      "op": "SWAP4"
    },
    "868": {
      "op": "SWAP1"
    },
    "869": {
      "op": "SWAP4"
    },
    "870": {
      "op": "AND"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "873": {
      "op": "DUP6"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "878": {
      "op": "DUP5"
    },
    "879": {
      "op": "ADD"
    },
    "880": {
      "op": "SWAP2"
    },
    "881": {
      "op": "SWAP1"
    },
    "882": {
      "op": "SWAP2"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "ISZERO"
    },
    "885": {
      "op": "ISZERO"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "888": {
      "op": "DUP4"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "MSTORE"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "op": "SWAP1"
    },
    "900": {
      "op": "JUMP"
    },
    "901": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "902": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "904": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "905": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "907": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "908": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "DUP4",
      "path": "1"
    },
    "909": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SUB",
      "path": "1"
    },
    "910": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SUB",
      "path": "1"
    },
    "911": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "912": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "913": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "914": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "916": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5327,
        5635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "917": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "DUP1",
      "path": "1"
    },
    "918": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "919": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "920": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "922": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "ADD",
      "path": "1"
    },
    "923": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5308,
        5643
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "924": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5287,
        5643
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "925": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5287,
        5643
      ],
      "op": "POP",
      "path": "1"
    },
    "926": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5652,
        5664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "928": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5706,
        5722
      ],
      "op": "DUP3",
      "path": "1"
    },
    "929": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5724,
        5734
      ],
      "op": "DUP3",
      "path": "1"
    },
    "930": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "932": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "933": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "935": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "ADD",
      "path": "1"
    },
    "936": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C8"
    },
    "939": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "940": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "941": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "942": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "op": "DUP2"
    },
    "949": {
      "op": "MSTORE"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "952": {
      "op": "DUP2"
    },
    "953": {
      "op": "ADD"
    },
    "954": {
      "op": "SWAP3"
    },
    "955": {
      "op": "SWAP1"
    },
    "956": {
      "op": "SWAP3"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "960": {
      "op": "DUP3"
    },
    "961": {
      "op": "ADD"
    },
    "962": {
      "op": "MSTORE"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "SWAP1"
    },
    "967": {
      "op": "JUMP"
    },
    "968": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "969": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "971": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "972": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "974": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "DUP2",
      "path": "1"
    },
    "975": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "DUP4",
      "path": "1"
    },
    "976": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "SUB",
      "path": "1"
    },
    "977": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "SUB",
      "path": "1"
    },
    "978": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "DUP2",
      "path": "1"
    },
    "979": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "980": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "981": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "983": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5677,
        5735
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "984": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5667,
        5736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "985": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5667,
        5736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "986": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5667,
        5736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "987": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5667,
        5736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "989": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5667,
        5736
      ],
      "op": "ADD",
      "path": "1"
    },
    "990": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5667,
        5736
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "991": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5652,
        5736
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "992": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5652,
        5736
      ],
      "op": "POP",
      "path": "1"
    },
    "993": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5760,
        5770
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 1
    },
    "994": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5760,
        5777
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "995": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5781,
        5783
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x41"
    },
    "997": {
      "branch": 13,
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5760,
        5783
      ],
      "op": "EQ",
      "path": "1"
    },
    "998": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42D"
    },
    "1001": {
      "branch": 13,
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1002": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1004": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1005": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1013": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1016": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1018": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1019": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "ADD",
      "path": "1"
    },
    "1020": {
      "op": "MSTORE"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1025": {
      "op": "DUP3"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "op": "MSTORE"
    },
    "1028": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1059": {
      "op": "ADD"
    },
    "1060": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1061": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1063": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1064": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1065": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1066": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "SUB",
      "path": "1"
    },
    "1067": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1068": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1069": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5751,
        5809
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1070": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5967,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1072": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5950,
        5971
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1073": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5950,
        5971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1074": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5950,
        5971
      ],
      "op": "ADD",
      "path": "1"
    },
    "1075": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5943,
        5972
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1076": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6037,
        6039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1078": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6020,
        6041
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1079": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6020,
        6041
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1080": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6020,
        6041
      ],
      "op": "ADD",
      "path": "1"
    },
    "1081": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6013,
        6042
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1082": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6145,
        6147
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1084": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6128,
        6149
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1085": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6128,
        6149
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1086": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6128,
        6149
      ],
      "op": "ADD",
      "path": "1"
    },
    "1087": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6121,
        6150
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1088": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 2
    },
    "1089": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1090": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5818,
        5827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1092": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1093": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1094": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1095": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1096": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1097": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "ADD",
      "path": "1"
    },
    "1098": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1099": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1100": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1101": {
      "op": "DUP9"
    },
    "1102": {
      "op": "SWAP1"
    },
    "1103": {
      "op": "MSTORE"
    },
    "1104": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6112,
        6151
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1105": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6112,
        6151
      ],
      "op": "BYTE",
      "path": "1"
    },
    "1106": {
      "op": "SWAP3"
    },
    "1107": {
      "op": "DUP6"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "DUP4"
    },
    "1110": {
      "op": "SWAP1"
    },
    "1111": {
      "op": "MSTORE"
    },
    "1112": {
      "op": "DUP5"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "DUP4"
    },
    "1115": {
      "op": "SWAP1"
    },
    "1116": {
      "op": "MSTORE"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1119": {
      "op": "DUP5"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "DUP2"
    },
    "1122": {
      "op": "SWAP1"
    },
    "1123": {
      "op": "MSTORE"
    },
    "1124": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5943,
        5972
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1125": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        5943,
        5972
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1126": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1128": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1134": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1136": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1137": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1139": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1140": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SUB",
      "path": "1"
    },
    "1141": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1142": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1143": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1144": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SUB",
      "path": "1"
    },
    "1145": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1146": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1147": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "GAS",
      "path": "1"
    },
    "1148": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1149": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1150": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1151": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1152": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48D"
    },
    "1155": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1156": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1157": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1159": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1160": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1161": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1162": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1164": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1165": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1166": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1167": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1168": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1169": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1171": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1173": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1174": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "SUB",
      "path": "1"
    },
    "1175": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6184,
        6210
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6174,
        6210
      ],
      "op": "AND",
      "path": "1"
    },
    "1185": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6174,
        6180
      ],
      "op": "DUP14",
      "path": "1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1192": {
      "op": "SHL"
    },
    "1193": {
      "op": "SUB"
    },
    "1194": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6174,
        6210
      ],
      "op": "AND",
      "path": "1"
    },
    "1195": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6174,
        6210
      ],
      "op": "EQ",
      "path": "1"
    },
    "1196": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "1197": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1198": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1199": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1200": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1201": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1202": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1203": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1204": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        6167,
        6210
      ],
      "op": "POP",
      "path": "1"
    },
    "1205": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1206": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1207": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "POP",
      "path": "1"
    },
    "1208": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "POP",
      "path": "1"
    },
    "1209": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "POP",
      "path": "1"
    },
    "1210": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "POP",
      "path": "1"
    },
    "1211": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "POP",
      "path": "1"
    },
    "1212": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "offset": [
        4614,
        6217
      ],
      "op": "POP",
      "path": "1"
    },
    "1213": {
      "fn": "ApiCLHouse.ValidateSingOffChainVote",
      "jump": "o",
      "offset": [
        4614,
        6217
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1214": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1215": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1217": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1218": {
      "op": "PUSH4",
      "value": "0x9C57DF7"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1225": {
      "op": "SHL"
    },
    "1226": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1227": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "op": "DUP3"
    },
    "1237": {
      "op": "DUP2"
    },
    "1238": {
      "op": "AND"
    },
    "1239": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1241": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1242": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1225,
        1243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1246": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1225,
        1243
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1247": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1249": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1250": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1251": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1252": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1253": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1254": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1377,
        1387
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1255": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1377,
        1387
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1256": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1257": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1257,
        1269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1258": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1259": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "AND",
      "path": "1"
    },
    "1260": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1261": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9C57DF7"
    },
    "1266": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1432
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1272": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1274": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1275": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1276": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1277": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SUB",
      "path": "1"
    },
    "1278": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1279": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1280": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "GAS",
      "path": "1"
    },
    "1281": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1282": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1283": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1284": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1285": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x512"
    },
    "1288": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1289": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1290": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1292": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1293": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1294": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1295": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1297": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1298": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1299": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1300": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1301": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1302": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1303": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1305": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1306": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1307": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1309": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "NOT",
      "path": "1"
    },
    "1310": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1312": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1313": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1314": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "AND",
      "path": "1"
    },
    "1315": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1316": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1317": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1318": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1320": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1321": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1322": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1323": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "ADD",
      "path": "1"
    },
    "1324": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1325": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x536"
    },
    "1328": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1329": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1330": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1012"
    },
    "1333": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1334": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1414,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1335": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1400,
        1447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "branch": 14,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1467,
        1475
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 3
    },
    "1338": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57B"
    },
    "1341": {
      "branch": 14,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1342": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1344": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1353": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1356": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1358": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1359": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "ADD",
      "path": "1"
    },
    "1360": {
      "op": "MSTORE"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1365": {
      "op": "DUP3"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1390": {
      "op": "SHL"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1393": {
      "op": "DUP3"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "op": "MSTORE"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x424"
    },
    "1402": {
      "op": "JUMP"
    },
    "1403": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1458,
        1501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1404": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1512,
        1540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x583"
    },
    "1407": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1512,
        1540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFE"
    },
    "1410": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1512,
        1540
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1411": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1512,
        1540
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1412": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x40"
    },
    "1414": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1415": {
      "op": "PUSH4",
      "value": "0x8532CBF7"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1424": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1425": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1427": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1428": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "1429": {
      "op": "DUP4"
    },
    "1430": {
      "op": "SWAP1"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1441": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "AND",
      "path": "1"
    },
    "1442": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1443": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8532CBF7"
    },
    "1448": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1454": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1456": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1457": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1458": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1459": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SUB",
      "path": "1"
    },
    "1460": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1462": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "GAS",
      "path": "1"
    },
    "1463": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1464": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1465": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1466": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1467": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C8"
    },
    "1470": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1471": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1472": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1474": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1475": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1476": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1477": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1479": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1480": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1481": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "1482": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "1483": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "1484": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "POP",
      "path": "1"
    },
    "1485": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1487": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1488": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1489": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1491": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1492": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1493": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1495": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1496": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1497": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1498": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1501": {
      "op": "NOT"
    },
    "1502": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "AND",
      "path": "1"
    },
    "1503": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1504": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "1505": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1507": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1508": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F0"
    },
    "1511": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1512": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1513": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1514": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "ADD",
      "path": "1"
    },
    "1515": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1516": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1078"
    },
    "1519": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1520": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1714,
        1738
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1521": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1522": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1523": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1688,
        1709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "1525": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1688,
        1709
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1526": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1688,
        1709
      ],
      "op": "ADD",
      "path": "1"
    },
    "1527": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1528": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1529": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1530": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1654,
        1674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1532": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1654,
        1674
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1533": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1654,
        1674
      ],
      "op": "ADD",
      "path": "1"
    },
    "1534": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1535": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1536": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1537": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1621,
        1640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1539": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1621,
        1640
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1540": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1621,
        1640
      ],
      "op": "ADD",
      "path": "1"
    },
    "1541": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1542": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1543": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1544": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1545": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1591,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1547": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1591,
        1607
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1548": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1591,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1549": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1550": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1551": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1552": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1562": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1563": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "AND",
      "path": "1"
    },
    "1564": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1565": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1551,
        1738
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1566": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1758,
        1762
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x1"
    },
    "1568": {
      "branch": 15,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1758,
        1786
      ],
      "op": "EQ",
      "path": "1"
    },
    "1569": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x663"
    },
    "1572": {
      "branch": 15,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1573": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1575": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1584": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1589": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1590": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "ADD",
      "path": "1"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH20",
      "value": "0x2AB9B2B91034B9903737BA10309026B2B6B132B9"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1625": {
      "op": "DUP3"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1630": {
      "op": "ADD"
    },
    "1631": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x424"
    },
    "1634": {
      "op": "JUMP"
    },
    "1635": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1749,
        1814
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1636": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x20"
    },
    "1638": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1639": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "ADD",
      "path": "1"
    },
    "1640": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1641": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1643": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1644": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "ADD",
      "path": "1"
    },
    "1645": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1646": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1648": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1649": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "ADD",
      "path": "1"
    },
    "1650": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1651": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "1653": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1654": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1655": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "ADD",
      "path": "1"
    },
    "1656": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1657": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1658": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1846,
        1862
      ],
      "op": "SWAP12",
      "path": "1"
    },
    "1659": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1660": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1876,
        1895
      ],
      "op": "SWAP11",
      "path": "1"
    },
    "1661": {
      "op": "POP"
    },
    "1662": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1663": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1909,
        1929
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "1664": {
      "op": "POP"
    },
    "1665": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1943,
        1964
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1065,
        1981
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1065,
        1981
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1674": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1675": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3876,
        3900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1677": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3914,
        3944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1679": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3958,
        3975
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1680": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3989,
        4011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1682": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4025,
        4048
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1683": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4062,
        4091
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1685": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4105,
        4134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1686": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4148,
        4178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1688": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4203,
        4218
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1689": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4231,
        4241
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1690": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4203,
        4243
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1691": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4203,
        4243
      ],
      "op": "POP",
      "path": "1"
    },
    "1692": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4280
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 7
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4291
      ],
      "op": "AND",
      "path": "1"
    },
    "1702": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4291
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x59CA2D03"
    },
    "1707": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1709": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1710": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1711": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1716": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "AND",
      "path": "1"
    },
    "1717": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1719": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SHL",
      "path": "1"
    },
    "1720": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1721": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1722": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1724": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "1725": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1727": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1729": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1730": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1731": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1732": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SUB",
      "path": "1"
    },
    "1733": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1734": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1735": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "GAS",
      "path": "1"
    },
    "1736": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1737": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1738": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1739": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1740": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D9"
    },
    "1743": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1744": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1745": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1747": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1748": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1749": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1750": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1752": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1753": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1754": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "1755": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "1756": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "1757": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "POP",
      "path": "1"
    },
    "1758": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1760": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1761": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1762": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1764": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1765": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1766": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1768": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1769": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1770": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1771": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1774": {
      "op": "NOT"
    },
    "1775": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "AND",
      "path": "1"
    },
    "1776": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1777": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "1778": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1780": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1781": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x701"
    },
    "1784": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1785": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1786": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1787": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "ADD",
      "path": "1"
    },
    "1788": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1789": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10FB"
    },
    "1792": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1793": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4274,
        4293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1794": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1801": {
      "op": "SHL"
    },
    "1802": {
      "op": "SUB"
    },
    "1803": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4336
      ],
      "op": "AND",
      "path": "1"
    },
    "1804": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4336
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1D5FD3CA"
    },
    "1809": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1811": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1812": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1813": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1818": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "AND",
      "path": "1"
    },
    "1819": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1821": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SHL",
      "path": "1"
    },
    "1822": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1823": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1824": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1826": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "1827": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1829": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1831": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1832": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1833": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1834": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SUB",
      "path": "1"
    },
    "1835": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1836": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1837": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "GAS",
      "path": "1"
    },
    "1838": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1839": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1840": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1841": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1842": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x73F"
    },
    "1845": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1846": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1847": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1849": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1850": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1851": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1852": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1854": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1855": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1856": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "1857": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "1858": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "1859": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "1860": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1862": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1863": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1864": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1866": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "NOT",
      "path": "1"
    },
    "1867": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1869": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1870": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "1871": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "AND",
      "path": "1"
    },
    "1872": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1873": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "1874": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1875": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1877": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1878": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "POP",
      "path": "1"
    },
    "1879": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1880": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "1881": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1882": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x763"
    },
    "1885": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1886": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1887": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1012"
    },
    "1890": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1891": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4307,
        4338
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1892": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4358
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "AND",
      "path": "1"
    },
    "1902": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF00D6274"
    },
    "1907": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1909": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1910": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1911": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1916": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "AND",
      "path": "1"
    },
    "1917": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1919": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SHL",
      "path": "1"
    },
    "1920": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1921": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1922": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1924": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "1925": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1927": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1929": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1930": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1931": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1932": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SUB",
      "path": "1"
    },
    "1933": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1934": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1935": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "GAS",
      "path": "1"
    },
    "1936": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1937": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1938": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1939": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1940": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A1"
    },
    "1943": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1944": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1945": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1947": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1948": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1949": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1950": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1952": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1953": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1954": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "1955": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "1956": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "1957": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "1958": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1960": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1961": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1962": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1964": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "NOT",
      "path": "1"
    },
    "1965": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1967": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1968": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "1969": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "AND",
      "path": "1"
    },
    "1970": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1971": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "1972": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1973": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1975": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1976": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "POP",
      "path": "1"
    },
    "1977": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1978": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "ADD",
      "path": "1"
    },
    "1979": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1980": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C5"
    },
    "1983": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1984": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1985": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1130"
    },
    "1988": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1989": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4352,
        4373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1990": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4393
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "op": "SUB"
    },
    "1999": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4410
      ],
      "op": "AND",
      "path": "1"
    },
    "2000": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4410
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDA9BCA21"
    },
    "2005": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2007": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2008": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2009": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2014": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "AND",
      "path": "1"
    },
    "2015": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2017": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SHL",
      "path": "1"
    },
    "2018": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2019": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2020": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2022": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2023": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2025": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2027": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2028": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2029": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2030": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SUB",
      "path": "1"
    },
    "2031": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2032": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2033": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "GAS",
      "path": "1"
    },
    "2034": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2035": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2036": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2037": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2038": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x803"
    },
    "2041": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2042": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2043": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2045": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2046": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2047": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2048": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2050": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2051": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2052": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2053": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2054": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2055": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2056": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2058": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2059": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2060": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2062": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "NOT",
      "path": "1"
    },
    "2063": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2065": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2066": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2067": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "AND",
      "path": "1"
    },
    "2068": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2069": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2070": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2071": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2073": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2074": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "POP",
      "path": "1"
    },
    "2075": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2076": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "ADD",
      "path": "1"
    },
    "2077": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2078": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x827"
    },
    "2081": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2082": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2083": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114D"
    },
    "2086": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2087": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4387,
        4412
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2088": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4432
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "op": "SUB"
    },
    "2097": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4450
      ],
      "op": "AND",
      "path": "1"
    },
    "2098": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4450
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8668EAFC"
    },
    "2103": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2105": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2106": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2107": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2112": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "AND",
      "path": "1"
    },
    "2113": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2115": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SHL",
      "path": "1"
    },
    "2116": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2117": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2118": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2120": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2121": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2123": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2125": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2126": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2127": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2128": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SUB",
      "path": "1"
    },
    "2129": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2130": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2131": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "GAS",
      "path": "1"
    },
    "2132": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2133": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2134": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2135": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2136": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x865"
    },
    "2139": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2140": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2141": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2143": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2144": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2145": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2146": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2148": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2149": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2150": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2151": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2152": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2153": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2154": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2156": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2157": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2158": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2160": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "NOT",
      "path": "1"
    },
    "2161": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2163": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2164": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2165": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "AND",
      "path": "1"
    },
    "2166": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2167": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2168": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2169": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2171": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2172": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "POP",
      "path": "1"
    },
    "2173": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2174": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "ADD",
      "path": "1"
    },
    "2175": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2176": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x889"
    },
    "2179": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2180": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2181": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114D"
    },
    "2184": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2185": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4426,
        4452
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2186": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4472
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "op": "SUB"
    },
    "2195": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4496
      ],
      "op": "AND",
      "path": "1"
    },
    "2196": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4496
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9C630A88"
    },
    "2201": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2203": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2204": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2205": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2210": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "AND",
      "path": "1"
    },
    "2211": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2213": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SHL",
      "path": "1"
    },
    "2214": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2215": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2216": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2218": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2219": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2221": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2223": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2224": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2225": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2226": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SUB",
      "path": "1"
    },
    "2227": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2228": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2229": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "GAS",
      "path": "1"
    },
    "2230": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2231": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2232": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2233": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2234": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C7"
    },
    "2237": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2238": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2239": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2241": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2242": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2243": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2244": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2246": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2247": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2248": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2249": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2250": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2251": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2252": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2254": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2255": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2256": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2258": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "NOT",
      "path": "1"
    },
    "2259": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2261": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2262": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2263": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "AND",
      "path": "1"
    },
    "2264": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2265": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2266": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2267": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2269": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2270": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "POP",
      "path": "1"
    },
    "2271": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2272": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "2273": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2274": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8EB"
    },
    "2277": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2278": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2279": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114D"
    },
    "2282": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2283": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4466,
        4498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2284": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4518
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4542
      ],
      "op": "AND",
      "path": "1"
    },
    "2294": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4542
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xAB44997B"
    },
    "2299": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2301": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2302": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2303": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2308": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "AND",
      "path": "1"
    },
    "2309": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2311": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SHL",
      "path": "1"
    },
    "2312": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2313": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2314": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2316": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2317": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2319": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2321": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2322": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2323": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2324": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SUB",
      "path": "1"
    },
    "2325": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2326": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2327": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "GAS",
      "path": "1"
    },
    "2328": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2329": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2330": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2331": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2332": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x929"
    },
    "2335": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2336": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2337": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2339": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2340": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2341": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2342": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2344": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2345": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2346": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2347": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2348": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2349": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2350": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2352": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2353": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2354": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2356": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "NOT",
      "path": "1"
    },
    "2357": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2359": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2360": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2361": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "AND",
      "path": "1"
    },
    "2362": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2363": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2364": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2365": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2367": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2368": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "POP",
      "path": "1"
    },
    "2369": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2370": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "ADD",
      "path": "1"
    },
    "2371": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2372": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94D"
    },
    "2375": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2376": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2377": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114D"
    },
    "2380": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2381": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4512,
        4544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2382": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4564
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2389": {
      "op": "SHL"
    },
    "2390": {
      "op": "SUB"
    },
    "2391": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4589
      ],
      "op": "AND",
      "path": "1"
    },
    "2392": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4589
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5FE6663"
    },
    "2397": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2399": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2400": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2401": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2406": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "AND",
      "path": "1"
    },
    "2407": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2409": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SHL",
      "path": "1"
    },
    "2410": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2411": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2412": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2414": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "2415": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2417": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2419": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2420": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2421": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2422": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SUB",
      "path": "1"
    },
    "2423": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2424": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2425": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "GAS",
      "path": "1"
    },
    "2426": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2427": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2428": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2429": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2430": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98B"
    },
    "2433": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2434": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2435": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2437": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2438": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2439": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2440": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2442": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2443": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2444": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2445": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2446": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2447": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2448": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2450": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2451": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2452": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2454": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "NOT",
      "path": "1"
    },
    "2455": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2457": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2458": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "2459": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "AND",
      "path": "1"
    },
    "2460": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2461": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "2462": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2463": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2465": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2466": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "POP",
      "path": "1"
    },
    "2467": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2468": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "ADD",
      "path": "1"
    },
    "2469": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2470": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AF"
    },
    "2473": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2474": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2475": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114D"
    },
    "2478": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2479": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4558,
        4591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2480": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2481": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2482": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2483": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2484": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2485": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2486": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2487": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2488": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2489": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2490": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2491": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2492": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2493": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2494": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "2495": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2496": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        4254,
        4601
      ],
      "op": "POP",
      "path": "1"
    },
    "2497": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2498": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2499": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2500": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "2501": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "POP",
      "path": "1"
    },
    "2502": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2503": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2504": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2505": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        3755,
        4608
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "2506": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "o",
      "offset": [
        3755,
        4608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2507": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2508": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2261,
        2290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2510": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2315,
        2330
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2512": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2343,
        2353
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2513": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2315,
        2355
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2514": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2315,
        2355
      ],
      "op": "POP",
      "path": "1"
    },
    "2515": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2366,
        2388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2517": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2397
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "SUB"
    },
    "2526": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2414
      ],
      "op": "AND",
      "path": "1"
    },
    "2527": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2414
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDA9BCA21"
    },
    "2532": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2534": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2535": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2536": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2541": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "2542": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2544": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SHL",
      "path": "1"
    },
    "2545": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2546": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2547": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2549": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "2550": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2552": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2554": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2555": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2556": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2557": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SUB",
      "path": "1"
    },
    "2558": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2559": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2560": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "GAS",
      "path": "1"
    },
    "2561": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2562": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2563": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2564": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2565": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA12"
    },
    "2568": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2569": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2570": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2572": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2573": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2574": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2575": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2577": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2578": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2579": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "2580": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "2581": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "2582": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "2583": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2585": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2586": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2587": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2589": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "NOT",
      "path": "1"
    },
    "2590": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2592": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2593": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "2594": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "2595": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2596": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "2597": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2598": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2600": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2601": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "2602": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2603": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "ADD",
      "path": "1"
    },
    "2604": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2605": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA36"
    },
    "2608": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2609": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2610": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114D"
    },
    "2613": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2614": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2391,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2615": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2366,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2616": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2366,
        2417
      ],
      "op": "POP",
      "path": "1"
    },
    "2617": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2427,
        2451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2619": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2460
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2626": {
      "op": "SHL"
    },
    "2627": {
      "op": "SUB"
    },
    "2628": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2480
      ],
      "op": "AND",
      "path": "1"
    },
    "2629": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2480
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x824C88DA"
    },
    "2634": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2636": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2637": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2638": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2643": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "AND",
      "path": "1"
    },
    "2644": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2646": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SHL",
      "path": "1"
    },
    "2647": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2648": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2649": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2651": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2652": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2654": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2656": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2657": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2658": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2659": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SUB",
      "path": "1"
    },
    "2660": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2661": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2662": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "GAS",
      "path": "1"
    },
    "2663": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2664": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2665": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2666": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2667": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA78"
    },
    "2670": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2671": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2672": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2674": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2675": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2676": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2677": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2679": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2680": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2681": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "2682": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "2683": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "2684": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "2685": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2687": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2688": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2689": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2691": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "NOT",
      "path": "1"
    },
    "2692": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2694": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2695": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2696": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "AND",
      "path": "1"
    },
    "2697": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2698": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2699": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2700": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2702": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2703": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "2704": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2705": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2706": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2707": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9C"
    },
    "2710": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2711": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2712": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1012"
    },
    "2715": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2716": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2454,
        2482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2717": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2427,
        2482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2718": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2427,
        2482
      ],
      "op": "POP",
      "path": "1"
    },
    "2719": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2492,
        2522
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2721": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2543,
        2559
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2722": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2724": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "AND",
      "path": "1"
    },
    "2725": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2734": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2735": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "GT",
      "path": "1"
    },
    "2736": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2737": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "2740": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2741": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABC"
    },
    "2744": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCAC"
    },
    "2747": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2748": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2749": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2751": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2752": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2754": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2755": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2756": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2757": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2759": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MUL",
      "path": "1"
    },
    "2760": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2762": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "2763": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2764": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "2765": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2767": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2768": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2769": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2770": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAF5"
    },
    "2773": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2774": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2775": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2777": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "2778": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2779": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE2"
    },
    "2782": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFE"
    },
    "2785": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2786": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2787": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2788": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2789": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2791": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "2792": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2793": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2795": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2796": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SUB",
      "path": "1"
    },
    "2797": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2798": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2799": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADA"
    },
    "2802": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2803": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2804": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "2805": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2525,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2492,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2808": {
      "op": "POP"
    },
    "2809": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2572,
        2583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2811": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2618,
        2619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2813": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2814": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2628,
        2644
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2815": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2622,
        2625
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2816": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2622,
        2644
      ],
      "op": "LT",
      "path": "1"
    },
    "2817": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2818": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF2"
    },
    "2821": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2822": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2669,
        2697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0D"
    },
    "2825": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2669,
        2697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFE"
    },
    "2828": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2669,
        2697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2829": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2669,
        2697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2830": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x40"
    },
    "2832": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2833": {
      "op": "PUSH4",
      "value": "0x8532CBF7"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2840": {
      "op": "SHL"
    },
    "2841": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2842": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2843": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2845": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2846": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "2847": {
      "op": "DUP4"
    },
    "2848": {
      "op": "SWAP1"
    },
    "2849": {
      "op": "MSTORE"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2856": {
      "op": "SHL"
    },
    "2857": {
      "op": "SUB"
    },
    "2858": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2859": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "AND",
      "path": "1"
    },
    "2860": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2861": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8532CBF7"
    },
    "2866": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2908
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2869": {
      "op": "ADD"
    },
    "2870": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2872": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2874": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2875": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2876": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2877": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SUB",
      "path": "1"
    },
    "2878": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2879": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2880": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "GAS",
      "path": "1"
    },
    "2881": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2882": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2883": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2884": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2885": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB52"
    },
    "2888": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2889": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2890": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2892": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2893": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2894": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2895": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2897": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2898": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2899": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "2900": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "2901": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "2902": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "POP",
      "path": "1"
    },
    "2903": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2905": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2906": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2907": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2909": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2910": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2911": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2913": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2914": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2915": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2916": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2919": {
      "op": "NOT"
    },
    "2920": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "AND",
      "path": "1"
    },
    "2921": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2922": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "2923": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2925": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2926": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7A"
    },
    "2929": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2930": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2931": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2932": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "ADD",
      "path": "1"
    },
    "2933": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2934": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1078"
    },
    "2937": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2938": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2891,
        2915
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2939": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2940": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2941": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2865,
        2886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2943": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2865,
        2886
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2944": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2865,
        2886
      ],
      "op": "ADD",
      "path": "1"
    },
    "2945": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2946": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2947": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2948": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2827,
        2847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2950": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2827,
        2847
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2951": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2827,
        2847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2952": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2953": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2954": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2955": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2790,
        2809
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2957": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2790,
        2809
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2958": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2790,
        2809
      ],
      "op": "ADD",
      "path": "1"
    },
    "2959": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2960": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2961": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2962": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2963": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2756,
        2772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2965": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2756,
        2772
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2966": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2756,
        2772
      ],
      "op": "ADD",
      "path": "1"
    },
    "2967": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2968": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2969": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2970": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "op": "SUB"
    },
    "2979": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2980": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2981": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "AND",
      "path": "1"
    },
    "2982": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2983": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2712,
        2915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2984": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2934,
        2938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2986": {
      "branch": 16,
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2934,
        2962
      ],
      "op": "EQ",
      "path": "1"
    },
    "2987": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2988": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBDF"
    },
    "2991": {
      "branch": 16,
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2992": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3005,
        3016
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 9
    },
    "2993": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        2993
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2994": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2995,
        3000
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2995": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2997": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "AND",
      "path": "1"
    },
    "2998": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2999": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3000": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3001": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "LT",
      "path": "1"
    },
    "3002": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC5"
    },
    "3005": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3006": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBC5"
    },
    "3009": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116A"
    },
    "3012": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2982,
        3002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3013": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3014": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3016": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "MUL",
      "path": "1"
    },
    "3017": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3019": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "ADD",
      "path": "1"
    },
    "3020": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3002
      ],
      "op": "ADD",
      "path": "1"
    },
    "3021": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3022": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3023": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3024": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2982,
        3016
      ],
      "op": "POP",
      "path": "1"
    },
    "3025": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 10
    },
    "3026": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3027": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBDB"
    },
    "3030": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3031": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1196"
    },
    "3034": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        3034,
        3041
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3035": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3036": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3037": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "POP",
      "path": "1"
    },
    "3038": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3034,
        3041
      ],
      "op": "POP",
      "path": "1"
    },
    "3039": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2930,
        3056
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3040": {
      "op": "POP"
    },
    "3041": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "3042": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBEA"
    },
    "3045": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3046": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B6"
    },
    "3049": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2647,
        2652
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3050": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3051": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3052": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "POP",
      "path": "1"
    },
    "3053": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2647,
        2652
      ],
      "op": "POP",
      "path": "1"
    },
    "3054": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAFD"
    },
    "3057": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3058": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2599,
        3066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3082,
        3093
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 12
    },
    "3061": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        3082,
        3093
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "3062": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2134,
        3100
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "op": "POP"
    },
    "3066": {
      "op": "POP"
    },
    "3067": {
      "op": "POP"
    },
    "3068": {
      "op": "POP"
    },
    "3069": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "o",
      "offset": [
        2134,
        3100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3070": {
      "op": "JUMPDEST"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3073": {
      "op": "MLOAD"
    },
    "3074": {
      "op": "DUP1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3080": {
      "op": "MSTORE"
    },
    "3081": {
      "op": "DUP1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3090": {
      "op": "SHL"
    },
    "3091": {
      "op": "SUB"
    },
    "3092": {
      "op": "AND"
    },
    "3093": {
      "op": "DUP2"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3097": {
      "op": "ADD"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3100": {
      "op": "DUP2"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3107": {
      "op": "DUP2"
    },
    "3108": {
      "op": "MSTORE"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3111": {
      "op": "ADD"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3114": {
      "op": "ISZERO"
    },
    "3115": {
      "op": "ISZERO"
    },
    "3116": {
      "op": "DUP2"
    },
    "3117": {
      "op": "MSTORE"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "ISZERO"
    },
    "3124": {
      "op": "ISZERO"
    },
    "3125": {
      "op": "DUP2"
    },
    "3126": {
      "op": "MSTORE"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "op": "SWAP1"
    },
    "3129": {
      "jump": "o",
      "op": "JUMP"
    },
    "3130": {
      "op": "JUMPDEST"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3133": {
      "op": "DUP2"
    },
    "3134": {
      "op": "AND"
    },
    "3135": {
      "op": "DUP2"
    },
    "3136": {
      "op": "EQ"
    },
    "3137": {
      "op": "PUSH2",
      "value": "0xC49"
    },
    "3140": {
      "op": "JUMPI"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3143": {
      "op": "DUP1"
    },
    "3144": {
      "op": "REVERT"
    },
    "3145": {
      "op": "JUMPDEST"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "jump": "o",
      "op": "JUMP"
    },
    "3148": {
      "op": "JUMPDEST"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3151": {
      "op": "DUP1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3154": {
      "op": "DUP1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3157": {
      "op": "DUP6"
    },
    "3158": {
      "op": "DUP8"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "op": "SLT"
    },
    "3161": {
      "op": "ISZERO"
    },
    "3162": {
      "op": "PUSH2",
      "value": "0xC62"
    },
    "3165": {
      "op": "JUMPI"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3168": {
      "op": "DUP1"
    },
    "3169": {
      "op": "REVERT"
    },
    "3170": {
      "op": "JUMPDEST"
    },
    "3171": {
      "op": "DUP5"
    },
    "3172": {
      "op": "CALLDATALOAD"
    },
    "3173": {
      "op": "SWAP4"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3177": {
      "op": "DUP6"
    },
    "3178": {
      "op": "ADD"
    },
    "3179": {
      "op": "CALLDATALOAD"
    },
    "3180": {
      "op": "PUSH2",
      "value": "0xC74"
    },
    "3183": {
      "op": "DUP2"
    },
    "3184": {
      "op": "PUSH2",
      "value": "0xC3A"
    },
    "3187": {
      "jump": "i",
      "op": "JUMP"
    },
    "3188": {
      "op": "JUMPDEST"
    },
    "3189": {
      "op": "SWAP4"
    },
    "3190": {
      "op": "SWAP7"
    },
    "3191": {
      "op": "SWAP4"
    },
    "3192": {
      "op": "SWAP6"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "op": "POP"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "op": "POP"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3199": {
      "op": "DUP3"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "CALLDATALOAD"
    },
    "3202": {
      "op": "SWAP2"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "op": "CALLDATALOAD"
    },
    "3207": {
      "op": "SWAP1"
    },
    "3208": {
      "jump": "o",
      "op": "JUMP"
    },
    "3209": {
      "op": "JUMPDEST"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "op": "SUB"
    },
    "3218": {
      "op": "DUP2"
    },
    "3219": {
      "op": "AND"
    },
    "3220": {
      "op": "DUP2"
    },
    "3221": {
      "op": "EQ"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xC49"
    },
    "3225": {
      "op": "JUMPI"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3228": {
      "op": "DUP1"
    },
    "3229": {
      "op": "REVERT"
    },
    "3230": {
      "op": "JUMPDEST"
    },
    "3231": {
      "op": "DUP1"
    },
    "3232": {
      "op": "ISZERO"
    },
    "3233": {
      "op": "ISZERO"
    },
    "3234": {
      "op": "DUP2"
    },
    "3235": {
      "op": "EQ"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0xC49"
    },
    "3239": {
      "op": "JUMPI"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3242": {
      "op": "DUP1"
    },
    "3243": {
      "op": "REVERT"
    },
    "3244": {
      "op": "JUMPDEST"
    },
    "3245": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3252": {
      "op": "SHL"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3260": {
      "op": "MSTORE"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3265": {
      "op": "REVERT"
    },
    "3266": {
      "op": "JUMPDEST"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3269": {
      "op": "MLOAD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3272": {
      "op": "DUP3"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3276": {
      "op": "NOT"
    },
    "3277": {
      "op": "AND"
    },
    "3278": {
      "op": "DUP2"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3289": {
      "op": "DUP2"
    },
    "3290": {
      "op": "GT"
    },
    "3291": {
      "op": "DUP3"
    },
    "3292": {
      "op": "DUP3"
    },
    "3293": {
      "op": "LT"
    },
    "3294": {
      "op": "OR"
    },
    "3295": {
      "op": "ISZERO"
    },
    "3296": {
      "op": "PUSH2",
      "value": "0xCEB"
    },
    "3299": {
      "op": "JUMPI"
    },
    "3300": {
      "op": "PUSH2",
      "value": "0xCEB"
    },
    "3303": {
      "op": "PUSH2",
      "value": "0xCAC"
    },
    "3306": {
      "jump": "i",
      "op": "JUMP"
    },
    "3307": {
      "op": "JUMPDEST"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3310": {
      "op": "MSTORE"
    },
    "3311": {
      "op": "SWAP2"
    },
    "3312": {
      "op": "SWAP1"
    },
    "3313": {
      "op": "POP"
    },
    "3314": {
      "jump": "o",
      "op": "JUMP"
    },
    "3315": {
      "op": "JUMPDEST"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3318": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "GT"
    },
    "3329": {
      "op": "ISZERO"
    },
    "3330": {
      "op": "PUSH2",
      "value": "0xD0D"
    },
    "3333": {
      "op": "JUMPI"
    },
    "3334": {
      "op": "PUSH2",
      "value": "0xD0D"
    },
    "3337": {
      "op": "PUSH2",
      "value": "0xCAC"
    },
    "3340": {
      "jump": "i",
      "op": "JUMP"
    },
    "3341": {
      "op": "JUMPDEST"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3345": {
      "op": "ADD"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3348": {
      "op": "NOT"
    },
    "3349": {
      "op": "AND"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3352": {
      "op": "ADD"
    },
    "3353": {
      "op": "SWAP1"
    },
    "3354": {
      "jump": "o",
      "op": "JUMP"
    },
    "3355": {
      "op": "JUMPDEST"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3361": {
      "op": "DUP4"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "SLT"
    },
    "3364": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3367": {
      "op": "JUMPI"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3370": {
      "op": "DUP1"
    },
    "3371": {
      "op": "REVERT"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "DUP2"
    },
    "3374": {
      "op": "CALLDATALOAD"
    },
    "3375": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3378": {
      "op": "PUSH2",
      "value": "0xD3A"
    },
    "3381": {
      "op": "DUP3"
    },
    "3382": {
      "op": "PUSH2",
      "value": "0xCF3"
    },
    "3385": {
      "jump": "i",
      "op": "JUMP"
    },
    "3386": {
      "op": "JUMPDEST"
    },
    "3387": {
      "op": "PUSH2",
      "value": "0xCC2"
    },
    "3390": {
      "jump": "i",
      "op": "JUMP"
    },
    "3391": {
      "op": "JUMPDEST"
    },
    "3392": {
      "op": "DUP2"
    },
    "3393": {
      "op": "DUP2"
    },
    "3394": {
      "op": "MSTORE"
    },
    "3395": {
      "op": "DUP5"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3398": {
      "op": "DUP4"
    },
    "3399": {
      "op": "DUP7"
    },
    "3400": {
      "op": "ADD"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "GT"
    },
    "3403": {
      "op": "ISZERO"
    },
    "3404": {
      "op": "PUSH2",
      "value": "0xD54"
    },
    "3407": {
      "op": "JUMPI"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3410": {
      "op": "DUP1"
    },
    "3411": {
      "op": "REVERT"
    },
    "3412": {
      "op": "JUMPDEST"
    },
    "3413": {
      "op": "DUP2"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3416": {
      "op": "DUP6"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3420": {
      "op": "DUP4"
    },
    "3421": {
      "op": "ADD"
    },
    "3422": {
      "op": "CALLDATACOPY"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3425": {
      "op": "SWAP2"
    },
    "3426": {
      "op": "DUP2"
    },
    "3427": {
      "op": "ADD"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "op": "ADD"
    },
    "3431": {
      "op": "SWAP2"
    },
    "3432": {
      "op": "SWAP1"
    },
    "3433": {
      "op": "SWAP2"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "SWAP4"
    },
    "3436": {
      "op": "SWAP3"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "jump": "o",
      "op": "JUMP"
    },
    "3441": {
      "op": "JUMPDEST"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "DUP1"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3447": {
      "op": "DUP1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3450": {
      "op": "DUP1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3453": {
      "op": "DUP8"
    },
    "3454": {
      "op": "DUP10"
    },
    "3455": {
      "op": "SUB"
    },
    "3456": {
      "op": "SLT"
    },
    "3457": {
      "op": "ISZERO"
    },
    "3458": {
      "op": "PUSH2",
      "value": "0xD8A"
    },
    "3461": {
      "op": "JUMPI"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3464": {
      "op": "DUP1"
    },
    "3465": {
      "op": "REVERT"
    },
    "3466": {
      "op": "JUMPDEST"
    },
    "3467": {
      "op": "DUP7"
    },
    "3468": {
      "op": "CALLDATALOAD"
    },
    "3469": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3472": {
      "op": "DUP2"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3476": {
      "jump": "i",
      "op": "JUMP"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "SWAP6"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3482": {
      "op": "DUP8"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "CALLDATALOAD"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3488": {
      "op": "DUP2"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3492": {
      "jump": "i",
      "op": "JUMP"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "SWAP5"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3498": {
      "op": "DUP8"
    },
    "3499": {
      "op": "ADD"
    },
    "3500": {
      "op": "CALLDATALOAD"
    },
    "3501": {
      "op": "SWAP4"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3505": {
      "op": "DUP8"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "CALLDATALOAD"
    },
    "3508": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3511": {
      "op": "DUP2"
    },
    "3512": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "3515": {
      "jump": "i",
      "op": "JUMP"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "op": "SWAP3"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3521": {
      "op": "DUP8"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "CALLDATALOAD"
    },
    "3524": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3533": {
      "op": "DUP1"
    },
    "3534": {
      "op": "DUP3"
    },
    "3535": {
      "op": "GT"
    },
    "3536": {
      "op": "ISZERO"
    },
    "3537": {
      "op": "PUSH2",
      "value": "0xDD9"
    },
    "3540": {
      "op": "JUMPI"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3543": {
      "op": "DUP1"
    },
    "3544": {
      "op": "REVERT"
    },
    "3545": {
      "op": "JUMPDEST"
    },
    "3546": {
      "op": "PUSH2",
      "value": "0xDE5"
    },
    "3549": {
      "op": "DUP11"
    },
    "3550": {
      "op": "DUP4"
    },
    "3551": {
      "op": "DUP12"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xD1B"
    },
    "3556": {
      "jump": "i",
      "op": "JUMP"
    },
    "3557": {
      "op": "JUMPDEST"
    },
    "3558": {
      "op": "SWAP4"
    },
    "3559": {
      "op": "POP"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3562": {
      "op": "DUP10"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "op": "CALLDATALOAD"
    },
    "3565": {
      "op": "SWAP2"
    },
    "3566": {
      "op": "POP"
    },
    "3567": {
      "op": "DUP1"
    },
    "3568": {
      "op": "DUP3"
    },
    "3569": {
      "op": "GT"
    },
    "3570": {
      "op": "ISZERO"
    },
    "3571": {
      "op": "PUSH2",
      "value": "0xDFB"
    },
    "3574": {
      "op": "JUMPI"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3577": {
      "op": "DUP1"
    },
    "3578": {
      "op": "REVERT"
    },
    "3579": {
      "op": "JUMPDEST"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "op": "PUSH2",
      "value": "0xE08"
    },
    "3584": {
      "op": "DUP10"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "DUP11"
    },
    "3587": {
      "op": "ADD"
    },
    "3588": {
      "op": "PUSH2",
      "value": "0xD1B"
    },
    "3591": {
      "jump": "i",
      "op": "JUMP"
    },
    "3592": {
      "op": "JUMPDEST"
    },
    "3593": {
      "op": "SWAP2"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "SWAP3"
    },
    "3597": {
      "op": "SWAP6"
    },
    "3598": {
      "op": "POP"
    },
    "3599": {
      "op": "SWAP3"
    },
    "3600": {
      "op": "SWAP6"
    },
    "3601": {
      "op": "POP"
    },
    "3602": {
      "op": "SWAP3"
    },
    "3603": {
      "op": "SWAP6"
    },
    "3604": {
      "jump": "o",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3608": {
      "op": "DUP1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3611": {
      "op": "DUP4"
    },
    "3612": {
      "op": "DUP6"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "op": "SLT"
    },
    "3615": {
      "op": "ISZERO"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3619": {
      "op": "JUMPI"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3622": {
      "op": "DUP1"
    },
    "3623": {
      "op": "REVERT"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "DUP3"
    },
    "3626": {
      "op": "CALLDATALOAD"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xE33"
    },
    "3630": {
      "op": "DUP2"
    },
    "3631": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3634": {
      "jump": "i",
      "op": "JUMP"
    },
    "3635": {
      "op": "JUMPDEST"
    },
    "3636": {
      "op": "SWAP2"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3640": {
      "op": "DUP4"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "CALLDATALOAD"
    },
    "3643": {
      "op": "PUSH2",
      "value": "0xE43"
    },
    "3646": {
      "op": "DUP2"
    },
    "3647": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3650": {
      "jump": "i",
      "op": "JUMP"
    },
    "3651": {
      "op": "JUMPDEST"
    },
    "3652": {
      "op": "DUP1"
    },
    "3653": {
      "op": "SWAP2"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "SWAP3"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "op": "SWAP3"
    },
    "3659": {
      "op": "SWAP1"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "jump": "o",
      "op": "JUMP"
    },
    "3662": {
      "op": "JUMPDEST"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "JUMPDEST"
    },
    "3666": {
      "op": "DUP4"
    },
    "3667": {
      "op": "DUP2"
    },
    "3668": {
      "op": "LT"
    },
    "3669": {
      "op": "ISZERO"
    },
    "3670": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3673": {
      "op": "JUMPI"
    },
    "3674": {
      "op": "DUP2"
    },
    "3675": {
      "op": "DUP2"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "MLOAD"
    },
    "3678": {
      "op": "DUP4"
    },
    "3679": {
      "op": "DUP3"
    },
    "3680": {
      "op": "ADD"
    },
    "3681": {
      "op": "MSTORE"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE51"
    },
    "3688": {
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "DUP4"
    },
    "3691": {
      "op": "DUP2"
    },
    "3692": {
      "op": "GT"
    },
    "3693": {
      "op": "ISZERO"
    },
    "3694": {
      "op": "PUSH2",
      "value": "0xE78"
    },
    "3697": {
      "op": "JUMPI"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3700": {
      "op": "DUP5"
    },
    "3701": {
      "op": "DUP5"
    },
    "3702": {
      "op": "ADD"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "JUMPDEST"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "jump": "o",
      "op": "JUMP"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "DUP2"
    },
    "3714": {
      "op": "MLOAD"
    },
    "3715": {
      "op": "DUP1"
    },
    "3716": {
      "op": "DUP5"
    },
    "3717": {
      "op": "MSTORE"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE96"
    },
    "3721": {
      "op": "DUP2"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "op": "DUP7"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3728": {
      "op": "DUP7"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "3733": {
      "jump": "i",
      "op": "JUMP"
    },
    "3734": {
      "op": "JUMPDEST"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3740": {
      "op": "NOT"
    },
    "3741": {
      "op": "AND"
    },
    "3742": {
      "op": "SWAP3"
    },
    "3743": {
      "op": "SWAP1"
    },
    "3744": {
      "op": "SWAP3"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "SWAP3"
    },
    "3750": {
      "op": "SWAP2"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "POP"
    },
    "3753": {
      "jump": "o",
      "op": "JUMP"
    },
    "3754": {
      "op": "JUMPDEST"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3757": {
      "op": "DUP2"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3761": {
      "op": "PUSH2",
      "value": "0xEBD"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3766": {
      "op": "DUP4"
    },
    "3767": {
      "op": "ADD"
    },
    "3768": {
      "op": "DUP8"
    },
    "3769": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3772": {
      "jump": "i",
      "op": "JUMP"
    },
    "3773": {
      "op": "JUMPDEST"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3776": {
      "op": "DUP4"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "SWAP6"
    },
    "3779": {
      "op": "SWAP1"
    },
    "3780": {
      "op": "SWAP6"
    },
    "3781": {
      "op": "MSTORE"
    },
    "3782": {
      "op": "POP"
    },
    "3783": {
      "op": "SWAP2"
    },
    "3784": {
      "op": "ISZERO"
    },
    "3785": {
      "op": "ISZERO"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3788": {
      "op": "DUP4"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "MSTORE"
    },
    "3791": {
      "op": "ISZERO"
    },
    "3792": {
      "op": "ISZERO"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3795": {
      "op": "SWAP1"
    },
    "3796": {
      "op": "SWAP2"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "SWAP2"
    },
    "3800": {
      "op": "SWAP1"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "jump": "o",
      "op": "JUMP"
    },
    "3803": {
      "op": "JUMPDEST"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3808": {
      "op": "DUP3"
    },
    "3809": {
      "op": "DUP5"
    },
    "3810": {
      "op": "SUB"
    },
    "3811": {
      "op": "SLT"
    },
    "3812": {
      "op": "ISZERO"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xEED"
    },
    "3816": {
      "op": "JUMPI"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3819": {
      "op": "DUP1"
    },
    "3820": {
      "op": "REVERT"
    },
    "3821": {
      "op": "JUMPDEST"
    },
    "3822": {
      "op": "DUP2"
    },
    "3823": {
      "op": "CALLDATALOAD"
    },
    "3824": {
      "op": "PUSH2",
      "value": "0xEF8"
    },
    "3827": {
      "op": "DUP2"
    },
    "3828": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3831": {
      "jump": "i",
      "op": "JUMP"
    },
    "3832": {
      "op": "JUMPDEST"
    },
    "3833": {
      "op": "SWAP4"
    },
    "3834": {
      "op": "SWAP3"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "POP"
    },
    "3838": {
      "jump": "o",
      "op": "JUMP"
    },
    "3839": {
      "op": "JUMPDEST"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3845": {
      "op": "DUP1"
    },
    "3846": {
      "op": "DUP4"
    },
    "3847": {
      "op": "MSTORE"
    },
    "3848": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "3851": {
      "op": "DUP2"
    },
    "3852": {
      "op": "DUP5"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "DUP13"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3858": {
      "jump": "i",
      "op": "JUMP"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3862": {
      "op": "DUP5"
    },
    "3863": {
      "op": "ADD"
    },
    "3864": {
      "op": "SWAP11"
    },
    "3865": {
      "op": "SWAP1"
    },
    "3866": {
      "op": "SWAP11"
    },
    "3867": {
      "op": "MSTORE"
    },
    "3868": {
      "op": "POP"
    },
    "3869": {
      "op": "POP"
    },
    "3870": {
      "op": "SWAP6"
    },
    "3871": {
      "op": "ISZERO"
    },
    "3872": {
      "op": "ISZERO"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3875": {
      "op": "DUP8"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "MSTORE"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3880": {
      "op": "SWAP5"
    },
    "3881": {
      "op": "DUP6"
    },
    "3882": {
      "op": "AND"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3885": {
      "op": "DUP8"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "SWAP3"
    },
    "3889": {
      "op": "DUP5"
    },
    "3890": {
      "op": "AND"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3893": {
      "op": "DUP7"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "SWAP1"
    },
    "3897": {
      "op": "DUP4"
    },
    "3898": {
      "op": "AND"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3901": {
      "op": "DUP6"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "AND"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3908": {
      "op": "DUP5"
    },
    "3909": {
      "op": "ADD"
    },
    "3910": {
      "op": "MSTORE"
    },
    "3911": {
      "op": "AND"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3914": {
      "op": "SWAP1"
    },
    "3915": {
      "op": "SWAP2"
    },
    "3916": {
      "op": "ADD"
    },
    "3917": {
      "op": "MSTORE"
    },
    "3918": {
      "op": "SWAP2"
    },
    "3919": {
      "op": "SWAP1"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "jump": "o",
      "op": "JUMP"
    },
    "3922": {
      "op": "JUMPDEST"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3927": {
      "op": "DUP1"
    },
    "3928": {
      "op": "DUP4"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "DUP5"
    },
    "3932": {
      "op": "MSTORE"
    },
    "3933": {
      "op": "DUP1"
    },
    "3934": {
      "op": "DUP6"
    },
    "3935": {
      "op": "MLOAD"
    },
    "3936": {
      "op": "DUP1"
    },
    "3937": {
      "op": "DUP4"
    },
    "3938": {
      "op": "MSTORE"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3941": {
      "op": "SWAP3"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "op": "DUP3"
    },
    "3944": {
      "op": "DUP7"
    },
    "3945": {
      "op": "ADD"
    },
    "3946": {
      "op": "SWAP2"
    },
    "3947": {
      "op": "POP"
    },
    "3948": {
      "op": "DUP3"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3952": {
      "op": "SHL"
    },
    "3953": {
      "op": "DUP8"
    },
    "3954": {
      "op": "ADD"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "DUP5"
    },
    "3957": {
      "op": "DUP9"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "JUMPDEST"
    },
    "3962": {
      "op": "DUP4"
    },
    "3963": {
      "op": "DUP2"
    },
    "3964": {
      "op": "LT"
    },
    "3965": {
      "op": "ISZERO"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "3969": {
      "op": "JUMPI"
    },
    "3970": {
      "op": "DUP9"
    },
    "3971": {
      "op": "DUP4"
    },
    "3972": {
      "op": "SUB"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3975": {
      "op": "NOT"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "DUP6"
    },
    "3978": {
      "op": "MSTORE"
    },
    "3979": {
      "op": "DUP2"
    },
    "3980": {
      "op": "MLOAD"
    },
    "3981": {
      "op": "DUP1"
    },
    "3982": {
      "op": "MLOAD"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3989": {
      "op": "SHL"
    },
    "3990": {
      "op": "SUB"
    },
    "3991": {
      "op": "AND"
    },
    "3992": {
      "op": "DUP5"
    },
    "3993": {
      "op": "MSTORE"
    },
    "3994": {
      "op": "DUP8"
    },
    "3995": {
      "op": "DUP2"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "MLOAD"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4000": {
      "op": "DUP10"
    },
    "4001": {
      "op": "DUP7"
    },
    "4002": {
      "op": "ADD"
    },
    "4003": {
      "op": "DUP2"
    },
    "4004": {
      "op": "SWAP1"
    },
    "4005": {
      "op": "MSTORE"
    },
    "4006": {
      "op": "SWAP1"
    },
    "4007": {
      "op": "PUSH2",
      "value": "0xFB2"
    },
    "4010": {
      "op": "DUP3"
    },
    "4011": {
      "op": "DUP8"
    },
    "4012": {
      "op": "ADD"
    },
    "4013": {
      "op": "DUP3"
    },
    "4014": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "4017": {
      "jump": "i",
      "op": "JUMP"
    },
    "4018": {
      "op": "JUMPDEST"
    },
    "4019": {
      "op": "DUP4"
    },
    "4020": {
      "op": "DUP11"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "MLOAD"
    },
    "4023": {
      "op": "DUP8"
    },
    "4024": {
      "op": "DUP12"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "MSTORE"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "DUP6"
    },
    "4031": {
      "op": "ADD"
    },
    "4032": {
      "op": "MLOAD"
    },
    "4033": {
      "op": "ISZERO"
    },
    "4034": {
      "op": "ISZERO"
    },
    "4035": {
      "op": "SWAP1"
    },
    "4036": {
      "op": "DUP9"
    },
    "4037": {
      "op": "ADD"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4041": {
      "op": "SWAP4"
    },
    "4042": {
      "op": "DUP5"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "MLOAD"
    },
    "4045": {
      "op": "ISZERO"
    },
    "4046": {
      "op": "ISZERO"
    },
    "4047": {
      "op": "SWAP4"
    },
    "4048": {
      "op": "SWAP1"
    },
    "4049": {
      "op": "SWAP7"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "SWAP3"
    },
    "4052": {
      "op": "SWAP1"
    },
    "4053": {
      "op": "SWAP3"
    },
    "4054": {
      "op": "MSTORE"
    },
    "4055": {
      "op": "POP"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "SWAP4"
    },
    "4058": {
      "op": "DUP7"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "op": "SWAP4"
    },
    "4061": {
      "op": "SWAP1"
    },
    "4062": {
      "op": "DUP7"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "SWAP1"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4067": {
      "op": "ADD"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xF79"
    },
    "4071": {
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "POP"
    },
    "4074": {
      "op": "SWAP1"
    },
    "4075": {
      "op": "SWAP9"
    },
    "4076": {
      "op": "SWAP8"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "POP"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "op": "POP"
    },
    "4083": {
      "op": "POP"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "jump": "o",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4089": {
      "op": "DUP3"
    },
    "4090": {
      "op": "MLOAD"
    },
    "4091": {
      "op": "PUSH2",
      "value": "0x1008"
    },
    "4094": {
      "op": "DUP2"
    },
    "4095": {
      "op": "DUP5"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4098": {
      "op": "DUP8"
    },
    "4099": {
      "op": "ADD"
    },
    "4100": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "4103": {
      "jump": "i",
      "op": "JUMP"
    },
    "4104": {
      "op": "JUMPDEST"
    },
    "4105": {
      "op": "SWAP2"
    },
    "4106": {
      "op": "SWAP1"
    },
    "4107": {
      "op": "SWAP2"
    },
    "4108": {
      "op": "ADD"
    },
    "4109": {
      "op": "SWAP3"
    },
    "4110": {
      "op": "SWAP2"
    },
    "4111": {
      "op": "POP"
    },
    "4112": {
      "op": "POP"
    },
    "4113": {
      "jump": "o",
      "op": "JUMP"
    },
    "4114": {
      "op": "JUMPDEST"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "DUP5"
    },
    "4121": {
      "op": "SUB"
    },
    "4122": {
      "op": "SLT"
    },
    "4123": {
      "op": "ISZERO"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4127": {
      "op": "JUMPI"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4130": {
      "op": "DUP1"
    },
    "4131": {
      "op": "REVERT"
    },
    "4132": {
      "op": "JUMPDEST"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "op": "MLOAD"
    },
    "4135": {
      "op": "SWAP2"
    },
    "4136": {
      "op": "SWAP1"
    },
    "4137": {
      "op": "POP"
    },
    "4138": {
      "jump": "o",
      "op": "JUMP"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4142": {
      "op": "DUP3"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4145": {
      "op": "DUP4"
    },
    "4146": {
      "op": "ADD"
    },
    "4147": {
      "op": "SLT"
    },
    "4148": {
      "op": "PUSH2",
      "value": "0x103C"
    },
    "4151": {
      "op": "JUMPI"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4154": {
      "op": "DUP1"
    },
    "4155": {
      "op": "REVERT"
    },
    "4156": {
      "op": "JUMPDEST"
    },
    "4157": {
      "op": "DUP2"
    },
    "4158": {
      "op": "MLOAD"
    },
    "4159": {
      "op": "PUSH2",
      "value": "0x104A"
    },
    "4162": {
      "op": "PUSH2",
      "value": "0xD3A"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0xCF3"
    },
    "4169": {
      "jump": "i",
      "op": "JUMP"
    },
    "4170": {
      "op": "JUMPDEST"
    },
    "4171": {
      "op": "DUP2"
    },
    "4172": {
      "op": "DUP2"
    },
    "4173": {
      "op": "MSTORE"
    },
    "4174": {
      "op": "DUP5"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4177": {
      "op": "DUP4"
    },
    "4178": {
      "op": "DUP7"
    },
    "4179": {
      "op": "ADD"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "GT"
    },
    "4182": {
      "op": "ISZERO"
    },
    "4183": {
      "op": "PUSH2",
      "value": "0x105F"
    },
    "4186": {
      "op": "JUMPI"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4189": {
      "op": "DUP1"
    },
    "4190": {
      "op": "REVERT"
    },
    "4191": {
      "op": "JUMPDEST"
    },
    "4192": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4198": {
      "op": "DUP4"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4202": {
      "op": "DUP8"
    },
    "4203": {
      "op": "ADD"
    },
    "4204": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "4207": {
      "jump": "i",
      "op": "JUMP"
    },
    "4208": {
      "op": "JUMPDEST"
    },
    "4209": {
      "op": "SWAP5"
    },
    "4210": {
      "op": "SWAP4"
    },
    "4211": {
      "op": "POP"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "op": "POP"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "jump": "o",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4219": {
      "op": "DUP1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4222": {
      "op": "DUP1"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4227": {
      "op": "DUP7"
    },
    "4228": {
      "op": "DUP9"
    },
    "4229": {
      "op": "SUB"
    },
    "4230": {
      "op": "SLT"
    },
    "4231": {
      "op": "ISZERO"
    },
    "4232": {
      "op": "PUSH2",
      "value": "0x1090"
    },
    "4235": {
      "op": "JUMPI"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4238": {
      "op": "DUP1"
    },
    "4239": {
      "op": "REVERT"
    },
    "4240": {
      "op": "JUMPDEST"
    },
    "4241": {
      "op": "DUP6"
    },
    "4242": {
      "op": "MLOAD"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4246": {
      "op": "DUP2"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "4250": {
      "jump": "i",
      "op": "JUMP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4254": {
      "op": "DUP8"
    },
    "4255": {
      "op": "ADD"
    },
    "4256": {
      "op": "MLOAD"
    },
    "4257": {
      "op": "SWAP1"
    },
    "4258": {
      "op": "SWAP6"
    },
    "4259": {
      "op": "POP"
    },
    "4260": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "GT"
    },
    "4271": {
      "op": "ISZERO"
    },
    "4272": {
      "op": "PUSH2",
      "value": "0x10B8"
    },
    "4275": {
      "op": "JUMPI"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4278": {
      "op": "DUP1"
    },
    "4279": {
      "op": "REVERT"
    },
    "4280": {
      "op": "JUMPDEST"
    },
    "4281": {
      "op": "PUSH2",
      "value": "0x10C4"
    },
    "4284": {
      "op": "DUP9"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "DUP10"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "PUSH2",
      "value": "0x102B"
    },
    "4291": {
      "jump": "i",
      "op": "JUMP"
    },
    "4292": {
      "op": "JUMPDEST"
    },
    "4293": {
      "op": "SWAP5"
    },
    "4294": {
      "op": "POP"
    },
    "4295": {
      "op": "POP"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4298": {
      "op": "DUP7"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MLOAD"
    },
    "4301": {
      "op": "SWAP3"
    },
    "4302": {
      "op": "POP"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4305": {
      "op": "DUP7"
    },
    "4306": {
      "op": "ADD"
    },
    "4307": {
      "op": "MLOAD"
    },
    "4308": {
      "op": "PUSH2",
      "value": "0x10DC"
    },
    "4311": {
      "op": "DUP2"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "4315": {
      "jump": "i",
      "op": "JUMP"
    },
    "4316": {
      "op": "JUMPDEST"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4319": {
      "op": "DUP8"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "op": "MLOAD"
    },
    "4322": {
      "op": "SWAP1"
    },
    "4323": {
      "op": "SWAP3"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "op": "PUSH2",
      "value": "0x10ED"
    },
    "4328": {
      "op": "DUP2"
    },
    "4329": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "4332": {
      "jump": "i",
      "op": "JUMP"
    },
    "4333": {
      "op": "JUMPDEST"
    },
    "4334": {
      "op": "DUP1"
    },
    "4335": {
      "op": "SWAP2"
    },
    "4336": {
      "op": "POP"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "op": "SWAP3"
    },
    "4339": {
      "op": "SWAP6"
    },
    "4340": {
      "op": "POP"
    },
    "4341": {
      "op": "SWAP3"
    },
    "4342": {
      "op": "SWAP6"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "op": "SWAP4"
    },
    "4345": {
      "op": "POP"
    },
    "4346": {
      "jump": "o",
      "op": "JUMP"
    },
    "4347": {
      "op": "JUMPDEST"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4352": {
      "op": "DUP3"
    },
    "4353": {
      "op": "DUP5"
    },
    "4354": {
      "op": "SUB"
    },
    "4355": {
      "op": "SLT"
    },
    "4356": {
      "op": "ISZERO"
    },
    "4357": {
      "op": "PUSH2",
      "value": "0x110D"
    },
    "4360": {
      "op": "JUMPI"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4363": {
      "op": "DUP1"
    },
    "4364": {
      "op": "REVERT"
    },
    "4365": {
      "op": "JUMPDEST"
    },
    "4366": {
      "op": "DUP2"
    },
    "4367": {
      "op": "MLOAD"
    },
    "4368": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4377": {
      "op": "DUP2"
    },
    "4378": {
      "op": "GT"
    },
    "4379": {
      "op": "ISZERO"
    },
    "4380": {
      "op": "PUSH2",
      "value": "0x1124"
    },
    "4383": {
      "op": "JUMPI"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4386": {
      "op": "DUP1"
    },
    "4387": {
      "op": "REVERT"
    },
    "4388": {
      "op": "JUMPDEST"
    },
    "4389": {
      "op": "PUSH2",
      "value": "0x1070"
    },
    "4392": {
      "op": "DUP5"
    },
    "4393": {
      "op": "DUP3"
    },
    "4394": {
      "op": "DUP6"
    },
    "4395": {
      "op": "ADD"
    },
    "4396": {
      "op": "PUSH2",
      "value": "0x102B"
    },
    "4399": {
      "jump": "i",
      "op": "JUMP"
    },
    "4400": {
      "op": "JUMPDEST"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4405": {
      "op": "DUP3"
    },
    "4406": {
      "op": "DUP5"
    },
    "4407": {
      "op": "SUB"
    },
    "4408": {
      "op": "SLT"
    },
    "4409": {
      "op": "ISZERO"
    },
    "4410": {
      "op": "PUSH2",
      "value": "0x1142"
    },
    "4413": {
      "op": "JUMPI"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4416": {
      "op": "DUP1"
    },
    "4417": {
      "op": "REVERT"
    },
    "4418": {
      "op": "JUMPDEST"
    },
    "4419": {
      "op": "DUP2"
    },
    "4420": {
      "op": "MLOAD"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0xEF8"
    },
    "4424": {
      "op": "DUP2"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0xC9E"
    },
    "4428": {
      "jump": "i",
      "op": "JUMP"
    },
    "4429": {
      "op": "JUMPDEST"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4434": {
      "op": "DUP3"
    },
    "4435": {
      "op": "DUP5"
    },
    "4436": {
      "op": "SUB"
    },
    "4437": {
      "op": "SLT"
    },
    "4438": {
      "op": "ISZERO"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x115F"
    },
    "4442": {
      "op": "JUMPI"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4445": {
      "op": "DUP1"
    },
    "4446": {
      "op": "REVERT"
    },
    "4447": {
      "op": "JUMPDEST"
    },
    "4448": {
      "op": "DUP2"
    },
    "4449": {
      "op": "MLOAD"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0xEF8"
    },
    "4453": {
      "op": "DUP2"
    },
    "4454": {
      "op": "PUSH2",
      "value": "0xC3A"
    },
    "4457": {
      "jump": "i",
      "op": "JUMP"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4466": {
      "op": "SHL"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "MSTORE"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4479": {
      "op": "REVERT"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4488": {
      "op": "SHL"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4491": {
      "op": "MSTORE"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4496": {
      "op": "MSTORE"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4501": {
      "op": "REVERT"
    },
    "4502": {
      "op": "JUMPDEST"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4507": {
      "op": "DUP3"
    },
    "4508": {
      "op": "AND"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4511": {
      "op": "DUP2"
    },
    "4512": {
      "op": "EQ"
    },
    "4513": {
      "op": "ISZERO"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x11AD"
    },
    "4517": {
      "op": "JUMPI"
    },
    "4518": {
      "op": "PUSH2",
      "value": "0x11AD"
    },
    "4521": {
      "op": "PUSH2",
      "value": "0x1180"
    },
    "4524": {
      "jump": "i",
      "op": "JUMP"
    },
    "4525": {
      "op": "JUMPDEST"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "ADD"
    },
    "4529": {
      "op": "SWAP3"
    },
    "4530": {
      "op": "SWAP2"
    },
    "4531": {
      "op": "POP"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "jump": "o",
      "op": "JUMP"
    },
    "4534": {
      "op": "JUMPDEST"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "NOT"
    },
    "4540": {
      "op": "DUP3"
    },
    "4541": {
      "op": "EQ"
    },
    "4542": {
      "op": "ISZERO"
    },
    "4543": {
      "op": "PUSH2",
      "value": "0x11CA"
    },
    "4546": {
      "op": "JUMPI"
    },
    "4547": {
      "op": "PUSH2",
      "value": "0x11CA"
    },
    "4550": {
      "op": "PUSH2",
      "value": "0x1180"
    },
    "4553": {
      "jump": "i",
      "op": "JUMP"
    },
    "4554": {
      "op": "JUMPDEST"
    },
    "4555": {
      "op": "POP"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "SWAP1"
    },
    "4560": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9ee3827786a14ce6c5cbcb11c183abd49240315f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract ApiCLHouse {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msgh Signed message\n    /// @param _v V\n    /// @param _r R\n    /// @param _s S\n    /// @return sender The address of the signer\n    function RecoverSignerFromSignature(\n        bytes32  _msgh,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    )\n        public\n        pure\n        returns(\n            address sender\n        )\n    {\n        return ecrecover( _msgh, _v, _r, _s);\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isMember true if is member\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address payable _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isMember,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdMember( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strMember memory houseMember;\n\n        (   houseMember.walletAddr,\n            houseMember.name,\n            houseMember.balance,\n            houseMember.isMember,\n            houseMember.isManager ) = daoCLH.arrMembers( uid );\n\n        require( true == houseMember.isMember  , \"User is not a Member\" );\n\n        return (\n            houseMember.name,\n            houseMember.balance,\n            houseMember.isMember,\n            houseMember.isManager\n        );\n    }\n\n    /// @notice The list of all members address\n    /// @param _houseAddr address of the CLH\n    /// @return arrMembers array with list of members\n    function GetHouseUserList(\n        address payable _houseAddr\n    )\n        external\n        view\n        returns(\n            strMember[] memory arrMembers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint8 numActiveMembers = daoCLH.numActiveMembers( );\n        uint256 arrMembersLength = daoCLH.GetArrMembersLength();\n        strMember[] memory _arrMembers = new strMember[] ( numActiveMembers );\n\n        uint8 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrMembersLength ; uid++ ) {\n            strMember memory houseMember;\n\n            (   houseMember.walletAddr,\n                houseMember.name,\n                houseMember.balance,\n                houseMember.isMember,\n                houseMember.isManager ) = daoCLH.arrMembers( uid );\n\n            if( true == houseMember.isMember ){\n                _arrMembers[ index ] = houseMember;\n                index++;\n            }\n        }\n        return _arrMembers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return numActiveMembers Current members of a CLH\n    /// @return numManagerMembers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n    /// @return govRuleMaxActiveMembers Max of all members (including managers)\n    /// @return govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            uint8 numActiveMembers,\n            uint8 numManagerMembers,\n            uint8 govRuleApprovPercentage,\n            uint8 govRuleMaxActiveMembers,\n            uint8 govRuleMaxManagerMembers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.numActiveMembers(),\n            daoCLH.numManagerMembers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxActiveMembers(),\n            daoCLH.govRuleMaxManagerMembers()\n        );\n    }\n\n    function ValidateSingOffChainVote(\n        address _houseAddr,\n        address _voter,\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    ) \n      external view\n      returns( bool )\n    {\n      uint256 chainId = block.chainid;\n\n      bytes32 eip712DomainHash = keccak256(\n          abi.encode(\n              keccak256(abi.encodePacked(\n                  \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n              )),\n              keccak256(\"CLHouse\"),\n              keccak256(\"0.0.10\"),\n              chainId,\n              _houseAddr\n          )\n      );\n\n      bytes32 hashStruct = keccak256(\n        abi.encode(\n              keccak256(abi.encodePacked(\n                \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\"\n              )),\n              _voter,\n              _propId,\n              _support,\n              keccak256(abi.encodePacked(_justification))\n          )\n      );\n\n      bytes32 hash = keccak256(abi.encodePacked(\"\\x19\\x01\", eip712DomainHash, hashStruct));\n      \n      require( _signature.length == 65, \"Bad signature length\" );\n\n      bytes32 r;\n      bytes32 s;\n      uint8 v;\n\n      assembly {\n        // first 32 bytes, after the length prefix\n        r := mload( add( _signature, 32 ))\n        // second 32 bytes\n        s := mload( add( _signature, 64 ))\n        // final byte (first byte of the next 32 bytes)\n        v := byte( 0, mload( add( _signature, 96 )))\n      }\n\n      return _voter == ecrecover( hash, v, r, s );\n    }\n}",
  "sourceMap": "208:6011:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CLHouse/ApiCLHouse.sol",
  "type": "contract"
}