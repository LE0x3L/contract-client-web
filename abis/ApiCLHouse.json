{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "numActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "numManagerMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxManagerMembers",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isMember",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strMember[]",
          "name": "arrMembers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMember",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCDelMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_gov",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleMaxManagerMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleMaxActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_whiteListWallets",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addrCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "17": "contracts/CLHouse/ApiCLHouse.sol",
    "22": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/ApiCLHouse.sol",
    "exportedSymbols": {
      "ApiCLHouse": [
        2525
      ],
      "DebugDLGTCLL": [
        3914
      ],
      "ICLF": [
        4005
      ],
      "ICLHouse": [
        4238
      ],
      "IERC20": [
        3820
      ],
      "InvalidGovernanceType": [
        3908
      ],
      "__CONTRACT_NAME_HASH__": [
        3843
      ],
      "__CONTRACT_VERSION_HASH__": [
        3848
      ],
      "__GOV_COMMITTEE__": [
        3833
      ],
      "__GOV_DICTATORSHIP__": [
        3828
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        3838
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        3856
      ],
      "__STR_OCDELMEMBER_HASH__": [
        3888
      ],
      "__STR_OCINVIT_HASH__": [
        3864
      ],
      "__STR_OCNEWCLH_HASH__": [
        3904
      ],
      "__STR_OCNEWMEMBER_HASH__": [
        3880
      ],
      "__STR_OCREQUEST_HASH__": [
        3896
      ],
      "__STR_OCVOTE_HASH__": [
        3872
      ],
      "assetsEvent": [
        3928
      ],
      "memberEvent": [
        3921
      ],
      "proposalEvent": [
        3932
      ],
      "proposalType": [
        3942
      ],
      "strDataAddMember": [
        3987
      ],
      "strDataGovRules": [
        3999
      ],
      "strDataTxAssets": [
        3996
      ],
      "strMember": [
        3953
      ],
      "strProposal": [
        3973
      ],
      "strVote": [
        3980
      ]
    },
    "id": 2526,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1863,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:17"
      },
      {
        "absolutePath": "contracts/CLHouse/ICLHouse.sol",
        "file": "./ICLHouse.sol",
        "id": 1864,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2526,
        "sourceUnit": 4239,
        "src": "58:24:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ApiCLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1865,
          "nodeType": "StructuredDocumentation",
          "src": "84:124:17",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 2525,
        "linearizedBaseContracts": [
          2525
        ],
        "name": "ApiCLHouse",
        "nameLocation": "217:10:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1942,
              "nodeType": "Block",
              "src": "855:642:17",
              "statements": [
                {
                  "assignments": [
                    1883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1883,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "874:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1942,
                      "src": "865:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$4238",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 1882,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1881,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4238,
                          "src": "865:8:17"
                        },
                        "referencedDeclaration": 4238,
                        "src": "865:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$4238",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1887,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1885,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "893:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1884,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "883:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$4238_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:22:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$4238",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "865:40:17"
                },
                {
                  "assignments": [
                    1889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1889,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "924:3:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1942,
                      "src": "916:11:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1888,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "916:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1894,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1892,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "950:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1890,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "930:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$4238",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 1891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4118,
                      "src": "930:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "916:47:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "983:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1897,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1889,
                          "src": "988:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "983:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 1895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "974:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1901,
                  "nodeType": "ExpressionStatement",
                  "src": "974:43:17"
                },
                {
                  "assignments": [
                    1904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1904,
                      "mutability": "mutable",
                      "name": "houseMember",
                      "nameLocation": "1045:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1942,
                      "src": "1028:28:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                        "typeString": "struct strMember"
                      },
                      "typeName": {
                        "id": 1903,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1902,
                          "name": "strMember",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3953,
                          "src": "1028:9:17"
                        },
                        "referencedDeclaration": 3953,
                        "src": "1028:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strMember_$3953_storage_ptr",
                          "typeString": "struct strMember"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1905,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1028:28:17"
                },
                {
                  "expression": {
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 1906,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1904,
                            "src": "1071:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3944,
                          "src": "1071:22:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1909,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1904,
                            "src": "1107:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 1910,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3946,
                          "src": "1107:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 1911,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1904,
                            "src": "1137:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3948,
                          "src": "1137:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1913,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1904,
                            "src": "1170:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 1914,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3950,
                          "src": "1170:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 1915,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1904,
                            "src": "1204:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3952,
                          "src": "1204:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1917,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1067:160:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1920,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1889,
                          "src": "1249:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1918,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1883,
                          "src": "1230:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$4238",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 1919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrMembers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4060,
                        "src": "1230:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1230:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1067:187:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:187:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1274:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1926,
                            "name": "houseMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1904,
                            "src": "1282:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember memory"
                            }
                          },
                          "id": 1927,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMember",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3950,
                          "src": "1282:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1274:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206973206e6f742061204d656d626572",
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1306:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12ee78a4e3256880c48ef33e849500f4527b78edcdc23ebd7414ee510854c8fc",
                          "typeString": "literal_string \"User is not a Member\""
                        },
                        "value": "User is not a Member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12ee78a4e3256880c48ef33e849500f4527b78edcdc23ebd7414ee510854c8fc",
                          "typeString": "literal_string \"User is not a Member\""
                        }
                      ],
                      "id": 1924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1265:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:65:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1931,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:65:17"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1932,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "1362:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 1933,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3946,
                        "src": "1362:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1934,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "1392:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3948,
                        "src": "1392:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1936,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "1425:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMember",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3950,
                        "src": "1425:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1938,
                          "name": "houseMember",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "1459:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                            "typeString": "struct strMember memory"
                          }
                        },
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3952,
                        "src": "1459:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1940,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1348:142:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 1880,
                  "id": 1941,
                  "nodeType": "Return",
                  "src": "1341:149:17"
                }
              ]
            },
            "documentation": {
              "id": 1866,
              "nodeType": "StructuredDocumentation",
              "src": "234:350:17",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isMember true if is member\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 1943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "598:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "636:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "628:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "664:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "656:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:63:17"
            },
            "returnParameters": {
              "id": 1880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1873,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "755:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "741:18:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1872,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "778:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "773:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "isMember",
                  "nameLocation": "804:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "799:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1876,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1879,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "831:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "826:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1878,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:123:17"
            },
            "scope": 2525,
            "src": "589:908:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2039,
              "nodeType": "Block",
              "src": "1813:795:17",
              "statements": [
                {
                  "assignments": [
                    1955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1955,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1832:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2039,
                      "src": "1823:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$4238",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 1954,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1953,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4238,
                          "src": "1823:8:17"
                        },
                        "referencedDeclaration": 4238,
                        "src": "1823:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$4238",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1959,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1957,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "1851:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1956,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "1841:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$4238_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:22:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$4238",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1823:40:17"
                },
                {
                  "assignments": [
                    1961
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1961,
                      "mutability": "mutable",
                      "name": "numActiveMembers",
                      "nameLocation": "1880:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2039,
                      "src": "1874:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1960,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1874:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1965,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1962,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1955,
                        "src": "1899:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$4238",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 1963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numActiveMembers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4025,
                      "src": "1899:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1874:51:17"
                },
                {
                  "assignments": [
                    1967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1967,
                      "mutability": "mutable",
                      "name": "arrMembersLength",
                      "nameLocation": "1943:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2039,
                      "src": "1935:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1966,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1935:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1971,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1968,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1955,
                        "src": "1962:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$4238",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrMembersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4143,
                      "src": "1962:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1962:28:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1935:55:17"
                },
                {
                  "assignments": [
                    1976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1976,
                      "mutability": "mutable",
                      "name": "_arrMembers",
                      "nameLocation": "2019:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2039,
                      "src": "2000:30:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strMember_$3953_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strMember[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1974,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1973,
                            "name": "strMember",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3953,
                            "src": "2000:9:17"
                          },
                          "referencedDeclaration": 3953,
                          "src": "2000:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$3953_storage_ptr",
                            "typeString": "struct strMember"
                          }
                        },
                        "id": 1975,
                        "nodeType": "ArrayTypeName",
                        "src": "2000:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strMember_$3953_storage_$dyn_storage_ptr",
                          "typeString": "struct strMember[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1983,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1981,
                        "name": "numActiveMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1961,
                        "src": "2051:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2033:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strMember_$3953_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strMember memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1978,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1977,
                            "name": "strMember",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3953,
                            "src": "2037:9:17"
                          },
                          "referencedDeclaration": 3953,
                          "src": "2037:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strMember_$3953_storage_ptr",
                            "typeString": "struct strMember"
                          }
                        },
                        "id": 1979,
                        "nodeType": "ArrayTypeName",
                        "src": "2037:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strMember_$3953_storage_$dyn_storage_ptr",
                          "typeString": "struct strMember[]"
                        }
                      }
                    },
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$3953_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strMember memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2000:69:17"
                },
                {
                  "assignments": [
                    1985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1985,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2086:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2039,
                      "src": "2080:11:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1984,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2080:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1987,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2094:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2080:15:17"
                },
                {
                  "body": {
                    "id": 2035,
                    "nodeType": "Block",
                    "src": "2163:411:17",
                    "statements": [
                      {
                        "assignments": [
                          2000
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2000,
                            "mutability": "mutable",
                            "name": "houseMember",
                            "nameLocation": "2194:11:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 2035,
                            "src": "2177:28:17",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                              "typeString": "struct strMember"
                            },
                            "typeName": {
                              "id": 1999,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1998,
                                "name": "strMember",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3953,
                                "src": "2177:9:17"
                              },
                              "referencedDeclaration": 3953,
                              "src": "2177:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strMember_$3953_storage_ptr",
                                "typeString": "struct strMember"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2001,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2177:28:17"
                      },
                      {
                        "expression": {
                          "id": 2018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 2002,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2224:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 2004,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3944,
                                "src": "2224:22:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2005,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2264:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 2006,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3946,
                                "src": "2264:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2007,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2298:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 2008,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3948,
                                "src": "2298:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2009,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2335:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 2010,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isMember",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3950,
                                "src": "2335:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2011,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2373:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "id": 2012,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3952,
                                "src": "2373:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 2013,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2220:176:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2016,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1989,
                                "src": "2418:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2014,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1955,
                                "src": "2399:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$4238",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 2015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrMembers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4060,
                              "src": "2399:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 2017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2399:24:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "2220:203:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2019,
                        "nodeType": "ExpressionStatement",
                        "src": "2220:203:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 2020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2442:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 2021,
                              "name": "houseMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2000,
                              "src": "2450:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                "typeString": "struct strMember memory"
                              }
                            },
                            "id": 2022,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3950,
                            "src": "2450:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2442:28:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2034,
                        "nodeType": "IfStatement",
                        "src": "2438:126:17",
                        "trueBody": {
                          "id": 2033,
                          "nodeType": "Block",
                          "src": "2472:92:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 2028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2024,
                                    "name": "_arrMembers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1976,
                                    "src": "2490:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strMember_$3953_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strMember memory[] memory"
                                    }
                                  },
                                  "id": 2026,
                                  "indexExpression": {
                                    "id": 2025,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1985,
                                    "src": "2503:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2490:20:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2027,
                                  "name": "houseMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2000,
                                  "src": "2513:11:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                    "typeString": "struct strMember memory"
                                  }
                                },
                                "src": "2490:34:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strMember_$3953_memory_ptr",
                                  "typeString": "struct strMember memory"
                                }
                              },
                              "id": 2029,
                              "nodeType": "ExpressionStatement",
                              "src": "2490:34:17"
                            },
                            {
                              "expression": {
                                "id": 2031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2542:7:17",
                                "subExpression": {
                                  "id": 2030,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1985,
                                  "src": "2542:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 2032,
                              "nodeType": "ExpressionStatement",
                              "src": "2542:7:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1992,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1989,
                      "src": "2130:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1993,
                      "name": "arrMembersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1967,
                      "src": "2136:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2130:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2036,
                  "initializationExpression": {
                    "assignments": [
                      1989
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1989,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2120:3:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2036,
                        "src": "2112:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1988,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2112:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1991,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2126:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2112:15:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2155:5:17",
                      "subExpression": {
                        "id": 1995,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1989,
                        "src": "2155:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1997,
                    "nodeType": "ExpressionStatement",
                    "src": "2155:5:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "2107:467:17"
                },
                {
                  "expression": {
                    "id": 2037,
                    "name": "_arrMembers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1976,
                    "src": "2590:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$3953_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strMember memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1952,
                  "id": 2038,
                  "nodeType": "Return",
                  "src": "2583:18:17"
                }
              ]
            },
            "documentation": {
              "id": 1944,
              "nodeType": "StructuredDocumentation",
              "src": "1503:142:17",
              "text": "@notice The list of all members address\n @param _houseAddr address of the CLH\n @return arrMembers array with list of members"
            },
            "functionSelector": "b698be8d",
            "id": 2040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "1659:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1693:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2040,
                  "src": "1685:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:34:17"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "arrMembers",
                  "nameLocation": "1788:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2040,
                  "src": "1769:29:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strMember_$3953_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strMember[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1949,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1948,
                        "name": "strMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3953,
                        "src": "1769:9:17"
                      },
                      "referencedDeclaration": 3953,
                      "src": "1769:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strMember_$3953_storage_ptr",
                        "typeString": "struct strMember"
                      }
                    },
                    "id": 1950,
                    "nodeType": "ArrayTypeName",
                    "src": "1769:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strMember_$3953_storage_$dyn_storage_ptr",
                      "typeString": "struct strMember[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1755:53:17"
            },
            "scope": 2525,
            "src": "1650:958:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2095,
              "nodeType": "Block",
              "src": "5860:415:17",
              "statements": [
                {
                  "assignments": [
                    2064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2064,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "5879:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2095,
                      "src": "5870:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$4238",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 2063,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2062,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4238,
                          "src": "5870:8:17"
                        },
                        "referencedDeclaration": 4238,
                        "src": "5870:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$4238",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2068,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2066,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2043,
                        "src": "5898:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2065,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4238,
                      "src": "5888:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$4238_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 2067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5888:22:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$4238",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5870:40:17"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2069,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "5941:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4015,
                          "src": "5941:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5941:19:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2072,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "5974:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4020,
                          "src": "5974:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 2074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5974:31:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2075,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "6019:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4010,
                          "src": "6019:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6019:21:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2078,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "6054:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numActiveMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4025,
                          "src": "6054:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6054:25:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2081,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "6093:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagerMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4030,
                          "src": "6093:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6093:26:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2084,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "6133:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4035,
                          "src": "6133:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6133:32:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2087,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "6179:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxActiveMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4040,
                          "src": "6179:30:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6179:32:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2090,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2064,
                            "src": "6225:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$4238",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagerMembers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4045,
                          "src": "6225:31:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6225:33:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 2093,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5927:341:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(string memory,bytes32,bool,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 2061,
                  "id": 2094,
                  "nodeType": "Return",
                  "src": "5921:347:17"
                }
              ]
            },
            "documentation": {
              "id": 2041,
              "nodeType": "StructuredDocumentation",
              "src": "4773:644:17",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return numActiveMembers Current members of a CLH\n @return numManagerMembers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n @return govRuleMaxActiveMembers Max of all members (including managers)\n @return govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 2096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "5431:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5467:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5459:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5459:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5449:34:17"
            },
            "returnParameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "5557:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5543:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "5589:22:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5581:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "5630:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5625:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5625:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "mutability": "mutable",
                  "name": "numActiveMembers",
                  "nameLocation": "5662:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5656:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "numManagerMembers",
                  "nameLocation": "5698:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5692:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "5735:23:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5729:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5729:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "govRuleMaxActiveMembers",
                  "nameLocation": "5778:23:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5772:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5772:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagerMembers",
                  "nameLocation": "5821:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "5815:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5815:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5529:326:17"
            },
            "scope": 2525,
            "src": "5422:853:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2131,
              "nodeType": "Block",
              "src": "6629:534:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2107,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2101,
                            "src": "6648:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 2108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6648:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 2109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6669:2:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "6648:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 2111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6673:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 2106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6639:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6639:58:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2113,
                  "nodeType": "ExpressionStatement",
                  "src": "6639:58:17"
                },
                {
                  "assignments": [
                    2115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2115,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "6716:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2131,
                      "src": "6708:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2114,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6708:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2116,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6708:13:17"
                },
                {
                  "assignments": [
                    2118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2118,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "6739:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2131,
                      "src": "6731:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2119,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6731:13:17"
                },
                {
                  "assignments": [
                    2121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2121,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "6760:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2131,
                      "src": "6754:11:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2120,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6754:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2122,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6754:11:17"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6785:312:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6850:39:17",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "6871:10:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6883:2:17",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6866:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6866:21:17"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6859:5:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6859:30:17"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "6850:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6929:39:17",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "6950:10:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6962:2:17",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6945:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6945:21:17"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6938:5:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6938:30:17"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "6929:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7037:50:17",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7052:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "7067:10:17"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7079:2:17",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7062:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7062:21:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7055:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7055:30:17"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "7046:4:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7046:41:17"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "7037:5:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2101,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6871:10:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2101,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6950:10:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2101,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7067:10:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2115,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6850:5:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2118,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6929:5:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2121,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7037:5:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 2123,
                  "nodeType": "InlineAssembly",
                  "src": "6776:321:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2125,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2099,
                        "src": "7125:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2126,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "7135:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2127,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "7142:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2128,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2118,
                        "src": "7149:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2124,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "7114:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7114:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2105,
                  "id": 2130,
                  "nodeType": "Return",
                  "src": "7107:49:17"
                }
              ]
            },
            "documentation": {
              "id": 2097,
              "nodeType": "StructuredDocumentation",
              "src": "6281:197:17",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 2132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "6492:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2099,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "6522:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "6513:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2098,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6513:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6553:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "6540:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6540:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6503:66:17"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2132,
                  "src": "6615:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6615:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6613:11:17"
            },
            "scope": 2525,
            "src": "6483:680:17",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2183,
              "nodeType": "Block",
              "src": "7336:590:17",
              "statements": [
                {
                  "assignments": [
                    2144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2144,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "7354:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2183,
                      "src": "7346:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2143,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7346:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2156,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2148,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3856,
                            "src": "7424:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2149,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3843,
                            "src": "7467:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2150,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "7507:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2151,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7550:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "7550:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2153,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2136,
                            "src": "7581:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2146,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7396:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7396:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7396:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2145,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7373:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7373:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7346:269:17"
                },
                {
                  "assignments": [
                    2158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2158,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7634:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2183,
                      "src": "7626:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2157,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7626:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2166,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2162,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "7693:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2163,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "7731:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 2160,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7665:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7665:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7665:91:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2159,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7644:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7644:122:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7626:140:17"
                },
                {
                  "assignments": [
                    2168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2168,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7785:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2183,
                      "src": "7777:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2167,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7777:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2177,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 2172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7825:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 2173,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "7837:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2174,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2158,
                            "src": "7855:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2170,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7807:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7807:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7807:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2169,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7796:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7796:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7777:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2179,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "7897:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2180,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "7907:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2178,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "7884:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7884:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2142,
                  "id": 2182,
                  "nodeType": "Return",
                  "src": "7877:42:17"
                }
              ]
            },
            "functionSelector": "9f6fd7ab",
            "id": 2184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "7179:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2134,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "7207:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "7202:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7202:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2136,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7236:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "7228:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7228:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7269:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "7256:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7256:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7192:93:17"
            },
            "returnParameters": {
              "id": 2142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "7322:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7322:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7320:11:17"
            },
            "scope": 2525,
            "src": "7170:756:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2246,
              "nodeType": "Block",
              "src": "8155:676:17",
              "statements": [
                {
                  "assignments": [
                    2200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2200,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8173:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2246,
                      "src": "8165:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2199,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8165:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2212,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2204,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3856,
                            "src": "8243:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2205,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3843,
                            "src": "8286:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2206,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "8326:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2207,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8369:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8369:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2209,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2192,
                            "src": "8400:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2202,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8215:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8215:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8215:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2201,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8192:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8192:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8165:269:17"
                },
                {
                  "assignments": [
                    2214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2214,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8453:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2246,
                      "src": "8445:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2213,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8445:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2229,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2218,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3872,
                            "src": "8512:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2219,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2186,
                            "src": "8549:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2220,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2188,
                            "src": "8574:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2224,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2190,
                                    "src": "8629:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2222,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8611:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8611:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8611:34:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2221,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8600:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8600:47:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2216,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8484:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8484:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8484:177:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2215,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8463:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8463:208:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8445:226:17"
                },
                {
                  "assignments": [
                    2231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2231,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8690:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2246,
                      "src": "8682:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2230,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8682:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2240,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8730:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 2236,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2200,
                            "src": "8742:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2237,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2214,
                            "src": "8760:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2233,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8712:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8712:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8712:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2232,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8701:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8701:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8682:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2242,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2231,
                        "src": "8802:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2243,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2194,
                        "src": "8812:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2241,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "8789:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8789:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2198,
                  "id": 2245,
                  "nodeType": "Return",
                  "src": "8782:42:17"
                }
              ]
            },
            "functionSelector": "89ab062a",
            "id": 2247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "7942:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2186,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "7969:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "7964:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2185,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7964:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "7991:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "7986:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7986:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "8023:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "8009:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8009:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2192,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "8055:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "8047:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8047:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2194,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8088:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "8075:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2193,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8075:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7954:150:17"
            },
            "returnParameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "8141:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8141:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8139:11:17"
            },
            "scope": 2525,
            "src": "7933:898:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2320,
              "nodeType": "Block",
              "src": "9129:769:17",
              "statements": [
                {
                  "assignments": [
                    2267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2267,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9147:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "9139:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2266,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9139:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2279,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2271,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3856,
                            "src": "9217:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2272,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3843,
                            "src": "9260:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2273,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "9300:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2274,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9343:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9343:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2276,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "9374:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2269,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9189:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9189:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9189:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2268,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9166:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9166:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9139:269:17"
                },
                {
                  "assignments": [
                    2281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2281,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "9427:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "9419:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2280,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9419:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2303,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2285,
                            "name": "__STR_OCNEWMEMBER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3880,
                            "src": "9486:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2286,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "9528:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2290,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2251,
                                    "src": "9586:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2288,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9568:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9568:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9568:25:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2287,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9557:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9557:38:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2296,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2253,
                                    "src": "9642:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2294,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9624:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9624:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9624:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2293,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9613:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9613:45:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2299,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2255,
                            "src": "9676:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2300,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "9704:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2283,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9458:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9458:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9458:270:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2282,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9437:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9437:301:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9419:319:17"
                },
                {
                  "assignments": [
                    2305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2305,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9757:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2320,
                      "src": "9749:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2304,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9749:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2314,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 2309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9797:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 2310,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2267,
                            "src": "9809:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2311,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2281,
                            "src": "9827:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2307,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9779:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9779:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9779:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2306,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9768:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9768:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9749:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2316,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2305,
                        "src": "9869:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2317,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2261,
                        "src": "9879:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2315,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "9856:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9856:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2265,
                  "id": 2319,
                  "nodeType": "Return",
                  "src": "9849:42:17"
                }
              ]
            },
            "functionSelector": "bd8ccad5",
            "id": 2321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewMember",
            "nameLocation": "8847:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "8882:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "8874:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8874:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2251,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8917:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "8903:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8903:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8946:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "8932:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2252,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8932:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "8973:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "8968:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8968:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2257,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "9001:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "8993:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8993:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2259,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "9029:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "9021:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9021:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2261,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9062:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "9049:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9049:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8864:214:17"
            },
            "returnParameters": {
              "id": 2265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2321,
                  "src": "9115:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9115:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9113:11:17"
            },
            "scope": 2525,
            "src": "8838:1060:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2383,
              "nodeType": "Block",
              "src": "10142:685:17",
              "statements": [
                {
                  "assignments": [
                    2337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2337,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "10160:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2383,
                      "src": "10152:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2336,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10152:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2349,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2341,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3856,
                            "src": "10230:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2342,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3843,
                            "src": "10273:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2343,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "10313:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2344,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10356:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "10356:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2346,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2329,
                            "src": "10387:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2339,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10202:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10202:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10202:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2338,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10179:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10179:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10152:269:17"
                },
                {
                  "assignments": [
                    2351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2351,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "10440:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2383,
                      "src": "10432:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2350,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10432:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2366,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2355,
                            "name": "__STR_OCDELMEMBER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3888,
                            "src": "10499:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2356,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2323,
                            "src": "10541:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2360,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2325,
                                    "src": "10599:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2358,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10581:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10581:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10581:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2357,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10570:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10570:45:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2363,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2327,
                            "src": "10633:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2353,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10471:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10471:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10471:186:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2352,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10450:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10450:217:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10432:235:17"
                },
                {
                  "assignments": [
                    2368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2368,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "10686:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2383,
                      "src": "10678:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2367,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10678:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2377,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 2372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10726:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 2373,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "10738:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2374,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "10756:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2370,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10708:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10708:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10708:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2369,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10697:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10697:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10678:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2379,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "10798:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2380,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "10808:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2378,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "10785:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10785:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2335,
                  "id": 2382,
                  "nodeType": "Return",
                  "src": "10778:42:17"
                }
              ]
            },
            "functionSelector": "f746b003",
            "id": 2384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCDelMember",
            "nameLocation": "9914:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "9949:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "9941:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9941:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9984:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "9970:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9970:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "10014:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "10006:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10006:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "10042:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "10034:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10034:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10075:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "10062:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10062:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9931:160:17"
            },
            "returnParameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "10128:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10128:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10126:11:17"
            },
            "scope": 2525,
            "src": "9905:922:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2448,
              "nodeType": "Block",
              "src": "11041:682:17",
              "statements": [
                {
                  "assignments": [
                    2398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2398,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "11059:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2448,
                      "src": "11051:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2397,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11051:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2410,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2402,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3856,
                            "src": "11129:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2403,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3843,
                            "src": "11172:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2404,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "11212:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2405,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11255:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "11255:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2407,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2390,
                            "src": "11286:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2400,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11101:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11101:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11101:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2399,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11078:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11078:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11051:269:17"
                },
                {
                  "assignments": [
                    2412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2412,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "11339:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2448,
                      "src": "11331:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2411,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11331:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2431,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2416,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3896,
                            "src": "11398:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2420,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2386,
                                    "src": "11467:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2418,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11449:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11449:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11449:25:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2417,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11438:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11438:38:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2426,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2388,
                                    "src": "11523:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2424,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11505:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11505:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11505:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2423,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11494:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11494:45:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2414,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11370:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11370:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11370:183:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2413,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11349:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11349:214:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11331:232:17"
                },
                {
                  "assignments": [
                    2433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2433,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "11582:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2448,
                      "src": "11574:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2432,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11574:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2442,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 2437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11622:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 2438,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2398,
                            "src": "11634:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2439,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "11652:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2435,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11604:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11604:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11604:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2434,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11593:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11593:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11574:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2444,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2433,
                        "src": "11694:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2445,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2392,
                        "src": "11704:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2443,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "11681:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11681:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2396,
                  "id": 2447,
                  "nodeType": "Return",
                  "src": "11674:42:17"
                }
              ]
            },
            "functionSelector": "7b3bb156",
            "id": 2449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequest",
            "nameLocation": "10843:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "10882:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "10868:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2385,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10868:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2388,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "10911:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "10897:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2387,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10897:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2390,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "10941:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "10933:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10933:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2392,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10974:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "10961:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2391,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10961:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10858:132:17"
            },
            "returnParameters": {
              "id": 2396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "11027:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11027:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11025:11:17"
            },
            "scope": 2525,
            "src": "10834:889:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2523,
              "nodeType": "Block",
              "src": "12108:906:17",
              "statements": [
                {
                  "assignments": [
                    2473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2473,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "12126:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2523,
                      "src": "12118:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2472,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12118:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2485,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2477,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3856,
                            "src": "12196:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2478,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3843,
                            "src": "12239:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2479,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "12279:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2480,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12322:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "12322:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2482,
                            "name": "_addrCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2465,
                            "src": "12353:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2475,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12168:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12168:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12168:207:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2474,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12145:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12145:240:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12118:267:17"
                },
                {
                  "assignments": [
                    2487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2487,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "12404:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2523,
                      "src": "12396:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2486,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12396:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2506,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2491,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3904,
                            "src": "12463:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2495,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2451,
                                    "src": "12531:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2493,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "12513:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "12513:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12513:30:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2492,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "12502:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 2497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12502:43:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2498,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2453,
                            "src": "12563:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2499,
                            "name": "_gov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2455,
                            "src": "12594:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2500,
                            "name": "_govRuleMaxManagerMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2457,
                            "src": "12616:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 2501,
                            "name": "_govRuleMaxActiveMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2459,
                            "src": "12659:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 2502,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2461,
                            "src": "12701:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 2503,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2463,
                            "src": "12743:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2489,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12435:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12435:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12435:409:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2488,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12414:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12414:440:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12396:458:17"
                },
                {
                  "assignments": [
                    2508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2508,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "12873:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2523,
                      "src": "12865:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2507,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12865:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2517,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 2512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12913:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 2513,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2473,
                            "src": "12925:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2514,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "12943:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2510,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12895:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "12895:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12895:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2509,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12884:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12884:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12865:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2519,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "12985:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2520,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2467,
                        "src": "12995:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2518,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2132,
                      "src": "12972:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12972:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2471,
                  "id": 2522,
                  "nodeType": "Return",
                  "src": "12965:42:17"
                }
              ]
            },
            "functionSelector": "364ae0d8",
            "id": 2524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "11738:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2451,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "11776:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11762:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2450,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11762:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2453,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "11801:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11796:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11796:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2455,
                  "mutability": "mutable",
                  "name": "_gov",
                  "nameLocation": "11832:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11824:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2454,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11824:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2457,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagerMembers",
                  "nameLocation": "11852:25:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11846:31:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2456,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11846:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2459,
                  "mutability": "mutable",
                  "name": "_govRuleMaxActiveMembers",
                  "nameLocation": "11893:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11887:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2458,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11887:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2461,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "11933:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11927:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11927:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "11975:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "11967:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11967:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2465,
                  "mutability": "mutable",
                  "name": "_addrCLF",
                  "nameLocation": "12010:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "12002:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12002:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2467,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "12041:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "12028:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12028:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11752:305:17"
            },
            "returnParameters": {
              "id": 2471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "12094:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12094:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12092:11:17"
            },
            "scope": 2525,
            "src": "11729:1285:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2526,
        "src": "208:12808:17",
        "usedErrors": []
      }
    ],
    "src": "32:12984:17"
  },
  "bytecode": "608060405234801561001057600080fd5b50611da1806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806389ab062a1161006657806389ab062a146101435780639f6fd7ab14610156578063b698be8d14610169578063bd8ccad514610189578063f746b0031461019c57600080fd5b8063364ae0d8146100a3578063622eca77146100d35780637b3bb156146100e657806386abd826146100f95780638750bc3e1461011c575b600080fd5b6100b66100b13660046114d8565b6101af565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e13660046115b3565b6103f0565b6100b66100f43660046115fa565b6104b4565b61010c610107366004611697565b61064b565b6040516100ca949392919061172c565b61012f61012a36600461175d565b610817565b6040516100ca989796959493929190611781565b6100b66101513660046117d4565b610b58565b6100b6610164366004611869565b610ce4565b61017c61017736600461175d565b610e07565b6040516100ca91906118cb565b6100b661019736600461196f565b61103a565b6100b66101aa366004611a3a565b611237565b6000806040516020016101c190611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c833981519152468760405160200161020b959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610308907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c6279746573333220676f762c75696e743860208201527f20676f7652756c654d61784d616e616765724d656d626572732c75696e74382060408201527f676f7652756c654d61784163746976654d656d626572732c75696e743820676f60608201527f7652756c65417070726f7650657263656e746167652c6164647265737320776860808201526e6974654c69737457616c6c6574732960881b60a082015260af0190565b604051602081830303815290604052805190602001208c60405160200161032f9190611b35565b60408051601f198184030181528282528051602091820120908301939093528101919091528b15156060820152608081018b905260ff808b1660a0830152808a1660c0830152881660e08201526001600160a01b03871661010082015261012001604051602081830303815290604052805190602001209050600082826040516020016103bd929190611b51565b6040516020818303038152906040528051906020012090506103df81866103f0565b9d9c50505050505050505050505050565b6000815160411461043f5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa15801561049f573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806040516020016104c690611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001610510959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610572907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b60405160208183030381529060405280519060200120876040516020016105999190611b35565b60405160208183030381529060405280519060200120876040516020016105c09190611b35565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040528051906020012090506000828260405160200161061d929190611b51565b60405160208183030381529060405280519060200120905061063f81866103f0565b98975050505050505050565b6040516309c57df760e01b81526001600160a01b03828116600483015260609160009182918291879183918316906309c57df790602401602060405180830381865afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190611b6c565b9050806107085760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b6044820152606401610436565b610710611387565b604051638532cbf760e01b8152600481018390526001600160a01b03841690638532cbf790602401600060405180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261077d9190810190611bd2565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107f05760405162461bcd60e51b81526020600482015260146024820152732ab9b2b91034b9903737ba10309026b2b6b132b960611b6044820152606401610436565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088e9190810190611c55565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190611b6c565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190611c8a565b836001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190611ca7565b846001600160a01b0316638668eafc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190611ca7565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a789190611ca7565b866001600160a01b031663ab44997b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190611ca7565b876001600160a01b03166305fe66636040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190611ca7565b9850985098509850985098509850985050919395975091939597565b600080604051602001610b6a90611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001610bb4959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610c27907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610c509190611b35565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a0015b60405160208183030381529060405280519060200120905060008282604051602001610cb5929190611b51565b604051602081830303815290604052805190602001209050610cd781866103f0565b9998505050505050505050565b600080604051602001610cf690611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001610d40959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610d8d907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610dda9084908490608001611b51565b604051602081830303815290604052805190602001209050610dfc81866103f0565b979650505050505050565b606060008290506000816001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190611ca7565b90506000826001600160a01b031663824c88da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed89190611b6c565b905060008260ff1667ffffffffffffffff811115610ef857610ef86113c3565b604051908082528060200260200182016040528015610f3157816020015b610f1e611387565b815260200190600190039081610f165790505b509050600060015b8381101561102e57610f49611387565b604051638532cbf760e01b8152600481018390526001600160a01b03881690638532cbf790602401600060405180830381865afa158015610f8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb69190810190611bd2565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561101b5780848460ff168151811061100157611001611cc4565b6020026020010181905250828061101790611cf0565b9350505b508061102681611d10565b915050610f39565b50909695505050505050565b60008060405160200161104c90611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001611096959493929190611b09565b604051602081830303815290604052805190602001209050600060405160200161113a907f7374724f434e65774d656d62657228616464726573732077616c6c657441646481527f722c737472696e67206e616d652c737472696e67206465736372697074696f6e60208201527f2c626f6f6c2069734d616e616765722c75696e743235362064656c617954696d604082015261652960f01b606082015260620190565b604051602081830303815290604052805190602001208a8a6040516020016111629190611b35565b604051602081830303815290604052805190602001208a6040516020016111899190611b35565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e00160405160208183030381529060405280519060200120905060008282604051602001611206929190611b51565b60405160208183030381529060405280519060200120905061122881866103f0565b9b9a5050505050505050505050565b60008060405160200161124990611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001611293959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001611316907f7374724f4344656c4d656d62657228616464726573732077616c6c657441646481527f722c737472696e67206465736372697074696f6e2c75696e743235362064656c602082015266617954696d652960c81b604082015260470190565b60405160208183030381529060405280519060200120888860405160200161133e9190611b35565b6040516020818303038152906040528051906020012088604051602001610c8894939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611402576114026113c3565b604052919050565b600067ffffffffffffffff821115611424576114246113c3565b50601f01601f191660200190565b600082601f83011261144357600080fd5b81356114566114518261140a565b6113d9565b81815284602083860101111561146b57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461149657600080fd5b50565b60ff8116811461149657600080fd5b80356114b381611499565b919050565b6001600160a01b038116811461149657600080fd5b80356114b3816114b8565b60008060008060008060008060006101208a8c0312156114f757600080fd5b893567ffffffffffffffff8082111561150f57600080fd5b61151b8d838e01611432565b9a5060208c0135915061152d82611488565b90985060408b0135975060608b01359061154682611499565b81975061155560808d016114a8565b965061156360a08d016114a8565b955061157160c08d016114cd565b945061157f60e08d016114cd565b93506101008c013591508082111561159657600080fd5b506115a38c828d01611432565b9150509295985092959850929598565b600080604083850312156115c657600080fd5b82359150602083013567ffffffffffffffff8111156115e457600080fd5b6115f085828601611432565b9150509250929050565b6000806000806080858703121561161057600080fd5b843567ffffffffffffffff8082111561162857600080fd5b61163488838901611432565b9550602087013591508082111561164a57600080fd5b61165688838901611432565b945060408701359150611668826114b8565b9092506060860135908082111561167e57600080fd5b5061168b87828801611432565b91505092959194509250565b600080604083850312156116aa57600080fd5b82356116b5816114b8565b915060208301356116c5816114b8565b809150509250929050565b60005b838110156116eb5781810151838201526020016116d3565b838111156116fa576000848401525b50505050565b600081518084526117188160208601602086016116d0565b601f01601f19169290920160200192915050565b60808152600061173f6080830187611700565b60208301959095525091151560408301521515606090910152919050565b60006020828403121561176f57600080fd5b813561177a816114b8565b9392505050565b60006101008083526117958184018c611700565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b600080600080600060a086880312156117ec57600080fd5b8535945060208601356117fe81611488565b9350604086013567ffffffffffffffff8082111561181b57600080fd5b61182789838a01611432565b945060608801359150611839826114b8565b9092506080870135908082111561184f57600080fd5b5061185c88828901611432565b9150509295509295909350565b60008060006060848603121561187e57600080fd5b833561188981611488565b92506020840135611899816114b8565b9150604084013567ffffffffffffffff8111156118b557600080fd5b6118c186828701611432565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561196157888303603f19018552815180516001600160a01b031684528781015160a08986018190529061192b82870182611700565b838a0151878b015260608085015115159088015260809384015115159390960192909252505093860193908601906001016118f2565b509098975050505050505050565b600080600080600080600060e0888a03121561198a57600080fd5b8735611995816114b8565b9650602088013567ffffffffffffffff808211156119b257600080fd5b6119be8b838c01611432565b975060408a01359150808211156119d457600080fd5b6119e08b838c01611432565b965060608a013591506119f282611488565b81955060808a01359450611a0860a08b016114cd565b935060c08a0135915080821115611a1e57600080fd5b50611a2b8a828b01611432565b91505092959891949750929550565b600080600080600060a08688031215611a5257600080fd5b8535611a5d816114b8565b9450602086013567ffffffffffffffff80821115611a7a57600080fd5b611a8689838a01611432565b95506040880135945060608801359150611839826114b8565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611b478184602087016116d0565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611b7e57600080fd5b5051919050565b600082601f830112611b9657600080fd5b8151611ba46114518261140a565b818152846020838601011115611bb957600080fd5b611bca8260208301602087016116d0565b949350505050565b600080600080600060a08688031215611bea57600080fd5b8551611bf5816114b8565b602087015190955067ffffffffffffffff811115611c1257600080fd5b611c1e88828901611b85565b945050604086015192506060860151611c3681611488565b6080870151909250611c4781611488565b809150509295509295909350565b600060208284031215611c6757600080fd5b815167ffffffffffffffff811115611c7e57600080fd5b611bca84828501611b85565b600060208284031215611c9c57600080fd5b815161177a81611488565b600060208284031215611cb957600080fd5b815161177a81611499565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611d0757611d07611cda565b60010192915050565b6000600019821415611d2457611d24611cda565b506001019056fe01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c87507ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64a26469706673582212201d27591366abcb850af39665ca48b5685c15b71f5aaa16e9bb20845ca1159c8464736f6c634300080c0033",
  "bytecodeSha1": "9b549373d07a0112439d2325c8299a82c7fc9ee6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ApiCLHouse",
  "coverageMap": {
    "branches": {
      "17": {
        "ApiCLHouse.GetHouseUserList": {
          "20": [
            2442,
            2470,
            false
          ]
        },
        "ApiCLHouse.GetUserInfoByAddress": {
          "18": [
            983,
            991,
            true
          ],
          "19": [
            1274,
            1302,
            true
          ]
        },
        "ApiCLHouse.SignerOfMsg": {
          "17": [
            6648,
            6671,
            true
          ]
        }
      },
      "22": {}
    },
    "statements": {
      "17": {
        "ApiCLHouse.GetHouseProperties": {
          "8": [
            5921,
            6268
          ]
        },
        "ApiCLHouse.GetHouseUserList": {
          "11": [
            2220,
            2423
          ],
          "12": [
            2490,
            2524
          ],
          "13": [
            2542,
            2549
          ],
          "14": [
            2155,
            2160
          ],
          "15": [
            2583,
            2601
          ]
        },
        "ApiCLHouse.GetUserInfoByAddress": {
          "4": [
            974,
            1017
          ],
          "5": [
            1067,
            1254
          ],
          "6": [
            1265,
            1330
          ],
          "7": [
            1341,
            1490
          ]
        },
        "ApiCLHouse.SignerOCInvit": {
          "10": [
            7877,
            7919
          ]
        },
        "ApiCLHouse.SignerOCNewCLH": {
          "0": [
            12965,
            13007
          ]
        },
        "ApiCLHouse.SignerOCNewMember": {
          "16": [
            9849,
            9891
          ]
        },
        "ApiCLHouse.SignerOCRequest": {
          "3": [
            11674,
            11716
          ]
        },
        "ApiCLHouse.SignerOCVote": {
          "9": [
            8782,
            8824
          ]
        },
        "ApiCLHouse.SignerOfMsg": {
          "1": [
            6639,
            6697
          ],
          "2": [
            7107,
            7156
          ]
        }
      },
      "22": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806389ab062a1161006657806389ab062a146101435780639f6fd7ab14610156578063b698be8d14610169578063bd8ccad514610189578063f746b0031461019c57600080fd5b8063364ae0d8146100a3578063622eca77146100d35780637b3bb156146100e657806386abd826146100f95780638750bc3e1461011c575b600080fd5b6100b66100b13660046114d8565b6101af565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e13660046115b3565b6103f0565b6100b66100f43660046115fa565b6104b4565b61010c610107366004611697565b61064b565b6040516100ca949392919061172c565b61012f61012a36600461175d565b610817565b6040516100ca989796959493929190611781565b6100b66101513660046117d4565b610b58565b6100b6610164366004611869565b610ce4565b61017c61017736600461175d565b610e07565b6040516100ca91906118cb565b6100b661019736600461196f565b61103a565b6100b66101aa366004611a3a565b611237565b6000806040516020016101c190611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c833981519152468760405160200161020b959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610308907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c6279746573333220676f762c75696e743860208201527f20676f7652756c654d61784d616e616765724d656d626572732c75696e74382060408201527f676f7652756c654d61784163746976654d656d626572732c75696e743820676f60608201527f7652756c65417070726f7650657263656e746167652c6164647265737320776860808201526e6974654c69737457616c6c6574732960881b60a082015260af0190565b604051602081830303815290604052805190602001208c60405160200161032f9190611b35565b60408051601f198184030181528282528051602091820120908301939093528101919091528b15156060820152608081018b905260ff808b1660a0830152808a1660c0830152881660e08201526001600160a01b03871661010082015261012001604051602081830303815290604052805190602001209050600082826040516020016103bd929190611b51565b6040516020818303038152906040528051906020012090506103df81866103f0565b9d9c50505050505050505050505050565b6000815160411461043f5760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa15801561049f573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806040516020016104c690611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001610510959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610572907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b60405160208183030381529060405280519060200120876040516020016105999190611b35565b60405160208183030381529060405280519060200120876040516020016105c09190611b35565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040528051906020012090506000828260405160200161061d929190611b51565b60405160208183030381529060405280519060200120905061063f81866103f0565b98975050505050505050565b6040516309c57df760e01b81526001600160a01b03828116600483015260609160009182918291879183918316906309c57df790602401602060405180830381865afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c39190611b6c565b9050806107085760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b6044820152606401610436565b610710611387565b604051638532cbf760e01b8152600481018390526001600160a01b03841690638532cbf790602401600060405180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261077d9190810190611bd2565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107f05760405162461bcd60e51b81526020600482015260146024820152732ab9b2b91034b9903737ba10309026b2b6b132b960611b6044820152606401610436565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088e9190810190611c55565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190611b6c565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109529190611c8a565b836001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190611ca7565b846001600160a01b0316638668eafc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190611ca7565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a789190611ca7565b866001600160a01b031663ab44997b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190611ca7565b876001600160a01b03166305fe66636040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190611ca7565b9850985098509850985098509850985050919395975091939597565b600080604051602001610b6a90611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001610bb4959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610c27907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610c509190611b35565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a0015b60405160208183030381529060405280519060200120905060008282604051602001610cb5929190611b51565b604051602081830303815290604052805190602001209050610cd781866103f0565b9998505050505050505050565b600080604051602001610cf690611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001610d40959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001610d8d907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610dda9084908490608001611b51565b604051602081830303815290604052805190602001209050610dfc81866103f0565b979650505050505050565b606060008290506000816001600160a01b031663da9bca216040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190611ca7565b90506000826001600160a01b031663824c88da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed89190611b6c565b905060008260ff1667ffffffffffffffff811115610ef857610ef86113c3565b604051908082528060200260200182016040528015610f3157816020015b610f1e611387565b815260200190600190039081610f165790505b509050600060015b8381101561102e57610f49611387565b604051638532cbf760e01b8152600481018390526001600160a01b03881690638532cbf790602401600060405180830381865afa158015610f8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb69190810190611bd2565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561101b5780848460ff168151811061100157611001611cc4565b6020026020010181905250828061101790611cf0565b9350505b508061102681611d10565b915050610f39565b50909695505050505050565b60008060405160200161104c90611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001611096959493929190611b09565b604051602081830303815290604052805190602001209050600060405160200161113a907f7374724f434e65774d656d62657228616464726573732077616c6c657441646481527f722c737472696e67206e616d652c737472696e67206465736372697074696f6e60208201527f2c626f6f6c2069734d616e616765722c75696e743235362064656c617954696d604082015261652960f01b606082015260620190565b604051602081830303815290604052805190602001208a8a6040516020016111629190611b35565b604051602081830303815290604052805190602001208a6040516020016111899190611b35565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e00160405160208183030381529060405280519060200120905060008282604051602001611206929190611b51565b60405160208183030381529060405280519060200120905061122881866103f0565b9b9a5050505050505050505050565b60008060405160200161124990611a9f565b60405160208183030381529060405280519060200120600080516020611d2c833981519152600080516020611d4c8339815191524687604051602001611293959493929190611b09565b6040516020818303038152906040528051906020012090506000604051602001611316907f7374724f4344656c4d656d62657228616464726573732077616c6c657441646481527f722c737472696e67206465736372697074696f6e2c75696e743235362064656c602082015266617954696d652960c81b604082015260470190565b60405160208183030381529060405280519060200120888860405160200161133e9190611b35565b6040516020818303038152906040528051906020012088604051602001610c8894939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611402576114026113c3565b604052919050565b600067ffffffffffffffff821115611424576114246113c3565b50601f01601f191660200190565b600082601f83011261144357600080fd5b81356114566114518261140a565b6113d9565b81815284602083860101111561146b57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461149657600080fd5b50565b60ff8116811461149657600080fd5b80356114b381611499565b919050565b6001600160a01b038116811461149657600080fd5b80356114b3816114b8565b60008060008060008060008060006101208a8c0312156114f757600080fd5b893567ffffffffffffffff8082111561150f57600080fd5b61151b8d838e01611432565b9a5060208c0135915061152d82611488565b90985060408b0135975060608b01359061154682611499565b81975061155560808d016114a8565b965061156360a08d016114a8565b955061157160c08d016114cd565b945061157f60e08d016114cd565b93506101008c013591508082111561159657600080fd5b506115a38c828d01611432565b9150509295985092959850929598565b600080604083850312156115c657600080fd5b82359150602083013567ffffffffffffffff8111156115e457600080fd5b6115f085828601611432565b9150509250929050565b6000806000806080858703121561161057600080fd5b843567ffffffffffffffff8082111561162857600080fd5b61163488838901611432565b9550602087013591508082111561164a57600080fd5b61165688838901611432565b945060408701359150611668826114b8565b9092506060860135908082111561167e57600080fd5b5061168b87828801611432565b91505092959194509250565b600080604083850312156116aa57600080fd5b82356116b5816114b8565b915060208301356116c5816114b8565b809150509250929050565b60005b838110156116eb5781810151838201526020016116d3565b838111156116fa576000848401525b50505050565b600081518084526117188160208601602086016116d0565b601f01601f19169290920160200192915050565b60808152600061173f6080830187611700565b60208301959095525091151560408301521515606090910152919050565b60006020828403121561176f57600080fd5b813561177a816114b8565b9392505050565b60006101008083526117958184018c611700565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b600080600080600060a086880312156117ec57600080fd5b8535945060208601356117fe81611488565b9350604086013567ffffffffffffffff8082111561181b57600080fd5b61182789838a01611432565b945060608801359150611839826114b8565b9092506080870135908082111561184f57600080fd5b5061185c88828901611432565b9150509295509295909350565b60008060006060848603121561187e57600080fd5b833561188981611488565b92506020840135611899816114b8565b9150604084013567ffffffffffffffff8111156118b557600080fd5b6118c186828701611432565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561196157888303603f19018552815180516001600160a01b031684528781015160a08986018190529061192b82870182611700565b838a0151878b015260608085015115159088015260809384015115159390960192909252505093860193908601906001016118f2565b509098975050505050505050565b600080600080600080600060e0888a03121561198a57600080fd5b8735611995816114b8565b9650602088013567ffffffffffffffff808211156119b257600080fd5b6119be8b838c01611432565b975060408a01359150808211156119d457600080fd5b6119e08b838c01611432565b965060608a013591506119f282611488565b81955060808a01359450611a0860a08b016114cd565b935060c08a0135915080821115611a1e57600080fd5b50611a2b8a828b01611432565b91505092959891949750929550565b600080600080600060a08688031215611a5257600080fd5b8535611a5d816114b8565b9450602086013567ffffffffffffffff80821115611a7a57600080fd5b611a8689838a01611432565b95506040880135945060608801359150611839826114b8565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611b478184602087016116d0565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611b7e57600080fd5b5051919050565b600082601f830112611b9657600080fd5b8151611ba46114518261140a565b818152846020838601011115611bb957600080fd5b611bca8260208301602087016116d0565b949350505050565b600080600080600060a08688031215611bea57600080fd5b8551611bf5816114b8565b602087015190955067ffffffffffffffff811115611c1257600080fd5b611c1e88828901611b85565b945050604086015192506060860151611c3681611488565b6080870151909250611c4781611488565b809150509295509295909350565b600060208284031215611c6757600080fd5b815167ffffffffffffffff811115611c7e57600080fd5b611bca84828501611b85565b600060208284031215611c9c57600080fd5b815161177a81611488565b600060208284031215611cb957600080fd5b815161177a81611499565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611d0757611d07611cda565b60010192915050565b6000600019821415611d2457611d24611cda565b506001019056fe01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c87507ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64a26469706673582212201d27591366abcb850af39665ca48b5685c15b71f5aaa16e9bb20845ca1159c8464736f6c634300080c0033",
  "deployedSourceMap": "208:12808:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11729:1285;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3078:32:24;;;3060:51;;3048:2;3033:18;11729:1285:17;;;;;;;;6483:680;;;;;;:::i;:::-;;:::i;10834:889::-;;;;;;:::i;:::-;;:::i;589:908::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5422:853::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;7933:898::-;;;;;;:::i;:::-;;:::i;7170:756::-;;;;;;:::i;:::-;;:::i;1650:958::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8838:1060::-;;;;;;:::i;:::-;;:::i;9905:922::-;;;;;;:::i;:::-;;:::i;11729:1285::-;12094:7;12118:24;531:116:22;;;;;;;:::i;:::-;;;;;;;;;;;;;516:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;12322:13:17;12353:8;12168:207;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12145:240;;;;;;12118:267;;12396:15;1480:209:22;;;;;;12850:34:24;12838:47;;12915:34;12910:2;12901:12;;12894:56;12980:34;12975:2;12966:12;;12959:56;13045:34;13040:2;13031:12;;13024:56;13111:34;13105:3;13096:13;;13089:57;-1:-1:-1;;;13171:3:24;13162:13;;13155:40;13220:3;13211:13;;12636:594;1480:209:22;;;;;;;;;;;;;1465:226;;;;;;12531:10:17;12513:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12513:30:17;;;;;;;;;12502:43;;12513:30;12502:43;;;;12435:409;;;13841:25:24;;;;13882:18;;13875:34;;;;13952:14;;13945:22;13925:18;;;13918:50;13984:18;;;13977:34;;;14060:4;14048:17;;;14027:19;;;14020:46;14103:17;;;14082:19;;;14075:46;14158:17;;14137:19;;;14130:46;-1:-1:-1;;;;;14213:32:24;;14192:19;;;14185:61;13813:19;;12435:409:17;;;;;;;;;;;;12414:440;;;;;;12396:458;;12865:16;12925;12943:7;12895:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12884:70;;;;;;12865:89;;12972:35;12985:8;12995:10;12972:11;:35::i;:::-;12965:42;11729:1285;-1:-1:-1;;;;;;;;;;;;;11729:1285:17:o;6483:680::-;6615:7;6648:10;:17;6669:2;6648:23;6639:58;;;;-1:-1:-1;;;6639:58:17;;14856:2:24;6639:58:17;;;14838:21:24;14895:2;14875:18;;;14868:30;-1:-1:-1;;;14914:18:24;;;14907:50;14974:18;;6639:58:17;;;;;;;;;6883:2;6866:21;;;6859:30;6962:2;6945:21;;;6938:30;7079:2;7062:21;;;7055:30;7114:42;;6708:13;7114:42;;;;;;;;;15230:25:24;;;7046:41:17;;15271:18:24;;;15264:45;;;15325:18;;15318:34;;;15368:18;;;15361:34;;;6859:30:17;;7114:42;;15202:19:24;;7114:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7114:42:17;;-1:-1:-1;;7114:42:17;;;6483:680;-1:-1:-1;;;;;;;6483:680:17:o;10834:889::-;11027:7;11051:24;531:116:22;;;;;;;:::i;:::-;;;;;;;;;;;;;516:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11255:13:17;11286:10;11101:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11078:242;;;;;;11051:269;;11331:15;1342:78:22;;;;;;15620:34:24;15608:47;;-1:-1:-1;;;15680:2:24;15671:12;;15664:36;15725:2;15716:12;;15406:328;1342:78:22;;;;;;;;;;;;;1327:95;;;;;;11467:5:17;11449:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;11438:38;;;;;;11523:12;11505:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11505:32:17;;;;;;;;;11494:45;;11505:32;11494:45;;;;11370:183;;;15941:25:24;;;;15982:18;;15975:34;;;;16025:18;;;16018:34;;;;15914:18;;11370:183:17;;;;;;;;;;;;11349:214;;;;;;11331:232;;11574:16;11634;11652:7;11604:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11593:70;;;;;;11574:89;;11681:35;11694:8;11704:10;11681:11;:35::i;:::-;11674:42;10834:889;-1:-1:-1;;;;;;;;10834:889:17:o;589:908::-;930:33;;-1:-1:-1;;;930:33:17;;-1:-1:-1;;;;;3078:32:24;;;930:33:17;;;3060:51:24;741:18:17;;773:12;;;;;;893:10;;773:12;;930:18;;;;;3033::24;;930:33:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;916:47;-1:-1:-1;983:8:17;974:43;;;;-1:-1:-1;;;974:43:17;;16454:2:24;974:43:17;;;16436:21:24;16493:2;16473:18;;;16466:30;-1:-1:-1;;;16512:18:24;;;16505:49;16571:18;;974:43:17;16252:343:24;974:43:17;1028:28;;:::i;:::-;1230:24;;-1:-1:-1;;;1230:24:17;;;;;16746:25:24;;;-1:-1:-1;;;;;1230:17:17;;;;;16719:18:24;;1230:24:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1230:24:17;;;;;;;;;;;;:::i;:::-;1067:187;;1204:21;;;1067:187;;;1170:20;;;1067:187;;;1137:19;;;1067:187;;;;1107:16;;;1067:187;;;;-1:-1:-1;;;;;1067:187:17;;;;;1274:4;:28;1265:65;;;;-1:-1:-1;;;1265:65:17;;18208:2:24;1265:65:17;;;18190:21:24;18247:2;18227:18;;;18220:30;-1:-1:-1;;;18266:18:24;;;18259:50;18326:18;;1265:65:17;18006:344:24;1265:65:17;1362:16;;;;1392:19;;;;1425:20;;;;1459:21;;;;;1362:16;;1392:19;;-1:-1:-1;1425:20:17;;-1:-1:-1;1459:21:17;-1:-1:-1;589:908:17;-1:-1:-1;;;;;589:908:17:o;5422:853::-;5543:24;5581:30;5625:17;5656:22;5692:23;5729:29;5772;5815:30;5870:15;5898:10;5870:40;;5941:6;-1:-1:-1;;;;;5941:17:17;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5941:19:17;;;;;;;;;;;;:::i;:::-;5974:6;-1:-1:-1;;;;;5974:29:17;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6019:6;-1:-1:-1;;;;;6019:19:17;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6054:6;-1:-1:-1;;;;;6054:23:17;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6093:6;-1:-1:-1;;;;;6093:24:17;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6133:6;-1:-1:-1;;;;;6133:30:17;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6179:6;-1:-1:-1;;;;;6179:30:17;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6225:6;-1:-1:-1;;;;;6225:31:17;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5921:347;;;;;;;;;;;;;;;;;5422:853;;;;;;;;;:::o;7933:898::-;8141:7;8165:24;531:116:22;;;;;;;:::i;:::-;;;;;;;;;;;;;516:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8369:13:17;8400:10;8215:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8192:242;;;;;;8165:269;;8445:15;825:93:22;;;;;;19602:34:24;19590:47;;19667:29;19662:2;19653:12;;19646:51;19722:2;19713:12;;19388:343;825:93:22;;;;;;;;;;;;;810:110;;;;;;8549:7:17;8574:8;8629:14;8611:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8611:34:17;;;;;;;;;8600:47;;8611:34;8600:47;;;;8484:177;;;19961:25:24;;;;20002:18;;19995:34;;;;20072:14;20065:22;20045:18;;;20038:50;20104:18;;;20097:34;;;;19933:19;;8484:177:17;;;;;;;;;;;;;8463:208;;;;;;8445:226;;8682:16;8742;8760:7;8712:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8701:70;;;;;;8682:89;;8789:35;8802:8;8812:10;8789:11;:35::i;:::-;8782:42;7933:898;-1:-1:-1;;;;;;;;;7933:898:17:o;7170:756::-;7322:7;7346:24;531:116:22;;;;;;;:::i;:::-;;;;;;;;;;;;;516:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7550:13:17;7581:10;7396:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7373:242;;;;;;7346:269;;7626:15;706:61:22;;;;;;20356:29:24;20344:42;;20411:2;20402:12;;20142:278;706:61:22;;;;;;;-1:-1:-1;;706:61:22;;;;;;691:78;;706:61;691:78;;;;7665:91:17;;;20593:25:24;20661:14;;20654:22;20634:18;;;20627:50;7665:91:17;;;;;;;;;20566:18:24;;;7665:91:17;;;7644:122;;;;;;-1:-1:-1;;;7807:57:17;;7837:16;;7644:122;;7807:57;;;:::i;:::-;;;;;;;;;;;;;7796:70;;;;;;7777:89;;7884:35;7897:8;7907:10;7884:11;:35::i;:::-;7877:42;7170:756;-1:-1:-1;;;;;;;7170:756:17:o;1650:958::-;1769:29;1823:15;1851:10;1823:40;;1874:22;1899:6;-1:-1:-1;;;;;1899:23:17;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1874:51;;1935:24;1962:6;-1:-1:-1;;;;;1962:26:17;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1935:55;;2000:30;2051:16;2033:36;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2000:69:17;-1:-1:-1;2080:11:17;2126:1;2107:467;2136:16;2130:3;:22;2107:467;;;2177:28;;:::i;:::-;2399:24;;-1:-1:-1;;;2399:24:17;;;;;16746:25:24;;;-1:-1:-1;;;;;2399:17:17;;;;;16719:18:24;;2399:24:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2399:24:17;;;;;;;;;;;;:::i;:::-;2220:203;;2373:21;;;2220:203;;;2335:20;;;2220:203;;;2298:19;;;2220:203;;;;2264:16;;;2220:203;;;;-1:-1:-1;;;;;2220:203:17;;;;;2442:4;:28;2438:126;;;2513:11;2490;2503:5;2490:20;;;;;;;;;;:::i;:::-;;;;;;:34;;;;2542:7;;;;;:::i;:::-;;;;2438:126;-1:-1:-1;2155:5:17;;;;:::i;:::-;;;;2107:467;;;-1:-1:-1;2590:11:17;;1650:958;-1:-1:-1;;;;;;1650:958:17:o;8838:1060::-;9115:7;9139:24;531:116:22;;;;;;;:::i;:::-;;;;;;;;;;;;;516:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9343:13:17;9374:10;9189:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9166:242;;;;;;9139:269;;9419:15;981:132:22;;;;;;21486:34:24;21474:47;;21551:34;21546:2;21537:12;;21530:56;21616:34;21611:2;21602:12;;21595:56;-1:-1:-1;;;21676:2:24;21667:12;;21660:26;21711:2;21702:12;;21272:448;981:132:22;;;;;;;;;;;;;966:149;;;;;;9528:11:17;9586:5;9568:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9557:38;;;;;;9642:12;9624:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9624:32:17;;;;;;;;;9613:45;;9624:32;9613:45;;;;9458:270;;;22006:25:24;;;;-1:-1:-1;;;;;22067:32:24;;;22047:18;;;22040:60;;;;22116:18;;;22109:34;22159:18;;;22152:34;;;;22230:14;;22223:22;22202:19;;;22195:51;22262:19;;;22255:35;;;21978:19;;9458:270:17;;;;;;;;;;;;9437:301;;;;;;9419:319;;9749:16;9809;9827:7;9779:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9768:70;;;;;;9749:89;;9856:35;9869:8;9879:10;9856:11;:35::i;:::-;9849:42;8838:1060;-1:-1:-1;;;;;;;;;;;8838:1060:17:o;9905:922::-;10128:7;10152:24;531:116:22;;;;;;;:::i;:::-;;;;;;;;;;;;;516:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10356:13:17;10387:10;10202:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10179:242;;;;;;10152:269;;10432:15;1176:105:22;;;;;;22515:34:24;22503:47;;22580:34;22575:2;22566:12;;22559:56;-1:-1:-1;;;22640:2:24;22631:12;;22624:31;22680:2;22671:12;;22301:388;1176:105:22;;;;;;;;;;;;;1161:122;;;;;;10541:11:17;10599:12;10581:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;10570:45;;;;;;10633:10;10471:186;;;;;;;;;;22925:25:24;;;-1:-1:-1;;;;;22986:32:24;;;;22981:2;22966:18;;22959:60;23050:2;23035:18;;23028:34;23093:2;23078:18;;23071:34;22912:3;22897:19;;22694:417;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:24:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:24;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:24:o;426:187::-;475:4;508:18;500:6;497:30;494:56;;;530:18;;:::i;:::-;-1:-1:-1;596:2:24;575:15;-1:-1:-1;;571:29:24;602:4;567:40;;426:187::o;618:464::-;661:5;714:3;707:4;699:6;695:17;691:27;681:55;;732:1;729;722:12;681:55;768:6;755:20;799:49;815:32;844:2;815:32;:::i;:::-;799:49;:::i;:::-;873:2;864:7;857:19;919:3;912:4;907:2;899:6;895:15;891:26;888:35;885:55;;;936:1;933;926:12;885:55;1001:2;994:4;986:6;982:17;975:4;966:7;962:18;949:55;1049:1;1024:16;;;1042:4;1020:27;1013:38;;;;1028:7;618:464;-1:-1:-1;;;618:464:24:o;1087:118::-;1173:5;1166:13;1159:21;1152:5;1149:32;1139:60;;1195:1;1192;1185:12;1139:60;1087:118;:::o;1210:114::-;1294:4;1287:5;1283:16;1276:5;1273:27;1263:55;;1314:1;1311;1304:12;1329:130;1395:20;;1424:29;1395:20;1424:29;:::i;:::-;1329:130;;;:::o;1464:131::-;-1:-1:-1;;;;;1539:31:24;;1529:42;;1519:70;;1585:1;1582;1575:12;1600:134;1668:20;;1697:31;1668:20;1697:31;:::i;1739:1170::-;1880:6;1888;1896;1904;1912;1920;1928;1936;1944;1997:3;1985:9;1976:7;1972:23;1968:33;1965:53;;;2014:1;2011;2004:12;1965:53;2054:9;2041:23;2083:18;2124:2;2116:6;2113:14;2110:34;;;2140:1;2137;2130:12;2110:34;2163:50;2205:7;2196:6;2185:9;2181:22;2163:50;:::i;:::-;2153:60;;2263:2;2252:9;2248:18;2235:32;2222:45;;2276:28;2298:5;2276:28;:::i;:::-;2323:5;;-1:-1:-1;2375:2:24;2360:18;;2347:32;;-1:-1:-1;2431:2:24;2416:18;;2403:32;;2444:31;2403:32;2444:31;:::i;:::-;2494:7;2484:17;;2520:37;2552:3;2541:9;2537:19;2520:37;:::i;:::-;2510:47;;2576:37;2608:3;2597:9;2593:19;2576:37;:::i;:::-;2566:47;;2632:39;2666:3;2655:9;2651:19;2632:39;:::i;:::-;2622:49;;2690:39;2724:3;2713:9;2709:19;2690:39;:::i;:::-;2680:49;;2782:3;2771:9;2767:19;2754:33;2738:49;;2812:2;2802:8;2799:16;2796:36;;;2828:1;2825;2818:12;2796:36;;2851:52;2895:7;2884:8;2873:9;2869:24;2851:52;:::i;:::-;2841:62;;;1739:1170;;;;;;;;;;;:::o;3122:389::-;3199:6;3207;3260:2;3248:9;3239:7;3235:23;3231:32;3228:52;;;3276:1;3273;3266:12;3228:52;3312:9;3299:23;3289:33;;3373:2;3362:9;3358:18;3345:32;3400:18;3392:6;3389:30;3386:50;;;3432:1;3429;3422:12;3386:50;3455;3497:7;3488:6;3477:9;3473:22;3455:50;:::i;:::-;3445:60;;;3122:389;;;;;:::o;3516:878::-;3631:6;3639;3647;3655;3708:3;3696:9;3687:7;3683:23;3679:33;3676:53;;;3725:1;3722;3715:12;3676:53;3765:9;3752:23;3794:18;3835:2;3827:6;3824:14;3821:34;;;3851:1;3848;3841:12;3821:34;3874:50;3916:7;3907:6;3896:9;3892:22;3874:50;:::i;:::-;3864:60;;3977:2;3966:9;3962:18;3949:32;3933:48;;4006:2;3996:8;3993:16;3990:36;;;4022:1;4019;4012:12;3990:36;4045:52;4089:7;4078:8;4067:9;4063:24;4045:52;:::i;:::-;4035:62;;4147:2;4136:9;4132:18;4119:32;4106:45;;4160:31;4185:5;4160:31;:::i;:::-;4210:5;;-1:-1:-1;4268:2:24;4253:18;;4240:32;;4284:16;;;4281:36;;;4313:1;4310;4303:12;4281:36;;4336:52;4380:7;4369:8;4358:9;4354:24;4336:52;:::i;:::-;4326:62;;;3516:878;;;;;;;:::o;4399:388::-;4467:6;4475;4528:2;4516:9;4507:7;4503:23;4499:32;4496:52;;;4544:1;4541;4534:12;4496:52;4583:9;4570:23;4602:31;4627:5;4602:31;:::i;:::-;4652:5;-1:-1:-1;4709:2:24;4694:18;;4681:32;4722:33;4681:32;4722:33;:::i;:::-;4774:7;4764:17;;;4399:388;;;;;:::o;4792:258::-;4864:1;4874:113;4888:6;4885:1;4882:13;4874:113;;;4964:11;;;4958:18;4945:11;;;4938:39;4910:2;4903:10;4874:113;;;5005:6;5002:1;4999:13;4996:48;;;5040:1;5031:6;5026:3;5022:16;5015:27;4996:48;;4792:258;;;:::o;5055:::-;5097:3;5135:5;5129:12;5162:6;5157:3;5150:19;5178:63;5234:6;5227:4;5222:3;5218:14;5211:4;5204:5;5200:16;5178:63;:::i;:::-;5295:2;5274:15;-1:-1:-1;;5270:29:24;5261:39;;;;5302:4;5257:50;;5055:258;-1:-1:-1;;5055:258:24:o;5318:455::-;5539:3;5528:9;5521:22;5502:4;5560:46;5601:3;5590:9;5586:19;5578:6;5560:46;:::i;:::-;5637:2;5622:18;;5615:34;;;;-1:-1:-1;5692:14:24;;5685:22;5680:2;5665:18;;5658:50;5751:14;5744:22;5739:2;5724:18;;;5717:50;5552:54;5318:455;-1:-1:-1;5318:455:24:o;5778:247::-;5837:6;5890:2;5878:9;5869:7;5865:23;5861:32;5858:52;;;5906:1;5903;5896:12;5858:52;5945:9;5932:23;5964:31;5989:5;5964:31;:::i;:::-;6014:5;5778:247;-1:-1:-1;;;5778:247:24:o;6030:788::-;6312:4;6341:3;6371:2;6360:9;6353:21;6391:45;6432:2;6421:9;6417:18;6409:6;6391:45;:::i;:::-;6467:2;6452:18;;6445:34;;;;-1:-1:-1;;6522:14:24;;6515:22;6510:2;6495:18;;6488:50;6586:4;6574:17;;;6569:2;6554:18;;6547:45;6629:17;;;6623:3;6608:19;;6601:46;6684:17;;;6678:3;6663:19;;6656:46;6739:17;;6733:3;6718:19;;6711:46;6794:17;6788:3;6773:19;;;6766:46;6383:53;6030:788;-1:-1:-1;6030:788:24:o;6823:882::-;6934:6;6942;6950;6958;6966;7019:3;7007:9;6998:7;6994:23;6990:33;6987:53;;;7036:1;7033;7026:12;6987:53;7072:9;7059:23;7049:33;;7132:2;7121:9;7117:18;7104:32;7145:28;7167:5;7145:28;:::i;:::-;7192:5;-1:-1:-1;7248:2:24;7233:18;;7220:32;7271:18;7301:14;;;7298:34;;;7328:1;7325;7318:12;7298:34;7351:50;7393:7;7384:6;7373:9;7369:22;7351:50;:::i;:::-;7341:60;;7453:2;7442:9;7438:18;7425:32;7410:47;;7466:33;7491:7;7466:33;:::i;:::-;7518:7;;-1:-1:-1;7578:3:24;7563:19;;7550:33;;7595:16;;;7592:36;;;7624:1;7621;7614:12;7592:36;;7647:52;7691:7;7680:8;7669:9;7665:24;7647:52;:::i;:::-;7637:62;;;6823:882;;;;;;;;:::o;7710:591::-;7793:6;7801;7809;7862:2;7850:9;7841:7;7837:23;7833:32;7830:52;;;7878:1;7875;7868:12;7830:52;7917:9;7904:23;7936:28;7958:5;7936:28;:::i;:::-;7983:5;-1:-1:-1;8040:2:24;8025:18;;8012:32;8053:33;8012:32;8053:33;:::i;:::-;8105:7;-1:-1:-1;8163:2:24;8148:18;;8135:32;8190:18;8179:30;;8176:50;;;8222:1;8219;8212:12;8176:50;8245;8287:7;8278:6;8267:9;8263:22;8245:50;:::i;:::-;8235:60;;;7710:591;;;;;:::o;8306:1371::-;8502:4;8531:2;8571;8560:9;8556:18;8601:2;8590:9;8583:21;8624:6;8659;8653:13;8690:6;8682;8675:22;8716:2;8706:12;;8749:2;8738:9;8734:18;8727:25;;8811:2;8801:6;8798:1;8794:14;8783:9;8779:30;8775:39;8849:2;8841:6;8837:15;8870:1;8880:768;8894:6;8891:1;8888:13;8880:768;;;8959:22;;;-1:-1:-1;;8955:36:24;8943:49;;9015:13;;9087:9;;-1:-1:-1;;;;;9083:35:24;9068:51;;9158:11;;;9152:18;9051:4;9190:15;;;9183:27;;;9051:4;9237:48;9269:15;;;9152:18;9237:48;:::i;:::-;9328:11;;;9322:18;9305:15;;;9298:43;9364:4;9425:11;;;9419:18;9412:26;9405:34;9388:15;;;9381:59;9463:4;9524:11;;;9518:18;9511:26;9504:34;9487:15;;;;9480:59;;;;-1:-1:-1;;9626:12:24;;;;9591:15;;;;8916:1;8909:9;8880:768;;;-1:-1:-1;9665:6:24;;8306:1371;-1:-1:-1;;;;;;;;8306:1371:24:o;9682:1158::-;9821:6;9829;9837;9845;9853;9861;9869;9922:3;9910:9;9901:7;9897:23;9893:33;9890:53;;;9939:1;9936;9929:12;9890:53;9978:9;9965:23;9997:31;10022:5;9997:31;:::i;:::-;10047:5;-1:-1:-1;10103:2:24;10088:18;;10075:32;10126:18;10156:14;;;10153:34;;;10183:1;10180;10173:12;10153:34;10206:50;10248:7;10239:6;10228:9;10224:22;10206:50;:::i;:::-;10196:60;;10309:2;10298:9;10294:18;10281:32;10265:48;;10338:2;10328:8;10325:16;10322:36;;;10354:1;10351;10344:12;10322:36;10377:52;10421:7;10410:8;10399:9;10395:24;10377:52;:::i;:::-;10367:62;;10481:2;10470:9;10466:18;10453:32;10438:47;;10494:30;10516:7;10494:30;:::i;:::-;10543:7;10533:17;;10597:3;10586:9;10582:19;10569:33;10559:43;;10621:39;10655:3;10644:9;10640:19;10621:39;:::i;:::-;10611:49;;10713:3;10702:9;10698:19;10685:33;10669:49;;10743:2;10733:8;10730:16;10727:36;;;10759:1;10756;10749:12;10727:36;;10782:52;10826:7;10815:8;10804:9;10800:24;10782:52;:::i;:::-;10772:62;;;9682:1158;;;;;;;;;;:::o;10845:888::-;10959:6;10967;10975;10983;10991;11044:3;11032:9;11023:7;11019:23;11015:33;11012:53;;;11061:1;11058;11051:12;11012:53;11100:9;11087:23;11119:31;11144:5;11119:31;:::i;:::-;11169:5;-1:-1:-1;11225:2:24;11210:18;;11197:32;11248:18;11278:14;;;11275:34;;;11305:1;11302;11295:12;11275:34;11328:50;11370:7;11361:6;11350:9;11346:22;11328:50;:::i;:::-;11318:60;;11425:2;11414:9;11410:18;11397:32;11387:42;;11481:2;11470:9;11466:18;11453:32;11438:47;;11494:33;11519:7;11494:33;:::i;11738:399::-;11952:34;11940:47;;12017:34;12012:2;12003:12;;11996:56;-1:-1:-1;;;12077:2:24;12068:12;;12061:42;12128:2;12119:12;;11738:399::o;12142:489::-;12401:25;;;12457:2;12442:18;;12435:34;;;;12500:2;12485:18;;12478:34;;;;12543:2;12528:18;;12521:34;-1:-1:-1;;;;;12592:32:24;12586:3;12571:19;;12564:61;12388:3;12373:19;;12142:489::o;13235:276::-;13366:3;13404:6;13398:13;13420:53;13466:6;13461:3;13454:4;13446:6;13442:17;13420:53;:::i;:::-;13489:16;;;;;13235:276;-1:-1:-1;;13235:276:24:o;14257:392::-;-1:-1:-1;;;14515:27:24;;14567:1;14558:11;;14551:27;;;;14603:2;14594:12;;14587:28;14640:2;14631:12;;14257:392::o;16063:184::-;16133:6;16186:2;16174:9;16165:7;16161:23;16157:32;16154:52;;;16202:1;16199;16192:12;16154:52;-1:-1:-1;16225:16:24;;16063:184;-1:-1:-1;16063:184:24:o;16782:430::-;16836:5;16889:3;16882:4;16874:6;16870:17;16866:27;16856:55;;16907:1;16904;16897:12;16856:55;16936:6;16930:13;16967:49;16983:32;17012:2;16983:32;:::i;16967:49::-;17041:2;17032:7;17025:19;17087:3;17080:4;17075:2;17067:6;17063:15;17059:26;17056:35;17053:55;;;17104:1;17101;17094:12;17053:55;17117:64;17178:2;17171:4;17162:7;17158:18;17151:4;17143:6;17139:17;17117:64;:::i;:::-;17199:7;16782:430;-1:-1:-1;;;;16782:430:24:o;17217:784::-;17327:6;17335;17343;17351;17359;17412:3;17400:9;17391:7;17387:23;17383:33;17380:53;;;17429:1;17426;17419:12;17380:53;17461:9;17455:16;17480:31;17505:5;17480:31;:::i;:::-;17579:2;17564:18;;17558:25;17530:5;;-1:-1:-1;17606:18:24;17595:30;;17592:50;;;17638:1;17635;17628:12;17592:50;17661:61;17714:7;17705:6;17694:9;17690:22;17661:61;:::i;:::-;17651:71;;;17762:2;17751:9;17747:18;17741:25;17731:35;;17811:2;17800:9;17796:18;17790:25;17824:30;17846:7;17824:30;:::i;:::-;17925:3;17910:19;;17904:26;17873:7;;-1:-1:-1;17939:30:24;17904:26;17939:30;:::i;:::-;17988:7;17978:17;;;17217:784;;;;;;;;:::o;18355:337::-;18435:6;18488:2;18476:9;18467:7;18463:23;18459:32;18456:52;;;18504:1;18501;18494:12;18456:52;18537:9;18531:16;18570:18;18562:6;18559:30;18556:50;;;18602:1;18599;18592:12;18556:50;18625:61;18678:7;18669:6;18658:9;18654:22;18625:61;:::i;18886:245::-;18953:6;19006:2;18994:9;18985:7;18981:23;18977:32;18974:52;;;19022:1;19019;19012:12;18974:52;19054:9;19048:16;19073:28;19095:5;19073:28;:::i;19136:247::-;19204:6;19257:2;19245:9;19236:7;19232:23;19228:32;19225:52;;;19273:1;19270;19263:12;19225:52;19305:9;19299:16;19324:29;19347:5;19324:29;:::i;20688:127::-;20749:10;20744:3;20740:20;20737:1;20730:31;20780:4;20777:1;20770:15;20804:4;20801:1;20794:15;20820:127;20881:10;20876:3;20872:20;20869:1;20862:31;20912:4;20909:1;20902:15;20936:4;20933:1;20926:15;20952:175;20989:3;21033:4;21026:5;21022:16;21062:4;21053:7;21050:17;21047:43;;;21070:18;;:::i;:::-;21119:1;21106:15;;20952:175;-1:-1:-1;;20952:175:24:o;21132:135::-;21171:3;-1:-1:-1;;21192:17:24;;21189:43;;;21212:18;;:::i;:::-;-1:-1:-1;21259:1:24;21248:13;;21132:135::o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagerMembers`",
          "govRuleMaxActiveMembers": "Max of all members (including managers)",
          "govRuleMaxManagerMembers": "Max of manager member that CLH can accept (only for COMMITTEE )",
          "housePrivate": "True if is private",
          "numActiveMembers": "Current members of a CLH",
          "numManagerMembers": "Current managers of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all members address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrMembers": "array with list of members"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isMember": "true if is member",
          "name": "Nickname ot other user identificaction"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    208,
    13016
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AB062A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x9F6FD7AB EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xBD8CCAD5 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF746B003 EQ PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x364AE0D8 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7B3BB156 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C1 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D2C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D4C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x308 SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C6279746573333220676F762C75696E7438 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x20676F7652756C654D61784D616E616765724D656D626572732C75696E743820 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x676F7652756C654D61784163746976654D656D626572732C75696E743820676F PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x7652756C65417070726F7650657263656E746167652C61646472657373207768 PUSH1 0x80 DUP3 ADD MSTORE PUSH15 0x6974654C69737457616C6C65747329 PUSH1 0x88 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xAF ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP12 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xFF DUP1 DUP12 AND PUSH1 0xA0 DUP4 ADD MSTORE DUP1 DUP11 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP9 AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BD SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x3DF DUP2 DUP7 PUSH2 0x3F0 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C6 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D2C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D4C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x510 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x572 SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61D SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x63F DUP2 DUP7 PUSH2 0x3F0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9C57DF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x9C57DF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x436 JUMP JUMPDEST PUSH2 0x710 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8532CBF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x8532CBF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x77D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB9B2B91034B9903737BA10309026B2B6B132B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x436 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x88E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C55 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F0 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9BCA21 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8668EAFC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAB44997B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADA SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5FE6663 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB6A SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D2C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D4C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC27 SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCB5 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xCD7 DUP2 DUP7 PUSH2 0x3F0 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCF6 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D2C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D4C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD40 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD8D SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000 DUP2 MSTORE PUSH1 0x1B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE DUP9 ISZERO ISZERO DUP4 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xDDA SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xDFC DUP2 DUP7 PUSH2 0x3F0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDA9BCA21 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x824C88DA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF8 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF31 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF1E PUSH2 0x1387 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF16 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x102E JUMPI PUSH2 0xF49 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8532CBF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x8532CBF7 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFB6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0x101B JUMPI DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1001 JUMPI PUSH2 0x1001 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x1017 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x1026 DUP2 PUSH2 0x1D10 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF39 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x104C SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D2C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D4C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1096 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x113A SWAP1 PUSH32 0x7374724F434E65774D656D62657228616464726573732077616C6C6574416464 DUP2 MSTORE PUSH32 0x722C737472696E67206E616D652C737472696E67206465736372697074696F6E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2C626F6F6C2069734D616E616765722C75696E743235362064656C617954696D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6529 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x62 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1206 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1228 DUP2 DUP7 PUSH2 0x3F0 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1249 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D2C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D4C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1293 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1316 SWAP1 PUSH32 0x7374724F4344656C4D656D62657228616464726573732077616C6C6574416464 DUP2 MSTORE PUSH32 0x722C737472696E67206465736372697074696F6E2C75696E743235362064656C PUSH1 0x20 DUP3 ADD MSTORE PUSH7 0x617954696D6529 PUSH1 0xC8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x47 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC88 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1402 JUMPI PUSH2 0x1402 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1424 JUMPI PUSH2 0x1424 PUSH2 0x13C3 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1456 PUSH2 0x1451 DUP3 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x14B3 DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x14B3 DUP2 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x14F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x150F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151B DUP14 DUP4 DUP15 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP11 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x152D DUP3 PUSH2 0x1488 JUMP JUMPDEST SWAP1 SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP1 PUSH2 0x1546 DUP3 PUSH2 0x1499 JUMP JUMPDEST DUP2 SWAP8 POP PUSH2 0x1555 PUSH1 0x80 DUP14 ADD PUSH2 0x14A8 JUMP JUMPDEST SWAP7 POP PUSH2 0x1563 PUSH1 0xA0 DUP14 ADD PUSH2 0x14A8 JUMP JUMPDEST SWAP6 POP PUSH2 0x1571 PUSH1 0xC0 DUP14 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP5 POP PUSH2 0x157F PUSH1 0xE0 DUP14 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A3 DUP13 DUP3 DUP14 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1634 DUP9 DUP4 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x164A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1656 DUP9 DUP4 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1668 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x167E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168B DUP8 DUP3 DUP9 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16B5 DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16C5 DUP2 PUSH2 0x14B8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16FA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1718 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x173F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x177A DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x1795 DUP2 DUP5 ADD DUP13 PUSH2 0x1700 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP SWAP6 ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xFF SWAP5 DUP6 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x80 DUP7 ADD MSTORE SWAP1 DUP4 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP3 AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x17FE DUP2 PUSH2 0x1488 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1827 DUP10 DUP4 DUP11 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1839 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x184F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185C DUP9 DUP3 DUP10 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x187E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1889 DUP2 PUSH2 0x1488 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1899 DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C1 DUP7 DUP3 DUP8 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1961 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x192B DUP3 DUP8 ADD DUP3 PUSH2 0x1700 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18F2 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1995 DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19BE DUP12 DUP4 DUP13 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E0 DUP12 DUP4 DUP13 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19F2 DUP3 PUSH2 0x1488 JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1A08 PUSH1 0xA0 DUP12 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2B DUP11 DUP3 DUP12 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1A5D DUP2 PUSH2 0x14B8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A86 DUP10 DUP4 DUP11 ADD PUSH2 0x1432 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1839 DUP3 PUSH2 0x14B8 JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B47 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16D0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BA4 PUSH2 0x1451 DUP3 PUSH2 0x140A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BCA DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1BF5 DUP2 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1E DUP9 DUP3 DUP10 ADD PUSH2 0x1B85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1C36 DUP2 PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1C47 DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BCA DUP5 DUP3 DUP6 ADD PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x177A DUP2 PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x177A DUP2 PUSH2 0x1499 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D24 JUMPI PUSH2 0x1D24 PUSH2 0x1CDA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C87507EF8EC374E43C85C540 0xDA DUP16 PUSH10 0xDE7866F66E96DEB3AA6B MSIZE PUSH30 0xF20E0FF3CE0C64A26469706673582212201D27591366ABCB850AF39665CA BASEFEE 0xB5 PUSH9 0x5C15B71F5AAA16E9BB KECCAK256 DUP5 0x5C LOG1 ISZERO SWAP13 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x89AB062A"
    },
    "38": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "GT",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x89AB062A"
    },
    "49": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x143"
    },
    "53": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9F6FD7AB"
    },
    "60": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x156"
    },
    "64": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB698BE8D"
    },
    "71": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x169"
    },
    "75": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xBD8CCAD5"
    },
    "82": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x189"
    },
    "86": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF746B003"
    },
    "93": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x19C"
    },
    "97": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "101": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "REVERT",
      "path": "17"
    },
    "102": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "103": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "104": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x364AE0D8"
    },
    "109": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "110": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "114": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "115": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x622ECA77"
    },
    "120": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "121": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD3"
    },
    "124": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x7B3BB156"
    },
    "131": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "132": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE6"
    },
    "135": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x86ABD826"
    },
    "142": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "143": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF9"
    },
    "146": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "147": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "148": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8750BC3E"
    },
    "153": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "EQ",
      "path": "17"
    },
    "154": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11C"
    },
    "157": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "158": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "159": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "DUP1",
      "path": "17"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        208,
        13016
      ],
      "op": "REVERT",
      "path": "17"
    },
    "163": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "164": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "167": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB1"
    },
    "170": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "171": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "173": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14D8"
    },
    "176": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMP",
      "path": "17"
    },
    "177": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "178": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AF"
    },
    "181": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMP",
      "path": "17"
    },
    "182": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "183": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "185": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "192": {
      "op": "SHL"
    },
    "193": {
      "op": "SUB"
    },
    "194": {
      "op": "SWAP1"
    },
    "195": {
      "op": "SWAP2"
    },
    "196": {
      "op": "AND"
    },
    "197": {
      "op": "DUP2"
    },
    "198": {
      "op": "MSTORE"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "201": {
      "op": "ADD"
    },
    "202": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "203": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "205": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "206": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "DUP1",
      "path": "17"
    },
    "207": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "208": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "SUB",
      "path": "17"
    },
    "209": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "210": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "RETURN",
      "path": "17"
    },
    "211": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "212": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "215": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE1"
    },
    "218": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "219": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "221": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15B3"
    },
    "224": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "jump": "i",
      "offset": [
        6483,
        7163
      ],
      "op": "JUMP",
      "path": "17"
    },
    "225": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "226": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "229": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "jump": "i",
      "offset": [
        6483,
        7163
      ],
      "op": "JUMP",
      "path": "17"
    },
    "230": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "231": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "234": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF4"
    },
    "237": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "238": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "240": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15FA"
    },
    "243": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        10834,
        11723
      ],
      "op": "JUMP",
      "path": "17"
    },
    "244": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "245": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4B4"
    },
    "248": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        10834,
        11723
      ],
      "op": "JUMP",
      "path": "17"
    },
    "249": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "250": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10C"
    },
    "253": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x107"
    },
    "256": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "257": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "259": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1697"
    },
    "262": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        589,
        1497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "263": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "264": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x64B"
    },
    "267": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        589,
        1497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "268": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "269": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "271": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "272": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA"
    },
    "275": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "276": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "277": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "278": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "279": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "280": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x172C"
    },
    "283": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        589,
        1497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "284": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "285": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12F"
    },
    "288": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12A"
    },
    "291": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "292": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "294": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x175D"
    },
    "297": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMP",
      "path": "17"
    },
    "298": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "299": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x817"
    },
    "302": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMP",
      "path": "17"
    },
    "303": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "304": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "306": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "307": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA"
    },
    "310": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "311": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "312": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "313": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "314": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "315": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "316": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "317": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "318": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "319": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1781"
    },
    "322": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMP",
      "path": "17"
    },
    "323": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "324": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "327": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x151"
    },
    "330": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "331": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "333": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17D4"
    },
    "336": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        7933,
        8831
      ],
      "op": "JUMP",
      "path": "17"
    },
    "337": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "338": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB58"
    },
    "341": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        7933,
        8831
      ],
      "op": "JUMP",
      "path": "17"
    },
    "342": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "343": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "346": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x164"
    },
    "349": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "350": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "352": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1869"
    },
    "355": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "i",
      "offset": [
        7170,
        7926
      ],
      "op": "JUMP",
      "path": "17"
    },
    "356": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "357": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCE4"
    },
    "360": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "i",
      "offset": [
        7170,
        7926
      ],
      "op": "JUMP",
      "path": "17"
    },
    "361": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "362": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17C"
    },
    "365": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x177"
    },
    "368": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "369": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "371": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x175D"
    },
    "374": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMP",
      "path": "17"
    },
    "375": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "376": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE07"
    },
    "379": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMP",
      "path": "17"
    },
    "380": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "381": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "383": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "384": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA"
    },
    "387": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "388": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "389": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x18CB"
    },
    "392": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMP",
      "path": "17"
    },
    "393": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "394": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "397": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x197"
    },
    "400": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "401": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "403": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x196F"
    },
    "406": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        8838,
        9898
      ],
      "op": "JUMP",
      "path": "17"
    },
    "407": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "408": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x103A"
    },
    "411": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        8838,
        9898
      ],
      "op": "JUMP",
      "path": "17"
    },
    "412": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "413": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB6"
    },
    "416": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AA"
    },
    "419": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "420": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "422": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A3A"
    },
    "425": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "jump": "i",
      "offset": [
        9905,
        10827
      ],
      "op": "JUMP",
      "path": "17"
    },
    "426": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "427": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1237"
    },
    "430": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "jump": "i",
      "offset": [
        9905,
        10827
      ],
      "op": "JUMP",
      "path": "17"
    },
    "431": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "432": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12094,
        12101
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "434": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12118,
        12142
      ],
      "op": "DUP1",
      "path": "17"
    },
    "435": {
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "437": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "438": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "440": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "ADD",
      "path": "22"
    },
    "441": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C1"
    },
    "444": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "445": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9F"
    },
    "448": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        531,
        647
      ],
      "op": "JUMP",
      "path": "22"
    },
    "449": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "450": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "452": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "453": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "455": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "456": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "DUP4",
      "path": "22"
    },
    "457": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "458": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "459": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "460": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "461": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "462": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "464": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "465": {
      "offset": [
        516,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "466": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        516,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "467": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        516,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "468": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        516,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "470": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        516,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "471": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        516,
        649
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "474": {
      "op": "DUP1"
    },
    "475": {
      "op": "MLOAD"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "478": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "481": {
      "op": "DUP4"
    },
    "482": {
      "op": "CODECOPY"
    },
    "483": {
      "op": "DUP2"
    },
    "484": {
      "op": "MLOAD"
    },
    "485": {
      "op": "SWAP2"
    },
    "486": {
      "op": "MSTORE"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "489": {
      "op": "DUP1"
    },
    "490": {
      "op": "MLOAD"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "493": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "496": {
      "op": "DUP4"
    },
    "497": {
      "op": "CODECOPY"
    },
    "498": {
      "op": "DUP2"
    },
    "499": {
      "op": "MLOAD"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12322,
        12335
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "503": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12353,
        12361
      ],
      "op": "DUP8",
      "path": "17"
    },
    "504": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "506": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "507": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "509": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "ADD",
      "path": "17"
    },
    "510": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x20B"
    },
    "513": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "514": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "515": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "516": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "517": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "518": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "519": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B09"
    },
    "522": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        12168,
        12375
      ],
      "op": "JUMP",
      "path": "17"
    },
    "523": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "524": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "526": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "527": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "529": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "DUP2",
      "path": "17"
    },
    "530": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "DUP4",
      "path": "17"
    },
    "531": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SUB",
      "path": "17"
    },
    "532": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SUB",
      "path": "17"
    },
    "533": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "DUP2",
      "path": "17"
    },
    "534": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "535": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "536": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "538": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12168,
        12375
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "539": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12145,
        12385
      ],
      "op": "DUP1",
      "path": "17"
    },
    "540": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12145,
        12385
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "541": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12145,
        12385
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "542": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12145,
        12385
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "544": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12145,
        12385
      ],
      "op": "ADD",
      "path": "17"
    },
    "545": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12145,
        12385
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "546": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12118,
        12385
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "547": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12118,
        12385
      ],
      "op": "POP",
      "path": "17"
    },
    "548": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12396,
        12411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "550": {
      "offset": [
        1480,
        1689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "552": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "553": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "555": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "ADD",
      "path": "22"
    },
    "556": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x308"
    },
    "559": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "560": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "593": {
      "op": "DUP2"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C6279746573333220676F762C75696E7438"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH32",
      "value": "0x20676F7652756C654D61784D616E616765724D656D626572732C75696E743820"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "668": {
      "op": "DUP3"
    },
    "669": {
      "op": "ADD"
    },
    "670": {
      "op": "MSTORE"
    },
    "671": {
      "op": "PUSH32",
      "value": "0x676F7652756C654D61784163746976654D656D626572732C75696E743820676F"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "706": {
      "op": "DUP3"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH32",
      "value": "0x7652756C65417070726F7650657263656E746167652C61646472657373207768"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "744": {
      "op": "DUP3"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH15",
      "value": "0x6974654C69737457616C6C65747329"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "765": {
      "op": "SHL"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "DUP3"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "op": "MSTORE"
    },
    "771": {
      "op": "PUSH1",
      "value": "0xAF"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "JUMP"
    },
    "776": {
      "offset": [
        1480,
        1689
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "777": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "779": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "780": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "782": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "DUP2",
      "path": "22"
    },
    "783": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "DUP4",
      "path": "22"
    },
    "784": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "SUB",
      "path": "22"
    },
    "785": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "SUB",
      "path": "22"
    },
    "786": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "DUP2",
      "path": "22"
    },
    "787": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "788": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "789": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "791": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1480,
        1689
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "792": {
      "offset": [
        1465,
        1691
      ],
      "op": "DUP1",
      "path": "22"
    },
    "793": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1465,
        1691
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "794": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1465,
        1691
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "795": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1465,
        1691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "797": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1465,
        1691
      ],
      "op": "ADD",
      "path": "22"
    },
    "798": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        1465,
        1691
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "799": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12531,
        12541
      ],
      "op": "DUP13",
      "path": "17"
    },
    "800": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "802": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "803": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "805": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "ADD",
      "path": "17"
    },
    "806": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x32F"
    },
    "809": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "810": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "811": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "814": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        12513,
        12543
      ],
      "op": "JUMP",
      "path": "17"
    },
    "815": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "816": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "818": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "DUP1",
      "path": "17"
    },
    "819": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "822": {
      "op": "NOT"
    },
    "823": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "824": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "DUP5",
      "path": "17"
    },
    "825": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "SUB",
      "path": "17"
    },
    "826": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "ADD",
      "path": "17"
    },
    "827": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "DUP2",
      "path": "17"
    },
    "828": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "829": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "DUP3",
      "path": "17"
    },
    "830": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "DUP3",
      "path": "17"
    },
    "831": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "832": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12502,
        12545
      ],
      "op": "DUP1",
      "path": "17"
    },
    "833": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12502,
        12545
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "834": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "836": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12502,
        12545
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "837": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12502,
        12545
      ],
      "op": "DUP3",
      "path": "17"
    },
    "838": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12502,
        12545
      ],
      "op": "ADD",
      "path": "17"
    },
    "839": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12502,
        12545
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "840": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "841": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "DUP4",
      "path": "17"
    },
    "842": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "ADD",
      "path": "17"
    },
    "843": {
      "op": "SWAP4"
    },
    "844": {
      "op": "SWAP1"
    },
    "845": {
      "op": "SWAP4"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "op": "DUP2"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "op": "SWAP2"
    },
    "850": {
      "op": "SWAP1"
    },
    "851": {
      "op": "SWAP2"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "DUP12"
    },
    "854": {
      "op": "ISZERO"
    },
    "855": {
      "op": "ISZERO"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "858": {
      "op": "DUP3"
    },
    "859": {
      "op": "ADD"
    },
    "860": {
      "op": "MSTORE"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "863": {
      "op": "DUP2"
    },
    "864": {
      "op": "ADD"
    },
    "865": {
      "op": "DUP12"
    },
    "866": {
      "op": "SWAP1"
    },
    "867": {
      "op": "MSTORE"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "870": {
      "op": "DUP1"
    },
    "871": {
      "op": "DUP12"
    },
    "872": {
      "op": "AND"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "875": {
      "op": "DUP4"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "DUP1"
    },
    "879": {
      "op": "DUP11"
    },
    "880": {
      "op": "AND"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "883": {
      "op": "DUP4"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "op": "MSTORE"
    },
    "886": {
      "op": "DUP9"
    },
    "887": {
      "op": "AND"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "op": "SUB"
    },
    "901": {
      "op": "DUP8"
    },
    "902": {
      "op": "AND"
    },
    "903": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "906": {
      "op": "DUP3"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "MSTORE"
    },
    "909": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "915": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "916": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "918": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "DUP2",
      "path": "17"
    },
    "919": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "DUP4",
      "path": "17"
    },
    "920": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "SUB",
      "path": "17"
    },
    "921": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "SUB",
      "path": "17"
    },
    "922": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "DUP2",
      "path": "17"
    },
    "923": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "924": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "925": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "927": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12435,
        12844
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "928": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12414,
        12854
      ],
      "op": "DUP1",
      "path": "17"
    },
    "929": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12414,
        12854
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "930": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12414,
        12854
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "931": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12414,
        12854
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "933": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12414,
        12854
      ],
      "op": "ADD",
      "path": "17"
    },
    "934": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12414,
        12854
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "935": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12396,
        12854
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "936": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12396,
        12854
      ],
      "op": "POP",
      "path": "17"
    },
    "937": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12865,
        12881
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "939": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12925,
        12941
      ],
      "op": "DUP3",
      "path": "17"
    },
    "940": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12943,
        12950
      ],
      "op": "DUP3",
      "path": "17"
    },
    "941": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "943": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "944": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "946": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "ADD",
      "path": "17"
    },
    "947": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3BD"
    },
    "950": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "951": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "952": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "953": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B51"
    },
    "956": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        12895,
        12952
      ],
      "op": "JUMP",
      "path": "17"
    },
    "957": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "958": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "960": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "961": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "963": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "DUP2",
      "path": "17"
    },
    "964": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "DUP4",
      "path": "17"
    },
    "965": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "SUB",
      "path": "17"
    },
    "966": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "SUB",
      "path": "17"
    },
    "967": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "DUP2",
      "path": "17"
    },
    "968": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "969": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "970": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "972": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12895,
        12952
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "973": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12884,
        12954
      ],
      "op": "DUP1",
      "path": "17"
    },
    "974": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12884,
        12954
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "975": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12884,
        12954
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "976": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12884,
        12954
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "978": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12884,
        12954
      ],
      "op": "ADD",
      "path": "17"
    },
    "979": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12884,
        12954
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "980": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12865,
        12954
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "981": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12865,
        12954
      ],
      "op": "POP",
      "path": "17"
    },
    "982": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12972,
        13007
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 0,
      "value": "0x3DF"
    },
    "985": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12985,
        12993
      ],
      "op": "DUP2",
      "path": "17"
    },
    "986": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12995,
        13005
      ],
      "op": "DUP7",
      "path": "17"
    },
    "987": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12972,
        12983
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "990": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        12972,
        13007
      ],
      "op": "JUMP",
      "path": "17"
    },
    "991": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12972,
        13007
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "992": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        12965,
        13007
      ],
      "op": "SWAP14",
      "path": "17"
    },
    "993": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "offset": [
        11729,
        13014
      ],
      "op": "SWAP13",
      "path": "17"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "POP"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "op": "POP"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "ApiCLHouse.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        11729,
        13014
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1008": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1009": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6615,
        6622
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1011": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6648,
        6658
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 1
    },
    "1012": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6648,
        6665
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1013": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6669,
        6671
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x41"
    },
    "1015": {
      "branch": 17,
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6648,
        6671
      ],
      "op": "EQ",
      "path": "17"
    },
    "1016": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x43F"
    },
    "1019": {
      "branch": 17,
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1020": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1022": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1031": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1034": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1036": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1037": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "ADD",
      "path": "17"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1043": {
      "op": "DUP3"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1079": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1081": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1082": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1083": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1084": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "SUB",
      "path": "17"
    },
    "1085": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1086": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "17"
    },
    "1087": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6639,
        6697
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1088": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6883,
        6885
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1090": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6866,
        6887
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1091": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6866,
        6887
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1092": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6866,
        6887
      ],
      "op": "ADD",
      "path": "17"
    },
    "1093": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6859,
        6889
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1094": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6962,
        6964
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1096": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6945,
        6966
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1097": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6945,
        6966
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1098": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6945,
        6966
      ],
      "op": "ADD",
      "path": "17"
    },
    "1099": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6938,
        6968
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1100": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7079,
        7081
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1102": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7062,
        7083
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1103": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7062,
        7083
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1104": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7062,
        7083
      ],
      "op": "ADD",
      "path": "17"
    },
    "1105": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7055,
        7085
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1106": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 2
    },
    "1107": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1108": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6708,
        6721
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1110": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1111": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1112": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1113": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "1114": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1115": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "ADD",
      "path": "17"
    },
    "1116": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1117": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1118": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1119": {
      "op": "DUP11"
    },
    "1120": {
      "op": "SWAP1"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7046,
        7087
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1123": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7046,
        7087
      ],
      "op": "BYTE",
      "path": "17"
    },
    "1124": {
      "op": "SWAP3"
    },
    "1125": {
      "op": "DUP6"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "op": "DUP4"
    },
    "1128": {
      "op": "SWAP1"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "DUP5"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "DUP4"
    },
    "1133": {
      "op": "SWAP1"
    },
    "1134": {
      "op": "MSTORE"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1137": {
      "op": "DUP5"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "DUP2"
    },
    "1140": {
      "op": "SWAP1"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6859,
        6889
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1143": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6859,
        6889
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1144": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1146": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1152": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1154": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1155": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1157": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1158": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SUB",
      "path": "17"
    },
    "1159": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1160": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1161": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1162": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SUB",
      "path": "17"
    },
    "1163": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1164": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1165": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "GAS",
      "path": "17"
    },
    "1166": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1167": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1168": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1169": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1170": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49F"
    },
    "1173": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1174": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1175": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1177": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1178": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1179": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1180": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1182": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1183": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1188": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1191": {
      "op": "NOT"
    },
    "1192": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "ADD",
      "path": "17"
    },
    "1193": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1194": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        7114,
        7156
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "1195": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "offset": [
        6483,
        7163
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "1196": {
      "op": "POP"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "op": "POP"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "op": "POP"
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "ApiCLHouse.SignerOfMsg",
      "jump": "o",
      "offset": [
        6483,
        7163
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1204": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1205": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11027,
        11034
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1207": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11051,
        11075
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1208": {
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1210": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1211": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1213": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "ADD",
      "path": "22"
    },
    "1214": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1218": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9F"
    },
    "1221": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        531,
        647
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1222": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1223": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1225": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1226": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1228": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1229": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1230": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "1231": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "1232": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1233": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1234": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1235": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1237": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1238": {
      "offset": [
        516,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1239": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        516,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1240": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        516,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1241": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        516,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1243": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        516,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "1244": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        516,
        649
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1247": {
      "op": "DUP1"
    },
    "1248": {
      "op": "MLOAD"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1251": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "1254": {
      "op": "DUP4"
    },
    "1255": {
      "op": "CODECOPY"
    },
    "1256": {
      "op": "DUP2"
    },
    "1257": {
      "op": "MLOAD"
    },
    "1258": {
      "op": "SWAP2"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1262": {
      "op": "DUP1"
    },
    "1263": {
      "op": "MLOAD"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "1269": {
      "op": "DUP4"
    },
    "1270": {
      "op": "CODECOPY"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "MLOAD"
    },
    "1273": {
      "op": "SWAP2"
    },
    "1274": {
      "op": "MSTORE"
    },
    "1275": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11255,
        11268
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "1276": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11286,
        11296
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1277": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1279": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1280": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1282": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "ADD",
      "path": "17"
    },
    "1283": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x510"
    },
    "1286": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1287": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "1288": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "1289": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1290": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1291": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1292": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B09"
    },
    "1295": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        11101,
        11310
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1296": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1297": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1299": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1300": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1302": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1303": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1304": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SUB",
      "path": "17"
    },
    "1305": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SUB",
      "path": "17"
    },
    "1306": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1307": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1308": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1309": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1311": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11101,
        11310
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1312": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11078,
        11320
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1313": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11078,
        11320
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1314": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11078,
        11320
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1315": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11078,
        11320
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1317": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11078,
        11320
      ],
      "op": "ADD",
      "path": "17"
    },
    "1318": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11078,
        11320
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1319": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11051,
        11320
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1320": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11051,
        11320
      ],
      "op": "POP",
      "path": "17"
    },
    "1321": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11331,
        11346
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1323": {
      "offset": [
        1342,
        1420
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1325": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1326": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1328": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "ADD",
      "path": "22"
    },
    "1329": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x572"
    },
    "1332": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1333": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1386": {
      "op": "DUP3"
    },
    "1387": {
      "op": "ADD"
    },
    "1388": {
      "op": "MSTORE"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "SWAP1"
    },
    "1393": {
      "op": "JUMP"
    },
    "1394": {
      "offset": [
        1342,
        1420
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1395": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1397": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1398": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1400": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1401": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1402": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "SUB",
      "path": "22"
    },
    "1403": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "SUB",
      "path": "22"
    },
    "1404": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1405": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1406": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1407": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1409": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1342,
        1420
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1410": {
      "offset": [
        1327,
        1422
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1411": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1327,
        1422
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1412": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1327,
        1422
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1413": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1327,
        1422
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1415": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1327,
        1422
      ],
      "op": "ADD",
      "path": "22"
    },
    "1416": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        1327,
        1422
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1417": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11467,
        11472
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1418": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1420": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1421": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1423": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "ADD",
      "path": "17"
    },
    "1424": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x599"
    },
    "1427": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1428": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1429": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "1432": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        11449,
        11474
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1433": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1434": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1436": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1437": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1439": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1440": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1441": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "SUB",
      "path": "17"
    },
    "1442": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "SUB",
      "path": "17"
    },
    "1443": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1444": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1445": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1446": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1448": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11449,
        11474
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1449": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11438,
        11476
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1450": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11438,
        11476
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1451": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11438,
        11476
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1452": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11438,
        11476
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1454": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11438,
        11476
      ],
      "op": "ADD",
      "path": "17"
    },
    "1455": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11438,
        11476
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1456": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11523,
        11535
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1457": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1459": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1460": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1462": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "ADD",
      "path": "17"
    },
    "1463": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5C0"
    },
    "1466": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1467": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1468": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "1471": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        11505,
        11537
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1472": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1473": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1475": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1476": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1479": {
      "op": "NOT"
    },
    "1480": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1481": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1482": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "SUB",
      "path": "17"
    },
    "1483": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "ADD",
      "path": "17"
    },
    "1484": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1485": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1486": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1487": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1488": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1489": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11494,
        11539
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1490": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11494,
        11539
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1491": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11505,
        11537
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1493": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11494,
        11539
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1494": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11494,
        11539
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1495": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11494,
        11539
      ],
      "op": "ADD",
      "path": "17"
    },
    "1496": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11494,
        11539
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1497": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1498": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1499": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "ADD",
      "path": "17"
    },
    "1500": {
      "op": "SWAP5"
    },
    "1501": {
      "op": "SWAP1"
    },
    "1502": {
      "op": "SWAP5"
    },
    "1503": {
      "op": "MSTORE"
    },
    "1504": {
      "op": "DUP2"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "SWAP2"
    },
    "1507": {
      "op": "SWAP1"
    },
    "1508": {
      "op": "SWAP2"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1512": {
      "op": "DUP2"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "op": "SWAP2"
    },
    "1515": {
      "op": "SWAP1"
    },
    "1516": {
      "op": "SWAP2"
    },
    "1517": {
      "op": "MSTORE"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1523": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1524": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1526": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1527": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1528": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "SUB",
      "path": "17"
    },
    "1529": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "SUB",
      "path": "17"
    },
    "1530": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1531": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1532": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1533": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1535": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11370,
        11553
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1536": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11349,
        11563
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1537": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11349,
        11563
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1538": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11349,
        11563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1539": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11349,
        11563
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1541": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11349,
        11563
      ],
      "op": "ADD",
      "path": "17"
    },
    "1542": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11349,
        11563
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1543": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11331,
        11563
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1544": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11331,
        11563
      ],
      "op": "POP",
      "path": "17"
    },
    "1545": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11574,
        11590
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1547": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11634,
        11650
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1548": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11652,
        11659
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1549": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1551": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1552": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1554": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "ADD",
      "path": "17"
    },
    "1555": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x61D"
    },
    "1558": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1559": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1560": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1561": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B51"
    },
    "1564": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        11604,
        11661
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1565": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1566": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1568": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1569": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1571": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1572": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1573": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "SUB",
      "path": "17"
    },
    "1574": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "SUB",
      "path": "17"
    },
    "1575": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1576": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1577": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1578": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1580": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11604,
        11661
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1581": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11593,
        11663
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1582": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11593,
        11663
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1583": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11593,
        11663
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1584": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11593,
        11663
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1586": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11593,
        11663
      ],
      "op": "ADD",
      "path": "17"
    },
    "1587": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11593,
        11663
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1588": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11574,
        11663
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1589": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11574,
        11663
      ],
      "op": "POP",
      "path": "17"
    },
    "1590": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11681,
        11716
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 3,
      "value": "0x63F"
    },
    "1593": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11694,
        11702
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1594": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11704,
        11714
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1595": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11681,
        11692
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "1598": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "i",
      "offset": [
        11681,
        11716
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1599": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11681,
        11716
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1600": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        11674,
        11716
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "1601": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "offset": [
        10834,
        11723
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "op": "POP"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "ApiCLHouse.SignerOCRequest",
      "jump": "o",
      "offset": [
        10834,
        11723
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1611": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1612": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1614": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1615": {
      "op": "PUSH4",
      "value": "0x9C57DF7"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1624": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "op": "DUP3"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "AND"
    },
    "1636": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1638": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1639": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "ADD",
      "path": "17"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        741,
        759
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1643": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        741,
        759
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1644": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1646": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1647": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1648": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1649": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1650": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1651": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        893,
        903
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1652": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        893,
        903
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1653": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1654": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        773,
        785
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1655": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        948
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1656": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        948
      ],
      "op": "AND",
      "path": "17"
    },
    "1657": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        948
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1658": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        948
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9C57DF7"
    },
    "1663": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        948
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1669": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1671": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1672": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1673": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1674": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "SUB",
      "path": "17"
    },
    "1675": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1676": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1677": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "GAS",
      "path": "17"
    },
    "1678": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1679": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1680": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1681": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1682": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x69F"
    },
    "1685": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1686": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1687": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1689": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1690": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1691": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1692": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1694": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1695": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1696": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "POP",
      "path": "17"
    },
    "1697": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "POP",
      "path": "17"
    },
    "1698": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "POP",
      "path": "17"
    },
    "1699": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "POP",
      "path": "17"
    },
    "1700": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1702": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1703": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1704": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1706": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "NOT",
      "path": "17"
    },
    "1707": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1709": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1710": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "ADD",
      "path": "17"
    },
    "1711": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "AND",
      "path": "17"
    },
    "1712": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1713": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "ADD",
      "path": "17"
    },
    "1714": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1715": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1717": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1718": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "POP",
      "path": "17"
    },
    "1719": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1720": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "ADD",
      "path": "17"
    },
    "1721": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1722": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6C3"
    },
    "1725": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1726": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1727": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B6C"
    },
    "1730": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        930,
        963
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1731": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        930,
        963
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1732": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        916,
        963
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "branch": 18,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        983,
        991
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 4
    },
    "1735": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x708"
    },
    "1738": {
      "branch": 18,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1739": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1741": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1750": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1753": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1755": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1756": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "ADD",
      "path": "17"
    },
    "1757": {
      "op": "MSTORE"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1762": {
      "op": "DUP3"
    },
    "1763": {
      "op": "ADD"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x436"
    },
    "1799": {
      "op": "JUMP"
    },
    "1800": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        974,
        1017
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1801": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1028,
        1056
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x710"
    },
    "1804": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1028,
        1056
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1387"
    },
    "1807": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1028,
        1056
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1808": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1028,
        1056
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1809": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x40"
    },
    "1811": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1812": {
      "op": "PUSH4",
      "value": "0x8532CBF7"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1821": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1822": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1824": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1825": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "ADD",
      "path": "17"
    },
    "1826": {
      "op": "DUP4"
    },
    "1827": {
      "op": "SWAP1"
    },
    "1828": {
      "op": "MSTORE"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "op": "SUB"
    },
    "1837": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1247
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1838": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1247
      ],
      "op": "AND",
      "path": "17"
    },
    "1839": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1247
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1840": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1247
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8532CBF7"
    },
    "1845": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1247
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1848": {
      "op": "ADD"
    },
    "1849": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1851": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1853": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1854": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1855": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1856": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "SUB",
      "path": "17"
    },
    "1857": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1858": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1859": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "GAS",
      "path": "17"
    },
    "1860": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1861": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1862": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1863": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1864": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x755"
    },
    "1867": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1868": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1869": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1871": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1872": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1873": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1874": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1876": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1877": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1878": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "POP",
      "path": "17"
    },
    "1879": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "POP",
      "path": "17"
    },
    "1880": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "POP",
      "path": "17"
    },
    "1881": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "POP",
      "path": "17"
    },
    "1882": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1884": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1885": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1886": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1888": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1889": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1890": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1892": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1893": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1894": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1895": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "ADD",
      "path": "17"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1898": {
      "op": "NOT"
    },
    "1899": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "AND",
      "path": "17"
    },
    "1900": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1901": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "ADD",
      "path": "17"
    },
    "1902": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1904": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1905": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x77D"
    },
    "1908": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1909": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1910": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1911": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "ADD",
      "path": "17"
    },
    "1912": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1913": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BD2"
    },
    "1916": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1230,
        1254
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1917": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1230,
        1254
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1918": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1919": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1920": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1204,
        1225
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "1922": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1204,
        1225
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1923": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1204,
        1225
      ],
      "op": "ADD",
      "path": "17"
    },
    "1924": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1925": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1926": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1927": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1170,
        1190
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "1929": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1170,
        1190
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1930": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1170,
        1190
      ],
      "op": "ADD",
      "path": "17"
    },
    "1931": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1932": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1933": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1934": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1137,
        1156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1936": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1137,
        1156
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1937": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1137,
        1156
      ],
      "op": "ADD",
      "path": "17"
    },
    "1938": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1939": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1940": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1941": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1942": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1107,
        1123
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1944": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1107,
        1123
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1945": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1107,
        1123
      ],
      "op": "ADD",
      "path": "17"
    },
    "1946": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1947": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1948": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1949": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1959": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1960": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "AND",
      "path": "17"
    },
    "1961": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1962": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1067,
        1254
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1963": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1274,
        1278
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 6,
      "value": "0x1"
    },
    "1965": {
      "branch": 19,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1274,
        1302
      ],
      "op": "EQ",
      "path": "17"
    },
    "1966": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7F0"
    },
    "1969": {
      "branch": 19,
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1970": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1972": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1981": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1984": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1986": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1987": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "ADD",
      "path": "17"
    },
    "1988": {
      "op": "MSTORE"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1993": {
      "op": "DUP3"
    },
    "1994": {
      "op": "ADD"
    },
    "1995": {
      "op": "MSTORE"
    },
    "1996": {
      "op": "PUSH20",
      "value": "0x2AB9B2B91034B9903737BA10309026B2B6B132B9"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2027": {
      "op": "ADD"
    },
    "2028": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x436"
    },
    "2031": {
      "op": "JUMP"
    },
    "2032": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1265,
        1330
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2033": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1362,
        1378
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 7,
      "value": "0x20"
    },
    "2035": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1362,
        1378
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2036": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1362,
        1378
      ],
      "op": "ADD",
      "path": "17"
    },
    "2037": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1362,
        1378
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2038": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1392,
        1411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2040": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1392,
        1411
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2041": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1392,
        1411
      ],
      "op": "ADD",
      "path": "17"
    },
    "2042": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1392,
        1411
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2043": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1425,
        1445
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "2045": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1425,
        1445
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2046": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1425,
        1445
      ],
      "op": "ADD",
      "path": "17"
    },
    "2047": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1425,
        1445
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2048": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1459,
        1480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2050": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1459,
        1480
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2051": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1459,
        1480
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2052": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1459,
        1480
      ],
      "op": "ADD",
      "path": "17"
    },
    "2053": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1459,
        1480
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2054": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1362,
        1378
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2055": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1362,
        1378
      ],
      "op": "SWAP12",
      "path": "17"
    },
    "2056": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1392,
        1411
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2057": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1392,
        1411
      ],
      "op": "SWAP11",
      "path": "17"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1425,
        1445
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2060": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1425,
        1445
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        1459,
        1480
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "offset": [
        589,
        1497
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "2065": {
      "op": "POP"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "fn": "ApiCLHouse.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        589,
        1497
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2071": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2072": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5543,
        5567
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "2074": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5581,
        5611
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2076": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5625,
        5642
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2077": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5656,
        5678
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2079": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5692,
        5715
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2080": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5729,
        5758
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2082": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5772,
        5801
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2083": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5815,
        5845
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2085": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5870,
        5885
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2086": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5898,
        5908
      ],
      "op": "DUP10",
      "path": "17"
    },
    "2087": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5870,
        5910
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2088": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5870,
        5910
      ],
      "op": "POP",
      "path": "17"
    },
    "2089": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5947
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 8
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "SUB"
    },
    "2098": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5958
      ],
      "op": "AND",
      "path": "17"
    },
    "2099": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5958
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x59CA2D03"
    },
    "2104": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2106": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2107": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2108": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2113": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "AND",
      "path": "17"
    },
    "2114": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2116": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "SHL",
      "path": "17"
    },
    "2117": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2118": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2119": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2121": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "ADD",
      "path": "17"
    },
    "2122": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2124": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2126": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2127": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2128": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2129": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "SUB",
      "path": "17"
    },
    "2130": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2131": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2132": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "GAS",
      "path": "17"
    },
    "2133": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2134": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2135": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2136": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2137": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x866"
    },
    "2140": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2141": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2142": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2144": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2145": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2146": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2147": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2149": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2150": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2151": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "POP",
      "path": "17"
    },
    "2152": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "POP",
      "path": "17"
    },
    "2153": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "POP",
      "path": "17"
    },
    "2154": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "POP",
      "path": "17"
    },
    "2155": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2157": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2158": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2159": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2161": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2162": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2163": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2165": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2166": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2167": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2168": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "ADD",
      "path": "17"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2171": {
      "op": "NOT"
    },
    "2172": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "AND",
      "path": "17"
    },
    "2173": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2174": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "ADD",
      "path": "17"
    },
    "2175": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2177": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2178": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x88E"
    },
    "2181": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2182": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2183": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2184": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "ADD",
      "path": "17"
    },
    "2185": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2186": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C55"
    },
    "2189": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        5941,
        5960
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2190": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5941,
        5960
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2191": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        5980
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6003
      ],
      "op": "AND",
      "path": "17"
    },
    "2201": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6003
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x1D5FD3CA"
    },
    "2206": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2208": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2209": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2210": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2215": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "AND",
      "path": "17"
    },
    "2216": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2218": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "SHL",
      "path": "17"
    },
    "2219": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2220": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2221": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2223": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "ADD",
      "path": "17"
    },
    "2224": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2226": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2228": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2229": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2230": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2231": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "SUB",
      "path": "17"
    },
    "2232": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2233": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2234": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "GAS",
      "path": "17"
    },
    "2235": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2236": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2237": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2238": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2239": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8CC"
    },
    "2242": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2243": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2244": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2246": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2247": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2248": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2249": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2251": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2252": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2253": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "POP",
      "path": "17"
    },
    "2254": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "POP",
      "path": "17"
    },
    "2255": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "POP",
      "path": "17"
    },
    "2256": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "POP",
      "path": "17"
    },
    "2257": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2259": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2260": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2261": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2263": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "NOT",
      "path": "17"
    },
    "2264": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2266": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2267": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "ADD",
      "path": "17"
    },
    "2268": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "AND",
      "path": "17"
    },
    "2269": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2270": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "ADD",
      "path": "17"
    },
    "2271": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2272": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2274": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2275": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "POP",
      "path": "17"
    },
    "2276": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2277": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "ADD",
      "path": "17"
    },
    "2278": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2279": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8F0"
    },
    "2282": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2283": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2284": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B6C"
    },
    "2287": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        5974,
        6005
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2288": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5974,
        6005
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2289": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6025
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "op": "SUB"
    },
    "2298": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6038
      ],
      "op": "AND",
      "path": "17"
    },
    "2299": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6038
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF00D6274"
    },
    "2304": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2306": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2307": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2308": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2313": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "AND",
      "path": "17"
    },
    "2314": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2316": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "SHL",
      "path": "17"
    },
    "2317": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2318": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2319": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2321": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "ADD",
      "path": "17"
    },
    "2322": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2324": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2326": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2327": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2328": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2329": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "SUB",
      "path": "17"
    },
    "2330": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2331": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2332": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "GAS",
      "path": "17"
    },
    "2333": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2334": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2335": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2336": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2337": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x92E"
    },
    "2340": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2341": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2342": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2344": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2345": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2346": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2347": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2349": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2350": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2351": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "POP",
      "path": "17"
    },
    "2352": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "POP",
      "path": "17"
    },
    "2353": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "POP",
      "path": "17"
    },
    "2354": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "POP",
      "path": "17"
    },
    "2355": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2357": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2358": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2359": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2361": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "NOT",
      "path": "17"
    },
    "2362": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2364": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2365": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "ADD",
      "path": "17"
    },
    "2366": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "AND",
      "path": "17"
    },
    "2367": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2368": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "ADD",
      "path": "17"
    },
    "2369": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2370": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2372": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2373": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "POP",
      "path": "17"
    },
    "2374": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2375": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "ADD",
      "path": "17"
    },
    "2376": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2377": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x952"
    },
    "2380": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2381": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2382": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C8A"
    },
    "2385": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        6019,
        6040
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2386": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6019,
        6040
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2387": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6060
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "SUB"
    },
    "2396": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6077
      ],
      "op": "AND",
      "path": "17"
    },
    "2397": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6077
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xDA9BCA21"
    },
    "2402": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2404": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2405": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2406": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2411": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "AND",
      "path": "17"
    },
    "2412": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2414": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "SHL",
      "path": "17"
    },
    "2415": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2416": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2417": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2419": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "ADD",
      "path": "17"
    },
    "2420": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2422": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2424": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2425": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2426": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2427": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "SUB",
      "path": "17"
    },
    "2428": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2429": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2430": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "GAS",
      "path": "17"
    },
    "2431": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2432": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2433": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2434": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2435": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x990"
    },
    "2438": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2439": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2440": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2442": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2443": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2444": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2445": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2447": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2448": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2449": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "POP",
      "path": "17"
    },
    "2450": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "POP",
      "path": "17"
    },
    "2451": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "POP",
      "path": "17"
    },
    "2452": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "POP",
      "path": "17"
    },
    "2453": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2455": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2456": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2457": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2459": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "NOT",
      "path": "17"
    },
    "2460": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2462": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2463": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "ADD",
      "path": "17"
    },
    "2464": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "AND",
      "path": "17"
    },
    "2465": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2466": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "ADD",
      "path": "17"
    },
    "2467": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2468": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2470": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2471": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "POP",
      "path": "17"
    },
    "2472": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2473": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "ADD",
      "path": "17"
    },
    "2474": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2475": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9B4"
    },
    "2478": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2479": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2480": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CA7"
    },
    "2483": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        6054,
        6079
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2484": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6054,
        6079
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2485": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6099
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "op": "SUB"
    },
    "2494": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6117
      ],
      "op": "AND",
      "path": "17"
    },
    "2495": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6117
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8668EAFC"
    },
    "2500": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2502": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2503": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2504": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2509": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "AND",
      "path": "17"
    },
    "2510": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2512": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "SHL",
      "path": "17"
    },
    "2513": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2514": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2515": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2517": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "ADD",
      "path": "17"
    },
    "2518": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2520": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2522": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2523": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2524": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2525": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "SUB",
      "path": "17"
    },
    "2526": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2527": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2528": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "GAS",
      "path": "17"
    },
    "2529": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2530": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2531": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2532": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2533": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9F2"
    },
    "2536": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2537": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2538": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2540": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2541": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2542": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2543": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2545": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2546": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2547": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "POP",
      "path": "17"
    },
    "2548": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "POP",
      "path": "17"
    },
    "2549": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "POP",
      "path": "17"
    },
    "2550": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "POP",
      "path": "17"
    },
    "2551": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2553": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2554": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2555": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2557": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "NOT",
      "path": "17"
    },
    "2558": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2560": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2561": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "ADD",
      "path": "17"
    },
    "2562": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "AND",
      "path": "17"
    },
    "2563": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2564": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "ADD",
      "path": "17"
    },
    "2565": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2566": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2568": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2569": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "POP",
      "path": "17"
    },
    "2570": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2571": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "ADD",
      "path": "17"
    },
    "2572": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2573": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA16"
    },
    "2576": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2577": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2578": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CA7"
    },
    "2581": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2582": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2583": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6139
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "op": "SUB"
    },
    "2592": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6163
      ],
      "op": "AND",
      "path": "17"
    },
    "2593": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6163
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9C630A88"
    },
    "2598": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2600": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2601": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2602": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2607": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "AND",
      "path": "17"
    },
    "2608": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2610": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "SHL",
      "path": "17"
    },
    "2611": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2612": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2613": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2615": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "ADD",
      "path": "17"
    },
    "2616": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2618": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2620": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2621": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2622": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2623": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "SUB",
      "path": "17"
    },
    "2624": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2625": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2626": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "GAS",
      "path": "17"
    },
    "2627": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2628": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2629": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2630": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2631": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA54"
    },
    "2634": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2635": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2636": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2638": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2639": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2640": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2641": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2643": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2644": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2645": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "POP",
      "path": "17"
    },
    "2646": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "POP",
      "path": "17"
    },
    "2647": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "POP",
      "path": "17"
    },
    "2648": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "POP",
      "path": "17"
    },
    "2649": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2651": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2652": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2653": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2655": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "NOT",
      "path": "17"
    },
    "2656": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2658": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2659": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "ADD",
      "path": "17"
    },
    "2660": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "AND",
      "path": "17"
    },
    "2661": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2662": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "ADD",
      "path": "17"
    },
    "2663": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2664": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2666": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2667": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "POP",
      "path": "17"
    },
    "2668": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2669": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "ADD",
      "path": "17"
    },
    "2670": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2671": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA78"
    },
    "2674": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2675": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2676": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CA7"
    },
    "2679": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        6133,
        6165
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2680": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6133,
        6165
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2681": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6185
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6209
      ],
      "op": "AND",
      "path": "17"
    },
    "2691": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6209
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xAB44997B"
    },
    "2696": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2698": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2699": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2700": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2705": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "AND",
      "path": "17"
    },
    "2706": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2708": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "SHL",
      "path": "17"
    },
    "2709": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2710": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2711": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2713": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "ADD",
      "path": "17"
    },
    "2714": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2716": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2718": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2719": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2720": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2721": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "SUB",
      "path": "17"
    },
    "2722": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2723": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2724": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "GAS",
      "path": "17"
    },
    "2725": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2726": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2727": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2728": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2729": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAB6"
    },
    "2732": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2733": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2734": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2736": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2737": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2738": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2739": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2741": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2742": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2743": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "POP",
      "path": "17"
    },
    "2744": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "POP",
      "path": "17"
    },
    "2745": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "POP",
      "path": "17"
    },
    "2746": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "POP",
      "path": "17"
    },
    "2747": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2749": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2750": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2751": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2753": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "NOT",
      "path": "17"
    },
    "2754": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2756": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2757": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "ADD",
      "path": "17"
    },
    "2758": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "AND",
      "path": "17"
    },
    "2759": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2760": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "ADD",
      "path": "17"
    },
    "2761": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2762": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2764": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2765": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "POP",
      "path": "17"
    },
    "2766": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2767": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "ADD",
      "path": "17"
    },
    "2768": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2769": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xADA"
    },
    "2772": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2773": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2774": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CA7"
    },
    "2777": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        6179,
        6211
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2778": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6179,
        6211
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2779": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6231
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2786": {
      "op": "SHL"
    },
    "2787": {
      "op": "SUB"
    },
    "2788": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6256
      ],
      "op": "AND",
      "path": "17"
    },
    "2789": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6256
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x5FE6663"
    },
    "2794": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2796": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2797": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2798": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2803": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "AND",
      "path": "17"
    },
    "2804": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2806": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "SHL",
      "path": "17"
    },
    "2807": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2808": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2809": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2811": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "ADD",
      "path": "17"
    },
    "2812": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2814": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2816": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2817": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2818": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2819": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "SUB",
      "path": "17"
    },
    "2820": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2821": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2822": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "GAS",
      "path": "17"
    },
    "2823": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2824": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2825": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2826": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2827": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB18"
    },
    "2830": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2831": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2832": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2834": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2835": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2836": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2837": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2839": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2840": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2841": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "POP",
      "path": "17"
    },
    "2842": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "POP",
      "path": "17"
    },
    "2843": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "POP",
      "path": "17"
    },
    "2844": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "POP",
      "path": "17"
    },
    "2845": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2847": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2848": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2849": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2851": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "NOT",
      "path": "17"
    },
    "2852": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2854": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2855": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "ADD",
      "path": "17"
    },
    "2856": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "AND",
      "path": "17"
    },
    "2857": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2858": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "ADD",
      "path": "17"
    },
    "2859": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2860": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2862": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2863": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "POP",
      "path": "17"
    },
    "2864": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2865": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "ADD",
      "path": "17"
    },
    "2866": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2867": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB3C"
    },
    "2870": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2871": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2872": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CA7"
    },
    "2875": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "i",
      "offset": [
        6225,
        6258
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2876": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        6225,
        6258
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2877": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2878": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2879": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2880": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2881": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2882": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2883": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2884": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2885": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2886": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2887": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2888": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2889": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2890": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2891": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "2892": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2893": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5921,
        6268
      ],
      "op": "POP",
      "path": "17"
    },
    "2894": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2895": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2896": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "2897": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "2898": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "POP",
      "path": "17"
    },
    "2899": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2900": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2901": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "2902": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "offset": [
        5422,
        6275
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "2903": {
      "fn": "ApiCLHouse.GetHouseProperties",
      "jump": "o",
      "offset": [
        5422,
        6275
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2904": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2905": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8141,
        8148
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2907": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8165,
        8189
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2908": {
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2910": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2911": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2913": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "ADD",
      "path": "22"
    },
    "2914": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB6A"
    },
    "2917": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2918": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9F"
    },
    "2921": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        531,
        647
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2922": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2923": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2925": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2926": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2928": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2929": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2930": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "2931": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "2932": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2933": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2934": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2935": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2937": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2938": {
      "offset": [
        516,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2939": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        516,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2940": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        516,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2941": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        516,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2943": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        516,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "2944": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        516,
        649
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2947": {
      "op": "DUP1"
    },
    "2948": {
      "op": "MLOAD"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2951": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "2954": {
      "op": "DUP4"
    },
    "2955": {
      "op": "CODECOPY"
    },
    "2956": {
      "op": "DUP2"
    },
    "2957": {
      "op": "MLOAD"
    },
    "2958": {
      "op": "SWAP2"
    },
    "2959": {
      "op": "MSTORE"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "DUP1"
    },
    "2963": {
      "op": "MLOAD"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2966": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "2969": {
      "op": "DUP4"
    },
    "2970": {
      "op": "CODECOPY"
    },
    "2971": {
      "op": "DUP2"
    },
    "2972": {
      "op": "MLOAD"
    },
    "2973": {
      "op": "SWAP2"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8369,
        8382
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "2976": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8400,
        8410
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2977": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2979": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2980": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2982": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "ADD",
      "path": "17"
    },
    "2983": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBB4"
    },
    "2986": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "2987": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "2988": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2989": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2990": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2991": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2992": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B09"
    },
    "2995": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        8215,
        8424
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2996": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2997": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2999": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3000": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3002": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3003": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3004": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SUB",
      "path": "17"
    },
    "3005": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SUB",
      "path": "17"
    },
    "3006": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3007": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3008": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3009": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3011": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8215,
        8424
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3012": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8192,
        8434
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3013": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8192,
        8434
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3014": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8192,
        8434
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3015": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8192,
        8434
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3017": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8192,
        8434
      ],
      "op": "ADD",
      "path": "17"
    },
    "3018": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8192,
        8434
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3019": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8165,
        8434
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3020": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8165,
        8434
      ],
      "op": "POP",
      "path": "17"
    },
    "3021": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8445,
        8460
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3023": {
      "offset": [
        825,
        918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3025": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3026": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3028": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "ADD",
      "path": "22"
    },
    "3029": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC27"
    },
    "3032": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3033": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3066": {
      "op": "DUP2"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "SWAP1"
    },
    "3110": {
      "op": "JUMP"
    },
    "3111": {
      "offset": [
        825,
        918
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3112": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3114": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3115": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3117": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3118": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3119": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "SUB",
      "path": "22"
    },
    "3120": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "SUB",
      "path": "22"
    },
    "3121": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3122": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3123": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3124": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3126": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        825,
        918
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3127": {
      "offset": [
        810,
        920
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3128": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        810,
        920
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3129": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        810,
        920
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3130": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        810,
        920
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3132": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        810,
        920
      ],
      "op": "ADD",
      "path": "22"
    },
    "3133": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        810,
        920
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3134": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8549,
        8556
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3135": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8574,
        8582
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3136": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8629,
        8643
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3137": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3139": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3140": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3142": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "ADD",
      "path": "17"
    },
    "3143": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC50"
    },
    "3146": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3147": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3148": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "3151": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        8611,
        8645
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3152": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3153": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3155": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3156": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3159": {
      "op": "NOT"
    },
    "3160": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3161": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3162": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "SUB",
      "path": "17"
    },
    "3163": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "ADD",
      "path": "17"
    },
    "3164": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3165": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3166": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3167": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3168": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3169": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8600,
        8647
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3170": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8600,
        8647
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3171": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8611,
        8645
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3173": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8600,
        8647
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3174": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8600,
        8647
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3175": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8600,
        8647
      ],
      "op": "ADD",
      "path": "17"
    },
    "3176": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8600,
        8647
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3177": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3178": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3179": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "ADD",
      "path": "17"
    },
    "3180": {
      "op": "SWAP6"
    },
    "3181": {
      "op": "SWAP1"
    },
    "3182": {
      "op": "SWAP6"
    },
    "3183": {
      "op": "MSTORE"
    },
    "3184": {
      "op": "DUP2"
    },
    "3185": {
      "op": "ADD"
    },
    "3186": {
      "op": "SWAP3"
    },
    "3187": {
      "op": "SWAP1"
    },
    "3188": {
      "op": "SWAP3"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "ISZERO"
    },
    "3191": {
      "op": "ISZERO"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3194": {
      "op": "DUP3"
    },
    "3195": {
      "op": "ADD"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3199": {
      "op": "DUP2"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "SWAP2"
    },
    "3202": {
      "op": "SWAP1"
    },
    "3203": {
      "op": "SWAP2"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3209": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3211": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3212": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3214": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3215": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3216": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "SUB",
      "path": "17"
    },
    "3217": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "SUB",
      "path": "17"
    },
    "3218": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3219": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3220": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3221": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3223": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8484,
        8661
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3224": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8463,
        8671
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3225": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8463,
        8671
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3226": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8463,
        8671
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3227": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8463,
        8671
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3229": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8463,
        8671
      ],
      "op": "ADD",
      "path": "17"
    },
    "3230": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8463,
        8671
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3231": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8445,
        8671
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3232": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8445,
        8671
      ],
      "op": "POP",
      "path": "17"
    },
    "3233": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8682,
        8698
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3235": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8742,
        8758
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3236": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8760,
        8767
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3237": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3239": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3240": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3242": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "ADD",
      "path": "17"
    },
    "3243": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCB5"
    },
    "3246": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3247": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3248": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3249": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B51"
    },
    "3252": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        8712,
        8769
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3253": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3254": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3256": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3257": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3259": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3260": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3261": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "SUB",
      "path": "17"
    },
    "3262": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "SUB",
      "path": "17"
    },
    "3263": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3264": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3265": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3266": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3268": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8712,
        8769
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3269": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8701,
        8771
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3270": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8701,
        8771
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3271": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8701,
        8771
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3272": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8701,
        8771
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3274": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8701,
        8771
      ],
      "op": "ADD",
      "path": "17"
    },
    "3275": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8701,
        8771
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3276": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8682,
        8771
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3277": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8682,
        8771
      ],
      "op": "POP",
      "path": "17"
    },
    "3278": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8789,
        8824
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 9,
      "value": "0xCD7"
    },
    "3281": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8802,
        8810
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3282": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8812,
        8822
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3283": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8789,
        8800
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "3286": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "i",
      "offset": [
        8789,
        8824
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3287": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8789,
        8824
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3288": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        8782,
        8824
      ],
      "op": "SWAP10",
      "path": "17"
    },
    "3289": {
      "fn": "ApiCLHouse.SignerOCVote",
      "offset": [
        7933,
        8831
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "op": "POP"
    },
    "3294": {
      "op": "POP"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "fn": "ApiCLHouse.SignerOCVote",
      "jump": "o",
      "offset": [
        7933,
        8831
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3300": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3301": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7322,
        7329
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3303": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7346,
        7370
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3304": {
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3306": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3307": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3309": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "ADD",
      "path": "22"
    },
    "3310": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCF6"
    },
    "3313": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3314": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9F"
    },
    "3317": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "i",
      "offset": [
        531,
        647
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3318": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3319": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3321": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3322": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3324": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3325": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3326": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "3327": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "3328": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3329": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3330": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3331": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3333": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3334": {
      "offset": [
        516,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3335": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        516,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3336": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        516,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3337": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        516,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3339": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        516,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "3340": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        516,
        649
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "DUP1"
    },
    "3344": {
      "op": "MLOAD"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3347": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "3350": {
      "op": "DUP4"
    },
    "3351": {
      "op": "CODECOPY"
    },
    "3352": {
      "op": "DUP2"
    },
    "3353": {
      "op": "MLOAD"
    },
    "3354": {
      "op": "SWAP2"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3358": {
      "op": "DUP1"
    },
    "3359": {
      "op": "MLOAD"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3362": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "3365": {
      "op": "DUP4"
    },
    "3366": {
      "op": "CODECOPY"
    },
    "3367": {
      "op": "DUP2"
    },
    "3368": {
      "op": "MLOAD"
    },
    "3369": {
      "op": "SWAP2"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7550,
        7563
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "3372": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7581,
        7591
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3373": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3375": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3376": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3378": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "ADD",
      "path": "17"
    },
    "3379": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD40"
    },
    "3382": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "3383": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "3384": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3385": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3386": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3387": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3388": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B09"
    },
    "3391": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "i",
      "offset": [
        7396,
        7605
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3392": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3393": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3395": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3396": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3398": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3399": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3400": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SUB",
      "path": "17"
    },
    "3401": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SUB",
      "path": "17"
    },
    "3402": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3403": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3404": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3405": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3407": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7396,
        7605
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3408": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7373,
        7615
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3409": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7373,
        7615
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3410": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7373,
        7615
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3411": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7373,
        7615
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3413": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7373,
        7615
      ],
      "op": "ADD",
      "path": "17"
    },
    "3414": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7373,
        7615
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3415": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7346,
        7615
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3416": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7346,
        7615
      ],
      "op": "POP",
      "path": "17"
    },
    "3417": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7626,
        7641
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3419": {
      "offset": [
        706,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3421": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3422": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3424": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "ADD",
      "path": "22"
    },
    "3425": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD8D"
    },
    "3428": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3429": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000"
    },
    "3462": {
      "op": "DUP2"
    },
    "3463": {
      "op": "MSTORE"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3466": {
      "op": "ADD"
    },
    "3467": {
      "op": "SWAP1"
    },
    "3468": {
      "op": "JUMP"
    },
    "3469": {
      "offset": [
        706,
        767
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3470": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3472": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3473": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3474": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3475": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3476": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "SUB",
      "path": "22"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3479": {
      "op": "NOT"
    },
    "3480": {
      "offset": [
        706,
        767
      ],
      "op": "ADD",
      "path": "22"
    },
    "3481": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3482": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3483": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3484": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3485": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        706,
        767
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3486": {
      "offset": [
        691,
        769
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3487": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        691,
        769
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3488": {
      "offset": [
        706,
        767
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3490": {
      "offset": [
        691,
        769
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3491": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        691,
        769
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3492": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        691,
        769
      ],
      "op": "ADD",
      "path": "22"
    },
    "3493": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        691,
        769
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3494": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3495": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3496": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "ADD",
      "path": "17"
    },
    "3497": {
      "op": "MSTORE"
    },
    "3498": {
      "op": "DUP9"
    },
    "3499": {
      "op": "ISZERO"
    },
    "3500": {
      "op": "ISZERO"
    },
    "3501": {
      "op": "DUP4"
    },
    "3502": {
      "op": "DUP4"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3506": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3507": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3508": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3509": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "SUB",
      "path": "17"
    },
    "3510": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3511": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "ADD",
      "path": "17"
    },
    "3512": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3513": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3516": {
      "op": "DUP5"
    },
    "3517": {
      "op": "ADD"
    },
    "3518": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3519": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3520": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7665,
        7756
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3521": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3522": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3523": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3524": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "ADD",
      "path": "17"
    },
    "3525": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3526": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3530": {
      "op": "SWAP1"
    },
    "3531": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDDA"
    },
    "3534": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3535": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7837,
        7853
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3536": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7837,
        7853
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3537": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3538": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7644,
        7766
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3539": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "3541": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "ADD",
      "path": "17"
    },
    "3542": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B51"
    },
    "3545": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "i",
      "offset": [
        7807,
        7864
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3546": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3547": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3549": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3550": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3552": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3553": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3554": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "SUB",
      "path": "17"
    },
    "3555": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "SUB",
      "path": "17"
    },
    "3556": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3557": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3558": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3559": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3561": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7807,
        7864
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3562": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7796,
        7866
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3563": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7796,
        7866
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3564": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7796,
        7866
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3565": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7796,
        7866
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3567": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7796,
        7866
      ],
      "op": "ADD",
      "path": "17"
    },
    "3568": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7796,
        7866
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3569": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7777,
        7866
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3570": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7777,
        7866
      ],
      "op": "POP",
      "path": "17"
    },
    "3571": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7884,
        7919
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 10,
      "value": "0xDFC"
    },
    "3574": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7897,
        7905
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3575": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7907,
        7917
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3576": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7884,
        7895
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "3579": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "i",
      "offset": [
        7884,
        7919
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3580": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7884,
        7919
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3581": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7877,
        7919
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "3582": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "offset": [
        7170,
        7926
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "POP"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "op": "POP"
    },
    "3589": {
      "op": "POP"
    },
    "3590": {
      "fn": "ApiCLHouse.SignerOCInvit",
      "jump": "o",
      "offset": [
        7170,
        7926
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3591": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3592": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1769,
        1798
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "3594": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1823,
        1838
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3596": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1851,
        1861
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3597": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1823,
        1863
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3598": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1823,
        1863
      ],
      "op": "POP",
      "path": "17"
    },
    "3599": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1874,
        1896
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3601": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1905
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3608": {
      "op": "SHL"
    },
    "3609": {
      "op": "SUB"
    },
    "3610": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1922
      ],
      "op": "AND",
      "path": "17"
    },
    "3611": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1922
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xDA9BCA21"
    },
    "3616": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3618": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3619": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3620": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3625": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "AND",
      "path": "17"
    },
    "3626": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "3628": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "SHL",
      "path": "17"
    },
    "3629": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3630": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3631": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3633": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "ADD",
      "path": "17"
    },
    "3634": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3636": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3638": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3639": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3640": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3641": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "SUB",
      "path": "17"
    },
    "3642": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3643": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3644": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "GAS",
      "path": "17"
    },
    "3645": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "3646": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3647": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3648": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3649": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE4E"
    },
    "3652": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3653": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3654": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3656": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3657": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "3658": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3659": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3661": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "REVERT",
      "path": "17"
    },
    "3662": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3663": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "POP",
      "path": "17"
    },
    "3664": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "POP",
      "path": "17"
    },
    "3665": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "POP",
      "path": "17"
    },
    "3666": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "POP",
      "path": "17"
    },
    "3667": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3669": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3670": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3671": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3673": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "NOT",
      "path": "17"
    },
    "3674": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3676": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3677": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "ADD",
      "path": "17"
    },
    "3678": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "AND",
      "path": "17"
    },
    "3679": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3680": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "ADD",
      "path": "17"
    },
    "3681": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3682": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3684": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3685": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "POP",
      "path": "17"
    },
    "3686": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3687": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "ADD",
      "path": "17"
    },
    "3688": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3689": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE72"
    },
    "3692": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3693": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3694": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CA7"
    },
    "3697": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        1899,
        1925
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3698": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1899,
        1925
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3699": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1874,
        1925
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3700": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1874,
        1925
      ],
      "op": "POP",
      "path": "17"
    },
    "3701": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1935,
        1959
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3703": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1968
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "op": "SUB"
    },
    "3712": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1988
      ],
      "op": "AND",
      "path": "17"
    },
    "3713": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1988
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x824C88DA"
    },
    "3718": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3720": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3721": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3722": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "3727": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "AND",
      "path": "17"
    },
    "3728": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "3730": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "SHL",
      "path": "17"
    },
    "3731": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3732": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3733": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3735": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "ADD",
      "path": "17"
    },
    "3736": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3738": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3740": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3741": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3742": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3743": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "SUB",
      "path": "17"
    },
    "3744": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3745": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3746": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "GAS",
      "path": "17"
    },
    "3747": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "3748": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3749": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3750": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3751": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEB4"
    },
    "3754": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3755": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3756": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3758": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3759": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "3760": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3761": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3763": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "REVERT",
      "path": "17"
    },
    "3764": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3765": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "POP",
      "path": "17"
    },
    "3766": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "POP",
      "path": "17"
    },
    "3767": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "POP",
      "path": "17"
    },
    "3768": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "POP",
      "path": "17"
    },
    "3769": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3771": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3772": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3773": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3775": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "NOT",
      "path": "17"
    },
    "3776": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3778": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3779": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "ADD",
      "path": "17"
    },
    "3780": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "AND",
      "path": "17"
    },
    "3781": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3782": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "ADD",
      "path": "17"
    },
    "3783": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3784": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3786": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3787": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "POP",
      "path": "17"
    },
    "3788": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3789": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "ADD",
      "path": "17"
    },
    "3790": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3791": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xED8"
    },
    "3794": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3795": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3796": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B6C"
    },
    "3799": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        1962,
        1990
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3800": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1962,
        1990
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3801": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1935,
        1990
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3802": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1935,
        1990
      ],
      "op": "POP",
      "path": "17"
    },
    "3803": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2000,
        2030
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3805": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2051,
        2067
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3806": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "3808": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "AND",
      "path": "17"
    },
    "3809": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3818": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3819": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "GT",
      "path": "17"
    },
    "3820": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3821": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEF8"
    },
    "3824": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3825": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xEF8"
    },
    "3828": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13C3"
    },
    "3831": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3832": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3833": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3835": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3836": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3837": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3838": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3839": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3840": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3841": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3843": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "MUL",
      "path": "17"
    },
    "3844": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3846": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "ADD",
      "path": "17"
    },
    "3847": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3848": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "ADD",
      "path": "17"
    },
    "3849": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3851": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3852": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3853": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3854": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF31"
    },
    "3857": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3858": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3859": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3861": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "ADD",
      "path": "17"
    },
    "3862": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3863": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF1E"
    },
    "3866": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1387"
    },
    "3869": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3870": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3871": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3872": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3873": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3875": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "ADD",
      "path": "17"
    },
    "3876": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3877": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3879": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3880": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "SUB",
      "path": "17"
    },
    "3881": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3882": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3883": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF16"
    },
    "3886": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3887": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3888": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "POP",
      "path": "17"
    },
    "3889": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2033,
        2069
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2000,
        2069
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2080,
        2091
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3895": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2126,
        2127
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "3897": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3898": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2136,
        2152
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3899": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2130,
        2133
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3900": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2130,
        2152
      ],
      "op": "LT",
      "path": "17"
    },
    "3901": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3902": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x102E"
    },
    "3905": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3906": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2177,
        2205
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF49"
    },
    "3909": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2177,
        2205
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1387"
    },
    "3912": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2177,
        2205
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3913": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2177,
        2205
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3914": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 11,
      "value": "0x40"
    },
    "3916": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3917": {
      "op": "PUSH4",
      "value": "0x8532CBF7"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3924": {
      "op": "SHL"
    },
    "3925": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3926": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3927": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "3929": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3930": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "ADD",
      "path": "17"
    },
    "3931": {
      "op": "DUP4"
    },
    "3932": {
      "op": "SWAP1"
    },
    "3933": {
      "op": "MSTORE"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "op": "SUB"
    },
    "3942": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2416
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3943": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2416
      ],
      "op": "AND",
      "path": "17"
    },
    "3944": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2416
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3945": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2416
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8532CBF7"
    },
    "3950": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2416
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3953": {
      "op": "ADD"
    },
    "3954": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3956": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3958": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3959": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3960": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3961": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "SUB",
      "path": "17"
    },
    "3962": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3963": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3964": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "GAS",
      "path": "17"
    },
    "3965": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "3966": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3967": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3968": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "3969": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF8E"
    },
    "3972": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "3973": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3974": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3976": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3977": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "3978": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3979": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3981": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "REVERT",
      "path": "17"
    },
    "3982": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3983": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "POP",
      "path": "17"
    },
    "3984": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "POP",
      "path": "17"
    },
    "3985": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "POP",
      "path": "17"
    },
    "3986": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "POP",
      "path": "17"
    },
    "3987": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3989": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3990": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3991": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3993": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3994": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "3995": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "3997": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "3998": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3999": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4000": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "ADD",
      "path": "17"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4003": {
      "op": "NOT"
    },
    "4004": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "AND",
      "path": "17"
    },
    "4005": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4006": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "ADD",
      "path": "17"
    },
    "4007": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4009": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4010": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFB6"
    },
    "4013": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4014": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4015": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4016": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "ADD",
      "path": "17"
    },
    "4017": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4018": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BD2"
    },
    "4021": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2399,
        2423
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4022": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2399,
        2423
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4023": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4024": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4025": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2373,
        2394
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "4027": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2373,
        2394
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4028": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2373,
        2394
      ],
      "op": "ADD",
      "path": "17"
    },
    "4029": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4030": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4031": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4032": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2335,
        2355
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "4034": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2335,
        2355
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4035": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2335,
        2355
      ],
      "op": "ADD",
      "path": "17"
    },
    "4036": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4037": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4038": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4039": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2298,
        2317
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4041": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2298,
        2317
      ],
      "op": "DUP6",
      "path": "17"
    },
    "4042": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2298,
        2317
      ],
      "op": "ADD",
      "path": "17"
    },
    "4043": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4044": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4045": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4046": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4047": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2264,
        2280
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4049": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2264,
        2280
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4050": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2264,
        2280
      ],
      "op": "ADD",
      "path": "17"
    },
    "4051": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4052": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4053": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4054": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4061": {
      "op": "SHL"
    },
    "4062": {
      "op": "SUB"
    },
    "4063": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4064": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4065": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "AND",
      "path": "17"
    },
    "4066": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4067": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2220,
        2423
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4068": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2442,
        2446
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4070": {
      "branch": 20,
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2442,
        2470
      ],
      "op": "EQ",
      "path": "17"
    },
    "4071": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2438,
        2564
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4072": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2438,
        2564
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x101B"
    },
    "4075": {
      "branch": 20,
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2438,
        2564
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4076": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2513,
        2524
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 12
    },
    "4077": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2501
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4078": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2503,
        2508
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4079": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "4081": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "AND",
      "path": "17"
    },
    "4082": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4083": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4084": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4085": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "LT",
      "path": "17"
    },
    "4086": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1001"
    },
    "4089": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4090": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1001"
    },
    "4093": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CC4"
    },
    "4096": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2490,
        2510
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4097": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4098": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4100": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "MUL",
      "path": "17"
    },
    "4101": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4103": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "ADD",
      "path": "17"
    },
    "4104": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2510
      ],
      "op": "ADD",
      "path": "17"
    },
    "4105": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2524
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4106": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2524
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4107": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2524
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4108": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2490,
        2524
      ],
      "op": "POP",
      "path": "17"
    },
    "4109": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 13
    },
    "4110": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4111": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1017"
    },
    "4114": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4115": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1CF0"
    },
    "4118": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2542,
        2549
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4119": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4120": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4121": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "POP",
      "path": "17"
    },
    "4122": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2542,
        2549
      ],
      "op": "POP",
      "path": "17"
    },
    "4123": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2438,
        2564
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4124": {
      "op": "POP"
    },
    "4125": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 14
    },
    "4126": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1026"
    },
    "4129": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4130": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1D10"
    },
    "4133": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "i",
      "offset": [
        2155,
        2160
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4134": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4135": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4136": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "POP",
      "path": "17"
    },
    "4137": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2155,
        2160
      ],
      "op": "POP",
      "path": "17"
    },
    "4138": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF39"
    },
    "4141": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4142": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2107,
        2574
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4143": {
      "op": "POP"
    },
    "4144": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2590,
        2601
      ],
      "op": "SWAP1",
      "path": "17",
      "statement": 15
    },
    "4145": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        2590,
        2601
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "4146": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "offset": [
        1650,
        2608
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "4147": {
      "op": "POP"
    },
    "4148": {
      "op": "POP"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "op": "POP"
    },
    "4151": {
      "op": "POP"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "fn": "ApiCLHouse.GetHouseUserList",
      "jump": "o",
      "offset": [
        1650,
        2608
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4154": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4155": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9115,
        9122
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4157": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9139,
        9163
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4158": {
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4160": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4161": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4163": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "ADD",
      "path": "22"
    },
    "4164": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104C"
    },
    "4167": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4168": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9F"
    },
    "4171": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        531,
        647
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4172": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4173": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4175": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4176": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4178": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4179": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4180": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "4181": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "4182": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4183": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4184": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4185": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4187": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4188": {
      "offset": [
        516,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4189": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        516,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4190": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        516,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4191": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        516,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4193": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        516,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "4194": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        516,
        649
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4197": {
      "op": "DUP1"
    },
    "4198": {
      "op": "MLOAD"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4201": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "4204": {
      "op": "DUP4"
    },
    "4205": {
      "op": "CODECOPY"
    },
    "4206": {
      "op": "DUP2"
    },
    "4207": {
      "op": "MLOAD"
    },
    "4208": {
      "op": "SWAP2"
    },
    "4209": {
      "op": "MSTORE"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4212": {
      "op": "DUP1"
    },
    "4213": {
      "op": "MLOAD"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4216": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "4219": {
      "op": "DUP4"
    },
    "4220": {
      "op": "CODECOPY"
    },
    "4221": {
      "op": "DUP2"
    },
    "4222": {
      "op": "MLOAD"
    },
    "4223": {
      "op": "SWAP2"
    },
    "4224": {
      "op": "MSTORE"
    },
    "4225": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9343,
        9356
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "4226": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9374,
        9384
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4227": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4229": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4230": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4232": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "ADD",
      "path": "17"
    },
    "4233": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1096"
    },
    "4236": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "4237": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "4238": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4239": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4240": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4241": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4242": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B09"
    },
    "4245": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        9189,
        9398
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4246": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4247": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4249": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4250": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4252": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4253": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4254": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SUB",
      "path": "17"
    },
    "4255": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SUB",
      "path": "17"
    },
    "4256": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4257": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4258": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4259": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4261": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9189,
        9398
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4262": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9166,
        9408
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4263": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9166,
        9408
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4264": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9166,
        9408
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4265": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9166,
        9408
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4267": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9166,
        9408
      ],
      "op": "ADD",
      "path": "17"
    },
    "4268": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9166,
        9408
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4269": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9139,
        9408
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4270": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9139,
        9408
      ],
      "op": "POP",
      "path": "17"
    },
    "4271": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9419,
        9434
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4273": {
      "offset": [
        981,
        1113
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4275": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4276": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4278": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "ADD",
      "path": "22"
    },
    "4279": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x113A"
    },
    "4282": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4283": {
      "op": "PUSH32",
      "value": "0x7374724F434E65774D656D62657228616464726573732077616C6C6574416464"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "PUSH32",
      "value": "0x722C737472696E67206E616D652C737472696E67206465736372697074696F6E"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4353": {
      "op": "DUP3"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH32",
      "value": "0x2C626F6F6C2069734D616E616765722C75696E743235362064656C617954696D"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4391": {
      "op": "DUP3"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH2",
      "value": "0x6529"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4399": {
      "op": "SHL"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4402": {
      "op": "DUP3"
    },
    "4403": {
      "op": "ADD"
    },
    "4404": {
      "op": "MSTORE"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4407": {
      "op": "ADD"
    },
    "4408": {
      "op": "SWAP1"
    },
    "4409": {
      "op": "JUMP"
    },
    "4410": {
      "offset": [
        981,
        1113
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4411": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4413": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4414": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4416": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4417": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4418": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "SUB",
      "path": "22"
    },
    "4419": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "SUB",
      "path": "22"
    },
    "4420": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4421": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4422": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4423": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4425": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        981,
        1113
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4426": {
      "offset": [
        966,
        1115
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4427": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        966,
        1115
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4428": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        966,
        1115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4429": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        966,
        1115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4431": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        966,
        1115
      ],
      "op": "ADD",
      "path": "22"
    },
    "4432": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        966,
        1115
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4433": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9528,
        9539
      ],
      "op": "DUP11",
      "path": "17"
    },
    "4434": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9586,
        9591
      ],
      "op": "DUP11",
      "path": "17"
    },
    "4435": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4437": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4438": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4440": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "ADD",
      "path": "17"
    },
    "4441": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1162"
    },
    "4444": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4445": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4446": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "4449": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        9568,
        9593
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4450": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4451": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4453": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4454": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4456": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4457": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4458": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "SUB",
      "path": "17"
    },
    "4459": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "SUB",
      "path": "17"
    },
    "4460": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4461": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4462": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4463": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4465": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9568,
        9593
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4466": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9557,
        9595
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4467": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9557,
        9595
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4468": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9557,
        9595
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4469": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9557,
        9595
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4471": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9557,
        9595
      ],
      "op": "ADD",
      "path": "17"
    },
    "4472": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9557,
        9595
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4473": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9642,
        9654
      ],
      "op": "DUP11",
      "path": "17"
    },
    "4474": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4476": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4477": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4479": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "ADD",
      "path": "17"
    },
    "4480": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1189"
    },
    "4483": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4484": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4485": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "4488": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        9624,
        9656
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4489": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4490": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4492": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4493": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4496": {
      "op": "NOT"
    },
    "4497": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4498": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4499": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "SUB",
      "path": "17"
    },
    "4500": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "ADD",
      "path": "17"
    },
    "4501": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4502": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4503": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4504": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4505": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4506": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9613,
        9658
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4507": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9613,
        9658
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4508": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9624,
        9656
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4510": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9613,
        9658
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4511": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9613,
        9658
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4512": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9613,
        9658
      ],
      "op": "ADD",
      "path": "17"
    },
    "4513": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9613,
        9658
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4514": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4515": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4516": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "ADD",
      "path": "17"
    },
    "4517": {
      "op": "SWAP6"
    },
    "4518": {
      "op": "SWAP1"
    },
    "4519": {
      "op": "SWAP6"
    },
    "4520": {
      "op": "MSTORE"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "SUB"
    },
    "4529": {
      "op": "SWAP1"
    },
    "4530": {
      "op": "SWAP4"
    },
    "4531": {
      "op": "AND"
    },
    "4532": {
      "op": "SWAP3"
    },
    "4533": {
      "op": "DUP2"
    },
    "4534": {
      "op": "ADD"
    },
    "4535": {
      "op": "SWAP3"
    },
    "4536": {
      "op": "SWAP1"
    },
    "4537": {
      "op": "SWAP3"
    },
    "4538": {
      "op": "MSTORE"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "MSTORE"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4546": {
      "op": "DUP2"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "op": "SWAP2"
    },
    "4549": {
      "op": "SWAP1"
    },
    "4550": {
      "op": "SWAP2"
    },
    "4551": {
      "op": "MSTORE"
    },
    "4552": {
      "op": "DUP8"
    },
    "4553": {
      "op": "ISZERO"
    },
    "4554": {
      "op": "ISZERO"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "MSTORE"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4562": {
      "op": "DUP2"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "DUP8"
    },
    "4565": {
      "op": "SWAP1"
    },
    "4566": {
      "op": "MSTORE"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4572": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4573": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4575": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4576": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4577": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "SUB",
      "path": "17"
    },
    "4578": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "SUB",
      "path": "17"
    },
    "4579": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4580": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4581": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4582": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4584": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9458,
        9728
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4585": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9437,
        9738
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4586": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9437,
        9738
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4587": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9437,
        9738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4588": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9437,
        9738
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4590": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9437,
        9738
      ],
      "op": "ADD",
      "path": "17"
    },
    "4591": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9437,
        9738
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4592": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9419,
        9738
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4593": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9419,
        9738
      ],
      "op": "POP",
      "path": "17"
    },
    "4594": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9749,
        9765
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4596": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9809,
        9825
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4597": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9827,
        9834
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4598": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4600": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4601": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4603": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "ADD",
      "path": "17"
    },
    "4604": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1206"
    },
    "4607": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4608": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4609": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4610": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B51"
    },
    "4613": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        9779,
        9836
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4614": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4615": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4617": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4618": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4620": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4621": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4622": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "SUB",
      "path": "17"
    },
    "4623": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "SUB",
      "path": "17"
    },
    "4624": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4625": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4626": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4627": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4629": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9779,
        9836
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4630": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9768,
        9838
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4631": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9768,
        9838
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4632": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9768,
        9838
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4633": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9768,
        9838
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4635": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9768,
        9838
      ],
      "op": "ADD",
      "path": "17"
    },
    "4636": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9768,
        9838
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4637": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9749,
        9838
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4638": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9749,
        9838
      ],
      "op": "POP",
      "path": "17"
    },
    "4639": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9856,
        9891
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 16,
      "value": "0x1228"
    },
    "4642": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9869,
        9877
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4643": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9879,
        9889
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4644": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9856,
        9867
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F0"
    },
    "4647": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "i",
      "offset": [
        9856,
        9891
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4648": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9856,
        9891
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4649": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        9849,
        9891
      ],
      "op": "SWAP12",
      "path": "17"
    },
    "4650": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "offset": [
        8838,
        9898
      ],
      "op": "SWAP11",
      "path": "17"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "op": "POP"
    },
    "4656": {
      "op": "POP"
    },
    "4657": {
      "op": "POP"
    },
    "4658": {
      "op": "POP"
    },
    "4659": {
      "op": "POP"
    },
    "4660": {
      "op": "POP"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "fn": "ApiCLHouse.SignerOCNewMember",
      "jump": "o",
      "offset": [
        8838,
        9898
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4663": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        9905,
        10827
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4664": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10128,
        10135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4666": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10152,
        10176
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4667": {
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4669": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4670": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4672": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "ADD",
      "path": "22"
    },
    "4673": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1249"
    },
    "4676": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4677": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9F"
    },
    "4680": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "jump": "i",
      "offset": [
        531,
        647
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4681": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4682": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4684": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4685": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4687": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4688": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4689": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "4690": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "SUB",
      "path": "22"
    },
    "4691": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4692": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4693": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4694": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4696": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        531,
        647
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4697": {
      "offset": [
        516,
        649
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4698": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        516,
        649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4699": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        516,
        649
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4700": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        516,
        649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4702": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        516,
        649
      ],
      "op": "ADD",
      "path": "22"
    },
    "4703": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        516,
        649
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4706": {
      "op": "DUP1"
    },
    "4707": {
      "op": "MLOAD"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "4713": {
      "op": "DUP4"
    },
    "4714": {
      "op": "CODECOPY"
    },
    "4715": {
      "op": "DUP2"
    },
    "4716": {
      "op": "MLOAD"
    },
    "4717": {
      "op": "SWAP2"
    },
    "4718": {
      "op": "MSTORE"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4721": {
      "op": "DUP1"
    },
    "4722": {
      "op": "MLOAD"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x1D4C"
    },
    "4728": {
      "op": "DUP4"
    },
    "4729": {
      "op": "CODECOPY"
    },
    "4730": {
      "op": "DUP2"
    },
    "4731": {
      "op": "MLOAD"
    },
    "4732": {
      "op": "SWAP2"
    },
    "4733": {
      "op": "MSTORE"
    },
    "4734": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10356,
        10369
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "4735": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10387,
        10397
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4736": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4738": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4739": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4741": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "ADD",
      "path": "17"
    },
    "4742": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1293"
    },
    "4745": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "4746": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "4747": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4748": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4749": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4750": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4751": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B09"
    },
    "4754": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "jump": "i",
      "offset": [
        10202,
        10411
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4755": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4756": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4758": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4759": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4761": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4762": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4763": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SUB",
      "path": "17"
    },
    "4764": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SUB",
      "path": "17"
    },
    "4765": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4766": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4767": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4768": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4770": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10202,
        10411
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4771": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10179,
        10421
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4772": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10179,
        10421
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4773": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10179,
        10421
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4774": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10179,
        10421
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4776": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10179,
        10421
      ],
      "op": "ADD",
      "path": "17"
    },
    "4777": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10179,
        10421
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4778": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10152,
        10421
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4779": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10152,
        10421
      ],
      "op": "POP",
      "path": "17"
    },
    "4780": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10432,
        10447
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4782": {
      "offset": [
        1176,
        1281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4784": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4785": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4787": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "ADD",
      "path": "22"
    },
    "4788": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1316"
    },
    "4791": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4792": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C4D656D62657228616464726573732077616C6C6574416464"
    },
    "4825": {
      "op": "DUP2"
    },
    "4826": {
      "op": "MSTORE"
    },
    "4827": {
      "op": "PUSH32",
      "value": "0x722C737472696E67206465736372697074696F6E2C75696E743235362064656C"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4862": {
      "op": "DUP3"
    },
    "4863": {
      "op": "ADD"
    },
    "4864": {
      "op": "MSTORE"
    },
    "4865": {
      "op": "PUSH7",
      "value": "0x617954696D6529"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4878": {
      "op": "DUP3"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x47"
    },
    "4883": {
      "op": "ADD"
    },
    "4884": {
      "op": "SWAP1"
    },
    "4885": {
      "op": "JUMP"
    },
    "4886": {
      "offset": [
        1176,
        1281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4887": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4889": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4890": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4892": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4893": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4894": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "SUB",
      "path": "22"
    },
    "4895": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "SUB",
      "path": "22"
    },
    "4896": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4897": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4898": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4899": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4901": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1176,
        1281
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4902": {
      "offset": [
        1161,
        1283
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4903": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1161,
        1283
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4904": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1161,
        1283
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4905": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1161,
        1283
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4907": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1161,
        1283
      ],
      "op": "ADD",
      "path": "22"
    },
    "4908": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        1161,
        1283
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4909": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10541,
        10552
      ],
      "op": "DUP9",
      "path": "17"
    },
    "4910": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10599,
        10611
      ],
      "op": "DUP9",
      "path": "17"
    },
    "4911": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4913": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4914": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4916": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "ADD",
      "path": "17"
    },
    "4917": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x133E"
    },
    "4920": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4921": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4922": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B35"
    },
    "4925": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "jump": "i",
      "offset": [
        10581,
        10613
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4926": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4927": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4929": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4930": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4932": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4933": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4934": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "SUB",
      "path": "17"
    },
    "4935": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "SUB",
      "path": "17"
    },
    "4936": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4937": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4938": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4939": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4941": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10581,
        10613
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4942": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10570,
        10615
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4943": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10570,
        10615
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4944": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10570,
        10615
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4945": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10570,
        10615
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4947": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10570,
        10615
      ],
      "op": "ADD",
      "path": "17"
    },
    "4948": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10570,
        10615
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4949": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10633,
        10643
      ],
      "op": "DUP9",
      "path": "17"
    },
    "4950": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4952": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4953": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4955": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "ADD",
      "path": "17"
    },
    "4956": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC88"
    },
    "4959": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "4960": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4961": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4962": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4963": {
      "fn": "ApiCLHouse.SignerOCDelMember",
      "offset": [
        10471,
        10657
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4964": {
      "op": "SWAP4"
    },
    "4965": {
      "op": "DUP5"
    },
    "4966": {
      "op": "MSTORE"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "op": "SUB"
    },
    "4975": {
      "op": "SWAP3"
    },
    "4976": {
      "op": "SWAP1"
    },
    "4977": {
      "op": "SWAP3"
    },
    "4978": {
      "op": "AND"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4981": {
      "op": "DUP5"
    },
    "4982": {
      "op": "ADD"
    },
    "4983": {
      "op": "MSTORE"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4986": {
      "op": "DUP4"
    },
    "4987": {
      "op": "ADD"
    },
    "4988": {
      "op": "MSTORE"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4991": {
      "op": "DUP3"
    },
    "4992": {
      "op": "ADD"
    },
    "4993": {
      "op": "MSTORE"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "SWAP1"
    },
    "4998": {
      "op": "JUMP"
    },
    "4999": {
      "op": "JUMPDEST"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5002": {
      "op": "MLOAD"
    },
    "5003": {
      "op": "DUP1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5009": {
      "op": "MSTORE"
    },
    "5010": {
      "op": "DUP1"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5019": {
      "op": "SHL"
    },
    "5020": {
      "op": "SUB"
    },
    "5021": {
      "op": "AND"
    },
    "5022": {
      "op": "DUP2"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5029": {
      "op": "DUP2"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5033": {
      "op": "ADD"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5036": {
      "op": "DUP2"
    },
    "5037": {
      "op": "MSTORE"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5040": {
      "op": "ADD"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5043": {
      "op": "ISZERO"
    },
    "5044": {
      "op": "ISZERO"
    },
    "5045": {
      "op": "DUP2"
    },
    "5046": {
      "op": "MSTORE"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5049": {
      "op": "ADD"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5052": {
      "op": "ISZERO"
    },
    "5053": {
      "op": "ISZERO"
    },
    "5054": {
      "op": "DUP2"
    },
    "5055": {
      "op": "MSTORE"
    },
    "5056": {
      "op": "POP"
    },
    "5057": {
      "op": "SWAP1"
    },
    "5058": {
      "jump": "o",
      "op": "JUMP"
    },
    "5059": {
      "op": "JUMPDEST"
    },
    "5060": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5067": {
      "op": "SHL"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5070": {
      "op": "MSTORE"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5075": {
      "op": "MSTORE"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5080": {
      "op": "REVERT"
    },
    "5081": {
      "op": "JUMPDEST"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5084": {
      "op": "MLOAD"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5087": {
      "op": "DUP3"
    },
    "5088": {
      "op": "ADD"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5091": {
      "op": "NOT"
    },
    "5092": {
      "op": "AND"
    },
    "5093": {
      "op": "DUP2"
    },
    "5094": {
      "op": "ADD"
    },
    "5095": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "GT"
    },
    "5106": {
      "op": "DUP3"
    },
    "5107": {
      "op": "DUP3"
    },
    "5108": {
      "op": "LT"
    },
    "5109": {
      "op": "OR"
    },
    "5110": {
      "op": "ISZERO"
    },
    "5111": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5114": {
      "op": "JUMPI"
    },
    "5115": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5121": {
      "jump": "i",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5125": {
      "op": "MSTORE"
    },
    "5126": {
      "op": "SWAP2"
    },
    "5127": {
      "op": "SWAP1"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "jump": "o",
      "op": "JUMP"
    },
    "5130": {
      "op": "JUMPDEST"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5133": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5142": {
      "op": "DUP3"
    },
    "5143": {
      "op": "GT"
    },
    "5144": {
      "op": "ISZERO"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x1424"
    },
    "5148": {
      "op": "JUMPI"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1424"
    },
    "5152": {
      "op": "PUSH2",
      "value": "0x13C3"
    },
    "5155": {
      "jump": "i",
      "op": "JUMP"
    },
    "5156": {
      "op": "JUMPDEST"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5160": {
      "op": "ADD"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5163": {
      "op": "NOT"
    },
    "5164": {
      "op": "AND"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5167": {
      "op": "ADD"
    },
    "5168": {
      "op": "SWAP1"
    },
    "5169": {
      "jump": "o",
      "op": "JUMP"
    },
    "5170": {
      "op": "JUMPDEST"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5173": {
      "op": "DUP3"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5176": {
      "op": "DUP4"
    },
    "5177": {
      "op": "ADD"
    },
    "5178": {
      "op": "SLT"
    },
    "5179": {
      "op": "PUSH2",
      "value": "0x1443"
    },
    "5182": {
      "op": "JUMPI"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5185": {
      "op": "DUP1"
    },
    "5186": {
      "op": "REVERT"
    },
    "5187": {
      "op": "JUMPDEST"
    },
    "5188": {
      "op": "DUP2"
    },
    "5189": {
      "op": "CALLDATALOAD"
    },
    "5190": {
      "op": "PUSH2",
      "value": "0x1456"
    },
    "5193": {
      "op": "PUSH2",
      "value": "0x1451"
    },
    "5196": {
      "op": "DUP3"
    },
    "5197": {
      "op": "PUSH2",
      "value": "0x140A"
    },
    "5200": {
      "jump": "i",
      "op": "JUMP"
    },
    "5201": {
      "op": "JUMPDEST"
    },
    "5202": {
      "op": "PUSH2",
      "value": "0x13D9"
    },
    "5205": {
      "jump": "i",
      "op": "JUMP"
    },
    "5206": {
      "op": "JUMPDEST"
    },
    "5207": {
      "op": "DUP2"
    },
    "5208": {
      "op": "DUP2"
    },
    "5209": {
      "op": "MSTORE"
    },
    "5210": {
      "op": "DUP5"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5213": {
      "op": "DUP4"
    },
    "5214": {
      "op": "DUP7"
    },
    "5215": {
      "op": "ADD"
    },
    "5216": {
      "op": "ADD"
    },
    "5217": {
      "op": "GT"
    },
    "5218": {
      "op": "ISZERO"
    },
    "5219": {
      "op": "PUSH2",
      "value": "0x146B"
    },
    "5222": {
      "op": "JUMPI"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5225": {
      "op": "DUP1"
    },
    "5226": {
      "op": "REVERT"
    },
    "5227": {
      "op": "JUMPDEST"
    },
    "5228": {
      "op": "DUP2"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5231": {
      "op": "DUP6"
    },
    "5232": {
      "op": "ADD"
    },
    "5233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5235": {
      "op": "DUP4"
    },
    "5236": {
      "op": "ADD"
    },
    "5237": {
      "op": "CALLDATACOPY"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5240": {
      "op": "SWAP2"
    },
    "5241": {
      "op": "DUP2"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5245": {
      "op": "ADD"
    },
    "5246": {
      "op": "SWAP2"
    },
    "5247": {
      "op": "SWAP1"
    },
    "5248": {
      "op": "SWAP2"
    },
    "5249": {
      "op": "MSTORE"
    },
    "5250": {
      "op": "SWAP4"
    },
    "5251": {
      "op": "SWAP3"
    },
    "5252": {
      "op": "POP"
    },
    "5253": {
      "op": "POP"
    },
    "5254": {
      "op": "POP"
    },
    "5255": {
      "jump": "o",
      "op": "JUMP"
    },
    "5256": {
      "op": "JUMPDEST"
    },
    "5257": {
      "op": "DUP1"
    },
    "5258": {
      "op": "ISZERO"
    },
    "5259": {
      "op": "ISZERO"
    },
    "5260": {
      "op": "DUP2"
    },
    "5261": {
      "op": "EQ"
    },
    "5262": {
      "op": "PUSH2",
      "value": "0x1496"
    },
    "5265": {
      "op": "JUMPI"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5268": {
      "op": "DUP1"
    },
    "5269": {
      "op": "REVERT"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "jump": "o",
      "op": "JUMP"
    },
    "5273": {
      "op": "JUMPDEST"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5276": {
      "op": "DUP2"
    },
    "5277": {
      "op": "AND"
    },
    "5278": {
      "op": "DUP2"
    },
    "5279": {
      "op": "EQ"
    },
    "5280": {
      "op": "PUSH2",
      "value": "0x1496"
    },
    "5283": {
      "op": "JUMPI"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5286": {
      "op": "DUP1"
    },
    "5287": {
      "op": "REVERT"
    },
    "5288": {
      "op": "JUMPDEST"
    },
    "5289": {
      "op": "DUP1"
    },
    "5290": {
      "op": "CALLDATALOAD"
    },
    "5291": {
      "op": "PUSH2",
      "value": "0x14B3"
    },
    "5294": {
      "op": "DUP2"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x1499"
    },
    "5298": {
      "jump": "i",
      "op": "JUMP"
    },
    "5299": {
      "op": "JUMPDEST"
    },
    "5300": {
      "op": "SWAP2"
    },
    "5301": {
      "op": "SWAP1"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "jump": "o",
      "op": "JUMP"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5311": {
      "op": "SHL"
    },
    "5312": {
      "op": "SUB"
    },
    "5313": {
      "op": "DUP2"
    },
    "5314": {
      "op": "AND"
    },
    "5315": {
      "op": "DUP2"
    },
    "5316": {
      "op": "EQ"
    },
    "5317": {
      "op": "PUSH2",
      "value": "0x1496"
    },
    "5320": {
      "op": "JUMPI"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5323": {
      "op": "DUP1"
    },
    "5324": {
      "op": "REVERT"
    },
    "5325": {
      "op": "JUMPDEST"
    },
    "5326": {
      "op": "DUP1"
    },
    "5327": {
      "op": "CALLDATALOAD"
    },
    "5328": {
      "op": "PUSH2",
      "value": "0x14B3"
    },
    "5331": {
      "op": "DUP2"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "5335": {
      "jump": "i",
      "op": "JUMP"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5339": {
      "op": "DUP1"
    },
    "5340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5342": {
      "op": "DUP1"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5345": {
      "op": "DUP1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5348": {
      "op": "DUP1"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5351": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5354": {
      "op": "DUP11"
    },
    "5355": {
      "op": "DUP13"
    },
    "5356": {
      "op": "SUB"
    },
    "5357": {
      "op": "SLT"
    },
    "5358": {
      "op": "ISZERO"
    },
    "5359": {
      "op": "PUSH2",
      "value": "0x14F7"
    },
    "5362": {
      "op": "JUMPI"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5365": {
      "op": "DUP1"
    },
    "5366": {
      "op": "REVERT"
    },
    "5367": {
      "op": "JUMPDEST"
    },
    "5368": {
      "op": "DUP10"
    },
    "5369": {
      "op": "CALLDATALOAD"
    },
    "5370": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5379": {
      "op": "DUP1"
    },
    "5380": {
      "op": "DUP3"
    },
    "5381": {
      "op": "GT"
    },
    "5382": {
      "op": "ISZERO"
    },
    "5383": {
      "op": "PUSH2",
      "value": "0x150F"
    },
    "5386": {
      "op": "JUMPI"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5389": {
      "op": "DUP1"
    },
    "5390": {
      "op": "REVERT"
    },
    "5391": {
      "op": "JUMPDEST"
    },
    "5392": {
      "op": "PUSH2",
      "value": "0x151B"
    },
    "5395": {
      "op": "DUP14"
    },
    "5396": {
      "op": "DUP4"
    },
    "5397": {
      "op": "DUP15"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5402": {
      "jump": "i",
      "op": "JUMP"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "op": "SWAP11"
    },
    "5405": {
      "op": "POP"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5408": {
      "op": "DUP13"
    },
    "5409": {
      "op": "ADD"
    },
    "5410": {
      "op": "CALLDATALOAD"
    },
    "5411": {
      "op": "SWAP2"
    },
    "5412": {
      "op": "POP"
    },
    "5413": {
      "op": "PUSH2",
      "value": "0x152D"
    },
    "5416": {
      "op": "DUP3"
    },
    "5417": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "5420": {
      "jump": "i",
      "op": "JUMP"
    },
    "5421": {
      "op": "JUMPDEST"
    },
    "5422": {
      "op": "SWAP1"
    },
    "5423": {
      "op": "SWAP9"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5427": {
      "op": "DUP12"
    },
    "5428": {
      "op": "ADD"
    },
    "5429": {
      "op": "CALLDATALOAD"
    },
    "5430": {
      "op": "SWAP8"
    },
    "5431": {
      "op": "POP"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5434": {
      "op": "DUP12"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "op": "CALLDATALOAD"
    },
    "5437": {
      "op": "SWAP1"
    },
    "5438": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5441": {
      "op": "DUP3"
    },
    "5442": {
      "op": "PUSH2",
      "value": "0x1499"
    },
    "5445": {
      "jump": "i",
      "op": "JUMP"
    },
    "5446": {
      "op": "JUMPDEST"
    },
    "5447": {
      "op": "DUP2"
    },
    "5448": {
      "op": "SWAP8"
    },
    "5449": {
      "op": "POP"
    },
    "5450": {
      "op": "PUSH2",
      "value": "0x1555"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5455": {
      "op": "DUP14"
    },
    "5456": {
      "op": "ADD"
    },
    "5457": {
      "op": "PUSH2",
      "value": "0x14A8"
    },
    "5460": {
      "jump": "i",
      "op": "JUMP"
    },
    "5461": {
      "op": "JUMPDEST"
    },
    "5462": {
      "op": "SWAP7"
    },
    "5463": {
      "op": "POP"
    },
    "5464": {
      "op": "PUSH2",
      "value": "0x1563"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5469": {
      "op": "DUP14"
    },
    "5470": {
      "op": "ADD"
    },
    "5471": {
      "op": "PUSH2",
      "value": "0x14A8"
    },
    "5474": {
      "jump": "i",
      "op": "JUMP"
    },
    "5475": {
      "op": "JUMPDEST"
    },
    "5476": {
      "op": "SWAP6"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "op": "PUSH2",
      "value": "0x1571"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5483": {
      "op": "DUP14"
    },
    "5484": {
      "op": "ADD"
    },
    "5485": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "5488": {
      "jump": "i",
      "op": "JUMP"
    },
    "5489": {
      "op": "JUMPDEST"
    },
    "5490": {
      "op": "SWAP5"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "op": "PUSH2",
      "value": "0x157F"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5497": {
      "op": "DUP14"
    },
    "5498": {
      "op": "ADD"
    },
    "5499": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "5502": {
      "jump": "i",
      "op": "JUMP"
    },
    "5503": {
      "op": "JUMPDEST"
    },
    "5504": {
      "op": "SWAP4"
    },
    "5505": {
      "op": "POP"
    },
    "5506": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5509": {
      "op": "DUP13"
    },
    "5510": {
      "op": "ADD"
    },
    "5511": {
      "op": "CALLDATALOAD"
    },
    "5512": {
      "op": "SWAP2"
    },
    "5513": {
      "op": "POP"
    },
    "5514": {
      "op": "DUP1"
    },
    "5515": {
      "op": "DUP3"
    },
    "5516": {
      "op": "GT"
    },
    "5517": {
      "op": "ISZERO"
    },
    "5518": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5521": {
      "op": "JUMPI"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5524": {
      "op": "DUP1"
    },
    "5525": {
      "op": "REVERT"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "POP"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x15A3"
    },
    "5531": {
      "op": "DUP13"
    },
    "5532": {
      "op": "DUP3"
    },
    "5533": {
      "op": "DUP14"
    },
    "5534": {
      "op": "ADD"
    },
    "5535": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5538": {
      "jump": "i",
      "op": "JUMP"
    },
    "5539": {
      "op": "JUMPDEST"
    },
    "5540": {
      "op": "SWAP2"
    },
    "5541": {
      "op": "POP"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "op": "SWAP3"
    },
    "5544": {
      "op": "SWAP6"
    },
    "5545": {
      "op": "SWAP9"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "SWAP3"
    },
    "5548": {
      "op": "SWAP6"
    },
    "5549": {
      "op": "SWAP9"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "op": "SWAP3"
    },
    "5552": {
      "op": "SWAP6"
    },
    "5553": {
      "op": "SWAP9"
    },
    "5554": {
      "jump": "o",
      "op": "JUMP"
    },
    "5555": {
      "op": "JUMPDEST"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5558": {
      "op": "DUP1"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5561": {
      "op": "DUP4"
    },
    "5562": {
      "op": "DUP6"
    },
    "5563": {
      "op": "SUB"
    },
    "5564": {
      "op": "SLT"
    },
    "5565": {
      "op": "ISZERO"
    },
    "5566": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5569": {
      "op": "JUMPI"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5572": {
      "op": "DUP1"
    },
    "5573": {
      "op": "REVERT"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "DUP3"
    },
    "5576": {
      "op": "CALLDATALOAD"
    },
    "5577": {
      "op": "SWAP2"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5581": {
      "op": "DUP4"
    },
    "5582": {
      "op": "ADD"
    },
    "5583": {
      "op": "CALLDATALOAD"
    },
    "5584": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5593": {
      "op": "DUP2"
    },
    "5594": {
      "op": "GT"
    },
    "5595": {
      "op": "ISZERO"
    },
    "5596": {
      "op": "PUSH2",
      "value": "0x15E4"
    },
    "5599": {
      "op": "JUMPI"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5602": {
      "op": "DUP1"
    },
    "5603": {
      "op": "REVERT"
    },
    "5604": {
      "op": "JUMPDEST"
    },
    "5605": {
      "op": "PUSH2",
      "value": "0x15F0"
    },
    "5608": {
      "op": "DUP6"
    },
    "5609": {
      "op": "DUP3"
    },
    "5610": {
      "op": "DUP7"
    },
    "5611": {
      "op": "ADD"
    },
    "5612": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5615": {
      "jump": "i",
      "op": "JUMP"
    },
    "5616": {
      "op": "JUMPDEST"
    },
    "5617": {
      "op": "SWAP2"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "POP"
    },
    "5620": {
      "op": "SWAP3"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "op": "SWAP3"
    },
    "5623": {
      "op": "SWAP1"
    },
    "5624": {
      "op": "POP"
    },
    "5625": {
      "jump": "o",
      "op": "JUMP"
    },
    "5626": {
      "op": "JUMPDEST"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5629": {
      "op": "DUP1"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5632": {
      "op": "DUP1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5635": {
      "op": "DUP6"
    },
    "5636": {
      "op": "DUP8"
    },
    "5637": {
      "op": "SUB"
    },
    "5638": {
      "op": "SLT"
    },
    "5639": {
      "op": "ISZERO"
    },
    "5640": {
      "op": "PUSH2",
      "value": "0x1610"
    },
    "5643": {
      "op": "JUMPI"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5646": {
      "op": "DUP1"
    },
    "5647": {
      "op": "REVERT"
    },
    "5648": {
      "op": "JUMPDEST"
    },
    "5649": {
      "op": "DUP5"
    },
    "5650": {
      "op": "CALLDATALOAD"
    },
    "5651": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5660": {
      "op": "DUP1"
    },
    "5661": {
      "op": "DUP3"
    },
    "5662": {
      "op": "GT"
    },
    "5663": {
      "op": "ISZERO"
    },
    "5664": {
      "op": "PUSH2",
      "value": "0x1628"
    },
    "5667": {
      "op": "JUMPI"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5670": {
      "op": "DUP1"
    },
    "5671": {
      "op": "REVERT"
    },
    "5672": {
      "op": "JUMPDEST"
    },
    "5673": {
      "op": "PUSH2",
      "value": "0x1634"
    },
    "5676": {
      "op": "DUP9"
    },
    "5677": {
      "op": "DUP4"
    },
    "5678": {
      "op": "DUP10"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5683": {
      "jump": "i",
      "op": "JUMP"
    },
    "5684": {
      "op": "JUMPDEST"
    },
    "5685": {
      "op": "SWAP6"
    },
    "5686": {
      "op": "POP"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5689": {
      "op": "DUP8"
    },
    "5690": {
      "op": "ADD"
    },
    "5691": {
      "op": "CALLDATALOAD"
    },
    "5692": {
      "op": "SWAP2"
    },
    "5693": {
      "op": "POP"
    },
    "5694": {
      "op": "DUP1"
    },
    "5695": {
      "op": "DUP3"
    },
    "5696": {
      "op": "GT"
    },
    "5697": {
      "op": "ISZERO"
    },
    "5698": {
      "op": "PUSH2",
      "value": "0x164A"
    },
    "5701": {
      "op": "JUMPI"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5704": {
      "op": "DUP1"
    },
    "5705": {
      "op": "REVERT"
    },
    "5706": {
      "op": "JUMPDEST"
    },
    "5707": {
      "op": "PUSH2",
      "value": "0x1656"
    },
    "5710": {
      "op": "DUP9"
    },
    "5711": {
      "op": "DUP4"
    },
    "5712": {
      "op": "DUP10"
    },
    "5713": {
      "op": "ADD"
    },
    "5714": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5717": {
      "jump": "i",
      "op": "JUMP"
    },
    "5718": {
      "op": "JUMPDEST"
    },
    "5719": {
      "op": "SWAP5"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5723": {
      "op": "DUP8"
    },
    "5724": {
      "op": "ADD"
    },
    "5725": {
      "op": "CALLDATALOAD"
    },
    "5726": {
      "op": "SWAP2"
    },
    "5727": {
      "op": "POP"
    },
    "5728": {
      "op": "PUSH2",
      "value": "0x1668"
    },
    "5731": {
      "op": "DUP3"
    },
    "5732": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "5735": {
      "jump": "i",
      "op": "JUMP"
    },
    "5736": {
      "op": "JUMPDEST"
    },
    "5737": {
      "op": "SWAP1"
    },
    "5738": {
      "op": "SWAP3"
    },
    "5739": {
      "op": "POP"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5742": {
      "op": "DUP7"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "CALLDATALOAD"
    },
    "5745": {
      "op": "SWAP1"
    },
    "5746": {
      "op": "DUP1"
    },
    "5747": {
      "op": "DUP3"
    },
    "5748": {
      "op": "GT"
    },
    "5749": {
      "op": "ISZERO"
    },
    "5750": {
      "op": "PUSH2",
      "value": "0x167E"
    },
    "5753": {
      "op": "JUMPI"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5756": {
      "op": "DUP1"
    },
    "5757": {
      "op": "REVERT"
    },
    "5758": {
      "op": "JUMPDEST"
    },
    "5759": {
      "op": "POP"
    },
    "5760": {
      "op": "PUSH2",
      "value": "0x168B"
    },
    "5763": {
      "op": "DUP8"
    },
    "5764": {
      "op": "DUP3"
    },
    "5765": {
      "op": "DUP9"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "5770": {
      "jump": "i",
      "op": "JUMP"
    },
    "5771": {
      "op": "JUMPDEST"
    },
    "5772": {
      "op": "SWAP2"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "SWAP3"
    },
    "5776": {
      "op": "SWAP6"
    },
    "5777": {
      "op": "SWAP2"
    },
    "5778": {
      "op": "SWAP5"
    },
    "5779": {
      "op": "POP"
    },
    "5780": {
      "op": "SWAP3"
    },
    "5781": {
      "op": "POP"
    },
    "5782": {
      "jump": "o",
      "op": "JUMP"
    },
    "5783": {
      "op": "JUMPDEST"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5786": {
      "op": "DUP1"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5789": {
      "op": "DUP4"
    },
    "5790": {
      "op": "DUP6"
    },
    "5791": {
      "op": "SUB"
    },
    "5792": {
      "op": "SLT"
    },
    "5793": {
      "op": "ISZERO"
    },
    "5794": {
      "op": "PUSH2",
      "value": "0x16AA"
    },
    "5797": {
      "op": "JUMPI"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5800": {
      "op": "DUP1"
    },
    "5801": {
      "op": "REVERT"
    },
    "5802": {
      "op": "JUMPDEST"
    },
    "5803": {
      "op": "DUP3"
    },
    "5804": {
      "op": "CALLDATALOAD"
    },
    "5805": {
      "op": "PUSH2",
      "value": "0x16B5"
    },
    "5808": {
      "op": "DUP2"
    },
    "5809": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "5812": {
      "jump": "i",
      "op": "JUMP"
    },
    "5813": {
      "op": "JUMPDEST"
    },
    "5814": {
      "op": "SWAP2"
    },
    "5815": {
      "op": "POP"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5818": {
      "op": "DUP4"
    },
    "5819": {
      "op": "ADD"
    },
    "5820": {
      "op": "CALLDATALOAD"
    },
    "5821": {
      "op": "PUSH2",
      "value": "0x16C5"
    },
    "5824": {
      "op": "DUP2"
    },
    "5825": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "5828": {
      "jump": "i",
      "op": "JUMP"
    },
    "5829": {
      "op": "JUMPDEST"
    },
    "5830": {
      "op": "DUP1"
    },
    "5831": {
      "op": "SWAP2"
    },
    "5832": {
      "op": "POP"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "op": "SWAP3"
    },
    "5835": {
      "op": "POP"
    },
    "5836": {
      "op": "SWAP3"
    },
    "5837": {
      "op": "SWAP1"
    },
    "5838": {
      "op": "POP"
    },
    "5839": {
      "jump": "o",
      "op": "JUMP"
    },
    "5840": {
      "op": "JUMPDEST"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5843": {
      "op": "JUMPDEST"
    },
    "5844": {
      "op": "DUP4"
    },
    "5845": {
      "op": "DUP2"
    },
    "5846": {
      "op": "LT"
    },
    "5847": {
      "op": "ISZERO"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x16EB"
    },
    "5851": {
      "op": "JUMPI"
    },
    "5852": {
      "op": "DUP2"
    },
    "5853": {
      "op": "DUP2"
    },
    "5854": {
      "op": "ADD"
    },
    "5855": {
      "op": "MLOAD"
    },
    "5856": {
      "op": "DUP4"
    },
    "5857": {
      "op": "DUP3"
    },
    "5858": {
      "op": "ADD"
    },
    "5859": {
      "op": "MSTORE"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5862": {
      "op": "ADD"
    },
    "5863": {
      "op": "PUSH2",
      "value": "0x16D3"
    },
    "5866": {
      "op": "JUMP"
    },
    "5867": {
      "op": "JUMPDEST"
    },
    "5868": {
      "op": "DUP4"
    },
    "5869": {
      "op": "DUP2"
    },
    "5870": {
      "op": "GT"
    },
    "5871": {
      "op": "ISZERO"
    },
    "5872": {
      "op": "PUSH2",
      "value": "0x16FA"
    },
    "5875": {
      "op": "JUMPI"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5878": {
      "op": "DUP5"
    },
    "5879": {
      "op": "DUP5"
    },
    "5880": {
      "op": "ADD"
    },
    "5881": {
      "op": "MSTORE"
    },
    "5882": {
      "op": "JUMPDEST"
    },
    "5883": {
      "op": "POP"
    },
    "5884": {
      "op": "POP"
    },
    "5885": {
      "op": "POP"
    },
    "5886": {
      "op": "POP"
    },
    "5887": {
      "jump": "o",
      "op": "JUMP"
    },
    "5888": {
      "op": "JUMPDEST"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5891": {
      "op": "DUP2"
    },
    "5892": {
      "op": "MLOAD"
    },
    "5893": {
      "op": "DUP1"
    },
    "5894": {
      "op": "DUP5"
    },
    "5895": {
      "op": "MSTORE"
    },
    "5896": {
      "op": "PUSH2",
      "value": "0x1718"
    },
    "5899": {
      "op": "DUP2"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5902": {
      "op": "DUP7"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5906": {
      "op": "DUP7"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "PUSH2",
      "value": "0x16D0"
    },
    "5911": {
      "jump": "i",
      "op": "JUMP"
    },
    "5912": {
      "op": "JUMPDEST"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5915": {
      "op": "ADD"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5918": {
      "op": "NOT"
    },
    "5919": {
      "op": "AND"
    },
    "5920": {
      "op": "SWAP3"
    },
    "5921": {
      "op": "SWAP1"
    },
    "5922": {
      "op": "SWAP3"
    },
    "5923": {
      "op": "ADD"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "op": "SWAP3"
    },
    "5928": {
      "op": "SWAP2"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "op": "POP"
    },
    "5931": {
      "jump": "o",
      "op": "JUMP"
    },
    "5932": {
      "op": "JUMPDEST"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5935": {
      "op": "DUP2"
    },
    "5936": {
      "op": "MSTORE"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x173F"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5944": {
      "op": "DUP4"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "DUP8"
    },
    "5947": {
      "op": "PUSH2",
      "value": "0x1700"
    },
    "5950": {
      "jump": "i",
      "op": "JUMP"
    },
    "5951": {
      "op": "JUMPDEST"
    },
    "5952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5954": {
      "op": "DUP4"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "op": "SWAP6"
    },
    "5957": {
      "op": "SWAP1"
    },
    "5958": {
      "op": "SWAP6"
    },
    "5959": {
      "op": "MSTORE"
    },
    "5960": {
      "op": "POP"
    },
    "5961": {
      "op": "SWAP2"
    },
    "5962": {
      "op": "ISZERO"
    },
    "5963": {
      "op": "ISZERO"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5966": {
      "op": "DUP4"
    },
    "5967": {
      "op": "ADD"
    },
    "5968": {
      "op": "MSTORE"
    },
    "5969": {
      "op": "ISZERO"
    },
    "5970": {
      "op": "ISZERO"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5973": {
      "op": "SWAP1"
    },
    "5974": {
      "op": "SWAP2"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "MSTORE"
    },
    "5977": {
      "op": "SWAP2"
    },
    "5978": {
      "op": "SWAP1"
    },
    "5979": {
      "op": "POP"
    },
    "5980": {
      "jump": "o",
      "op": "JUMP"
    },
    "5981": {
      "op": "JUMPDEST"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5986": {
      "op": "DUP3"
    },
    "5987": {
      "op": "DUP5"
    },
    "5988": {
      "op": "SUB"
    },
    "5989": {
      "op": "SLT"
    },
    "5990": {
      "op": "ISZERO"
    },
    "5991": {
      "op": "PUSH2",
      "value": "0x176F"
    },
    "5994": {
      "op": "JUMPI"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "DUP1"
    },
    "5998": {
      "op": "REVERT"
    },
    "5999": {
      "op": "JUMPDEST"
    },
    "6000": {
      "op": "DUP2"
    },
    "6001": {
      "op": "CALLDATALOAD"
    },
    "6002": {
      "op": "PUSH2",
      "value": "0x177A"
    },
    "6005": {
      "op": "DUP2"
    },
    "6006": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "6009": {
      "jump": "i",
      "op": "JUMP"
    },
    "6010": {
      "op": "JUMPDEST"
    },
    "6011": {
      "op": "SWAP4"
    },
    "6012": {
      "op": "SWAP3"
    },
    "6013": {
      "op": "POP"
    },
    "6014": {
      "op": "POP"
    },
    "6015": {
      "op": "POP"
    },
    "6016": {
      "jump": "o",
      "op": "JUMP"
    },
    "6017": {
      "op": "JUMPDEST"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6020": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6023": {
      "op": "DUP1"
    },
    "6024": {
      "op": "DUP4"
    },
    "6025": {
      "op": "MSTORE"
    },
    "6026": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6029": {
      "op": "DUP2"
    },
    "6030": {
      "op": "DUP5"
    },
    "6031": {
      "op": "ADD"
    },
    "6032": {
      "op": "DUP13"
    },
    "6033": {
      "op": "PUSH2",
      "value": "0x1700"
    },
    "6036": {
      "jump": "i",
      "op": "JUMP"
    },
    "6037": {
      "op": "JUMPDEST"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6040": {
      "op": "DUP5"
    },
    "6041": {
      "op": "ADD"
    },
    "6042": {
      "op": "SWAP11"
    },
    "6043": {
      "op": "SWAP1"
    },
    "6044": {
      "op": "SWAP11"
    },
    "6045": {
      "op": "MSTORE"
    },
    "6046": {
      "op": "POP"
    },
    "6047": {
      "op": "POP"
    },
    "6048": {
      "op": "SWAP6"
    },
    "6049": {
      "op": "ISZERO"
    },
    "6050": {
      "op": "ISZERO"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6053": {
      "op": "DUP8"
    },
    "6054": {
      "op": "ADD"
    },
    "6055": {
      "op": "MSTORE"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6058": {
      "op": "SWAP5"
    },
    "6059": {
      "op": "DUP6"
    },
    "6060": {
      "op": "AND"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6063": {
      "op": "DUP8"
    },
    "6064": {
      "op": "ADD"
    },
    "6065": {
      "op": "MSTORE"
    },
    "6066": {
      "op": "SWAP3"
    },
    "6067": {
      "op": "DUP5"
    },
    "6068": {
      "op": "AND"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6071": {
      "op": "DUP7"
    },
    "6072": {
      "op": "ADD"
    },
    "6073": {
      "op": "MSTORE"
    },
    "6074": {
      "op": "SWAP1"
    },
    "6075": {
      "op": "DUP4"
    },
    "6076": {
      "op": "AND"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6079": {
      "op": "DUP6"
    },
    "6080": {
      "op": "ADD"
    },
    "6081": {
      "op": "MSTORE"
    },
    "6082": {
      "op": "DUP3"
    },
    "6083": {
      "op": "AND"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6086": {
      "op": "DUP5"
    },
    "6087": {
      "op": "ADD"
    },
    "6088": {
      "op": "MSTORE"
    },
    "6089": {
      "op": "AND"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6092": {
      "op": "SWAP1"
    },
    "6093": {
      "op": "SWAP2"
    },
    "6094": {
      "op": "ADD"
    },
    "6095": {
      "op": "MSTORE"
    },
    "6096": {
      "op": "SWAP2"
    },
    "6097": {
      "op": "SWAP1"
    },
    "6098": {
      "op": "POP"
    },
    "6099": {
      "jump": "o",
      "op": "JUMP"
    },
    "6100": {
      "op": "JUMPDEST"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6103": {
      "op": "DUP1"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6106": {
      "op": "DUP1"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6111": {
      "op": "DUP7"
    },
    "6112": {
      "op": "DUP9"
    },
    "6113": {
      "op": "SUB"
    },
    "6114": {
      "op": "SLT"
    },
    "6115": {
      "op": "ISZERO"
    },
    "6116": {
      "op": "PUSH2",
      "value": "0x17EC"
    },
    "6119": {
      "op": "JUMPI"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6122": {
      "op": "DUP1"
    },
    "6123": {
      "op": "REVERT"
    },
    "6124": {
      "op": "JUMPDEST"
    },
    "6125": {
      "op": "DUP6"
    },
    "6126": {
      "op": "CALLDATALOAD"
    },
    "6127": {
      "op": "SWAP5"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6131": {
      "op": "DUP7"
    },
    "6132": {
      "op": "ADD"
    },
    "6133": {
      "op": "CALLDATALOAD"
    },
    "6134": {
      "op": "PUSH2",
      "value": "0x17FE"
    },
    "6137": {
      "op": "DUP2"
    },
    "6138": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "6141": {
      "jump": "i",
      "op": "JUMP"
    },
    "6142": {
      "op": "JUMPDEST"
    },
    "6143": {
      "op": "SWAP4"
    },
    "6144": {
      "op": "POP"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6147": {
      "op": "DUP7"
    },
    "6148": {
      "op": "ADD"
    },
    "6149": {
      "op": "CALLDATALOAD"
    },
    "6150": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6159": {
      "op": "DUP1"
    },
    "6160": {
      "op": "DUP3"
    },
    "6161": {
      "op": "GT"
    },
    "6162": {
      "op": "ISZERO"
    },
    "6163": {
      "op": "PUSH2",
      "value": "0x181B"
    },
    "6166": {
      "op": "JUMPI"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6169": {
      "op": "DUP1"
    },
    "6170": {
      "op": "REVERT"
    },
    "6171": {
      "op": "JUMPDEST"
    },
    "6172": {
      "op": "PUSH2",
      "value": "0x1827"
    },
    "6175": {
      "op": "DUP10"
    },
    "6176": {
      "op": "DUP4"
    },
    "6177": {
      "op": "DUP11"
    },
    "6178": {
      "op": "ADD"
    },
    "6179": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6182": {
      "jump": "i",
      "op": "JUMP"
    },
    "6183": {
      "op": "JUMPDEST"
    },
    "6184": {
      "op": "SWAP5"
    },
    "6185": {
      "op": "POP"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6188": {
      "op": "DUP9"
    },
    "6189": {
      "op": "ADD"
    },
    "6190": {
      "op": "CALLDATALOAD"
    },
    "6191": {
      "op": "SWAP2"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "op": "PUSH2",
      "value": "0x1839"
    },
    "6196": {
      "op": "DUP3"
    },
    "6197": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "6200": {
      "jump": "i",
      "op": "JUMP"
    },
    "6201": {
      "op": "JUMPDEST"
    },
    "6202": {
      "op": "SWAP1"
    },
    "6203": {
      "op": "SWAP3"
    },
    "6204": {
      "op": "POP"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6207": {
      "op": "DUP8"
    },
    "6208": {
      "op": "ADD"
    },
    "6209": {
      "op": "CALLDATALOAD"
    },
    "6210": {
      "op": "SWAP1"
    },
    "6211": {
      "op": "DUP1"
    },
    "6212": {
      "op": "DUP3"
    },
    "6213": {
      "op": "GT"
    },
    "6214": {
      "op": "ISZERO"
    },
    "6215": {
      "op": "PUSH2",
      "value": "0x184F"
    },
    "6218": {
      "op": "JUMPI"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6221": {
      "op": "DUP1"
    },
    "6222": {
      "op": "REVERT"
    },
    "6223": {
      "op": "JUMPDEST"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "op": "PUSH2",
      "value": "0x185C"
    },
    "6228": {
      "op": "DUP9"
    },
    "6229": {
      "op": "DUP3"
    },
    "6230": {
      "op": "DUP10"
    },
    "6231": {
      "op": "ADD"
    },
    "6232": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6235": {
      "jump": "i",
      "op": "JUMP"
    },
    "6236": {
      "op": "JUMPDEST"
    },
    "6237": {
      "op": "SWAP2"
    },
    "6238": {
      "op": "POP"
    },
    "6239": {
      "op": "POP"
    },
    "6240": {
      "op": "SWAP3"
    },
    "6241": {
      "op": "SWAP6"
    },
    "6242": {
      "op": "POP"
    },
    "6243": {
      "op": "SWAP3"
    },
    "6244": {
      "op": "SWAP6"
    },
    "6245": {
      "op": "SWAP1"
    },
    "6246": {
      "op": "SWAP4"
    },
    "6247": {
      "op": "POP"
    },
    "6248": {
      "jump": "o",
      "op": "JUMP"
    },
    "6249": {
      "op": "JUMPDEST"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6252": {
      "op": "DUP1"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6257": {
      "op": "DUP5"
    },
    "6258": {
      "op": "DUP7"
    },
    "6259": {
      "op": "SUB"
    },
    "6260": {
      "op": "SLT"
    },
    "6261": {
      "op": "ISZERO"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x187E"
    },
    "6265": {
      "op": "JUMPI"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6268": {
      "op": "DUP1"
    },
    "6269": {
      "op": "REVERT"
    },
    "6270": {
      "op": "JUMPDEST"
    },
    "6271": {
      "op": "DUP4"
    },
    "6272": {
      "op": "CALLDATALOAD"
    },
    "6273": {
      "op": "PUSH2",
      "value": "0x1889"
    },
    "6276": {
      "op": "DUP2"
    },
    "6277": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "6280": {
      "jump": "i",
      "op": "JUMP"
    },
    "6281": {
      "op": "JUMPDEST"
    },
    "6282": {
      "op": "SWAP3"
    },
    "6283": {
      "op": "POP"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6286": {
      "op": "DUP5"
    },
    "6287": {
      "op": "ADD"
    },
    "6288": {
      "op": "CALLDATALOAD"
    },
    "6289": {
      "op": "PUSH2",
      "value": "0x1899"
    },
    "6292": {
      "op": "DUP2"
    },
    "6293": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "6296": {
      "jump": "i",
      "op": "JUMP"
    },
    "6297": {
      "op": "JUMPDEST"
    },
    "6298": {
      "op": "SWAP2"
    },
    "6299": {
      "op": "POP"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6302": {
      "op": "DUP5"
    },
    "6303": {
      "op": "ADD"
    },
    "6304": {
      "op": "CALLDATALOAD"
    },
    "6305": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6314": {
      "op": "DUP2"
    },
    "6315": {
      "op": "GT"
    },
    "6316": {
      "op": "ISZERO"
    },
    "6317": {
      "op": "PUSH2",
      "value": "0x18B5"
    },
    "6320": {
      "op": "JUMPI"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6323": {
      "op": "DUP1"
    },
    "6324": {
      "op": "REVERT"
    },
    "6325": {
      "op": "JUMPDEST"
    },
    "6326": {
      "op": "PUSH2",
      "value": "0x18C1"
    },
    "6329": {
      "op": "DUP7"
    },
    "6330": {
      "op": "DUP3"
    },
    "6331": {
      "op": "DUP8"
    },
    "6332": {
      "op": "ADD"
    },
    "6333": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6336": {
      "jump": "i",
      "op": "JUMP"
    },
    "6337": {
      "op": "JUMPDEST"
    },
    "6338": {
      "op": "SWAP2"
    },
    "6339": {
      "op": "POP"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "SWAP3"
    },
    "6342": {
      "op": "POP"
    },
    "6343": {
      "op": "SWAP3"
    },
    "6344": {
      "op": "POP"
    },
    "6345": {
      "op": "SWAP3"
    },
    "6346": {
      "jump": "o",
      "op": "JUMP"
    },
    "6347": {
      "op": "JUMPDEST"
    },
    "6348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6352": {
      "op": "DUP1"
    },
    "6353": {
      "op": "DUP4"
    },
    "6354": {
      "op": "ADD"
    },
    "6355": {
      "op": "DUP2"
    },
    "6356": {
      "op": "DUP5"
    },
    "6357": {
      "op": "MSTORE"
    },
    "6358": {
      "op": "DUP1"
    },
    "6359": {
      "op": "DUP6"
    },
    "6360": {
      "op": "MLOAD"
    },
    "6361": {
      "op": "DUP1"
    },
    "6362": {
      "op": "DUP4"
    },
    "6363": {
      "op": "MSTORE"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6366": {
      "op": "SWAP3"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "op": "DUP3"
    },
    "6369": {
      "op": "DUP7"
    },
    "6370": {
      "op": "ADD"
    },
    "6371": {
      "op": "SWAP2"
    },
    "6372": {
      "op": "POP"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "DUP2"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6377": {
      "op": "SHL"
    },
    "6378": {
      "op": "DUP8"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "ADD"
    },
    "6381": {
      "op": "DUP5"
    },
    "6382": {
      "op": "DUP9"
    },
    "6383": {
      "op": "ADD"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6386": {
      "op": "JUMPDEST"
    },
    "6387": {
      "op": "DUP4"
    },
    "6388": {
      "op": "DUP2"
    },
    "6389": {
      "op": "LT"
    },
    "6390": {
      "op": "ISZERO"
    },
    "6391": {
      "op": "PUSH2",
      "value": "0x1961"
    },
    "6394": {
      "op": "JUMPI"
    },
    "6395": {
      "op": "DUP9"
    },
    "6396": {
      "op": "DUP4"
    },
    "6397": {
      "op": "SUB"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6400": {
      "op": "NOT"
    },
    "6401": {
      "op": "ADD"
    },
    "6402": {
      "op": "DUP6"
    },
    "6403": {
      "op": "MSTORE"
    },
    "6404": {
      "op": "DUP2"
    },
    "6405": {
      "op": "MLOAD"
    },
    "6406": {
      "op": "DUP1"
    },
    "6407": {
      "op": "MLOAD"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "op": "SUB"
    },
    "6416": {
      "op": "AND"
    },
    "6417": {
      "op": "DUP5"
    },
    "6418": {
      "op": "MSTORE"
    },
    "6419": {
      "op": "DUP8"
    },
    "6420": {
      "op": "DUP2"
    },
    "6421": {
      "op": "ADD"
    },
    "6422": {
      "op": "MLOAD"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6425": {
      "op": "DUP10"
    },
    "6426": {
      "op": "DUP7"
    },
    "6427": {
      "op": "ADD"
    },
    "6428": {
      "op": "DUP2"
    },
    "6429": {
      "op": "SWAP1"
    },
    "6430": {
      "op": "MSTORE"
    },
    "6431": {
      "op": "SWAP1"
    },
    "6432": {
      "op": "PUSH2",
      "value": "0x192B"
    },
    "6435": {
      "op": "DUP3"
    },
    "6436": {
      "op": "DUP8"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "DUP3"
    },
    "6439": {
      "op": "PUSH2",
      "value": "0x1700"
    },
    "6442": {
      "jump": "i",
      "op": "JUMP"
    },
    "6443": {
      "op": "JUMPDEST"
    },
    "6444": {
      "op": "DUP4"
    },
    "6445": {
      "op": "DUP11"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "op": "MLOAD"
    },
    "6448": {
      "op": "DUP8"
    },
    "6449": {
      "op": "DUP12"
    },
    "6450": {
      "op": "ADD"
    },
    "6451": {
      "op": "MSTORE"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6454": {
      "op": "DUP1"
    },
    "6455": {
      "op": "DUP6"
    },
    "6456": {
      "op": "ADD"
    },
    "6457": {
      "op": "MLOAD"
    },
    "6458": {
      "op": "ISZERO"
    },
    "6459": {
      "op": "ISZERO"
    },
    "6460": {
      "op": "SWAP1"
    },
    "6461": {
      "op": "DUP9"
    },
    "6462": {
      "op": "ADD"
    },
    "6463": {
      "op": "MSTORE"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6466": {
      "op": "SWAP4"
    },
    "6467": {
      "op": "DUP5"
    },
    "6468": {
      "op": "ADD"
    },
    "6469": {
      "op": "MLOAD"
    },
    "6470": {
      "op": "ISZERO"
    },
    "6471": {
      "op": "ISZERO"
    },
    "6472": {
      "op": "SWAP4"
    },
    "6473": {
      "op": "SWAP1"
    },
    "6474": {
      "op": "SWAP7"
    },
    "6475": {
      "op": "ADD"
    },
    "6476": {
      "op": "SWAP3"
    },
    "6477": {
      "op": "SWAP1"
    },
    "6478": {
      "op": "SWAP3"
    },
    "6479": {
      "op": "MSTORE"
    },
    "6480": {
      "op": "POP"
    },
    "6481": {
      "op": "POP"
    },
    "6482": {
      "op": "SWAP4"
    },
    "6483": {
      "op": "DUP7"
    },
    "6484": {
      "op": "ADD"
    },
    "6485": {
      "op": "SWAP4"
    },
    "6486": {
      "op": "SWAP1"
    },
    "6487": {
      "op": "DUP7"
    },
    "6488": {
      "op": "ADD"
    },
    "6489": {
      "op": "SWAP1"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6492": {
      "op": "ADD"
    },
    "6493": {
      "op": "PUSH2",
      "value": "0x18F2"
    },
    "6496": {
      "op": "JUMP"
    },
    "6497": {
      "op": "JUMPDEST"
    },
    "6498": {
      "op": "POP"
    },
    "6499": {
      "op": "SWAP1"
    },
    "6500": {
      "op": "SWAP9"
    },
    "6501": {
      "op": "SWAP8"
    },
    "6502": {
      "op": "POP"
    },
    "6503": {
      "op": "POP"
    },
    "6504": {
      "op": "POP"
    },
    "6505": {
      "op": "POP"
    },
    "6506": {
      "op": "POP"
    },
    "6507": {
      "op": "POP"
    },
    "6508": {
      "op": "POP"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "jump": "o",
      "op": "JUMP"
    },
    "6511": {
      "op": "JUMPDEST"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6514": {
      "op": "DUP1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6517": {
      "op": "DUP1"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6520": {
      "op": "DUP1"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6525": {
      "op": "DUP9"
    },
    "6526": {
      "op": "DUP11"
    },
    "6527": {
      "op": "SUB"
    },
    "6528": {
      "op": "SLT"
    },
    "6529": {
      "op": "ISZERO"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "6533": {
      "op": "JUMPI"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6536": {
      "op": "DUP1"
    },
    "6537": {
      "op": "REVERT"
    },
    "6538": {
      "op": "JUMPDEST"
    },
    "6539": {
      "op": "DUP8"
    },
    "6540": {
      "op": "CALLDATALOAD"
    },
    "6541": {
      "op": "PUSH2",
      "value": "0x1995"
    },
    "6544": {
      "op": "DUP2"
    },
    "6545": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "6548": {
      "jump": "i",
      "op": "JUMP"
    },
    "6549": {
      "op": "JUMPDEST"
    },
    "6550": {
      "op": "SWAP7"
    },
    "6551": {
      "op": "POP"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6554": {
      "op": "DUP9"
    },
    "6555": {
      "op": "ADD"
    },
    "6556": {
      "op": "CALLDATALOAD"
    },
    "6557": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6566": {
      "op": "DUP1"
    },
    "6567": {
      "op": "DUP3"
    },
    "6568": {
      "op": "GT"
    },
    "6569": {
      "op": "ISZERO"
    },
    "6570": {
      "op": "PUSH2",
      "value": "0x19B2"
    },
    "6573": {
      "op": "JUMPI"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6576": {
      "op": "DUP1"
    },
    "6577": {
      "op": "REVERT"
    },
    "6578": {
      "op": "JUMPDEST"
    },
    "6579": {
      "op": "PUSH2",
      "value": "0x19BE"
    },
    "6582": {
      "op": "DUP12"
    },
    "6583": {
      "op": "DUP4"
    },
    "6584": {
      "op": "DUP13"
    },
    "6585": {
      "op": "ADD"
    },
    "6586": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6589": {
      "jump": "i",
      "op": "JUMP"
    },
    "6590": {
      "op": "JUMPDEST"
    },
    "6591": {
      "op": "SWAP8"
    },
    "6592": {
      "op": "POP"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6595": {
      "op": "DUP11"
    },
    "6596": {
      "op": "ADD"
    },
    "6597": {
      "op": "CALLDATALOAD"
    },
    "6598": {
      "op": "SWAP2"
    },
    "6599": {
      "op": "POP"
    },
    "6600": {
      "op": "DUP1"
    },
    "6601": {
      "op": "DUP3"
    },
    "6602": {
      "op": "GT"
    },
    "6603": {
      "op": "ISZERO"
    },
    "6604": {
      "op": "PUSH2",
      "value": "0x19D4"
    },
    "6607": {
      "op": "JUMPI"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6610": {
      "op": "DUP1"
    },
    "6611": {
      "op": "REVERT"
    },
    "6612": {
      "op": "JUMPDEST"
    },
    "6613": {
      "op": "PUSH2",
      "value": "0x19E0"
    },
    "6616": {
      "op": "DUP12"
    },
    "6617": {
      "op": "DUP4"
    },
    "6618": {
      "op": "DUP13"
    },
    "6619": {
      "op": "ADD"
    },
    "6620": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6623": {
      "jump": "i",
      "op": "JUMP"
    },
    "6624": {
      "op": "JUMPDEST"
    },
    "6625": {
      "op": "SWAP7"
    },
    "6626": {
      "op": "POP"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6629": {
      "op": "DUP11"
    },
    "6630": {
      "op": "ADD"
    },
    "6631": {
      "op": "CALLDATALOAD"
    },
    "6632": {
      "op": "SWAP2"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "op": "PUSH2",
      "value": "0x19F2"
    },
    "6637": {
      "op": "DUP3"
    },
    "6638": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "6641": {
      "jump": "i",
      "op": "JUMP"
    },
    "6642": {
      "op": "JUMPDEST"
    },
    "6643": {
      "op": "DUP2"
    },
    "6644": {
      "op": "SWAP6"
    },
    "6645": {
      "op": "POP"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6648": {
      "op": "DUP11"
    },
    "6649": {
      "op": "ADD"
    },
    "6650": {
      "op": "CALLDATALOAD"
    },
    "6651": {
      "op": "SWAP5"
    },
    "6652": {
      "op": "POP"
    },
    "6653": {
      "op": "PUSH2",
      "value": "0x1A08"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6658": {
      "op": "DUP12"
    },
    "6659": {
      "op": "ADD"
    },
    "6660": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "6663": {
      "jump": "i",
      "op": "JUMP"
    },
    "6664": {
      "op": "JUMPDEST"
    },
    "6665": {
      "op": "SWAP4"
    },
    "6666": {
      "op": "POP"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6669": {
      "op": "DUP11"
    },
    "6670": {
      "op": "ADD"
    },
    "6671": {
      "op": "CALLDATALOAD"
    },
    "6672": {
      "op": "SWAP2"
    },
    "6673": {
      "op": "POP"
    },
    "6674": {
      "op": "DUP1"
    },
    "6675": {
      "op": "DUP3"
    },
    "6676": {
      "op": "GT"
    },
    "6677": {
      "op": "ISZERO"
    },
    "6678": {
      "op": "PUSH2",
      "value": "0x1A1E"
    },
    "6681": {
      "op": "JUMPI"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6684": {
      "op": "DUP1"
    },
    "6685": {
      "op": "REVERT"
    },
    "6686": {
      "op": "JUMPDEST"
    },
    "6687": {
      "op": "POP"
    },
    "6688": {
      "op": "PUSH2",
      "value": "0x1A2B"
    },
    "6691": {
      "op": "DUP11"
    },
    "6692": {
      "op": "DUP3"
    },
    "6693": {
      "op": "DUP12"
    },
    "6694": {
      "op": "ADD"
    },
    "6695": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6698": {
      "jump": "i",
      "op": "JUMP"
    },
    "6699": {
      "op": "JUMPDEST"
    },
    "6700": {
      "op": "SWAP2"
    },
    "6701": {
      "op": "POP"
    },
    "6702": {
      "op": "POP"
    },
    "6703": {
      "op": "SWAP3"
    },
    "6704": {
      "op": "SWAP6"
    },
    "6705": {
      "op": "SWAP9"
    },
    "6706": {
      "op": "SWAP2"
    },
    "6707": {
      "op": "SWAP5"
    },
    "6708": {
      "op": "SWAP8"
    },
    "6709": {
      "op": "POP"
    },
    "6710": {
      "op": "SWAP3"
    },
    "6711": {
      "op": "SWAP6"
    },
    "6712": {
      "op": "POP"
    },
    "6713": {
      "jump": "o",
      "op": "JUMP"
    },
    "6714": {
      "op": "JUMPDEST"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6717": {
      "op": "DUP1"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6720": {
      "op": "DUP1"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6725": {
      "op": "DUP7"
    },
    "6726": {
      "op": "DUP9"
    },
    "6727": {
      "op": "SUB"
    },
    "6728": {
      "op": "SLT"
    },
    "6729": {
      "op": "ISZERO"
    },
    "6730": {
      "op": "PUSH2",
      "value": "0x1A52"
    },
    "6733": {
      "op": "JUMPI"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6736": {
      "op": "DUP1"
    },
    "6737": {
      "op": "REVERT"
    },
    "6738": {
      "op": "JUMPDEST"
    },
    "6739": {
      "op": "DUP6"
    },
    "6740": {
      "op": "CALLDATALOAD"
    },
    "6741": {
      "op": "PUSH2",
      "value": "0x1A5D"
    },
    "6744": {
      "op": "DUP2"
    },
    "6745": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "6748": {
      "jump": "i",
      "op": "JUMP"
    },
    "6749": {
      "op": "JUMPDEST"
    },
    "6750": {
      "op": "SWAP5"
    },
    "6751": {
      "op": "POP"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6754": {
      "op": "DUP7"
    },
    "6755": {
      "op": "ADD"
    },
    "6756": {
      "op": "CALLDATALOAD"
    },
    "6757": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6766": {
      "op": "DUP1"
    },
    "6767": {
      "op": "DUP3"
    },
    "6768": {
      "op": "GT"
    },
    "6769": {
      "op": "ISZERO"
    },
    "6770": {
      "op": "PUSH2",
      "value": "0x1A7A"
    },
    "6773": {
      "op": "JUMPI"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6776": {
      "op": "DUP1"
    },
    "6777": {
      "op": "REVERT"
    },
    "6778": {
      "op": "JUMPDEST"
    },
    "6779": {
      "op": "PUSH2",
      "value": "0x1A86"
    },
    "6782": {
      "op": "DUP10"
    },
    "6783": {
      "op": "DUP4"
    },
    "6784": {
      "op": "DUP11"
    },
    "6785": {
      "op": "ADD"
    },
    "6786": {
      "op": "PUSH2",
      "value": "0x1432"
    },
    "6789": {
      "jump": "i",
      "op": "JUMP"
    },
    "6790": {
      "op": "JUMPDEST"
    },
    "6791": {
      "op": "SWAP6"
    },
    "6792": {
      "op": "POP"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6795": {
      "op": "DUP9"
    },
    "6796": {
      "op": "ADD"
    },
    "6797": {
      "op": "CALLDATALOAD"
    },
    "6798": {
      "op": "SWAP5"
    },
    "6799": {
      "op": "POP"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6802": {
      "op": "DUP9"
    },
    "6803": {
      "op": "ADD"
    },
    "6804": {
      "op": "CALLDATALOAD"
    },
    "6805": {
      "op": "SWAP2"
    },
    "6806": {
      "op": "POP"
    },
    "6807": {
      "op": "PUSH2",
      "value": "0x1839"
    },
    "6810": {
      "op": "DUP3"
    },
    "6811": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "6814": {
      "jump": "i",
      "op": "JUMP"
    },
    "6815": {
      "op": "JUMPDEST"
    },
    "6816": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "6849": {
      "op": "DUP2"
    },
    "6850": {
      "op": "MSTORE"
    },
    "6851": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6886": {
      "op": "DUP3"
    },
    "6887": {
      "op": "ADD"
    },
    "6888": {
      "op": "MSTORE"
    },
    "6889": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6910": {
      "op": "SHL"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6913": {
      "op": "DUP3"
    },
    "6914": {
      "op": "ADD"
    },
    "6915": {
      "op": "MSTORE"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "6918": {
      "op": "ADD"
    },
    "6919": {
      "op": "SWAP1"
    },
    "6920": {
      "jump": "o",
      "op": "JUMP"
    },
    "6921": {
      "op": "JUMPDEST"
    },
    "6922": {
      "op": "SWAP5"
    },
    "6923": {
      "op": "DUP6"
    },
    "6924": {
      "op": "MSTORE"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6927": {
      "op": "DUP6"
    },
    "6928": {
      "op": "ADD"
    },
    "6929": {
      "op": "SWAP4"
    },
    "6930": {
      "op": "SWAP1"
    },
    "6931": {
      "op": "SWAP4"
    },
    "6932": {
      "op": "MSTORE"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6935": {
      "op": "DUP5"
    },
    "6936": {
      "op": "ADD"
    },
    "6937": {
      "op": "SWAP2"
    },
    "6938": {
      "op": "SWAP1"
    },
    "6939": {
      "op": "SWAP2"
    },
    "6940": {
      "op": "MSTORE"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6943": {
      "op": "DUP4"
    },
    "6944": {
      "op": "ADD"
    },
    "6945": {
      "op": "MSTORE"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6952": {
      "op": "SHL"
    },
    "6953": {
      "op": "SUB"
    },
    "6954": {
      "op": "AND"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6957": {
      "op": "DUP3"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "op": "MSTORE"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6962": {
      "op": "ADD"
    },
    "6963": {
      "op": "SWAP1"
    },
    "6964": {
      "jump": "o",
      "op": "JUMP"
    },
    "6965": {
      "op": "JUMPDEST"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6968": {
      "op": "DUP3"
    },
    "6969": {
      "op": "MLOAD"
    },
    "6970": {
      "op": "PUSH2",
      "value": "0x1B47"
    },
    "6973": {
      "op": "DUP2"
    },
    "6974": {
      "op": "DUP5"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6977": {
      "op": "DUP8"
    },
    "6978": {
      "op": "ADD"
    },
    "6979": {
      "op": "PUSH2",
      "value": "0x16D0"
    },
    "6982": {
      "jump": "i",
      "op": "JUMP"
    },
    "6983": {
      "op": "JUMPDEST"
    },
    "6984": {
      "op": "SWAP2"
    },
    "6985": {
      "op": "SWAP1"
    },
    "6986": {
      "op": "SWAP2"
    },
    "6987": {
      "op": "ADD"
    },
    "6988": {
      "op": "SWAP3"
    },
    "6989": {
      "op": "SWAP2"
    },
    "6990": {
      "op": "POP"
    },
    "6991": {
      "op": "POP"
    },
    "6992": {
      "jump": "o",
      "op": "JUMP"
    },
    "6993": {
      "op": "JUMPDEST"
    },
    "6994": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6999": {
      "op": "SHL"
    },
    "7000": {
      "op": "DUP2"
    },
    "7001": {
      "op": "MSTORE"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7004": {
      "op": "DUP2"
    },
    "7005": {
      "op": "ADD"
    },
    "7006": {
      "op": "SWAP3"
    },
    "7007": {
      "op": "SWAP1"
    },
    "7008": {
      "op": "SWAP3"
    },
    "7009": {
      "op": "MSTORE"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7012": {
      "op": "DUP3"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "op": "MSTORE"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "7017": {
      "op": "ADD"
    },
    "7018": {
      "op": "SWAP1"
    },
    "7019": {
      "jump": "o",
      "op": "JUMP"
    },
    "7020": {
      "op": "JUMPDEST"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7025": {
      "op": "DUP3"
    },
    "7026": {
      "op": "DUP5"
    },
    "7027": {
      "op": "SUB"
    },
    "7028": {
      "op": "SLT"
    },
    "7029": {
      "op": "ISZERO"
    },
    "7030": {
      "op": "PUSH2",
      "value": "0x1B7E"
    },
    "7033": {
      "op": "JUMPI"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7036": {
      "op": "DUP1"
    },
    "7037": {
      "op": "REVERT"
    },
    "7038": {
      "op": "JUMPDEST"
    },
    "7039": {
      "op": "POP"
    },
    "7040": {
      "op": "MLOAD"
    },
    "7041": {
      "op": "SWAP2"
    },
    "7042": {
      "op": "SWAP1"
    },
    "7043": {
      "op": "POP"
    },
    "7044": {
      "jump": "o",
      "op": "JUMP"
    },
    "7045": {
      "op": "JUMPDEST"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7048": {
      "op": "DUP3"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7051": {
      "op": "DUP4"
    },
    "7052": {
      "op": "ADD"
    },
    "7053": {
      "op": "SLT"
    },
    "7054": {
      "op": "PUSH2",
      "value": "0x1B96"
    },
    "7057": {
      "op": "JUMPI"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7060": {
      "op": "DUP1"
    },
    "7061": {
      "op": "REVERT"
    },
    "7062": {
      "op": "JUMPDEST"
    },
    "7063": {
      "op": "DUP2"
    },
    "7064": {
      "op": "MLOAD"
    },
    "7065": {
      "op": "PUSH2",
      "value": "0x1BA4"
    },
    "7068": {
      "op": "PUSH2",
      "value": "0x1451"
    },
    "7071": {
      "op": "DUP3"
    },
    "7072": {
      "op": "PUSH2",
      "value": "0x140A"
    },
    "7075": {
      "jump": "i",
      "op": "JUMP"
    },
    "7076": {
      "op": "JUMPDEST"
    },
    "7077": {
      "op": "DUP2"
    },
    "7078": {
      "op": "DUP2"
    },
    "7079": {
      "op": "MSTORE"
    },
    "7080": {
      "op": "DUP5"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7083": {
      "op": "DUP4"
    },
    "7084": {
      "op": "DUP7"
    },
    "7085": {
      "op": "ADD"
    },
    "7086": {
      "op": "ADD"
    },
    "7087": {
      "op": "GT"
    },
    "7088": {
      "op": "ISZERO"
    },
    "7089": {
      "op": "PUSH2",
      "value": "0x1BB9"
    },
    "7092": {
      "op": "JUMPI"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7095": {
      "op": "DUP1"
    },
    "7096": {
      "op": "REVERT"
    },
    "7097": {
      "op": "JUMPDEST"
    },
    "7098": {
      "op": "PUSH2",
      "value": "0x1BCA"
    },
    "7101": {
      "op": "DUP3"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7104": {
      "op": "DUP4"
    },
    "7105": {
      "op": "ADD"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7108": {
      "op": "DUP8"
    },
    "7109": {
      "op": "ADD"
    },
    "7110": {
      "op": "PUSH2",
      "value": "0x16D0"
    },
    "7113": {
      "jump": "i",
      "op": "JUMP"
    },
    "7114": {
      "op": "JUMPDEST"
    },
    "7115": {
      "op": "SWAP5"
    },
    "7116": {
      "op": "SWAP4"
    },
    "7117": {
      "op": "POP"
    },
    "7118": {
      "op": "POP"
    },
    "7119": {
      "op": "POP"
    },
    "7120": {
      "op": "POP"
    },
    "7121": {
      "jump": "o",
      "op": "JUMP"
    },
    "7122": {
      "op": "JUMPDEST"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7125": {
      "op": "DUP1"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7128": {
      "op": "DUP1"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7133": {
      "op": "DUP7"
    },
    "7134": {
      "op": "DUP9"
    },
    "7135": {
      "op": "SUB"
    },
    "7136": {
      "op": "SLT"
    },
    "7137": {
      "op": "ISZERO"
    },
    "7138": {
      "op": "PUSH2",
      "value": "0x1BEA"
    },
    "7141": {
      "op": "JUMPI"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7144": {
      "op": "DUP1"
    },
    "7145": {
      "op": "REVERT"
    },
    "7146": {
      "op": "JUMPDEST"
    },
    "7147": {
      "op": "DUP6"
    },
    "7148": {
      "op": "MLOAD"
    },
    "7149": {
      "op": "PUSH2",
      "value": "0x1BF5"
    },
    "7152": {
      "op": "DUP2"
    },
    "7153": {
      "op": "PUSH2",
      "value": "0x14B8"
    },
    "7156": {
      "jump": "i",
      "op": "JUMP"
    },
    "7157": {
      "op": "JUMPDEST"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7160": {
      "op": "DUP8"
    },
    "7161": {
      "op": "ADD"
    },
    "7162": {
      "op": "MLOAD"
    },
    "7163": {
      "op": "SWAP1"
    },
    "7164": {
      "op": "SWAP6"
    },
    "7165": {
      "op": "POP"
    },
    "7166": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7175": {
      "op": "DUP2"
    },
    "7176": {
      "op": "GT"
    },
    "7177": {
      "op": "ISZERO"
    },
    "7178": {
      "op": "PUSH2",
      "value": "0x1C12"
    },
    "7181": {
      "op": "JUMPI"
    },
    "7182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7184": {
      "op": "DUP1"
    },
    "7185": {
      "op": "REVERT"
    },
    "7186": {
      "op": "JUMPDEST"
    },
    "7187": {
      "op": "PUSH2",
      "value": "0x1C1E"
    },
    "7190": {
      "op": "DUP9"
    },
    "7191": {
      "op": "DUP3"
    },
    "7192": {
      "op": "DUP10"
    },
    "7193": {
      "op": "ADD"
    },
    "7194": {
      "op": "PUSH2",
      "value": "0x1B85"
    },
    "7197": {
      "jump": "i",
      "op": "JUMP"
    },
    "7198": {
      "op": "JUMPDEST"
    },
    "7199": {
      "op": "SWAP5"
    },
    "7200": {
      "op": "POP"
    },
    "7201": {
      "op": "POP"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7204": {
      "op": "DUP7"
    },
    "7205": {
      "op": "ADD"
    },
    "7206": {
      "op": "MLOAD"
    },
    "7207": {
      "op": "SWAP3"
    },
    "7208": {
      "op": "POP"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7211": {
      "op": "DUP7"
    },
    "7212": {
      "op": "ADD"
    },
    "7213": {
      "op": "MLOAD"
    },
    "7214": {
      "op": "PUSH2",
      "value": "0x1C36"
    },
    "7217": {
      "op": "DUP2"
    },
    "7218": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "7221": {
      "jump": "i",
      "op": "JUMP"
    },
    "7222": {
      "op": "JUMPDEST"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7225": {
      "op": "DUP8"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "op": "MLOAD"
    },
    "7228": {
      "op": "SWAP1"
    },
    "7229": {
      "op": "SWAP3"
    },
    "7230": {
      "op": "POP"
    },
    "7231": {
      "op": "PUSH2",
      "value": "0x1C47"
    },
    "7234": {
      "op": "DUP2"
    },
    "7235": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "7238": {
      "jump": "i",
      "op": "JUMP"
    },
    "7239": {
      "op": "JUMPDEST"
    },
    "7240": {
      "op": "DUP1"
    },
    "7241": {
      "op": "SWAP2"
    },
    "7242": {
      "op": "POP"
    },
    "7243": {
      "op": "POP"
    },
    "7244": {
      "op": "SWAP3"
    },
    "7245": {
      "op": "SWAP6"
    },
    "7246": {
      "op": "POP"
    },
    "7247": {
      "op": "SWAP3"
    },
    "7248": {
      "op": "SWAP6"
    },
    "7249": {
      "op": "SWAP1"
    },
    "7250": {
      "op": "SWAP4"
    },
    "7251": {
      "op": "POP"
    },
    "7252": {
      "jump": "o",
      "op": "JUMP"
    },
    "7253": {
      "op": "JUMPDEST"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7258": {
      "op": "DUP3"
    },
    "7259": {
      "op": "DUP5"
    },
    "7260": {
      "op": "SUB"
    },
    "7261": {
      "op": "SLT"
    },
    "7262": {
      "op": "ISZERO"
    },
    "7263": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "7266": {
      "op": "JUMPI"
    },
    "7267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7269": {
      "op": "DUP1"
    },
    "7270": {
      "op": "REVERT"
    },
    "7271": {
      "op": "JUMPDEST"
    },
    "7272": {
      "op": "DUP2"
    },
    "7273": {
      "op": "MLOAD"
    },
    "7274": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7283": {
      "op": "DUP2"
    },
    "7284": {
      "op": "GT"
    },
    "7285": {
      "op": "ISZERO"
    },
    "7286": {
      "op": "PUSH2",
      "value": "0x1C7E"
    },
    "7289": {
      "op": "JUMPI"
    },
    "7290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7292": {
      "op": "DUP1"
    },
    "7293": {
      "op": "REVERT"
    },
    "7294": {
      "op": "JUMPDEST"
    },
    "7295": {
      "op": "PUSH2",
      "value": "0x1BCA"
    },
    "7298": {
      "op": "DUP5"
    },
    "7299": {
      "op": "DUP3"
    },
    "7300": {
      "op": "DUP6"
    },
    "7301": {
      "op": "ADD"
    },
    "7302": {
      "op": "PUSH2",
      "value": "0x1B85"
    },
    "7305": {
      "jump": "i",
      "op": "JUMP"
    },
    "7306": {
      "op": "JUMPDEST"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7311": {
      "op": "DUP3"
    },
    "7312": {
      "op": "DUP5"
    },
    "7313": {
      "op": "SUB"
    },
    "7314": {
      "op": "SLT"
    },
    "7315": {
      "op": "ISZERO"
    },
    "7316": {
      "op": "PUSH2",
      "value": "0x1C9C"
    },
    "7319": {
      "op": "JUMPI"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7322": {
      "op": "DUP1"
    },
    "7323": {
      "op": "REVERT"
    },
    "7324": {
      "op": "JUMPDEST"
    },
    "7325": {
      "op": "DUP2"
    },
    "7326": {
      "op": "MLOAD"
    },
    "7327": {
      "op": "PUSH2",
      "value": "0x177A"
    },
    "7330": {
      "op": "DUP2"
    },
    "7331": {
      "op": "PUSH2",
      "value": "0x1488"
    },
    "7334": {
      "jump": "i",
      "op": "JUMP"
    },
    "7335": {
      "op": "JUMPDEST"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7340": {
      "op": "DUP3"
    },
    "7341": {
      "op": "DUP5"
    },
    "7342": {
      "op": "SUB"
    },
    "7343": {
      "op": "SLT"
    },
    "7344": {
      "op": "ISZERO"
    },
    "7345": {
      "op": "PUSH2",
      "value": "0x1CB9"
    },
    "7348": {
      "op": "JUMPI"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7351": {
      "op": "DUP1"
    },
    "7352": {
      "op": "REVERT"
    },
    "7353": {
      "op": "JUMPDEST"
    },
    "7354": {
      "op": "DUP2"
    },
    "7355": {
      "op": "MLOAD"
    },
    "7356": {
      "op": "PUSH2",
      "value": "0x177A"
    },
    "7359": {
      "op": "DUP2"
    },
    "7360": {
      "op": "PUSH2",
      "value": "0x1499"
    },
    "7363": {
      "jump": "i",
      "op": "JUMP"
    },
    "7364": {
      "op": "JUMPDEST"
    },
    "7365": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7372": {
      "op": "SHL"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7375": {
      "op": "MSTORE"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7380": {
      "op": "MSTORE"
    },
    "7381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7385": {
      "op": "REVERT"
    },
    "7386": {
      "op": "JUMPDEST"
    },
    "7387": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7394": {
      "op": "SHL"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7397": {
      "op": "MSTORE"
    },
    "7398": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7400": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7402": {
      "op": "MSTORE"
    },
    "7403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7407": {
      "op": "REVERT"
    },
    "7408": {
      "op": "JUMPDEST"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7413": {
      "op": "DUP3"
    },
    "7414": {
      "op": "AND"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7417": {
      "op": "DUP2"
    },
    "7418": {
      "op": "EQ"
    },
    "7419": {
      "op": "ISZERO"
    },
    "7420": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7423": {
      "op": "JUMPI"
    },
    "7424": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7427": {
      "op": "PUSH2",
      "value": "0x1CDA"
    },
    "7430": {
      "jump": "i",
      "op": "JUMP"
    },
    "7431": {
      "op": "JUMPDEST"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "ADD"
    },
    "7435": {
      "op": "SWAP3"
    },
    "7436": {
      "op": "SWAP2"
    },
    "7437": {
      "op": "POP"
    },
    "7438": {
      "op": "POP"
    },
    "7439": {
      "jump": "o",
      "op": "JUMP"
    },
    "7440": {
      "op": "JUMPDEST"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7445": {
      "op": "NOT"
    },
    "7446": {
      "op": "DUP3"
    },
    "7447": {
      "op": "EQ"
    },
    "7448": {
      "op": "ISZERO"
    },
    "7449": {
      "op": "PUSH2",
      "value": "0x1D24"
    },
    "7452": {
      "op": "JUMPI"
    },
    "7453": {
      "op": "PUSH2",
      "value": "0x1D24"
    },
    "7456": {
      "op": "PUSH2",
      "value": "0x1CDA"
    },
    "7459": {
      "jump": "i",
      "op": "JUMP"
    },
    "7460": {
      "op": "JUMPDEST"
    },
    "7461": {
      "op": "POP"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7464": {
      "op": "ADD"
    },
    "7465": {
      "op": "SWAP1"
    },
    "7466": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8429665fb27e10199c38b9ccf45cd1fd5ada1b53",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract ApiCLHouse {\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isMember true if is member\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isMember,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdMember( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strMember memory houseMember;\n\n        (   houseMember.walletAddr,\n            houseMember.name,\n            houseMember.balance,\n            houseMember.isMember,\n            houseMember.isManager ) = daoCLH.arrMembers( uid );\n\n        require( true == houseMember.isMember  , \"User is not a Member\" );\n\n        return (\n            houseMember.name,\n            houseMember.balance,\n            houseMember.isMember,\n            houseMember.isManager\n        );\n    }\n\n    /// @notice The list of all members address\n    /// @param _houseAddr address of the CLH\n    /// @return arrMembers array with list of members\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strMember[] memory arrMembers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint8 numActiveMembers = daoCLH.numActiveMembers( );\n        uint256 arrMembersLength = daoCLH.GetArrMembersLength();\n        strMember[] memory _arrMembers = new strMember[] ( numActiveMembers );\n\n        uint8 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrMembersLength ; uid++ ) {\n            strMember memory houseMember;\n\n            (   houseMember.walletAddr,\n                houseMember.name,\n                houseMember.balance,\n                houseMember.isMember,\n                houseMember.isManager ) = daoCLH.arrMembers( uid );\n\n            if( true == houseMember.isMember ){\n                _arrMembers[ index ] = houseMember;\n                index++;\n            }\n        }\n        return _arrMembers;\n    }\n\n    // / @notice The list of all members address\n    // / @param _houseAddr address of the CLH\n    // / @return arrInvitations array with list of Invitations\n    // function GetHouseInvitationList(\n    //     address _houseAddr\n    // )\n    //     external\n    //     view\n    //     returns(\n    //         strInfoInvit[] memory arrInvitations\n    //     )\n    // {\n    //     ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n    //     uint256 arrDataLength = daoCLH.GetArrDataPropAddMember();\n    //     strInfoInvit[] memory _arrInvitations = new strInfoInvit[] ( arrDataLength );\n\n    //     uint8 index = 0 ;\n\n    //     for( uint256 uid = 1; uid < arrDataLength ; uid++ ) {\n    //         strDataAddMember memory infoUser;\n    //         (   \n    //             infoUser.walletAddr,\n    //             infoUser.name,\n    //             infoUser.isManager\n    //         ) = daoCLH.arrDataPropAddMember( uid );\n\n    //         uint256 propId = daoCLH.mapInvitationMember( infoUser.walletAddr );\n            \n    //         if( 0 != propId ){\n    //             strProposal memory infoProposal;\n    //             (\n    //                 infoProposal.proponent,\n    //                 infoProposal.typeProposal,\n    //                 infoProposal.description,\n    //                 infoProposal.propDataId,\n    //                 infoProposal.numVotes,\n    //                 infoProposal.againstVotes,\n    //                 infoProposal.executed,\n    //                 infoProposal.rejected,\n    //                 infoProposal.deadline\n    //             ) = daoCLH.arrProposals( propId );\n\n    //             if( block.timestamp < infoProposal.deadline ) {\n    //                 _arrInvitations[ index ] = strInfoInvit( {\n    //                     propId: propId,\n    //                     userName: infoUser.name,\n    //                     userWallet: infoUser.walletAddr,\n    //                     isManager: infoUser.isManager,\n    //                     deadline: infoProposal.deadline\n    //                 } );\n\n    //                 index++;\n    //             }\n    //         }\n    //     }\n    //     return _arrInvitations;\n    // }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return numActiveMembers Current members of a CLH\n    /// @return numManagerMembers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n    /// @return govRuleMaxActiveMembers Max of all members (including managers)\n    /// @return govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            uint8 numActiveMembers,\n            uint8 numManagerMembers,\n            uint8 govRuleApprovPercentage,\n            uint8 govRuleMaxActiveMembers,\n            uint8 govRuleMaxManagerMembers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.numActiveMembers(),\n            daoCLH.numManagerMembers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxActiveMembers(),\n            daoCLH.govRuleMaxManagerMembers()\n        );\n    }\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n          // first 32 bytes, after the length prefix\n          signR := mload( add( _signature, 32 ) )\n          // second 32 bytes\n          signS := mload( add( _signature, 64 ) )\n          // final byte (first byte of the next 32 bytes)\n          signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n\n    function SignerOCInvit(\n        bool _acceptance,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n      external view\n      returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n          abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n      external view\n      returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n          abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewMember(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n      external view\n      returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n          abi.encode(\n                __STR_OCNEWMEMBER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCDelMember(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n      external view\n      returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n          abi.encode(\n                __STR_OCDELMEMBER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCRequest(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n      external view\n      returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n          abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bytes32 _gov,\n        uint8 _govRuleMaxManagerMembers,\n        uint8 _govRuleMaxActiveMembers,\n        uint8 _govRuleApprovPercentage,\n        address _whiteListWallets,\n        address _addrCLF,\n        bytes memory _signature\n    ) \n      external view\n      returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _addrCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n          abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _gov,\n                _govRuleMaxManagerMembers,\n                _govRuleMaxActiveMembers,\n                _govRuleApprovPercentage,\n                _whiteListWallets\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "208:12808:17:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CLHouse/ApiCLHouse.sol",
  "type": "contract"
}