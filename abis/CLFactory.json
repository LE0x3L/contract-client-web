{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "houseAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "houseName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "houseId",
          "type": "uint256"
        }
      ],
      "name": "evtNewCLH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "CLCName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "evtUpdateCLC",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLHAPI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLLConstructorCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLLGovernance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLLUserManagement",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[3]",
          "name": "_govRules",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_gnosisSafe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_whiteListNFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_signerWallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "CreateCLH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CLLUserManagement",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_CLLGovernance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_CLLConstructorCLH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_CLHAPI",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beaconCLH",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beaconNFT",
          "type": "address"
        }
      ],
      "name": "Init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CLHAPI",
          "type": "address"
        }
      ],
      "name": "UpdateCLHAPI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CLLConstructorCLH",
          "type": "address"
        }
      ],
      "name": "UpdateCLLConstructorCLH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CLLGovernance",
          "type": "address"
        }
      ],
      "name": "UpdateCLLGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CLLUserManagement",
          "type": "address"
        }
      ],
      "name": "UpdateCLLUserManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconCLH",
      "outputs": [
        {
          "internalType": "contract CLBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconNFT",
      "outputs": [
        {
          "internalType": "contract CLBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCLHImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mapCLH",
      "outputs": [
        {
          "internalType": "contract ICLHouse",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdCLH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numCLH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/contracts/access/OwnableUpgradeable.sol",
    "1": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/contracts/proxy/utils/Initializable.sol",
    "3": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/contracts/utils/ContextUpgradeable.sol",
    "46": "contracts/APICLH/CLHouseApi.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "49": "contracts/CLFactory/CLFactory.sol",
    "55": "contracts/CLProxy/CLBeacon.sol",
    "57": "contracts/CLProxy/CLProxyCLH.sol",
    "63": "interfaces/ICLFactory.sol",
    "64": "interfaces/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLFactory/CLFactory.sol",
    "exportedSymbols": {
      "Address": [
        11553
      ],
      "AddressUpgradeable": [
        13479
      ],
      "BeaconProxy": [
        7725
      ],
      "CLBeacon": [
        5187
      ],
      "CLFactory": [
        1897
      ],
      "CLHouseApi": [
        1036
      ],
      "CLProxyCLH": [
        5229
      ],
      "Context": [
        12207
      ],
      "ContextUpgradeable": [
        11258
      ],
      "DebugDLGTCLL": [
        9428
      ],
      "ERC1967Upgrade": [
        11883
      ],
      "IBeacon": [
        11945
      ],
      "ICLFactory": [
        6739
      ],
      "ICLHouse": [
        6987
      ],
      "IERC1822Proxiable": [
        13489
      ],
      "Initializable": [
        11216
      ],
      "InvalidGovernanceType": [
        9422
      ],
      "Ownable": [
        8320
      ],
      "OwnableUpgradeable": [
        7119
      ],
      "Proxy": [
        11935
      ],
      "StorageSlot": [
        13549
      ],
      "UpgradeableBeacon": [
        7800
      ],
      "__CLHOUSE_VERSION__": [
        9431
      ],
      "__CONTRACT_NAME_HASH__": [
        9460
      ],
      "__CONTRACT_VERSION_HASH__": [
        9468
      ],
      "__GOV_COMMITTEE__": [
        9450
      ],
      "__GOV_DICTATORSHIP__": [
        9445
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9455
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9476
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9500
      ],
      "__STR_OCDELUSER_HASH__": [
        9516
      ],
      "__STR_OCINVIT_HASH__": [
        9484
      ],
      "__STR_OCNEWCLH_HASH__": [
        9532
      ],
      "__STR_OCNEWLOCK_HASH__": [
        9540
      ],
      "__STR_OCNEWUSER_HASH__": [
        9508
      ],
      "__STR_OCREQUEST_HASH__": [
        9524
      ],
      "__STR_OCVOTE_HASH__": [
        9492
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9437
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9434
      ],
      "__UPGRADEABLE_NFT_VERSION__": [
        9440
      ],
      "assetsEvent": [
        9554
      ],
      "eCLC": [
        9579
      ],
      "gRule": [
        9572
      ],
      "proposalEvent": [
        9558
      ],
      "proposalType": [
        9568
      ],
      "strDataGovRules": [
        9636
      ],
      "strDataTxAssets": [
        9633
      ],
      "strDataUser": [
        9624
      ],
      "strProposal": [
        9610
      ],
      "strUser": [
        9590
      ],
      "strVote": [
        9617
      ],
      "userEvent": [
        9547
      ]
    },
    "id": 1898,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1468,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:49"
      },
      {
        "absolutePath": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "id": 1469,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 7120,
        "src": "58:85:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ICLHouse.sol",
        "file": "../../interfaces/ICLHouse.sol",
        "id": 1470,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 6988,
        "src": "144:39:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ICLFactory.sol",
        "file": "../../interfaces/ICLFactory.sol",
        "id": 1471,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 6740,
        "src": "184:41:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CLProxy/CLBeacon.sol",
        "file": "../CLProxy/CLBeacon.sol",
        "id": 1472,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 5188,
        "src": "226:33:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CLProxy/CLProxyCLH.sol",
        "file": "../CLProxy/CLProxyCLH.sol",
        "id": 1473,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 5230,
        "src": "260:35:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/APICLH/CLHouseApi.sol",
        "file": "../APICLH/CLHouseApi.sol",
        "id": 1474,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1898,
        "sourceUnit": 1037,
        "src": "296:34:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1476,
              "name": "ICLFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6739,
              "src": "518:10:49"
            },
            "id": 1477,
            "nodeType": "InheritanceSpecifier",
            "src": "518:10:49"
          },
          {
            "baseName": {
              "id": 1478,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11216,
              "src": "530:13:49"
            },
            "id": 1479,
            "nodeType": "InheritanceSpecifier",
            "src": "530:13:49"
          },
          {
            "baseName": {
              "id": 1480,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7119,
              "src": "545:18:49"
            },
            "id": 1481,
            "nodeType": "InheritanceSpecifier",
            "src": "545:18:49"
          }
        ],
        "canonicalName": "CLFactory",
        "contractDependencies": [
          5229
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1475,
          "nodeType": "StructuredDocumentation",
          "src": "333:163:49",
          "text": "@title Crypto League House Factory\n @notice Create and config CLHouses\n @dev This contract is the standard way to create CLH\n @author Leonardo Urrego"
        },
        "fullyImplemented": true,
        "id": 1897,
        "linearizedBaseContracts": [
          1897,
          7119,
          11258,
          11216,
          6739
        ],
        "name": "CLFactory",
        "nameLocation": "505:9:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              6692
            ],
            "constant": false,
            "documentation": {
              "id": 1482,
              "nodeType": "StructuredDocumentation",
              "src": "570:46:49",
              "text": "@notice Store the number of houses created"
            },
            "functionSelector": "ee7a7d1b",
            "id": 1484,
            "mutability": "mutable",
            "name": "numCLH",
            "nameLocation": "636:6:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "621:21:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1483,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1488,
            "mutability": "mutable",
            "name": "__gapUint256",
            "nameLocation": "661:12:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "649:24:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$10_storage",
              "typeString": "uint256[10]"
            },
            "typeName": {
              "baseType": {
                "id": 1485,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "649:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1487,
              "length": {
                "hexValue": "3130",
                "id": 1486,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "657:2:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "649:11:49",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$10_storage_ptr",
                "typeString": "uint256[10]"
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6663
            ],
            "constant": false,
            "documentation": {
              "id": 1489,
              "nodeType": "StructuredDocumentation",
              "src": "680:51:49",
              "text": "@notice Contract with the CLH Constructor logic"
            },
            "functionSelector": "594034e3",
            "id": 1491,
            "mutability": "mutable",
            "name": "CLLConstructorCLH",
            "nameLocation": "751:17:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "736:32:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1490,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "736:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6668
            ],
            "constant": false,
            "documentation": {
              "id": 1492,
              "nodeType": "StructuredDocumentation",
              "src": "775:59:49",
              "text": "@notice Contract with the functions for user management"
            },
            "functionSelector": "529382d5",
            "id": 1494,
            "mutability": "mutable",
            "name": "CLLUserManagement",
            "nameLocation": "854:17:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "839:32:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1493,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "839:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6673
            ],
            "constant": false,
            "documentation": {
              "id": 1495,
              "nodeType": "StructuredDocumentation",
              "src": "878:54:49",
              "text": "@notice Contract with the functions for Governance"
            },
            "functionSelector": "a327ab69",
            "id": 1497,
            "mutability": "mutable",
            "name": "CLLGovernance",
            "nameLocation": "952:13:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "937:28:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1496,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "937:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6658
            ],
            "constant": false,
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "972:32:49",
              "text": "@notice Contract CLHouse API"
            },
            "functionSelector": "10790717",
            "id": 1500,
            "mutability": "mutable",
            "name": "CLHAPI",
            "nameLocation": "1024:6:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "1009:21:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1504,
            "mutability": "mutable",
            "name": "__gapAddress",
            "nameLocation": "1049:12:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "1037:24:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$10_storage",
              "typeString": "address[10]"
            },
            "typeName": {
              "baseType": {
                "id": 1501,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1037:7:49",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1503,
              "length": {
                "hexValue": "3130",
                "id": 1502,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1045:2:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "ArrayTypeName",
              "src": "1037:11:49",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$10_storage_ptr",
                "typeString": "address[10]"
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6679
            ],
            "constant": false,
            "documentation": {
              "id": 1505,
              "nodeType": "StructuredDocumentation",
              "src": "1068:114:49",
              "text": "@notice Contract Object of the beacon (store the add)\n @dev The beacon store the updated address of CLH"
            },
            "functionSelector": "c0828f63",
            "id": 1508,
            "mutability": "mutable",
            "name": "beaconCLH",
            "nameLocation": "1203:9:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "1187:25:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CLBeacon_$5187",
              "typeString": "contract CLBeacon"
            },
            "typeName": {
              "id": 1507,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1506,
                "name": "CLBeacon",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5187,
                "src": "1187:8:49"
              },
              "referencedDeclaration": 5187,
              "src": "1187:8:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CLBeacon_$5187",
                "typeString": "contract CLBeacon"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1509,
              "nodeType": "StructuredDocumentation",
              "src": "1223:43:49",
              "text": "@notice Relation houseAddr with houseId"
            },
            "functionSelector": "86bdfcac",
            "id": 1513,
            "mutability": "mutable",
            "name": "mapIdCLH",
            "nameLocation": "1308:8:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "1271:45:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1512,
              "keyType": {
                "id": 1510,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1280:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1271:29:49",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1511,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1291:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6687
            ],
            "constant": false,
            "documentation": {
              "id": 1514,
              "nodeType": "StructuredDocumentation",
              "src": "1327:51:49",
              "text": "@notice Mapping to store all the created houses"
            },
            "functionSelector": "624d8774",
            "id": 1519,
            "mutability": "mutable",
            "name": "mapCLH",
            "nameLocation": "1419:6:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "1383:42:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ICLHouse_$6987_$",
              "typeString": "mapping(uint256 => contract ICLHouse)"
            },
            "typeName": {
              "id": 1518,
              "keyType": {
                "id": 1515,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1391:7:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1383:28:49",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ICLHouse_$6987_$",
                "typeString": "mapping(uint256 => contract ICLHouse)"
              },
              "valueType": {
                "id": 1517,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1516,
                  "name": "ICLHouse",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6987,
                  "src": "1402:8:49"
                },
                "referencedDeclaration": 6987,
                "src": "1402:8:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICLHouse_$6987",
                  "typeString": "contract ICLHouse"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1520,
              "nodeType": "StructuredDocumentation",
              "src": "1432:117:49",
              "text": "@notice Contract Object of the beacon (store the add)\n @dev The beacon store the updated address of CLHNFT"
            },
            "functionSelector": "a32f93cb",
            "id": 1523,
            "mutability": "mutable",
            "name": "beaconNFT",
            "nameLocation": "1570:9:49",
            "nodeType": "VariableDeclaration",
            "scope": 1897,
            "src": "1554:25:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CLBeacon_$5187",
              "typeString": "contract CLBeacon"
            },
            "typeName": {
              "id": 1522,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1521,
                "name": "CLBeacon",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5187,
                "src": "1554:8:49"
              },
              "referencedDeclaration": 5187,
              "src": "1554:8:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CLBeacon_$5187",
                "typeString": "contract CLBeacon"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1524,
              "nodeType": "StructuredDocumentation",
              "src": "1590:198:49",
              "text": "@notice Event when house is created\n @param houseAddr Address of the created house\n @param houseName Name of the created house\n @param houseId Id of CLH of the created house"
            },
            "id": 1532,
            "name": "evtNewCLH",
            "nameLocation": "1799:9:49",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "houseAddr",
                  "nameLocation": "1818:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "1810:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "houseName",
                  "nameLocation": "1836:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "1829:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1530,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "houseId",
                  "nameLocation": "1855:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "1847:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1808:56:49"
            },
            "src": "1793:72:49"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1533,
              "nodeType": "StructuredDocumentation",
              "src": "1871:209:49",
              "text": "@notice Event when a CL Contract address is updated\n @param CLCName Name of contract var\n @param oldAddress Old Address value of the var\n @param newAddress New Address value of the var"
            },
            "id": 1541,
            "name": "evtUpdateCLC",
            "nameLocation": "2091:12:49",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1535,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "CLCName",
                  "nameLocation": "2112:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "2105:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "2129:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "2121:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "2149:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "2141:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2103:58:49"
            },
            "src": "2085:77:49"
          },
          {
            "body": {
              "id": 1548,
              "nodeType": "Block",
              "src": "2235:39:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1545,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "2245:20:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:22:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:22:49"
                }
              ]
            },
            "documentation": {
              "id": 1542,
              "nodeType": "StructuredDocumentation",
              "src": "2168:48:49",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 1549,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:2:49"
            },
            "returnParameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2235:0:49"
            },
            "scope": 1897,
            "src": "2221:53:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6712
            ],
            "body": {
              "id": 1623,
              "nodeType": "Block",
              "src": "3073:398:49",
              "statements": [
                {
                  "expression": {
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1568,
                      "name": "beaconCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1508,
                      "src": "3083:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLBeacon_$5187",
                        "typeString": "contract CLBeacon"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1570,
                          "name": "_beaconCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1560,
                          "src": "3105:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1569,
                        "name": "CLBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5187,
                        "src": "3095:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CLBeacon_$5187_$",
                          "typeString": "type(contract CLBeacon)"
                        }
                      },
                      "id": 1571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3095:22:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLBeacon_$5187",
                        "typeString": "contract CLBeacon"
                      }
                    },
                    "src": "3083:34:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLBeacon_$5187",
                      "typeString": "contract CLBeacon"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "3083:34:49"
                },
                {
                  "expression": {
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1574,
                      "name": "beaconNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1523,
                      "src": "3127:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLBeacon_$5187",
                        "typeString": "contract CLBeacon"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1576,
                          "name": "_beaconNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1562,
                          "src": "3149:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1575,
                        "name": "CLBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5187,
                        "src": "3139:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CLBeacon_$5187_$",
                          "typeString": "type(contract CLBeacon)"
                        }
                      },
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3139:22:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLBeacon_$5187",
                        "typeString": "contract CLBeacon"
                      }
                    },
                    "src": "3127:34:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLBeacon_$5187",
                      "typeString": "contract CLBeacon"
                    }
                  },
                  "id": 1579,
                  "nodeType": "ExpressionStatement",
                  "src": "3127:34:49"
                },
                {
                  "expression": {
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1580,
                      "name": "CLLUserManagement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "3172:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1581,
                      "name": "_CLLUserManagement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1552,
                      "src": "3192:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3172:38:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:38:49"
                },
                {
                  "expression": {
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1584,
                      "name": "CLLGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "3220:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1585,
                      "name": "_CLLGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "3236:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3220:30:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:30:49"
                },
                {
                  "expression": {
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1588,
                      "name": "CLLConstructorCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "3260:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1589,
                      "name": "_CLLConstructorCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1556,
                      "src": "3280:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3260:38:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "3260:38:49"
                },
                {
                  "expression": {
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1592,
                      "name": "CLHAPI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "3308:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1593,
                      "name": "_CLHAPI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1558,
                      "src": "3317:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3308:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1595,
                  "nodeType": "ExpressionStatement",
                  "src": "3308:16:49"
                },
                {
                  "expression": {
                    "id": 1598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1596,
                      "name": "numCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "3335:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3344:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3335:10:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1599,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:10:49"
                },
                {
                  "expression": {
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1600,
                        "name": "mapCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1519,
                        "src": "3355:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ICLHouse_$6987_$",
                          "typeString": "mapping(uint256 => contract ICLHouse)"
                        }
                      },
                      "id": 1602,
                      "indexExpression": {
                        "id": 1601,
                        "name": "numCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "3363:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3355:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3392:1:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3384:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1604,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3384:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3384:10:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1603,
                        "name": "ICLHouse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6987,
                        "src": "3374:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6987_$",
                          "typeString": "type(contract ICLHouse)"
                        }
                      },
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3374:22:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      }
                    },
                    "src": "3355:41:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6987",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "id": 1610,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:41:49"
                },
                {
                  "expression": {
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1611,
                        "name": "mapIdCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "3406:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1616,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3424:1:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3416:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3416:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3416:10:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3406:22:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1617,
                      "name": "numCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "3431:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3406:31:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "3406:31:49"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1620,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7014,
                      "src": "3448:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "3448:16:49"
                }
              ]
            },
            "documentation": {
              "id": 1550,
              "nodeType": "StructuredDocumentation",
              "src": "2280:511:49",
              "text": "@notice Config the CLFactory with the CL Logic Contracts\n @param _CLLUserManagement Address Contract Logic for user management\n @param _CLLGovernance Address Contract Logic for governance\n @param _CLLConstructorCLH Address Contract with the Constructor logic\n @param _CLHAPI Address of CLHAPI Contract\n @param _beaconCLH Address Beacon CLH Contract\n @param _beaconNFT Address Beacon NFT Contract\n @dev The constructor create a default CLH with the houseId #0"
            },
            "functionSelector": "629ed4fe",
            "id": 1624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1565,
                    "name": "__UPGRADEABLE_CLF_VERSION__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9437,
                    "src": "3039:27:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1564,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11169,
                  "src": "3024:13:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "3024:44:49"
              }
            ],
            "name": "Init",
            "nameLocation": "2805:4:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1552,
                  "mutability": "mutable",
                  "name": "_CLLUserManagement",
                  "nameLocation": "2827:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "2819:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "_CLLGovernance",
                  "nameLocation": "2863:14:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "2855:22:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "_CLLConstructorCLH",
                  "nameLocation": "2895:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "2887:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1558,
                  "mutability": "mutable",
                  "name": "_CLHAPI",
                  "nameLocation": "2931:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "2923:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "_beaconCLH",
                  "nameLocation": "2956:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "2948:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "_beaconNFT",
                  "nameLocation": "2984:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "2976:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2976:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2809:191:49"
            },
            "returnParameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3073:0:49"
            },
            "scope": 1897,
            "src": "2796:675:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6738
            ],
            "body": {
              "id": 1792,
              "nodeType": "Block",
              "src": "4555:1735:49",
              "statements": [
                {
                  "assignments": [
                    1652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1652,
                      "mutability": "mutable",
                      "name": "houseOwner",
                      "nameLocation": "4573:10:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 1792,
                      "src": "4565:18:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1651,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4565:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1655,
                  "initialValue": {
                    "expression": {
                      "id": 1653,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4586:3:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4586:10:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4565:31:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1657,
                              "name": "__GOV_DICTATORSHIP__",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9445,
                              "src": "4629:20:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1658,
                              "name": "_govModel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "4653:9:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "4629:33:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1660,
                              "name": "__GOV_COMMITTEE__",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9450,
                              "src": "4678:17:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1661,
                              "name": "_govModel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "4699:9:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "4678:30:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4629:79:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1664,
                            "name": "__GOV_SIMPLE_MAJORITY__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9455,
                            "src": "4724:23:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1665,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1633,
                            "src": "4751:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4724:36:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4629:131:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420476f7665726e616e63652054797065",
                        "id": 1668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4775:25:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214b95948b2fffc4708f5771e5883416970438828cb4a690e032cc55f38d94b1",
                          "typeString": "literal_string \"Invalid Governance Type\""
                        },
                        "value": "Invalid Governance Type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214b95948b2fffc4708f5771e5883416970438828cb4a690e032cc55f38d94b1",
                          "typeString": "literal_string \"Invalid Governance Type\""
                        }
                      ],
                      "id": 1656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4607:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:203:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1670,
                  "nodeType": "ExpressionStatement",
                  "src": "4607:203:49"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1671,
                      "name": "_signerWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1646,
                      "src": "4825:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4850:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4842:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4842:7:49",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4842:10:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4825:27:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1723,
                  "nodeType": "IfStatement",
                  "src": "4821:727:49",
                  "trueBody": {
                    "id": 1722,
                    "nodeType": "Block",
                    "src": "4855:693:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1678,
                                  "name": "_signature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1648,
                                  "src": "4878:10:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4878:17:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3635",
                                "id": 1680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4899:2:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_65_by_1",
                                  "typeString": "int_const 65"
                                },
                                "value": "65"
                              },
                              "src": "4878:23:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "437265617465434c483a20426164207369676e6174757265206c656e677468",
                              "id": 1682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4903:33:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_66546f6712041f6d05b5202f53cc0449a241460309628ff6f24130bbd6047f30",
                                "typeString": "literal_string \"CreateCLH: Bad signature length\""
                              },
                              "value": "CreateCLH: Bad signature length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_66546f6712041f6d05b5202f53cc0449a241460309628ff6f24130bbd6047f30",
                                "typeString": "literal_string \"CreateCLH: Bad signature length\""
                              }
                            ],
                            "id": 1677,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4869:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4869:69:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1684,
                        "nodeType": "ExpressionStatement",
                        "src": "4869:69:49"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1686,
                                "name": "_signerWallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1646,
                                "src": "4990:13:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 1691,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1627,
                                    "src": "5064:10:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1692,
                                    "name": "_housePrivate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "5096:13:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 1693,
                                    "name": "_houseOpen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1631,
                                    "src": "5131:10:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "id": 1694,
                                    "name": "_govModel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1633,
                                    "src": "5163:9:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1695,
                                      "name": "_govRules",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1637,
                                      "src": "5194:9:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                        "typeString": "uint256[3] memory"
                                      }
                                    },
                                    "id": 1697,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 1696,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5204:1:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5194:12:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1698,
                                      "name": "_govRules",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1637,
                                      "src": "5228:9:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                        "typeString": "uint256[3] memory"
                                      }
                                    },
                                    "id": 1700,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 1699,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5238:1:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5228:12:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1701,
                                      "name": "_govRules",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1637,
                                      "src": "5262:9:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                                        "typeString": "uint256[3] memory"
                                      }
                                    },
                                    "id": 1703,
                                    "indexExpression": {
                                      "hexValue": "32",
                                      "id": 1702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5272:1:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5262:12:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1704,
                                    "name": "_whiteListNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1644,
                                    "src": "5296:13:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1705,
                                      "name": "_ManagerWallets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1640,
                                      "src": "5331:15:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1707,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 1706,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5347:1:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5331:18:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1710,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5379:4:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_CLFactory_$1897",
                                          "typeString": "contract CLFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_CLFactory_$1897",
                                          "typeString": "contract CLFactory"
                                        }
                                      ],
                                      "id": 1709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5371:7:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1708,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5371:7:49",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5371:13:49",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1712,
                                    "name": "_signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1648,
                                    "src": "5406:10:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1688,
                                        "name": "CLHAPI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1500,
                                        "src": "5019:6:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1687,
                                      "name": "CLHouseApi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1036,
                                      "src": "5007:10:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_CLHouseApi_$1036_$",
                                        "typeString": "type(contract CLHouseApi)"
                                      }
                                    },
                                    "id": 1689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5007:20:49",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CLHouseApi_$1036",
                                      "typeString": "contract CLHouseApi"
                                    }
                                  },
                                  "id": 1690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "SignerOCNewCLH",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 969,
                                  "src": "5007:35:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_bool_$_t_bool_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                    "typeString": "function (string memory,bool,bool,bytes32,uint256,uint256,uint256,address,address,address,bytes memory) view external returns (address)"
                                  }
                                },
                                "id": 1713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5007:427:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4990:444:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "437265617465434c483a20496e76616c6964205369676e6174757265",
                              "id": 1715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5452:30:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_099f17192883e41fedd772ee8fa6333842f0019e00f69fd93b115b83fd0b3f05",
                                "typeString": "literal_string \"CreateCLH: Invalid Signature\""
                              },
                              "value": "CreateCLH: Invalid Signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_099f17192883e41fedd772ee8fa6333842f0019e00f69fd93b115b83fd0b3f05",
                                "typeString": "literal_string \"CreateCLH: Invalid Signature\""
                              }
                            ],
                            "id": 1685,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4965:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4965:531:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1717,
                        "nodeType": "ExpressionStatement",
                        "src": "4965:531:49"
                      },
                      {
                        "expression": {
                          "id": 1720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1718,
                            "name": "houseOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1652,
                            "src": "5511:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1719,
                            "name": "_signerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1646,
                            "src": "5524:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5511:26:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1721,
                        "nodeType": "ExpressionStatement",
                        "src": "5511:26:49"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1726,
                      "mutability": "mutable",
                      "name": "pxyCLH",
                      "nameLocation": "5569:6:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 1792,
                      "src": "5558:17:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                        "typeString": "contract CLProxyCLH"
                      },
                      "typeName": {
                        "id": 1725,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1724,
                          "name": "CLProxyCLH",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5229,
                          "src": "5558:10:49"
                        },
                        "referencedDeclaration": 5229,
                        "src": "5558:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                          "typeString": "contract CLProxyCLH"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1732,
                            "name": "beaconCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "5615:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLBeacon_$5187",
                              "typeString": "contract CLBeacon"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CLBeacon_$5187",
                              "typeString": "contract CLBeacon"
                            }
                          ],
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5606:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5606:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5606:20:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "496e697428616464726573732c737472696e672c626f6f6c2c626f6f6c2c627974657333322c75696e743235365b335d2c616464726573735b365d2c616464726573735b5d29",
                            "id": 1736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5681:72:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bf97e2dac79248158273941b3baa7c00fb7ad4ac2c6d0d173519a233be092970",
                              "typeString": "literal_string \"Init(address,string,bool,bool,bytes32,uint256[3],address[6],address[])\""
                            },
                            "value": "Init(address,string,bool,bool,bytes32,uint256[3],address[6],address[])"
                          },
                          {
                            "id": 1737,
                            "name": "houseOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1652,
                            "src": "5771:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1738,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1627,
                            "src": "5800:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1739,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "5828:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1740,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "5859:10:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1741,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1633,
                            "src": "5887:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1742,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "5914:9:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 1743,
                                "name": "CLLConstructorCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1491,
                                "src": "5943:17:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1746,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5970:4:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CLFactory_$1897",
                                      "typeString": "contract CLFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CLFactory_$1897",
                                      "typeString": "contract CLFactory"
                                    }
                                  ],
                                  "id": 1745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5962:7:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1744,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5962:7:49",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5962:13:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1748,
                                "name": "CLHAPI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1500,
                                "src": "5977:6:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1749,
                                "name": "_gnosisSafe",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "5985:11:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1750,
                                "name": "_whiteListNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1644,
                                "src": "5998:13:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1753,
                                    "name": "beaconNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1523,
                                    "src": "6022:9:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CLBeacon_$5187",
                                      "typeString": "contract CLBeacon"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CLBeacon_$5187",
                                      "typeString": "contract CLBeacon"
                                    }
                                  ],
                                  "id": 1752,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6013:7:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1751,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6013:7:49",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6013:20:49",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1755,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5941:94:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$6_memory_ptr",
                              "typeString": "address[6] memory"
                            }
                          },
                          {
                            "id": 1756,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1640,
                            "src": "6053:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_bf97e2dac79248158273941b3baa7c00fb7ad4ac2c6d0d173519a233be092970",
                              "typeString": "literal_string \"Init(address,string,bool,bool,bytes32,uint256[3],address[6],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$6_memory_ptr",
                              "typeString": "address[6] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1734,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5640:3:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5640:23:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5640:442:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5578:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_CLProxyCLH_$5229_$",
                        "typeString": "function (address,bytes memory) returns (contract CLProxyCLH)"
                      },
                      "typeName": {
                        "id": 1728,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1727,
                          "name": "CLProxyCLH",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5229,
                          "src": "5582:10:49"
                        },
                        "referencedDeclaration": 5229,
                        "src": "5582:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                          "typeString": "contract CLProxyCLH"
                        }
                      }
                    },
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5578:514:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                      "typeString": "contract CLProxyCLH"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5558:534:49"
                },
                {
                  "expression": {
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6103:8:49",
                    "subExpression": {
                      "id": 1760,
                      "name": "numCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "6103:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1762,
                  "nodeType": "ExpressionStatement",
                  "src": "6103:8:49"
                },
                {
                  "expression": {
                    "id": 1772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1763,
                        "name": "mapCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1519,
                        "src": "6121:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ICLHouse_$6987_$",
                          "typeString": "mapping(uint256 => contract ICLHouse)"
                        }
                      },
                      "id": 1765,
                      "indexExpression": {
                        "id": 1764,
                        "name": "numCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "6129:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6121:16:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1769,
                              "name": "pxyCLH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "6159:6:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                                "typeString": "contract CLProxyCLH"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                                "typeString": "contract CLProxyCLH"
                              }
                            ],
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6150:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1767,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6150:7:49",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6150:17:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1766,
                        "name": "ICLHouse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6987,
                        "src": "6140:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6987_$",
                          "typeString": "type(contract ICLHouse)"
                        }
                      },
                      "id": 1771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6140:29:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      }
                    },
                    "src": "6121:48:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6987",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "id": 1773,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:48:49"
                },
                {
                  "expression": {
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1774,
                        "name": "mapIdCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "6179:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1779,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1777,
                            "name": "pxyCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1726,
                            "src": "6198:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                              "typeString": "contract CLProxyCLH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                              "typeString": "contract CLProxyCLH"
                            }
                          ],
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6189:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1775,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6189:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6189:17:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6179:29:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1780,
                      "name": "numCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "6211:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6179:38:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "6179:38:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1786,
                            "name": "pxyCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1726,
                            "src": "6253:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                              "typeString": "contract CLProxyCLH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CLProxyCLH_$5229",
                              "typeString": "contract CLProxyCLH"
                            }
                          ],
                          "id": 1785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6244:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1784,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6244:7:49",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6244:17:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1788,
                        "name": "_houseName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "6263:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1789,
                        "name": "numCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "6275:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1783,
                      "name": "evtNewCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1532,
                      "src": "6233:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6233:50:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1791,
                  "nodeType": "EmitStatement",
                  "src": "6228:55:49"
                }
              ]
            },
            "documentation": {
              "id": 1625,
              "nodeType": "StructuredDocumentation",
              "src": "3478:710:49",
              "text": "@notice Deploy a new CLHouse\n @param _houseName Name of the CLH\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _houseOpen If is set to 1, the CLH is set to open\n @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRules Array for goverment rules see `enum gRule`\n @param _ManagerWallets Whitelist of address for invitate as managers\n @param _gnosisSafe Contract address of SAFE\n @param _signerWallet Wallet address of the signer for OffChain Tx\n @param _signature Signature for validate OffChain Tx\n @dev Some parameters wil be ignored depending on the governance model"
            },
            "functionSelector": "209bafec",
            "id": 1793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateCLH",
            "nameLocation": "4202:9:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "4235:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4221:24:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "4260:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4255:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "4288:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4283:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "4316:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4308:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4308:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "4353:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4335:27:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1634,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4335:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1636,
                    "length": {
                      "hexValue": "33",
                      "id": 1635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4343:1:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4335:10:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1640,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "4389:15:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4372:32:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1638,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4372:7:49",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1639,
                    "nodeType": "ArrayTypeName",
                    "src": "4372:9:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "_gnosisSafe",
                  "nameLocation": "4422:11:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4414:19:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1644,
                  "mutability": "mutable",
                  "name": "_whiteListNFT",
                  "nameLocation": "4451:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4443:21:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "mutability": "mutable",
                  "name": "_signerWallet",
                  "nameLocation": "4482:13:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4474:21:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1648,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4518:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "4505:23:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4211:323:49"
            },
            "returnParameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4555:0:49"
            },
            "scope": 1897,
            "src": "4193:2097:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6697
            ],
            "body": {
              "id": 1803,
              "nodeType": "Block",
              "src": "6419:50:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1799,
                        "name": "beaconCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1508,
                        "src": "6436:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLBeacon_$5187",
                          "typeString": "contract CLBeacon"
                        }
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7763,
                      "src": "6436:24:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6436:26:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1798,
                  "id": 1802,
                  "nodeType": "Return",
                  "src": "6429:33:49"
                }
              ]
            },
            "documentation": {
              "id": 1794,
              "nodeType": "StructuredDocumentation",
              "src": "6297:53:49",
              "text": "@notice Get the address of the CLH contract logic"
            },
            "functionSelector": "a6b6ed3a",
            "id": 1804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCLHImplementation",
            "nameLocation": "6364:20:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6384:2:49"
            },
            "returnParameters": {
              "id": 1798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "6410:7:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6410:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6409:9:49"
            },
            "scope": 1897,
            "src": "6355:114:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1826,
              "nodeType": "Block",
              "src": "6619:179:49",
              "statements": [
                {
                  "assignments": [
                    1813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1813,
                      "mutability": "mutable",
                      "name": "oldAddr",
                      "nameLocation": "6637:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 1826,
                      "src": "6629:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1812,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6629:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1815,
                  "initialValue": {
                    "id": 1814,
                    "name": "CLLConstructorCLH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1491,
                    "src": "6647:17:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6629:35:49"
                },
                {
                  "expression": {
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1816,
                      "name": "CLLConstructorCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "6674:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1817,
                      "name": "_CLLConstructorCLH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "6694:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6674:38:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "6674:38:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "434c4c436f6e7374727563746f72434c48",
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6741:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21ca4107ae7c6046a1dcb965fe2f0c3235f996f64457d0aee953a67fec2a2477",
                          "typeString": "literal_string \"CLLConstructorCLH\""
                        },
                        "value": "CLLConstructorCLH"
                      },
                      {
                        "id": 1822,
                        "name": "oldAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "6762:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1823,
                        "name": "_CLLConstructorCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "6771:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21ca4107ae7c6046a1dcb965fe2f0c3235f996f64457d0aee953a67fec2a2477",
                          "typeString": "literal_string \"CLLConstructorCLH\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1820,
                      "name": "evtUpdateCLC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1541,
                      "src": "6727:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 1824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:64:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1825,
                  "nodeType": "EmitStatement",
                  "src": "6722:69:49"
                }
              ]
            },
            "documentation": {
              "id": 1805,
              "nodeType": "StructuredDocumentation",
              "src": "6475:57:49",
              "text": "@notice Update the CLLConstructorCLH contract Address"
            },
            "functionSelector": "f6f7a1b3",
            "id": 1827,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1810,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1809,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7033,
                  "src": "6609:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "6609:9:49"
              }
            ],
            "name": "UpdateCLLConstructorCLH",
            "nameLocation": "6546:23:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "_CLLConstructorCLH",
                  "nameLocation": "6579:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1827,
                  "src": "6571:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6571:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:30:49"
            },
            "returnParameters": {
              "id": 1811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6619:0:49"
            },
            "scope": 1897,
            "src": "6537:261:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1849,
              "nodeType": "Block",
              "src": "6948:179:49",
              "statements": [
                {
                  "assignments": [
                    1836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1836,
                      "mutability": "mutable",
                      "name": "oldAddr",
                      "nameLocation": "6966:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 1849,
                      "src": "6958:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1835,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6958:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1838,
                  "initialValue": {
                    "id": 1837,
                    "name": "CLLUserManagement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1494,
                    "src": "6976:17:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6958:35:49"
                },
                {
                  "expression": {
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1839,
                      "name": "CLLUserManagement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "7003:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1840,
                      "name": "_CLLUserManagement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1830,
                      "src": "7023:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7003:38:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "7003:38:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "434c4c557365724d616e6167656d656e74",
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7070:19:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8818be37b272861fc8aaea0e23015042e4fd23826d87079659169951e66dc62a",
                          "typeString": "literal_string \"CLLUserManagement\""
                        },
                        "value": "CLLUserManagement"
                      },
                      {
                        "id": 1845,
                        "name": "oldAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "7091:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1846,
                        "name": "_CLLUserManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1830,
                        "src": "7100:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8818be37b272861fc8aaea0e23015042e4fd23826d87079659169951e66dc62a",
                          "typeString": "literal_string \"CLLUserManagement\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1843,
                      "name": "evtUpdateCLC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1541,
                      "src": "7056:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:64:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1848,
                  "nodeType": "EmitStatement",
                  "src": "7051:69:49"
                }
              ]
            },
            "documentation": {
              "id": 1828,
              "nodeType": "StructuredDocumentation",
              "src": "6804:57:49",
              "text": "@notice Update the CLLUserManagement contract Address"
            },
            "functionSelector": "c1e45428",
            "id": 1850,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1833,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1832,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7033,
                  "src": "6938:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "6938:9:49"
              }
            ],
            "name": "UpdateCLLUserManagement",
            "nameLocation": "6875:23:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1830,
                  "mutability": "mutable",
                  "name": "_CLLUserManagement",
                  "nameLocation": "6908:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "6900:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6900:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6898:30:49"
            },
            "returnParameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6948:0:49"
            },
            "scope": 1897,
            "src": "6866:261:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1872,
              "nodeType": "Block",
              "src": "7265:159:49",
              "statements": [
                {
                  "assignments": [
                    1859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1859,
                      "mutability": "mutable",
                      "name": "oldAddr",
                      "nameLocation": "7283:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 1872,
                      "src": "7275:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1858,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7275:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1861,
                  "initialValue": {
                    "id": 1860,
                    "name": "CLLGovernance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1497,
                    "src": "7293:13:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7275:31:49"
                },
                {
                  "expression": {
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1862,
                      "name": "CLLGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "7316:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1863,
                      "name": "_CLLGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1853,
                      "src": "7332:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7316:30:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1865,
                  "nodeType": "ExpressionStatement",
                  "src": "7316:30:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "434c4c476f7665726e616e6365",
                        "id": 1867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7375:15:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e0add186a65a03987845808813dd6258edab07c4a3ce5ebe4a055283e2a29f0",
                          "typeString": "literal_string \"CLLGovernance\""
                        },
                        "value": "CLLGovernance"
                      },
                      {
                        "id": 1868,
                        "name": "oldAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "7392:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1869,
                        "name": "_CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "7401:14:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5e0add186a65a03987845808813dd6258edab07c4a3ce5ebe4a055283e2a29f0",
                          "typeString": "literal_string \"CLLGovernance\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1866,
                      "name": "evtUpdateCLC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1541,
                      "src": "7361:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7361:56:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1871,
                  "nodeType": "EmitStatement",
                  "src": "7356:61:49"
                }
              ]
            },
            "documentation": {
              "id": 1851,
              "nodeType": "StructuredDocumentation",
              "src": "7133:53:49",
              "text": "@notice Update the CLLGovernance contract Address"
            },
            "functionSelector": "d742063c",
            "id": 1873,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1856,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1855,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7033,
                  "src": "7255:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "7255:9:49"
              }
            ],
            "name": "UpdateCLLGovernance",
            "nameLocation": "7200:19:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "_CLLGovernance",
                  "nameLocation": "7229:14:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1873,
                  "src": "7221:22:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7221:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7219:26:49"
            },
            "returnParameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7265:0:49"
            },
            "scope": 1897,
            "src": "7191:233:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1895,
              "nodeType": "Block",
              "src": "7541:124:49",
              "statements": [
                {
                  "assignments": [
                    1882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1882,
                      "mutability": "mutable",
                      "name": "oldAddr",
                      "nameLocation": "7559:7:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 1895,
                      "src": "7551:15:49",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1881,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7551:7:49",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1884,
                  "initialValue": {
                    "id": 1883,
                    "name": "CLHAPI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1500,
                    "src": "7569:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7551:24:49"
                },
                {
                  "expression": {
                    "id": 1887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1885,
                      "name": "CLHAPI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "7585:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1886,
                      "name": "_CLHAPI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1876,
                      "src": "7594:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7585:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1888,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:16:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "434c48415049",
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7630:8:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b984e4543ba4bbb304d0949ad6233a06b8a82e7c8ff91036023cf7aa14ed431",
                          "typeString": "literal_string \"CLHAPI\""
                        },
                        "value": "CLHAPI"
                      },
                      {
                        "id": 1891,
                        "name": "oldAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1882,
                        "src": "7640:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1892,
                        "name": "_CLHAPI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1876,
                        "src": "7649:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2b984e4543ba4bbb304d0949ad6233a06b8a82e7c8ff91036023cf7aa14ed431",
                          "typeString": "literal_string \"CLHAPI\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1889,
                      "name": "evtUpdateCLC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1541,
                      "src": "7616:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 1893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7616:42:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1894,
                  "nodeType": "EmitStatement",
                  "src": "7611:47:49"
                }
              ]
            },
            "documentation": {
              "id": 1874,
              "nodeType": "StructuredDocumentation",
              "src": "7430:46:49",
              "text": "@notice Update the CLHAPI contract Address"
            },
            "functionSelector": "4bc3959f",
            "id": 1896,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1878,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7033,
                  "src": "7531:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "7531:9:49"
              }
            ],
            "name": "UpdateCLHAPI",
            "nameLocation": "7490:12:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "_CLHAPI",
                  "nameLocation": "7512:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 1896,
                  "src": "7504:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7504:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7502:19:49"
            },
            "returnParameters": {
              "id": 1880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7541:0:49"
            },
            "scope": 1897,
            "src": "7481:184:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1898,
        "src": "496:7171:49",
        "usedErrors": []
      }
    ],
    "src": "32:7635:49"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611da2806100ed6000396000f3fe60806040523480156200001157600080fd5b5060043610620001395760003560e01c80638da5cb5b11620000bb578063c1e45428116200007a578063c1e45428146200029e578063d742063c14620002b5578063ee7a7d1b14620002cc578063f2fde38b14620002d6578063f6f7a1b314620002ed57600080fd5b80638da5cb5b1462000246578063a327ab691462000258578063a32f93cb146200026c578063a6b6ed3a1462000280578063c0828f63146200028a57600080fd5b8063594034e31162000108578063594034e314620001b3578063624d877414620001c7578063629ed4fe14620001f3578063715018a6146200020a57806386bdfcac146200021457600080fd5b806310790717146200013e578063209bafec146200016f5780634bc3959f1462000188578063529382d5146200019f575b600080fd5b60735462000152906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620001866200018036600462000f5b565b62000304565b005b62000186620001993660046200106c565b6200078f565b60715462000152906001600160a01b031681565b60705462000152906001600160a01b031681565b62000152620001d836600462001093565b6080602052600090815260409020546001600160a01b031681565b6200018662000204366004620010ad565b62000808565b62000186620009b3565b62000237620002253660046200106c565b607f6020526000908152604090205481565b60405190815260200162000166565b6033546001600160a01b031662000152565b60725462000152906001600160a01b031681565b60815462000152906001600160a01b031681565b62000152620009cb565b607e5462000152906001600160a01b031681565b62000186620002af3660046200106c565b62000a41565b62000186620002c63660046200106c565b62000abe565b6200023760655481565b62000186620002e73660046200106c565b62000b37565b62000186620002fe3660046200106c565b62000bb6565b337f0b93889d934070956c00846f50f9a10a747bd194bba2f2e78a86d0c02386fdb1881480620003535750877f16591a696fee5867425b3dee9fc0160a6c1baef77835bc3d204314106d639298145b806200037e5750877fa0786f6450d5fb3298b8425105c1b75e6e01a1ff86cdabea29909cdb0b4c83a7145b620003d05760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420476f7665726e616e6365205479706500000000000000000060448201526064015b60405180910390fd5b6001600160a01b0383161562000552578151604114620004335760405162461bcd60e51b815260206004820152601f60248201527f437265617465434c483a20426164207369676e6174757265206c656e677468006044820152606401620003c7565b6073546001600160a01b0316638b4bccca8c8c8c8c8c600060200201518d600160200201518e600260200201518c8f6000815181106200047757620004776200113c565b6020026020010151308d6040518c63ffffffff1660e01b8152600401620004a99b9a99989796959493929190620011a2565b602060405180830381865afa158015620004c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ed91906200122e565b6001600160a01b0316836001600160a01b0316146200054f5760405162461bcd60e51b815260206004820152601c60248201527f437265617465434c483a20496e76616c6964205369676e6174757265000000006044820152606401620003c7565b50815b6000607e60009054906101000a90046001600160a01b0316828d8d8d8d8d6040518060c00160405280607060009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001306001600160a01b03166001600160a01b03168152602001607360009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020018e6001600160a01b03166001600160a01b031681526020018d6001600160a01b03166001600160a01b03168152602001608160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152508e60405160240162000662989796959493929190620012c8565b60408051601f198184030181529181526020820180516001600160e01b0316635fcbf16d60e11b17905251620006989062000d4a565b620006a592919062001368565b604051809103906000f080158015620006c2573d6000803e3d6000fd5b50606580549192506000620006d78362001396565b91905055508060806000606554815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606554607f6000836001600160a01b03166001600160a01b03168152602001908152602001600020819055507f6510209152e59feb0a7445a97b24bc79bfcb456ca1d8bff1e4980536c4e8cabb818d6065546040516200077993929190620013c0565b60405180910390a1505050505050505050505050565b6200079962000c33565b607380546001600160a01b031981166001600160a01b0384811691821790935560408051606080825260069082015265434c4841504960d01b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a0015b60405180910390a15050565b600054600190610100900460ff161580156200082b575060005460ff8083169116105b620008905760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620003c7565b6000805461ffff191660ff831617610100178155607e80546001600160a01b038087166001600160a01b03199283161790925560818054868416908316179055607180548b8416908316179055607280548a841690831617905560708054898416908316179055607380549288169282169290921790915560658290558180527fae0c3f803428dd501929f276001a4b5fd1d262991bbb98e97b4b7d918a5af6dc80549091169055607f6020527f18b3a2798575d3a428c1f52e616a74b071539854e037e7d7c535365d474f4033556200096962000c8f565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050505050565b620009bd62000c33565b620009c9600062000cc3565b565b607e5460408051635c60da1b60e01b815290516000926001600160a01b031691635c60da1b9160048083019260209291908290030181865afa15801562000a16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a3c91906200122e565b905090565b62000a4b62000c33565b607180546001600160a01b031981166001600160a01b038481169182179093556040805160608082526011908201527010d313155cd95c93585b9859d95b595b9d607a1b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a001620007fc565b62000ac862000c33565b607280546001600160a01b031981166001600160a01b03848116918217909355604080516060808252600d908201526c434c4c476f7665726e616e636560981b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a001620007fc565b62000b4162000c33565b6001600160a01b03811662000ba85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620003c7565b62000bb38162000cc3565b50565b62000bc062000c33565b607080546001600160a01b031981166001600160a01b0384811691821790935560408051606080825260119082015270086989886dedce6e8e4eac6e8dee486989607b1b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a001620007fc565b6033546001600160a01b03163314620009c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003c7565b600054610100900460ff1662000cb95760405162461bcd60e51b8152600401620003c790620013f6565b620009c962000d15565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1662000d3f5760405162461bcd60e51b8152600401620003c790620013f6565b620009c93362000cc3565b61090b806200144283390190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562000d9a5762000d9a62000d58565b604052919050565b600082601f83011262000db457600080fd5b813567ffffffffffffffff81111562000dd15762000dd162000d58565b62000de6601f8201601f191660200162000d6e565b81815284602083860101111562000dfc57600080fd5b816020850160208301376000918101602001919091529392505050565b8035801515811462000e2a57600080fd5b919050565b600082601f83011262000e4157600080fd5b6040516060810181811067ffffffffffffffff8211171562000e675762000e6762000d58565b60405280606084018581111562000e7d57600080fd5b845b8181101562000e9957803583526020928301920162000e7f565b509195945050505050565b6001600160a01b038116811462000bb357600080fd5b803562000e2a8162000ea4565b600082601f83011262000ed957600080fd5b8135602067ffffffffffffffff82111562000ef85762000ef862000d58565b8160051b62000f0982820162000d6e565b928352848101820192828101908785111562000f2457600080fd5b83870192505b8483101562000f5057823562000f408162000ea4565b8252918301919083019062000f2a565b979650505050505050565b6000806000806000806000806000806101808b8d03121562000f7c57600080fd5b8a3567ffffffffffffffff8082111562000f9557600080fd5b62000fa38e838f0162000da2565b9b5062000fb360208e0162000e19565b9a5062000fc360408e0162000e19565b995060608d0135985062000fdb8e60808f0162000e2f565b975060e08d013591508082111562000ff257600080fd5b620010008e838f0162000ec7565b9650620010116101008e0162000eba565b9550620010226101208e0162000eba565b9450620010336101408e0162000eba565b93506101608d01359150808211156200104b57600080fd5b506200105a8d828e0162000da2565b9150509295989b9194979a5092959850565b6000602082840312156200107f57600080fd5b81356200108c8162000ea4565b9392505050565b600060208284031215620010a657600080fd5b5035919050565b60008060008060008060c08789031215620010c757600080fd5b8635620010d48162000ea4565b95506020870135620010e68162000ea4565b94506040870135620010f88162000ea4565b935060608701356200110a8162000ea4565b925060808701356200111c8162000ea4565b915060a08701356200112e8162000ea4565b809150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156200117a576020818501810151868301820152016200115c565b818111156200118d576000602083870101525b50601f01601f19169290920160200192915050565b6000610160808352620011b88184018f62001152565b8d151560208501528c15156040850152606084018c9052608084018b905260a084018a905260c084018990526001600160a01b0388811660e0860152878116610100860152861661012085015283810361014085015290506200121c818562001152565b9e9d5050505050505050505050505050565b6000602082840312156200124157600080fd5b81516200108c8162000ea4565b8060005b60068110156200127c5781516001600160a01b031684526020938401939091019060010162001252565b50505050565b600081518084526020808501945080840160005b83811015620012bd5781516001600160a01b03168752958201959082019060010162001296565b509495945050505050565b6001600160a01b03891681526101e0602080830182905260009190620012f18483018c62001152565b91508915156040850152881515606085015287608085015260a084018760005b6003811015620013305781518352918301919083019060010162001311565b50505050620013446101008401866200124e565b8281036101c084015262001359818562001282565b9b9a5050505050505050505050565b6001600160a01b03831681526040602082018190526000906200138e9083018462001152565b949350505050565b6000600019821415620013b957634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0384168152606060208201819052600090620013e69083018562001152565b9050826040830152949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe608060405234801561001057600080fd5b5060405161090b38038061090b83398101604081905261002f91610467565b818161003d82826000610046565b50505050610591565b61004f83610111565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100905750805b1561010c5761010a836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fa9190610527565b836102b460201b6100291760201c565b505b505050565b610124816102e060201b6100551760201c565b6101835760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101f7816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e89190610527565b6102e060201b6100551760201c565b61025c5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b606482015260840161017a565b806102937fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102ef60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102d983836040518060600160405280602781526020016108e4602791396102f2565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61035a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161017a565b600080856001600160a01b0316856040516103759190610542565b600060405180830381855af49150503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b5090925090506103c68282866103d0565b9695505050505050565b606083156103df5750816102d9565b8251156103ef5782518084602001fd5b8160405162461bcd60e51b815260040161017a919061055e565b80516001600160a01b038116811461042057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045657818101518382015260200161043e565b8381111561010a5750506000910152565b6000806040838503121561047a57600080fd5b61048383610409565b60208401519092506001600160401b03808211156104a057600080fd5b818501915085601f8301126104b457600080fd5b8151818111156104c6576104c6610425565b604051601f8201601f19908116603f011681019083821181831017156104ee576104ee610425565b8160405282815288602084870101111561050757600080fd5b61051883602083016020880161043b565b80955050505050509250929050565b60006020828403121561053957600080fd5b6102d982610409565b6000825161055481846020870161043b565b9190910192915050565b602081526000825180602084015261057d81604085016020870161043b565b601f01601f19169190910160400192915050565b610344806105a06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d04c336bf1d5ee0f5699fa74b9ed40e936469e51d6973a72d8aab6b3c84de87264736f6c634300080c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65648068a223bc38529864701ed6f372296d3ecb2aa9affe6c91cf94e2ae6dd577c8a26469706673582212202f4c966727c7785c46eb751f6a1a87c6a862a5a848bfe14ca67d1d8cf1ca1b1b64736f6c634300080c0033",
  "bytecodeSha1": "e829fc19b35cee70357e77977afd49a33bdab1e4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLFactory",
  "coverageMap": {
    "branches": {
      "0": {
        "OwnableUpgradeable._checkOwner": {
          "46": [
            1662,
            1685,
            true
          ]
        },
        "OwnableUpgradeable.transferOwnership": {
          "45": [
            2409,
            2431,
            true
          ]
        }
      },
      "1": {
        "CLFactory.Init": {
          "43": [
            4418,
            4431,
            false
          ]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "44": [
            4910,
            4923,
            true
          ]
        }
      },
      "3": {},
      "46": {},
      "48": {},
      "49": {
        "CLFactory.CreateCLH": {
          "37": [
            4629,
            4662,
            true
          ],
          "38": [
            4678,
            4708,
            true
          ],
          "39": [
            4724,
            4760,
            true
          ],
          "40": [
            4825,
            4852,
            false
          ],
          "41": [
            4878,
            4901,
            true
          ],
          "42": [
            4990,
            5434,
            true
          ]
        }
      },
      "55": {},
      "57": {},
      "63": {},
      "64": {}
    },
    "statements": {
      "0": {
        "OwnableUpgradeable.__Ownable_init": {
          "33": [
            1065,
            1091
          ]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "36": [
            1176,
            1208
          ]
        },
        "OwnableUpgradeable._checkOwner": {
          "32": [
            1654,
            1722
          ]
        },
        "OwnableUpgradeable._transferOwnership": {
          "34": [
            2781,
            2798
          ],
          "35": [
            2808,
            2853
          ]
        },
        "OwnableUpgradeable.owner": {
          "0": [
            1506,
            1519
          ]
        },
        "OwnableUpgradeable.renounceOwnership": {
          "21": [
            2135,
            2165
          ]
        },
        "OwnableUpgradeable.transferOwnership": {
          "27": [
            2401,
            2474
          ],
          "28": [
            2484,
            2512
          ]
        }
      },
      "1": {},
      "3": {
        "ContextUpgradeable._msgSender": {
          "31": [
            922,
            939
          ]
        }
      },
      "46": {},
      "48": {},
      "49": {
        "CLFactory.CreateCLH": {
          "1": [
            4607,
            4810
          ],
          "2": [
            4869,
            4938
          ],
          "3": [
            4965,
            5496
          ],
          "4": [
            5511,
            5537
          ],
          "5": [
            6103,
            6111
          ],
          "6": [
            6121,
            6169
          ],
          "7": [
            6179,
            6217
          ],
          "8": [
            6228,
            6283
          ]
        },
        "CLFactory.Init": {
          "11": [
            3083,
            3117
          ],
          "12": [
            3127,
            3161
          ],
          "13": [
            3172,
            3210
          ],
          "14": [
            3220,
            3250
          ],
          "15": [
            3260,
            3298
          ],
          "16": [
            3308,
            3324
          ],
          "17": [
            3335,
            3345
          ],
          "18": [
            3355,
            3396
          ],
          "19": [
            3406,
            3437
          ],
          "20": [
            3448,
            3464
          ]
        },
        "CLFactory.UpdateCLHAPI": {
          "9": [
            7585,
            7601
          ],
          "10": [
            7611,
            7658
          ]
        },
        "CLFactory.UpdateCLLConstructorCLH": {
          "29": [
            6674,
            6712
          ],
          "30": [
            6722,
            6791
          ]
        },
        "CLFactory.UpdateCLLGovernance": {
          "25": [
            7316,
            7346
          ],
          "26": [
            7356,
            7417
          ]
        },
        "CLFactory.UpdateCLLUserManagement": {
          "23": [
            7003,
            7041
          ],
          "24": [
            7051,
            7120
          ]
        },
        "CLFactory.getCLHImplementation": {
          "22": [
            6429,
            6462
          ]
        }
      },
      "55": {},
      "57": {},
      "63": {},
      "64": {}
    }
  },
  "dependencies": [
    "CLBeacon",
    "CLHouseApi",
    "CLProxyCLH",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/ContextUpgradeable",
    "ICLFactory",
    "ICLHouse",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/Initializable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.7.3/OwnableUpgradeable"
  ],
  "deployedBytecode": "60806040523480156200001157600080fd5b5060043610620001395760003560e01c80638da5cb5b11620000bb578063c1e45428116200007a578063c1e45428146200029e578063d742063c14620002b5578063ee7a7d1b14620002cc578063f2fde38b14620002d6578063f6f7a1b314620002ed57600080fd5b80638da5cb5b1462000246578063a327ab691462000258578063a32f93cb146200026c578063a6b6ed3a1462000280578063c0828f63146200028a57600080fd5b8063594034e31162000108578063594034e314620001b3578063624d877414620001c7578063629ed4fe14620001f3578063715018a6146200020a57806386bdfcac146200021457600080fd5b806310790717146200013e578063209bafec146200016f5780634bc3959f1462000188578063529382d5146200019f575b600080fd5b60735462000152906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620001866200018036600462000f5b565b62000304565b005b62000186620001993660046200106c565b6200078f565b60715462000152906001600160a01b031681565b60705462000152906001600160a01b031681565b62000152620001d836600462001093565b6080602052600090815260409020546001600160a01b031681565b6200018662000204366004620010ad565b62000808565b62000186620009b3565b62000237620002253660046200106c565b607f6020526000908152604090205481565b60405190815260200162000166565b6033546001600160a01b031662000152565b60725462000152906001600160a01b031681565b60815462000152906001600160a01b031681565b62000152620009cb565b607e5462000152906001600160a01b031681565b62000186620002af3660046200106c565b62000a41565b62000186620002c63660046200106c565b62000abe565b6200023760655481565b62000186620002e73660046200106c565b62000b37565b62000186620002fe3660046200106c565b62000bb6565b337f0b93889d934070956c00846f50f9a10a747bd194bba2f2e78a86d0c02386fdb1881480620003535750877f16591a696fee5867425b3dee9fc0160a6c1baef77835bc3d204314106d639298145b806200037e5750877fa0786f6450d5fb3298b8425105c1b75e6e01a1ff86cdabea29909cdb0b4c83a7145b620003d05760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420476f7665726e616e6365205479706500000000000000000060448201526064015b60405180910390fd5b6001600160a01b0383161562000552578151604114620004335760405162461bcd60e51b815260206004820152601f60248201527f437265617465434c483a20426164207369676e6174757265206c656e677468006044820152606401620003c7565b6073546001600160a01b0316638b4bccca8c8c8c8c8c600060200201518d600160200201518e600260200201518c8f6000815181106200047757620004776200113c565b6020026020010151308d6040518c63ffffffff1660e01b8152600401620004a99b9a99989796959493929190620011a2565b602060405180830381865afa158015620004c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ed91906200122e565b6001600160a01b0316836001600160a01b0316146200054f5760405162461bcd60e51b815260206004820152601c60248201527f437265617465434c483a20496e76616c6964205369676e6174757265000000006044820152606401620003c7565b50815b6000607e60009054906101000a90046001600160a01b0316828d8d8d8d8d6040518060c00160405280607060009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001306001600160a01b03166001600160a01b03168152602001607360009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020018e6001600160a01b03166001600160a01b031681526020018d6001600160a01b03166001600160a01b03168152602001608160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152508e60405160240162000662989796959493929190620012c8565b60408051601f198184030181529181526020820180516001600160e01b0316635fcbf16d60e11b17905251620006989062000d4a565b620006a592919062001368565b604051809103906000f080158015620006c2573d6000803e3d6000fd5b50606580549192506000620006d78362001396565b91905055508060806000606554815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606554607f6000836001600160a01b03166001600160a01b03168152602001908152602001600020819055507f6510209152e59feb0a7445a97b24bc79bfcb456ca1d8bff1e4980536c4e8cabb818d6065546040516200077993929190620013c0565b60405180910390a1505050505050505050505050565b6200079962000c33565b607380546001600160a01b031981166001600160a01b0384811691821790935560408051606080825260069082015265434c4841504960d01b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a0015b60405180910390a15050565b600054600190610100900460ff161580156200082b575060005460ff8083169116105b620008905760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620003c7565b6000805461ffff191660ff831617610100178155607e80546001600160a01b038087166001600160a01b03199283161790925560818054868416908316179055607180548b8416908316179055607280548a841690831617905560708054898416908316179055607380549288169282169290921790915560658290558180527fae0c3f803428dd501929f276001a4b5fd1d262991bbb98e97b4b7d918a5af6dc80549091169055607f6020527f18b3a2798575d3a428c1f52e616a74b071539854e037e7d7c535365d474f4033556200096962000c8f565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050505050565b620009bd62000c33565b620009c9600062000cc3565b565b607e5460408051635c60da1b60e01b815290516000926001600160a01b031691635c60da1b9160048083019260209291908290030181865afa15801562000a16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a3c91906200122e565b905090565b62000a4b62000c33565b607180546001600160a01b031981166001600160a01b038481169182179093556040805160608082526011908201527010d313155cd95c93585b9859d95b595b9d607a1b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a001620007fc565b62000ac862000c33565b607280546001600160a01b031981166001600160a01b03848116918217909355604080516060808252600d908201526c434c4c476f7665726e616e636560981b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a001620007fc565b62000b4162000c33565b6001600160a01b03811662000ba85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620003c7565b62000bb38162000cc3565b50565b62000bc062000c33565b607080546001600160a01b031981166001600160a01b0384811691821790935560408051606080825260119082015270086989886dedce6e8e4eac6e8dee486989607b1b60808201529390921660208401819052918301529060008051602062001d4d8339815191529060a001620007fc565b6033546001600160a01b03163314620009c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003c7565b600054610100900460ff1662000cb95760405162461bcd60e51b8152600401620003c790620013f6565b620009c962000d15565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1662000d3f5760405162461bcd60e51b8152600401620003c790620013f6565b620009c93362000cc3565b61090b806200144283390190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562000d9a5762000d9a62000d58565b604052919050565b600082601f83011262000db457600080fd5b813567ffffffffffffffff81111562000dd15762000dd162000d58565b62000de6601f8201601f191660200162000d6e565b81815284602083860101111562000dfc57600080fd5b816020850160208301376000918101602001919091529392505050565b8035801515811462000e2a57600080fd5b919050565b600082601f83011262000e4157600080fd5b6040516060810181811067ffffffffffffffff8211171562000e675762000e6762000d58565b60405280606084018581111562000e7d57600080fd5b845b8181101562000e9957803583526020928301920162000e7f565b509195945050505050565b6001600160a01b038116811462000bb357600080fd5b803562000e2a8162000ea4565b600082601f83011262000ed957600080fd5b8135602067ffffffffffffffff82111562000ef85762000ef862000d58565b8160051b62000f0982820162000d6e565b928352848101820192828101908785111562000f2457600080fd5b83870192505b8483101562000f5057823562000f408162000ea4565b8252918301919083019062000f2a565b979650505050505050565b6000806000806000806000806000806101808b8d03121562000f7c57600080fd5b8a3567ffffffffffffffff8082111562000f9557600080fd5b62000fa38e838f0162000da2565b9b5062000fb360208e0162000e19565b9a5062000fc360408e0162000e19565b995060608d0135985062000fdb8e60808f0162000e2f565b975060e08d013591508082111562000ff257600080fd5b620010008e838f0162000ec7565b9650620010116101008e0162000eba565b9550620010226101208e0162000eba565b9450620010336101408e0162000eba565b93506101608d01359150808211156200104b57600080fd5b506200105a8d828e0162000da2565b9150509295989b9194979a5092959850565b6000602082840312156200107f57600080fd5b81356200108c8162000ea4565b9392505050565b600060208284031215620010a657600080fd5b5035919050565b60008060008060008060c08789031215620010c757600080fd5b8635620010d48162000ea4565b95506020870135620010e68162000ea4565b94506040870135620010f88162000ea4565b935060608701356200110a8162000ea4565b925060808701356200111c8162000ea4565b915060a08701356200112e8162000ea4565b809150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156200117a576020818501810151868301820152016200115c565b818111156200118d576000602083870101525b50601f01601f19169290920160200192915050565b6000610160808352620011b88184018f62001152565b8d151560208501528c15156040850152606084018c9052608084018b905260a084018a905260c084018990526001600160a01b0388811660e0860152878116610100860152861661012085015283810361014085015290506200121c818562001152565b9e9d5050505050505050505050505050565b6000602082840312156200124157600080fd5b81516200108c8162000ea4565b8060005b60068110156200127c5781516001600160a01b031684526020938401939091019060010162001252565b50505050565b600081518084526020808501945080840160005b83811015620012bd5781516001600160a01b03168752958201959082019060010162001296565b509495945050505050565b6001600160a01b03891681526101e0602080830182905260009190620012f18483018c62001152565b91508915156040850152881515606085015287608085015260a084018760005b6003811015620013305781518352918301919083019060010162001311565b50505050620013446101008401866200124e565b8281036101c084015262001359818562001282565b9b9a5050505050505050505050565b6001600160a01b03831681526040602082018190526000906200138e9083018462001152565b949350505050565b6000600019821415620013b957634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0384168152606060208201819052600090620013e69083018562001152565b9050826040830152949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe608060405234801561001057600080fd5b5060405161090b38038061090b83398101604081905261002f91610467565b818161003d82826000610046565b50505050610591565b61004f83610111565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100905750805b1561010c5761010a836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fa9190610527565b836102b460201b6100291760201c565b505b505050565b610124816102e060201b6100551760201c565b6101835760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101f7816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e89190610527565b6102e060201b6100551760201c565b61025c5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b606482015260840161017a565b806102937fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102ef60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102d983836040518060600160405280602781526020016108e4602791396102f2565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61035a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161017a565b600080856001600160a01b0316856040516103759190610542565b600060405180830381855af49150503d80600081146103b0576040519150601f19603f3d011682016040523d82523d6000602084013e6103b5565b606091505b5090925090506103c68282866103d0565b9695505050505050565b606083156103df5750816102d9565b8251156103ef5782518084602001fd5b8160405162461bcd60e51b815260040161017a919061055e565b80516001600160a01b038116811461042057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045657818101518382015260200161043e565b8381111561010a5750506000910152565b6000806040838503121561047a57600080fd5b61048383610409565b60208401519092506001600160401b03808211156104a057600080fd5b818501915085601f8301126104b457600080fd5b8151818111156104c6576104c6610425565b604051601f8201601f19908116603f011681019083821181831017156104ee576104ee610425565b8160405282815288602084870101111561050757600080fd5b61051883602083016020880161043b565b80955050505050509250929050565b60006020828403121561053957600080fd5b6102d982610409565b6000825161055481846020870161043b565b9190910192915050565b602081526000825180602084015261057d81604085016020870161043b565b601f01601f19169190910160400192915050565b610344806105a06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d04c336bf1d5ee0f5699fa74b9ed40e936469e51d6973a72d8aab6b3c84de87264736f6c634300080c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65648068a223bc38529864701ed6f372296d3ecb2aa9affe6c91cf94e2ae6dd577c8a26469706673582212202f4c966727c7785c46eb751f6a1a87c6a862a5a848bfe14ca67d1d8cf1ca1b1b64736f6c634300080c0033",
  "deployedSourceMap": "496:7171:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:21;;;;;-1:-1:-1;;;;;1009:21:49;;;;;;-1:-1:-1;;;;;178:32:66;;;160:51;;148:2;133:18;1009:21:49;;;;;;;;4193:2097;;;;;;:::i;:::-;;:::i;:::-;;7481:184;;;;;;:::i;:::-;;:::i;839:32::-;;;;;-1:-1:-1;;;;;839:32:49;;;736;;;;;-1:-1:-1;;;;;736:32:49;;;1383:42;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1383:42:49;;;2796:675;;;;;;:::i;:::-;;:::i;2071:101:0:-;;;:::i;1271:45:49:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6139:25:66;;;6127:2;6112:18;1271:45:49;5993:177:66;1441:85:0;1513:6;;-1:-1:-1;;;;;1513:6:0;1441:85;;937:28:49;;;;;-1:-1:-1;;;;;937:28:49;;;1554:25;;;;;-1:-1:-1;;;;;1554:25:49;;;6355:114;;;:::i;1187:25::-;;;;;-1:-1:-1;;;;;1187:25:49;;;6866:261;;;;;;:::i;:::-;;:::i;7191:233::-;;;;;;:::i;:::-;;:::i;621:21::-;;;;;;2321:198:0;;;;;;:::i;:::-;;:::i;6537:261:49:-;;;;;;:::i;:::-;;:::i;4193:2097::-;4586:10;434:33:48;4629::49;;;:79;;;4699:9;506:30:48;4678::49;4629:79;:131;;;;4751:9;581:36:48;4724::49;4629:131;4607:203;;;;-1:-1:-1;;;4607:203:49;;6602:2:66;4607:203:49;;;6584:21:66;6641:2;6621:18;;;6614:30;6680:25;6660:18;;;6653:53;6723:18;;4607:203:49;;;;;;;;;-1:-1:-1;;;;;4825:27:49;;;4821:727;;4878:10;:17;4899:2;4878:23;4869:69;;;;-1:-1:-1;;;4869:69:49;;6954:2:66;4869:69:49;;;6936:21:66;6993:2;6973:18;;;6966:30;7032:33;7012:18;;;7005:61;7083:18;;4869:69:49;6752:355:66;4869:69:49;5019:6;;-1:-1:-1;;;;;5019:6:49;5007:35;5064:10;5096:13;5131:10;5163:9;5194;5019:6;5194:12;;;;5228:9;5238:1;5228:12;;;;5262:9;5272:1;5262:12;;;;5296:13;5331:15;5347:1;5331:18;;;;;;;;:::i;:::-;;;;;;;5379:4;5406:10;5007:427;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4990:444:49;:13;-1:-1:-1;;;;;4990:444:49;;4965:531;;;;-1:-1:-1;;;4965:531:49;;9320:2:66;4965:531:49;;;9302:21:66;9359:2;9339:18;;;9332:30;9398;9378:18;;;9371:58;9446:18;;4965:531:49;9118:352:66;4965:531:49;-1:-1:-1;5524:13:49;4821:727;5558:17;5615:9;;;;;;;;;-1:-1:-1;;;;;5615:9:49;5771:10;5800;5828:13;5859:10;5887:9;5914;5640:442;;;;;;;;5943:17;;;;;;;;;-1:-1:-1;;;;;5943:17:49;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;;;5640:442:49;;;;;5970:4;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;;;5640:442:49;;;;;5977:6;;;;;;;;;-1:-1:-1;;;;;5977:6:49;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;;;5640:442:49;;;;;5985:11;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;;;5640:442:49;;;;;5998:13;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;;;5640:442:49;;;;;6022:9;;;;;;;;;-1:-1:-1;;;;;6022:9:49;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;;;5640:442:49;;;;6053:15;5640:442;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5640:442:49;;;;;;;;;;;;;;-1:-1:-1;;;;;5640:442:49;-1:-1:-1;;;5640:442:49;;;5578:514;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6103:6:49;:8;;5558:534;;-1:-1:-1;6103:6:49;:8;;;:::i;:::-;;;;;;6159:6;6121;:16;6129:6;;6121:16;;;;;;;;;;;;:48;;;;;-1:-1:-1;;;;;6121:48:49;;;;;-1:-1:-1;;;;;6121:48:49;;;;;;6211:6;;6179:8;:29;6198:6;-1:-1:-1;;;;;6179:29:49;-1:-1:-1;;;;;6179:29:49;;;;;;;;;;;;:38;;;;6233:50;6253:6;6263:10;6275:6;;6233:50;;;;;;;;:::i;:::-;;;;;;;;4555:1735;;4193:2097;;;;;;;;;;:::o;7481:184::-;1334:13:0;:11;:13::i;:::-;7569:6:49::1;::::0;;-1:-1:-1;;;;;;7585:16:49;::::1;-1:-1:-1::0;;;;;7585:16:49;;::::1;::::0;;::::1;::::0;;;7616:42:::1;::::0;;12802:2:66;12784:21;;;12841:1;12821:18;;;12814:29;-1:-1:-1;;;12874:3:66;12859:19;;12852:37;7569:6:49;;;::::1;12994:4:66::0;12979:20;;12972:45;;;13033:18;;;13026:43;7569:6:49;-1:-1:-1;;;;;;;;;;;7616:42:49;12921:3:66;12906:19;7616:42:49::1;;;;;;;;7541:124;7481:184:::0;:::o;2796:675::-;4418:13:1;;342:1:48;;4418:13:1;;;;;4417:14;:40;;;;-1:-1:-1;4435:12:1;;:22;;;;:12;;:22;4417:40;4409:99;;;;-1:-1:-1;;;4409:99:1;;13282:2:66;4409:99:1;;;13264:21:66;13321:2;13301:18;;;13294:30;13360:34;13340:18;;;13333:62;-1:-1:-1;;;13411:18:66;;;13404:44;13465:19;;4409:99:1;13080:410:66;4409:99:1;4518:12;:22;;-1:-1:-1;;4550:20:1;4518:22;;;4550:20;4518:22;4550:20;;;3083:9:49::1;:34:::0;;-1:-1:-1;;;;;3083:34:49;;::::1;-1:-1:-1::0;;;;;;3083:34:49;;::::1;;::::0;;;3127:9:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;3172:17:::1;:38:::0;;;;::::1;::::0;;::::1;;::::0;;3220:13:::1;:30:::0;;;;::::1;::::0;;::::1;;::::0;;3260:17:::1;:38:::0;;;;::::1;::::0;;::::1;;::::0;;3308:6:::1;:16:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3335:6:::1;:10:::0;;;3355:16;;;;:41;;;;::::1;::::0;;3406:8:::1;3355:16;3406:22:::0;;:31;3448:16:::1;:14;:16::i;:::-;4607:5:1::0;4591:21;;-1:-1:-1;;4591:21:1;;;4627:20;;13667:4:66;13655:17;;13637:36;;4627:20:1;;13625:2:66;13610:18;4627:20:1;;;;;;;2796:675:49;;;;;;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;6355:114:49:-;6436:9;;:26;;;-1:-1:-1;;;6436:26:49;;;;6410:7;;-1:-1:-1;;;;;6436:9:49;;:24;;:26;;;;;;;;;;;;;;:9;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6429:33;;6355:114;:::o;6866:261::-;1334:13:0;:11;:13::i;:::-;6976:17:49::1;::::0;;-1:-1:-1;;;;;;7003:38:49;::::1;-1:-1:-1::0;;;;;7003:38:49;;::::1;::::0;;::::1;::::0;;;7056:64:::1;::::0;;13942:2:66;13924:21;;;13981:2;13961:18;;;13954:30;-1:-1:-1;;;14015:3:66;14000:19;;13993:48;6976:17:49;;;::::1;14146:4:66::0;14131:20;;14124:45;;;14185:18;;;14178:43;6976:17:49;-1:-1:-1;;;;;;;;;;;7056:64:49;14073:3:66;14058:19;7056:64:49::1;13684:543:66::0;7191:233:49;1334:13:0;:11;:13::i;:::-;7293::49::1;::::0;;-1:-1:-1;;;;;;7316:30:49;::::1;-1:-1:-1::0;;;;;7316:30:49;;::::1;::::0;;::::1;::::0;;;7361:56:::1;::::0;;14490:2:66;14472:21;;;14529:2;14509:18;;;14502:30;-1:-1:-1;;;14563:3:66;14548:19;;14541:44;7293:13:49;;;::::1;14690:4:66::0;14675:20;;14668:45;;;14729:18;;;14722:43;7293:13:49;-1:-1:-1;;;;;;;;;;;7361:56:49;14617:3:66;14602:19;7361:56:49::1;14232:539:66::0;2321:198:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;14978:2:66;2401:73:0::1;::::0;::::1;14960:21:66::0;15017:2;14997:18;;;14990:30;15056:34;15036:18;;;15029:62;-1:-1:-1;;;15107:18:66;;;15100:36;15153:19;;2401:73:0::1;14776:402:66::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;6537:261:49:-;1334:13:0;:11;:13::i;:::-;6647:17:49::1;::::0;;-1:-1:-1;;;;;;6674:38:49;::::1;-1:-1:-1::0;;;;;6674:38:49;;::::1;::::0;;::::1;::::0;;;6727:64:::1;::::0;;15441:2:66;15423:21;;;15480:2;15460:18;;;15453:30;-1:-1:-1;;;15514:3:66;15499:19;;15492:48;6647:17:49;;;::::1;15645:4:66::0;15630:20;;15623:45;;;15684:18;;;15677:43;6647:17:49;-1:-1:-1;;;;;;;;;;;6727:64:49;15572:3:66;15557:19;6727:64:49::1;15183:543:66::0;1599:130:0;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:3;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;15933:2:66;1654:68:0;;;15915:21:66;;;15952:18;;;15945:30;16011:34;15991:18;;;15984:62;16063:18;;1654:68:0;15731:356:66;1003:95:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;2673:187::-:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1104:111::-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:3::0;1176:18:0::1;:32::i;-1:-1:-1:-:0;;;;;;;;:::o;222:127:66:-;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;354:275;425:2;419:9;490:2;471:13;;-1:-1:-1;;467:27:66;455:40;;525:18;510:34;;546:22;;;507:62;504:88;;;572:18;;:::i;:::-;608:2;601:22;354:275;;-1:-1:-1;354:275:66:o;634:531::-;677:5;730:3;723:4;715:6;711:17;707:27;697:55;;748:1;745;738:12;697:55;784:6;771:20;810:18;806:2;803:26;800:52;;;832:18;;:::i;:::-;876:55;919:2;900:13;;-1:-1:-1;;896:27:66;925:4;892:38;876:55;:::i;:::-;956:2;947:7;940:19;1002:3;995:4;990:2;982:6;978:15;974:26;971:35;968:55;;;1019:1;1016;1009:12;968:55;1084:2;1077:4;1069:6;1065:17;1058:4;1049:7;1045:18;1032:55;1132:1;1107:16;;;1125:4;1103:27;1096:38;;;;1111:7;634:531;-1:-1:-1;;;634:531:66:o;1170:160::-;1235:20;;1291:13;;1284:21;1274:32;;1264:60;;1320:1;1317;1310:12;1264:60;1170:160;;;:::o;1335:646::-;1385:5;1438:3;1431:4;1423:6;1419:17;1415:27;1405:55;;1456:1;1453;1446:12;1405:55;1489:2;1483:9;1531:2;1523:6;1519:15;1600:6;1588:10;1585:22;1564:18;1552:10;1549:34;1546:62;1543:88;;;1611:18;;:::i;:::-;1647:2;1640:22;1682:6;1723:2;1711:15;;1738;;;1735:35;;;1766:1;1763;1756:12;1735:35;1790:6;1805:146;1821:6;1816:3;1813:15;1805:146;;;1889:17;;1877:30;;1936:4;1927:14;;;;1838;1805:146;;;-1:-1:-1;1969:6:66;;1335:646;-1:-1:-1;;;;;1335:646:66:o;1986:131::-;-1:-1:-1;;;;;2061:31:66;;2051:42;;2041:70;;2107:1;2104;2097:12;2122:134;2190:20;;2219:31;2190:20;2219:31;:::i;2261:787::-;2315:5;2368:3;2361:4;2353:6;2349:17;2345:27;2335:55;;2386:1;2383;2376:12;2335:55;2422:6;2409:20;2448:4;2471:18;2467:2;2464:26;2461:52;;;2493:18;;:::i;:::-;2539:2;2536:1;2532:10;2562:28;2586:2;2582;2578:11;2562:28;:::i;:::-;2624:15;;;2694;;;2690:24;;;2655:12;;;;2726:15;;;2723:35;;;2754:1;2751;2744:12;2723:35;2790:2;2782:6;2778:15;2767:26;;2802:217;2818:6;2813:3;2810:15;2802:217;;;2898:3;2885:17;2915:31;2940:5;2915:31;:::i;:::-;2959:18;;2835:12;;;;2997;;;;2802:217;;;3037:5;2261:787;-1:-1:-1;;;;;;;2261:787:66:o;3053:1313::-;3254:6;3262;3270;3278;3286;3294;3302;3310;3318;3326;3379:3;3367:9;3358:7;3354:23;3350:33;3347:53;;;3396:1;3393;3386:12;3347:53;3436:9;3423:23;3465:18;3506:2;3498:6;3495:14;3492:34;;;3522:1;3519;3512:12;3492:34;3545:50;3587:7;3578:6;3567:9;3563:22;3545:50;:::i;:::-;3535:60;;3614:35;3645:2;3634:9;3630:18;3614:35;:::i;:::-;3604:45;;3668:35;3699:2;3688:9;3684:18;3668:35;:::i;:::-;3658:45;;3750:2;3739:9;3735:18;3722:32;3712:42;;3773:54;3819:7;3813:3;3802:9;3798:19;3773:54;:::i;:::-;3763:64;;3880:3;3869:9;3865:19;3852:33;3836:49;;3910:2;3900:8;3897:16;3894:36;;;3926:1;3923;3916:12;3894:36;3949:63;4004:7;3993:8;3982:9;3978:24;3949:63;:::i;:::-;3939:73;;4031:39;4065:3;4054:9;4050:19;4031:39;:::i;:::-;4021:49;;4089:39;4123:3;4112:9;4108:19;4089:39;:::i;:::-;4079:49;;4147:39;4181:3;4170:9;4166:19;4147:39;:::i;:::-;4137:49;;4239:3;4228:9;4224:19;4211:33;4195:49;;4269:2;4259:8;4256:16;4253:36;;;4285:1;4282;4275:12;4253:36;;4308:52;4352:7;4341:8;4330:9;4326:24;4308:52;:::i;:::-;4298:62;;;3053:1313;;;;;;;;;;;;;:::o;4371:247::-;4430:6;4483:2;4471:9;4462:7;4458:23;4454:32;4451:52;;;4499:1;4496;4489:12;4451:52;4538:9;4525:23;4557:31;4582:5;4557:31;:::i;:::-;4607:5;4371:247;-1:-1:-1;;;4371:247:66:o;4623:180::-;4682:6;4735:2;4723:9;4714:7;4710:23;4706:32;4703:52;;;4751:1;4748;4741:12;4703:52;-1:-1:-1;4774:23:66;;4623:180;-1:-1:-1;4623:180:66:o;5033:955::-;5137:6;5145;5153;5161;5169;5177;5230:3;5218:9;5209:7;5205:23;5201:33;5198:53;;;5247:1;5244;5237:12;5198:53;5286:9;5273:23;5305:31;5330:5;5305:31;:::i;:::-;5355:5;-1:-1:-1;5412:2:66;5397:18;;5384:32;5425:33;5384:32;5425:33;:::i;:::-;5477:7;-1:-1:-1;5536:2:66;5521:18;;5508:32;5549:33;5508:32;5549:33;:::i;:::-;5601:7;-1:-1:-1;5660:2:66;5645:18;;5632:32;5673:33;5632:32;5673:33;:::i;:::-;5725:7;-1:-1:-1;5784:3:66;5769:19;;5756:33;5798;5756;5798;:::i;:::-;5850:7;-1:-1:-1;5909:3:66;5894:19;;5881:33;5923;5881;5923;:::i;:::-;5975:7;5965:17;;;5033:955;;;;;;;;:::o;7112:127::-;7173:10;7168:3;7164:20;7161:1;7154:31;7204:4;7201:1;7194:15;7228:4;7225:1;7218:15;7244:472;7286:3;7324:5;7318:12;7351:6;7346:3;7339:19;7376:1;7386:162;7400:6;7397:1;7394:13;7386:162;;;7462:4;7518:13;;;7514:22;;7508:29;7490:11;;;7486:20;;7479:59;7415:12;7386:162;;;7566:6;7563:1;7560:13;7557:87;;;7632:1;7625:4;7616:6;7611:3;7607:16;7603:27;7596:38;7557:87;-1:-1:-1;7698:2:66;7677:15;-1:-1:-1;;7673:29:66;7664:39;;;;7705:4;7660:50;;7244:472;-1:-1:-1;;7244:472:66:o;7721:1136::-;8120:4;8149:3;8179:2;8168:9;8161:21;8205:45;8246:2;8235:9;8231:18;8223:6;8205:45;:::i;:::-;8293:14;;8286:22;8281:2;8266:18;;8259:50;8352:14;;8345:22;8340:2;8325:18;;8318:50;8399:2;8384:18;;8377:34;;;8442:3;8427:19;;8420:35;;;8486:3;8471:19;;8464:35;;;8530:3;8515:19;;8508:35;;;-1:-1:-1;;;;;8618:15:66;;;8612:3;8597:19;;8590:44;8671:15;;;8665:3;8650:19;;8643:44;8724:15;;8718:3;8703:19;;8696:44;8777:22;;;8771:3;8756:19;;8749:51;8191:59;-1:-1:-1;8817:34:66;8191:59;8835:7;8817:34;:::i;:::-;8809:42;7721:1136;-1:-1:-1;;;;;;;;;;;;;;7721:1136:66:o;8862:251::-;8932:6;8985:2;8973:9;8964:7;8960:23;8956:32;8953:52;;;9001:1;8998;8991:12;8953:52;9033:9;9027:16;9052:31;9077:5;9052:31;:::i;9475:352::-;9568:5;9591:1;9601:220;9615:4;9612:1;9609:11;9601:220;;;9678:13;;-1:-1:-1;;;;;9674:39:66;9662:52;;9737:4;9761:12;;;;9796:15;;;;9710:1;9628:9;9601:220;;;9605:3;;9475:352;;:::o;9832:461::-;9885:3;9923:5;9917:12;9950:6;9945:3;9938:19;9976:4;10005:2;10000:3;9996:12;9989:19;;10042:2;10035:5;10031:14;10063:1;10073:195;10087:6;10084:1;10081:13;10073:195;;;10152:13;;-1:-1:-1;;;;;10148:39:66;10136:52;;10208:12;;;;10243:15;;;;10184:1;10102:9;10073:195;;;-1:-1:-1;10284:3:66;;9832:461;-1:-1:-1;;;;;9832:461:66:o;10298:1291::-;-1:-1:-1;;;;;10795:32:66;;10777:51;;10765:3;10847:2;10865:18;;;10858:30;;;10736:4;;10765:3;10911:45;10937:18;;;10929:6;10911:45;:::i;:::-;10897:59;;11006:6;10999:14;10992:22;10987:2;10976:9;10972:18;10965:50;11065:6;11058:14;11051:22;11046:2;11035:9;11031:18;11024:50;11111:6;11105:3;11094:9;11090:19;11083:35;11153:3;11142:9;11138:19;11199:6;11223:1;11233:167;11247:4;11244:1;11241:11;11233:167;;;11306:13;;11294:26;;11340:12;;;;11375:15;;;;11267:1;11260:9;11233:167;;;11237:3;;;;11409:53;11457:3;11446:9;11442:19;11434:6;11409:53;:::i;:::-;11511:9;11503:6;11499:22;11493:3;11482:9;11478:19;11471:51;11539:44;11576:6;11568;11539:44;:::i;:::-;11531:52;10298:1291;-1:-1:-1;;;;;;;;;;;10298:1291:66:o;11594:315::-;-1:-1:-1;;;;;11769:32:66;;11751:51;;11838:2;11833;11818:18;;11811:30;;;-1:-1:-1;;11858:45:66;;11884:18;;11876:6;11858:45;:::i;:::-;11850:53;11594:315;-1:-1:-1;;;;11594:315:66:o;11914:232::-;11953:3;-1:-1:-1;;11974:17:66;;11971:140;;;12033:10;12028:3;12024:20;12021:1;12014:31;12068:4;12065:1;12058:15;12096:4;12093:1;12086:15;11971:140;-1:-1:-1;12138:1:66;12127:13;;11914:232::o;12151:388::-;-1:-1:-1;;;;;12356:32:66;;12338:51;;12425:2;12420;12405:18;;12398:30;;;-1:-1:-1;;12445:45:66;;12471:18;;12463:6;12445:45;:::i;:::-;12437:53;;12526:6;12521:2;12510:9;12506:18;12499:34;12151:388;;;;;;:::o;16092:407::-;16294:2;16276:21;;;16333:2;16313:18;;;16306:30;16372:34;16367:2;16352:18;;16345:62;-1:-1:-1;;;16438:2:66;16423:18;;16416:41;16489:3;16474:19;;16092:407::o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "details": "This contract is the standard way to create CLH",
    "events": {
      "evtNewCLH(address,string,uint256)": {
        "params": {
          "houseAddr": "Address of the created house",
          "houseId": "Id of CLH of the created house",
          "houseName": "Name of the created house"
        }
      },
      "evtUpdateCLC(string,address,address)": {
        "params": {
          "CLCName": "Name of contract var",
          "newAddress": "New Address value of the var",
          "oldAddress": "Old Address value of the var"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "CLHAPI()": {
        "notice": "Contract CLHouse API"
      },
      "CLLConstructorCLH()": {
        "notice": "Contract with the CLH Constructor logic"
      },
      "CLLGovernance()": {
        "notice": "Contract with the functions for Governance"
      },
      "CLLUserManagement()": {
        "notice": "Contract with the functions for user management"
      },
      "CreateCLH(string,bool,bool,bytes32,uint256[3],address[],address,address,address,bytes)": {
        "details": "Some parameters wil be ignored depending on the governance model",
        "notice": "Deploy a new CLHouse",
        "params": {
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_gnosisSafe": "Contract address of SAFE",
          "_govModel": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRules": "Array for goverment rules see `enum gRule`",
          "_houseName": "Name of the CLH",
          "_houseOpen": "If is set to 1, the CLH is set to open",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_signature": "Signature for validate OffChain Tx",
          "_signerWallet": "Wallet address of the signer for OffChain Tx"
        }
      },
      "Init(address,address,address,address,address,address)": {
        "details": "The constructor create a default CLH with the houseId #0",
        "notice": "Config the CLFactory with the CL Logic Contracts",
        "params": {
          "_CLHAPI": "Address of CLHAPI Contract",
          "_CLLConstructorCLH": "Address Contract with the Constructor logic",
          "_CLLGovernance": "Address Contract Logic for governance",
          "_CLLUserManagement": "Address Contract Logic for user management",
          "_beaconCLH": "Address Beacon CLH Contract",
          "_beaconNFT": "Address Beacon NFT Contract"
        }
      },
      "UpdateCLHAPI(address)": {
        "notice": "Update the CLHAPI contract Address"
      },
      "UpdateCLLConstructorCLH(address)": {
        "notice": "Update the CLLConstructorCLH contract Address"
      },
      "UpdateCLLGovernance(address)": {
        "notice": "Update the CLLGovernance contract Address"
      },
      "UpdateCLLUserManagement(address)": {
        "notice": "Update the CLLUserManagement contract Address"
      },
      "beaconCLH()": {
        "notice": "Contract Object of the beacon (store the add)"
      },
      "beaconNFT()": {
        "notice": "Contract Object of the beacon (store the add)"
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "getCLHImplementation()": {
        "notice": "Get the address of the CLH contract logic"
      },
      "mapCLH(uint256)": {
        "notice": "Mapping to store all the created houses"
      },
      "mapIdCLH(address)": {
        "notice": "Relation houseAddr with houseId"
      },
      "numCLH()": {
        "notice": "Store the number of houses created"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "Create and config CLHouses",
    "stateVariables": {
      "beaconCLH": {
        "details": "The beacon store the updated address of CLH"
      },
      "beaconNFT": {
        "details": "The beacon store the updated address of CLHNFT"
      }
    },
    "title": "Crypto League House Factory",
    "version": 1
  },
  "offset": [
    496,
    7667
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x139 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0xBB JUMPI DUP1 PUSH4 0xC1E45428 GT PUSH3 0x7A JUMPI DUP1 PUSH4 0xC1E45428 EQ PUSH3 0x29E JUMPI DUP1 PUSH4 0xD742063C EQ PUSH3 0x2B5 JUMPI DUP1 PUSH4 0xEE7A7D1B EQ PUSH3 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x2D6 JUMPI DUP1 PUSH4 0xF6F7A1B3 EQ PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x246 JUMPI DUP1 PUSH4 0xA327AB69 EQ PUSH3 0x258 JUMPI DUP1 PUSH4 0xA32F93CB EQ PUSH3 0x26C JUMPI DUP1 PUSH4 0xA6B6ED3A EQ PUSH3 0x280 JUMPI DUP1 PUSH4 0xC0828F63 EQ PUSH3 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x594034E3 GT PUSH3 0x108 JUMPI DUP1 PUSH4 0x594034E3 EQ PUSH3 0x1B3 JUMPI DUP1 PUSH4 0x624D8774 EQ PUSH3 0x1C7 JUMPI DUP1 PUSH4 0x629ED4FE EQ PUSH3 0x1F3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x20A JUMPI DUP1 PUSH4 0x86BDFCAC EQ PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10790717 EQ PUSH3 0x13E JUMPI DUP1 PUSH4 0x209BAFEC EQ PUSH3 0x16F JUMPI DUP1 PUSH4 0x4BC3959F EQ PUSH3 0x188 JUMPI DUP1 PUSH4 0x529382D5 EQ PUSH3 0x19F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x73 SLOAD PUSH3 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x186 PUSH3 0x180 CALLDATASIZE PUSH1 0x4 PUSH3 0xF5B JUMP JUMPDEST PUSH3 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x186 PUSH3 0x199 CALLDATASIZE PUSH1 0x4 PUSH3 0x106C JUMP JUMPDEST PUSH3 0x78F JUMP JUMPDEST PUSH1 0x71 SLOAD PUSH3 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD PUSH3 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x152 PUSH3 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH3 0x1093 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x186 PUSH3 0x204 CALLDATASIZE PUSH1 0x4 PUSH3 0x10AD JUMP JUMPDEST PUSH3 0x808 JUMP JUMPDEST PUSH3 0x186 PUSH3 0x9B3 JUMP JUMPDEST PUSH3 0x237 PUSH3 0x225 CALLDATASIZE PUSH1 0x4 PUSH3 0x106C JUMP JUMPDEST PUSH1 0x7F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x166 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x152 JUMP JUMPDEST PUSH1 0x72 SLOAD PUSH3 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x81 SLOAD PUSH3 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x152 PUSH3 0x9CB JUMP JUMPDEST PUSH1 0x7E SLOAD PUSH3 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x186 PUSH3 0x2AF CALLDATASIZE PUSH1 0x4 PUSH3 0x106C JUMP JUMPDEST PUSH3 0xA41 JUMP JUMPDEST PUSH3 0x186 PUSH3 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH3 0x106C JUMP JUMPDEST PUSH3 0xABE JUMP JUMPDEST PUSH3 0x237 PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x186 PUSH3 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH3 0x106C JUMP JUMPDEST PUSH3 0xB37 JUMP JUMPDEST PUSH3 0x186 PUSH3 0x2FE CALLDATASIZE PUSH1 0x4 PUSH3 0x106C JUMP JUMPDEST PUSH3 0xBB6 JUMP JUMPDEST CALLER PUSH32 0xB93889D934070956C00846F50F9A10A747BD194BBA2F2E78A86D0C02386FDB1 DUP9 EQ DUP1 PUSH3 0x353 JUMPI POP DUP8 PUSH32 0x16591A696FEE5867425B3DEE9FC0160A6C1BAEF77835BC3D204314106D639298 EQ JUMPDEST DUP1 PUSH3 0x37E JUMPI POP DUP8 PUSH32 0xA0786F6450D5FB3298B8425105C1B75E6E01A1FF86CDABEA29909CDB0B4C83A7 EQ JUMPDEST PUSH3 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420476F7665726E616E63652054797065000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH3 0x552 JUMPI DUP2 MLOAD PUSH1 0x41 EQ PUSH3 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465434C483A20426164207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x73 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8B4BCCCA DUP13 DUP13 DUP13 DUP13 DUP13 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP14 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP15 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP13 DUP16 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x477 JUMPI PUSH3 0x477 PUSH3 0x113C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ADDRESS DUP14 PUSH1 0x40 MLOAD DUP13 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4A9 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x11A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4ED SWAP2 SWAP1 PUSH3 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465434C483A20496E76616C6964205369676E617475726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x3C7 JUMP JUMPDEST POP DUP2 JUMPDEST PUSH1 0x0 PUSH1 0x7E PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP14 DUP14 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x70 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x73 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x81 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP15 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x662 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x12C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5FCBF16D PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH3 0x698 SWAP1 PUSH3 0xD4A JUMP JUMPDEST PUSH3 0x6A5 SWAP3 SWAP2 SWAP1 PUSH3 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x65 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH3 0x6D7 DUP4 PUSH3 0x1396 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x80 PUSH1 0x0 PUSH1 0x65 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x65 SLOAD PUSH1 0x7F PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x6510209152E59FEB0A7445A97B24BC79BFCB456CA1D8BFF1E4980536C4E8CABB DUP2 DUP14 PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH3 0x779 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x799 PUSH3 0xC33 JUMP JUMPDEST PUSH1 0x73 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x434C48415049 PUSH1 0xD0 SHL PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1D4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x82B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP2 AND LT JUMPDEST PUSH3 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0xFF DUP4 AND OR PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x7E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x81 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x71 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x72 DUP1 SLOAD DUP11 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x70 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x73 DUP1 SLOAD SWAP3 DUP9 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x65 DUP3 SWAP1 SSTORE DUP2 DUP1 MSTORE PUSH32 0xAE0C3F803428DD501929F276001A4B5FD1D262991BBB98E97B4B7D918A5AF6DC DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x7F PUSH1 0x20 MSTORE PUSH32 0x18B3A2798575D3A428C1F52E616A74B071539854E037E7D7C535365D474F4033 SSTORE PUSH3 0x969 PUSH3 0xC8F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x9BD PUSH3 0xC33 JUMP JUMPDEST PUSH3 0x9C9 PUSH1 0x0 PUSH3 0xCC3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C60DA1B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xA3C SWAP2 SWAP1 PUSH3 0x122E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xA4B PUSH3 0xC33 JUMP JUMPDEST PUSH1 0x71 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x10D313155CD95C93585B9859D95B595B9D PUSH1 0x7A SHL PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1D4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xA0 ADD PUSH3 0x7FC JUMP JUMPDEST PUSH3 0xAC8 PUSH3 0xC33 JUMP JUMPDEST PUSH1 0x72 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x434C4C476F7665726E616E6365 PUSH1 0x98 SHL PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1D4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xA0 ADD PUSH3 0x7FC JUMP JUMPDEST PUSH3 0xB41 PUSH3 0xC33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0xBB3 DUP2 PUSH3 0xCC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0xBC0 PUSH3 0xC33 JUMP JUMPDEST PUSH1 0x70 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x86989886DEDCE6E8E4EAC6E8DEE486989 PUSH1 0x7B SHL PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1D4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xA0 ADD PUSH3 0x7FC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0xCB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3C7 SWAP1 PUSH3 0x13F6 JUMP JUMPDEST PUSH3 0x9C9 PUSH3 0xD15 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3C7 SWAP1 PUSH3 0x13F6 JUMP JUMPDEST PUSH3 0x9C9 CALLER PUSH3 0xCC3 JUMP JUMPDEST PUSH2 0x90B DUP1 PUSH3 0x1442 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0xD9A JUMPI PUSH3 0xD9A PUSH3 0xD58 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xDB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xDD1 JUMPI PUSH3 0xDD1 PUSH3 0xD58 JUMP JUMPDEST PUSH3 0xDE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH3 0xD6E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH3 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0xE2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE67 JUMPI PUSH3 0xE67 PUSH3 0xD58 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH3 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xE99 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0xE7F JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH3 0xE2A DUP2 PUSH3 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xEF8 JUMPI PUSH3 0xEF8 PUSH3 0xD58 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH3 0xF09 DUP3 DUP3 ADD PUSH3 0xD6E JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH3 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH3 0xF50 JUMPI DUP3 CALLDATALOAD PUSH3 0xF40 DUP2 PUSH3 0xEA4 JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH3 0xF2A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP12 DUP14 SUB SLT ISZERO PUSH3 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0xF95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xFA3 DUP15 DUP4 DUP16 ADD PUSH3 0xDA2 JUMP JUMPDEST SWAP12 POP PUSH3 0xFB3 PUSH1 0x20 DUP15 ADD PUSH3 0xE19 JUMP JUMPDEST SWAP11 POP PUSH3 0xFC3 PUSH1 0x40 DUP15 ADD PUSH3 0xE19 JUMP JUMPDEST SWAP10 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP9 POP PUSH3 0xFDB DUP15 PUSH1 0x80 DUP16 ADD PUSH3 0xE2F JUMP JUMPDEST SWAP8 POP PUSH1 0xE0 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xFF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1000 DUP15 DUP4 DUP16 ADD PUSH3 0xEC7 JUMP JUMPDEST SWAP7 POP PUSH3 0x1011 PUSH2 0x100 DUP15 ADD PUSH3 0xEBA JUMP JUMPDEST SWAP6 POP PUSH3 0x1022 PUSH2 0x120 DUP15 ADD PUSH3 0xEBA JUMP JUMPDEST SWAP5 POP PUSH3 0x1033 PUSH2 0x140 DUP15 ADD PUSH3 0xEBA JUMP JUMPDEST SWAP4 POP PUSH2 0x160 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x104B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x105A DUP14 DUP3 DUP15 ADD PUSH3 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0x108C DUP2 PUSH3 0xEA4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x10A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x10C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH3 0x10D4 DUP2 PUSH3 0xEA4 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH3 0x10E6 DUP2 PUSH3 0xEA4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH3 0x10F8 DUP2 PUSH3 0xEA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH3 0x110A DUP2 PUSH3 0xEA4 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH3 0x111C DUP2 PUSH3 0xEA4 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH3 0x112E DUP2 PUSH3 0xEA4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x117A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x115C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x118D JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP1 DUP4 MSTORE PUSH3 0x11B8 DUP2 DUP5 ADD DUP16 PUSH3 0x1152 JUMP JUMPDEST DUP14 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP13 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD DUP13 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE DUP8 DUP2 AND PUSH2 0x100 DUP7 ADD MSTORE DUP7 AND PUSH2 0x120 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH2 0x140 DUP6 ADD MSTORE SWAP1 POP PUSH3 0x121C DUP2 DUP6 PUSH3 0x1152 JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x108C DUP2 PUSH3 0xEA4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 LT ISZERO PUSH3 0x127C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x12BD JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x1296 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH2 0x1E0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH3 0x12F1 DUP5 DUP4 ADD DUP13 PUSH3 0x1152 JUMP JUMPDEST SWAP2 POP DUP10 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP8 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP8 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH3 0x1330 JUMPI DUP2 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x1311 JUMP JUMPDEST POP POP POP POP PUSH3 0x1344 PUSH2 0x100 DUP5 ADD DUP7 PUSH3 0x124E JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x1C0 DUP5 ADD MSTORE PUSH3 0x1359 DUP2 DUP6 PUSH3 0x1282 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x138E SWAP1 DUP4 ADD DUP5 PUSH3 0x1152 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x13B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x13E6 SWAP1 DUP4 ADD DUP6 PUSH3 0x1152 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x90B CODESIZE SUB DUP1 PUSH2 0x90B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x467 JUMP JUMPDEST DUP2 DUP2 PUSH2 0x3D DUP3 DUP3 PUSH1 0x0 PUSH2 0x46 JUMP JUMPDEST POP POP POP POP PUSH2 0x591 JUMP JUMPDEST PUSH2 0x4F DUP4 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x90 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x10C JUMPI PUSH2 0x10A DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x527 JUMP JUMPDEST DUP4 PUSH2 0x2B4 PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x2E0 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F7 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x17A JUMP JUMPDEST DUP1 PUSH2 0x293 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH1 0x0 SHL PUSH2 0x2EF PUSH1 0x20 SHL PUSH2 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2D9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E4 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x17A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3C6 DUP3 DUP3 DUP7 PUSH2 0x3D0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3DF JUMPI POP DUP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3EF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x456 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x43E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP4 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x4C6 JUMPI PUSH2 0x4C6 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4EE PUSH2 0x425 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x518 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x43B JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D9 DUP3 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x554 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x43B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x57D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x43B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x344 DUP1 PUSH2 0x5A0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x23F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1FC DUP3 DUP3 DUP7 PUSH2 0x206 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x215 JUMPI POP DUP2 PUSH2 0x4E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x225 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x283 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2AA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x268 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220D04C33 PUSH12 0xF1D5EE0F5699FA74B9ED40E9 CALLDATASIZE CHAINID SWAP15 MLOAD 0xD6 SWAP8 GASPRICE PUSH19 0xD8AAB6B3C84DE87264736F6C634300080C0033 COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65648068 LOG2 0x23 0xBC CODESIZE MSTORE SWAP9 PUSH5 0x701ED6F372 0x29 PUSH14 0x3ECB2AA9AFFE6C91CF94E2AE6DD5 PUSH24 0xC8A26469706673582212202F4C966727C7785C46EB751F6A BYTE DUP8 0xC6 0xA8 PUSH3 0xA5A848 0xBF 0xE1 0x4C 0xA6 PUSH30 0x1D8CF1CA1B1B64736F6C634300080C003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "5": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "CALLVALUE",
      "path": "49"
    },
    "6": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "7": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "8": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x11"
    },
    "12": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "13": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "16": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "REVERT",
      "path": "49"
    },
    "17": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "18": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "POP",
      "path": "49"
    },
    "19": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "21": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "22": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "LT",
      "path": "49"
    },
    "23": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x139"
    },
    "27": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "28": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "CALLDATALOAD",
      "path": "49"
    },
    "31": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "33": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "SHR",
      "path": "49"
    },
    "34": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "35": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x8DA5CB5B"
    },
    "40": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "GT",
      "path": "49"
    },
    "41": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xBB"
    },
    "45": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "46": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "47": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xC1E45428"
    },
    "52": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "GT",
      "path": "49"
    },
    "53": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x7A"
    },
    "57": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "58": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "59": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xC1E45428"
    },
    "64": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "65": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x29E"
    },
    "69": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "70": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "71": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xD742063C"
    },
    "76": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "77": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2B5"
    },
    "81": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "82": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "83": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xEE7A7D1B"
    },
    "88": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "89": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2CC"
    },
    "93": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "94": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "95": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xF2FDE38B"
    },
    "100": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "101": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2D6"
    },
    "105": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "106": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "107": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xF6F7A1B3"
    },
    "112": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "113": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2ED"
    },
    "117": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "118": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "121": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "REVERT",
      "path": "49"
    },
    "122": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "123": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "124": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x8DA5CB5B"
    },
    "129": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "130": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x246"
    },
    "134": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "135": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "136": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA327AB69"
    },
    "141": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "142": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x258"
    },
    "146": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "147": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "148": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA32F93CB"
    },
    "153": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "154": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x26C"
    },
    "158": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "159": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "160": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xA6B6ED3A"
    },
    "165": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "166": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x280"
    },
    "170": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "171": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "172": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xC0828F63"
    },
    "177": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "178": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x28A"
    },
    "182": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "183": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "185": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "186": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "REVERT",
      "path": "49"
    },
    "187": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "188": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "189": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x594034E3"
    },
    "194": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "GT",
      "path": "49"
    },
    "195": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x108"
    },
    "199": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "200": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "201": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x594034E3"
    },
    "206": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "207": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1B3"
    },
    "211": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "212": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "213": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x624D8774"
    },
    "218": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "219": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1C7"
    },
    "223": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "224": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "225": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x629ED4FE"
    },
    "230": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "231": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1F3"
    },
    "235": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "236": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "237": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x715018A6"
    },
    "242": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "243": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x20A"
    },
    "247": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "248": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "249": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x86BDFCAC"
    },
    "254": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "255": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x214"
    },
    "259": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "260": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "263": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "REVERT",
      "path": "49"
    },
    "264": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "265": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "266": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x10790717"
    },
    "271": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "272": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x13E"
    },
    "276": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "277": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "278": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x209BAFEC"
    },
    "283": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "284": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x16F"
    },
    "288": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "289": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "290": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x4BC3959F"
    },
    "295": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "296": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x188"
    },
    "300": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "301": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "302": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x529382D5"
    },
    "307": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "EQ",
      "path": "49"
    },
    "308": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x19F"
    },
    "312": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "313": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "314": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "DUP1",
      "path": "49"
    },
    "317": {
      "first_revert": true,
      "fn": null,
      "offset": [
        496,
        7667
      ],
      "op": "REVERT",
      "path": "49"
    },
    "318": {
      "offset": [
        1009,
        1030
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "319": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x73"
    },
    "321": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "322": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "326": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "333": {
      "op": "SHL"
    },
    "334": {
      "op": "SUB"
    },
    "335": {
      "offset": [
        1009,
        1030
      ],
      "op": "AND",
      "path": "49"
    },
    "336": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "DUP2",
      "path": "49"
    },
    "337": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "JUMP",
      "path": "49"
    },
    "338": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "339": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "341": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "348": {
      "op": "SHL"
    },
    "349": {
      "op": "SUB"
    },
    "350": {
      "op": "SWAP1"
    },
    "351": {
      "op": "SWAP2"
    },
    "352": {
      "op": "AND"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "offset": [
        1009,
        1030
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "359": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "361": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "362": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "DUP1",
      "path": "49"
    },
    "363": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "364": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "SUB",
      "path": "49"
    },
    "365": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "366": {
      "fn": null,
      "offset": [
        1009,
        1030
      ],
      "op": "RETURN",
      "path": "49"
    },
    "367": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "368": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x186"
    },
    "372": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x180"
    },
    "376": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "377": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "379": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xF5B"
    },
    "383": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMP",
      "path": "49"
    },
    "384": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "385": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x304"
    },
    "389": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMP",
      "path": "49"
    },
    "390": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "391": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "STOP",
      "path": "49"
    },
    "392": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "393": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x186"
    },
    "397": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x199"
    },
    "401": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "402": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "404": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x106C"
    },
    "408": {
      "fn": "CLFactory.UpdateCLHAPI",
      "jump": "i",
      "offset": [
        7481,
        7665
      ],
      "op": "JUMP",
      "path": "49"
    },
    "409": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "410": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x78F"
    },
    "414": {
      "fn": "CLFactory.UpdateCLHAPI",
      "jump": "i",
      "offset": [
        7481,
        7665
      ],
      "op": "JUMP",
      "path": "49"
    },
    "415": {
      "offset": [
        839,
        871
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "416": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        839,
        871
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x71"
    },
    "418": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        839,
        871
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "419": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        839,
        871
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "423": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        839,
        871
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "offset": [
        839,
        871
      ],
      "op": "AND",
      "path": "49"
    },
    "433": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        839,
        871
      ],
      "op": "DUP2",
      "path": "49"
    },
    "434": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        839,
        871
      ],
      "op": "JUMP",
      "path": "49"
    },
    "435": {
      "offset": [
        736,
        768
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "436": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        736,
        768
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x70"
    },
    "438": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        736,
        768
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "439": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        736,
        768
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "443": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        736,
        768
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "450": {
      "op": "SHL"
    },
    "451": {
      "op": "SUB"
    },
    "452": {
      "offset": [
        736,
        768
      ],
      "op": "AND",
      "path": "49"
    },
    "453": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        736,
        768
      ],
      "op": "DUP2",
      "path": "49"
    },
    "454": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        736,
        768
      ],
      "op": "JUMP",
      "path": "49"
    },
    "455": {
      "offset": [
        1383,
        1425
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "456": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "460": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1D8"
    },
    "464": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "465": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "467": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1093"
    },
    "471": {
      "fn": "CLFactory.UpdateCLHAPI",
      "jump": "i",
      "offset": [
        1383,
        1425
      ],
      "op": "JUMP",
      "path": "49"
    },
    "472": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "473": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x80"
    },
    "475": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "477": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "478": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "480": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "481": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "DUP2",
      "path": "49"
    },
    "482": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "483": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "485": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "486": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "487": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "494": {
      "op": "SHL"
    },
    "495": {
      "op": "SUB"
    },
    "496": {
      "offset": [
        1383,
        1425
      ],
      "op": "AND",
      "path": "49"
    },
    "497": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "DUP2",
      "path": "49"
    },
    "498": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1383,
        1425
      ],
      "op": "JUMP",
      "path": "49"
    },
    "499": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "500": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x186"
    },
    "504": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x204"
    },
    "508": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "509": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "511": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x10AD"
    },
    "515": {
      "fn": "CLFactory.Init",
      "jump": "i",
      "offset": [
        2796,
        3471
      ],
      "op": "JUMP",
      "path": "49"
    },
    "516": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "517": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x808"
    },
    "521": {
      "fn": "CLFactory.Init",
      "jump": "i",
      "offset": [
        2796,
        3471
      ],
      "op": "JUMP",
      "path": "49"
    },
    "522": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2071,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "523": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2071,
        2172
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x186"
    },
    "527": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2071,
        2172
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x9B3"
    },
    "531": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        2071,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "532": {
      "offset": [
        1271,
        1316
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "533": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x237"
    },
    "537": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x225"
    },
    "541": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "542": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "544": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x106C"
    },
    "548": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        1271,
        1316
      ],
      "op": "JUMP",
      "path": "49"
    },
    "549": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "550": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x7F"
    },
    "552": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "554": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "555": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "557": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "558": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "DUP2",
      "path": "49"
    },
    "559": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "560": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "562": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "563": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "564": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "565": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "DUP2",
      "path": "49"
    },
    "566": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "JUMP",
      "path": "49"
    },
    "567": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "568": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "570": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1271,
        1316
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "571": {
      "op": "SWAP1"
    },
    "572": {
      "op": "DUP2"
    },
    "573": {
      "op": "MSTORE"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "offset": [
        1271,
        1316
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x166"
    },
    "581": {
      "op": "JUMP"
    },
    "582": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1441,
        1526
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "583": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1513,
        1519
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x33"
    },
    "585": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1513,
        1519
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "592": {
      "op": "SHL"
    },
    "593": {
      "op": "SUB"
    },
    "594": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1513,
        1519
      ],
      "op": "AND",
      "path": "0"
    },
    "595": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1441,
        1526
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x152"
    },
    "599": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1441,
        1526
      ],
      "op": "JUMP",
      "path": "0"
    },
    "600": {
      "offset": [
        937,
        965
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "601": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        937,
        965
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x72"
    },
    "603": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        937,
        965
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "604": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        937,
        965
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "608": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        937,
        965
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "offset": [
        937,
        965
      ],
      "op": "AND",
      "path": "49"
    },
    "618": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        937,
        965
      ],
      "op": "DUP2",
      "path": "49"
    },
    "619": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        937,
        965
      ],
      "op": "JUMP",
      "path": "49"
    },
    "620": {
      "offset": [
        1554,
        1579
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "621": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1554,
        1579
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x81"
    },
    "623": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1554,
        1579
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "624": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1554,
        1579
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "628": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1554,
        1579
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "offset": [
        1554,
        1579
      ],
      "op": "AND",
      "path": "49"
    },
    "638": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1554,
        1579
      ],
      "op": "DUP2",
      "path": "49"
    },
    "639": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1554,
        1579
      ],
      "op": "JUMP",
      "path": "49"
    },
    "640": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6355,
        6469
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "641": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6355,
        6469
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "645": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6355,
        6469
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x9CB"
    },
    "649": {
      "fn": "CLFactory.getCLHImplementation",
      "jump": "i",
      "offset": [
        6355,
        6469
      ],
      "op": "JUMP",
      "path": "49"
    },
    "650": {
      "offset": [
        1187,
        1212
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "651": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x7E"
    },
    "653": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        1187,
        1212
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "654": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        1187,
        1212
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x152"
    },
    "658": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        1187,
        1212
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "665": {
      "op": "SHL"
    },
    "666": {
      "op": "SUB"
    },
    "667": {
      "offset": [
        1187,
        1212
      ],
      "op": "AND",
      "path": "49"
    },
    "668": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        1187,
        1212
      ],
      "op": "DUP2",
      "path": "49"
    },
    "669": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        1187,
        1212
      ],
      "op": "JUMP",
      "path": "49"
    },
    "670": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "671": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x186"
    },
    "675": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2AF"
    },
    "679": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "680": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "682": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x106C"
    },
    "686": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "jump": "i",
      "offset": [
        6866,
        7127
      ],
      "op": "JUMP",
      "path": "49"
    },
    "687": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "688": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xA41"
    },
    "692": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "jump": "i",
      "offset": [
        6866,
        7127
      ],
      "op": "JUMP",
      "path": "49"
    },
    "693": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "694": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x186"
    },
    "698": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2C6"
    },
    "702": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "703": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "705": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x106C"
    },
    "709": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "jump": "i",
      "offset": [
        7191,
        7424
      ],
      "op": "JUMP",
      "path": "49"
    },
    "710": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "711": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xABE"
    },
    "715": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "jump": "i",
      "offset": [
        7191,
        7424
      ],
      "op": "JUMP",
      "path": "49"
    },
    "716": {
      "offset": [
        621,
        642
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "717": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        621,
        642
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x237"
    },
    "721": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        621,
        642
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x65"
    },
    "723": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        621,
        642
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "724": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        621,
        642
      ],
      "op": "DUP2",
      "path": "49"
    },
    "725": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        621,
        642
      ],
      "op": "JUMP",
      "path": "49"
    },
    "726": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "727": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x186"
    },
    "731": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x2E7"
    },
    "735": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "736": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "738": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x106C"
    },
    "742": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2321,
        2519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "743": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "744": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB37"
    },
    "748": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2321,
        2519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "749": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "750": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x186"
    },
    "754": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x2FE"
    },
    "758": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "CALLDATASIZE",
      "path": "49"
    },
    "759": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "761": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x106C"
    },
    "765": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "jump": "i",
      "offset": [
        6537,
        6798
      ],
      "op": "JUMP",
      "path": "49"
    },
    "766": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "767": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xBB6"
    },
    "771": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "jump": "i",
      "offset": [
        6537,
        6798
      ],
      "op": "JUMP",
      "path": "49"
    },
    "772": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "773": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4586,
        4596
      ],
      "op": "CALLER",
      "path": "49"
    },
    "774": {
      "offset": [
        434,
        467
      ],
      "op": "PUSH32",
      "path": "48",
      "value": "0xB93889D934070956C00846F50F9A10A747BD194BBA2F2E78A86D0C02386FDB1"
    },
    "807": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4662
      ],
      "op": "DUP9",
      "path": "49",
      "statement": 1
    },
    "808": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4662
      ],
      "op": "EQ",
      "path": "49"
    },
    "809": {
      "branch": 37,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4662
      ],
      "op": "DUP1",
      "path": "49"
    },
    "810": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4708
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x353"
    },
    "814": {
      "branch": 37,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4708
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "815": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4708
      ],
      "op": "POP",
      "path": "49"
    },
    "816": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4699,
        4708
      ],
      "op": "DUP8",
      "path": "49"
    },
    "817": {
      "offset": [
        506,
        536
      ],
      "op": "PUSH32",
      "path": "48",
      "value": "0x16591A696FEE5867425B3DEE9FC0160A6C1BAEF77835BC3D204314106D639298"
    },
    "850": {
      "branch": 38,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4678,
        4708
      ],
      "op": "EQ",
      "path": "49"
    },
    "851": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4708
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "852": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4760
      ],
      "op": "DUP1",
      "path": "49"
    },
    "853": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4760
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x37E"
    },
    "857": {
      "branch": 38,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4760
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "858": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4760
      ],
      "op": "POP",
      "path": "49"
    },
    "859": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4751,
        4760
      ],
      "op": "DUP8",
      "path": "49"
    },
    "860": {
      "offset": [
        581,
        617
      ],
      "op": "PUSH32",
      "path": "48",
      "value": "0xA0786F6450D5FB3298B8425105C1B75E6E01A1FF86CDABEA29909CDB0B4C83A7"
    },
    "893": {
      "branch": 39,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4724,
        4760
      ],
      "op": "EQ",
      "path": "49"
    },
    "894": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4629,
        4760
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "895": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x3D0"
    },
    "899": {
      "branch": 39,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "900": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "902": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "DUP2",
      "path": "49"
    },
    "911": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "914": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "916": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "DUP3",
      "path": "49"
    },
    "917": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "ADD",
      "path": "49"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "923": {
      "op": "DUP3"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "PUSH32",
      "value": "0x496E76616C696420476F7665726E616E63652054797065000000000000000000"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "961": {
      "op": "DUP3"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "MSTORE"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "968": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "970": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "971": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "DUP1",
      "path": "49"
    },
    "972": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "973": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "SUB",
      "path": "49"
    },
    "974": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "975": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "49"
    },
    "976": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4607,
        4810
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "op": "SUB"
    },
    "985": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4825,
        4852
      ],
      "op": "DUP4",
      "path": "49"
    },
    "986": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4825,
        4852
      ],
      "op": "AND",
      "path": "49"
    },
    "987": {
      "branch": 40,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4825,
        4852
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "988": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4821,
        5548
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x552"
    },
    "992": {
      "branch": 40,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4821,
        5548
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "993": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4878,
        4888
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 2
    },
    "994": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4878,
        4895
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "995": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4899,
        4901
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x41"
    },
    "997": {
      "branch": 41,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4878,
        4901
      ],
      "op": "EQ",
      "path": "49"
    },
    "998": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x433"
    },
    "1002": {
      "branch": 41,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1003": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1005": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1012": {
      "op": "SHL"
    },
    "1013": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1014": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1017": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1019": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1020": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "ADD",
      "path": "49"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1026": {
      "op": "DUP3"
    },
    "1027": {
      "op": "ADD"
    },
    "1028": {
      "op": "MSTORE"
    },
    "1029": {
      "op": "PUSH32",
      "value": "0x437265617465434C483A20426164207369676E6174757265206C656E67746800"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x3C7"
    },
    "1074": {
      "op": "JUMP"
    },
    "1075": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4869,
        4938
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1076": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5019,
        5025
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 3,
      "value": "0x73"
    },
    "1078": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5019,
        5025
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5019,
        5025
      ],
      "op": "AND",
      "path": "49"
    },
    "1088": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5042
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x8B4BCCCA"
    },
    "1093": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5064,
        5074
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1094": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5096,
        5109
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1095": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5131,
        5141
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1096": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5163,
        5172
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1097": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5194,
        5203
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1098": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5019,
        5025
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1100": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5194,
        5206
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1102": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5194,
        5206
      ],
      "op": "MUL",
      "path": "49"
    },
    "1103": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5194,
        5206
      ],
      "op": "ADD",
      "path": "49"
    },
    "1104": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5194,
        5206
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1105": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5228,
        5237
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1106": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5238,
        5239
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1"
    },
    "1108": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5228,
        5240
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1110": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5228,
        5240
      ],
      "op": "MUL",
      "path": "49"
    },
    "1111": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5228,
        5240
      ],
      "op": "ADD",
      "path": "49"
    },
    "1112": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5228,
        5240
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1113": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5262,
        5271
      ],
      "op": "DUP15",
      "path": "49"
    },
    "1114": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5272,
        5273
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x2"
    },
    "1116": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5262,
        5274
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1118": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5262,
        5274
      ],
      "op": "MUL",
      "path": "49"
    },
    "1119": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5262,
        5274
      ],
      "op": "ADD",
      "path": "49"
    },
    "1120": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5262,
        5274
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1121": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5296,
        5309
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1122": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5346
      ],
      "op": "DUP16",
      "path": "49"
    },
    "1123": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5347,
        5348
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1125": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1126": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1127": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1128": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "LT",
      "path": "49"
    },
    "1129": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x477"
    },
    "1133": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1134": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x477"
    },
    "1138": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x113C"
    },
    "1142": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        5331,
        5349
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1143": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1144": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1146": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "MUL",
      "path": "49"
    },
    "1147": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1149": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "ADD",
      "path": "49"
    },
    "1150": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "ADD",
      "path": "49"
    },
    "1151": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5331,
        5349
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1152": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5379,
        5383
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "1153": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5406,
        5416
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1154": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1156": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1157": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP13",
      "path": "49"
    },
    "1158": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0xFFFFFFFF"
    },
    "1163": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "AND",
      "path": "49"
    },
    "1164": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xE0"
    },
    "1166": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SHL",
      "path": "49"
    },
    "1167": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1168": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1169": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1171": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "ADD",
      "path": "49"
    },
    "1172": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x4A9"
    },
    "1176": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP12",
      "path": "49"
    },
    "1177": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP11",
      "path": "49"
    },
    "1178": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP10",
      "path": "49"
    },
    "1179": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP9",
      "path": "49"
    },
    "1180": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "1181": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "1182": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "1183": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "1184": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "1185": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1186": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1187": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1188": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x11A2"
    },
    "1192": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        5007,
        5434
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1193": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1194": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1196": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1198": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1199": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1200": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1201": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SUB",
      "path": "49"
    },
    "1202": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1203": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP7",
      "path": "49"
    },
    "1204": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "GAS",
      "path": "49"
    },
    "1205": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "1206": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1207": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1208": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1209": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x4C7"
    },
    "1213": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1214": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1215": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1217": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1218": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1219": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1220": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1222": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1223": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1224": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "POP",
      "path": "49"
    },
    "1225": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "POP",
      "path": "49"
    },
    "1226": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "POP",
      "path": "49"
    },
    "1227": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "POP",
      "path": "49"
    },
    "1228": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1230": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1231": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1232": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1234": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "NOT",
      "path": "49"
    },
    "1235": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "1237": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1238": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "ADD",
      "path": "49"
    },
    "1239": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "AND",
      "path": "49"
    },
    "1240": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1241": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "ADD",
      "path": "49"
    },
    "1242": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1243": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1245": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1246": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "POP",
      "path": "49"
    },
    "1247": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1248": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "ADD",
      "path": "49"
    },
    "1249": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1250": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x4ED"
    },
    "1254": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1255": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1256": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x122E"
    },
    "1260": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        5007,
        5434
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1261": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5007,
        5434
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4990,
        5434
      ],
      "op": "AND",
      "path": "49"
    },
    "1271": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4990,
        5003
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "op": "SUB"
    },
    "1280": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4990,
        5434
      ],
      "op": "AND",
      "path": "49"
    },
    "1281": {
      "branch": 42,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4990,
        5434
      ],
      "op": "EQ",
      "path": "49"
    },
    "1282": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x54F"
    },
    "1286": {
      "branch": 42,
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1287": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1289": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1298": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1301": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "1303": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1304": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "ADD",
      "path": "49"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "op": "PUSH32",
      "value": "0x437265617465434C483A20496E76616C6964205369676E617475726500000000"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1348": {
      "op": "DUP3"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1353": {
      "op": "ADD"
    },
    "1354": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x3C7"
    },
    "1358": {
      "op": "JUMP"
    },
    "1359": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4965,
        5496
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5524,
        5537
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 4
    },
    "1362": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4821,
        5548
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1363": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5558,
        5575
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1365": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x7E"
    },
    "1367": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1369": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1370": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1371": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1372": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x100"
    },
    "1375": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "EXP",
      "path": "49"
    },
    "1376": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1377": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "DIV",
      "path": "49"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5615,
        5624
      ],
      "op": "AND",
      "path": "49"
    },
    "1387": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5771,
        5781
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1388": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5800,
        5810
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1389": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5828,
        5841
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1390": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5859,
        5869
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1391": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5887,
        5896
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1392": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5914,
        5923
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1393": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1395": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1396": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1397": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0xC0"
    },
    "1399": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1400": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1402": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1403": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1404": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x70"
    },
    "1406": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1408": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1409": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1410": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1411": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x100"
    },
    "1414": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "EXP",
      "path": "49"
    },
    "1415": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1416": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "DIV",
      "path": "49"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "op": "SUB"
    },
    "1425": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5943,
        5960
      ],
      "op": "AND",
      "path": "49"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "op": "SUB"
    },
    "1434": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "op": "SUB"
    },
    "1443": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1444": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1445": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1446": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1448": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1449": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5970,
        5974
      ],
      "op": "ADDRESS",
      "path": "49"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1468": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1469": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1470": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1472": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1473": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x73"
    },
    "1475": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1477": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1478": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1479": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1480": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x100"
    },
    "1483": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "EXP",
      "path": "49"
    },
    "1484": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1485": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "DIV",
      "path": "49"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "op": "SUB"
    },
    "1494": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5977,
        5983
      ],
      "op": "AND",
      "path": "49"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1513": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1514": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1515": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1517": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1518": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5985,
        5996
      ],
      "op": "DUP15",
      "path": "49"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "op": "SUB"
    },
    "1527": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "op": "SUB"
    },
    "1536": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1537": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1538": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1539": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1541": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1542": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5998,
        6011
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "SUB"
    },
    "1560": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1561": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1562": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1563": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1565": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1566": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x81"
    },
    "1568": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1570": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1571": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1572": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1573": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x100"
    },
    "1576": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "EXP",
      "path": "49"
    },
    "1577": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1578": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "DIV",
      "path": "49"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "op": "SUB"
    },
    "1587": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6022,
        6031
      ],
      "op": "AND",
      "path": "49"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1606": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1607": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1608": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "POP",
      "path": "49"
    },
    "1609": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6053,
        6068
      ],
      "op": "DUP15",
      "path": "49"
    },
    "1610": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1612": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1613": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x24"
    },
    "1615": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1616": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x662"
    },
    "1620": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP9",
      "path": "49"
    },
    "1621": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP8",
      "path": "49"
    },
    "1622": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP7",
      "path": "49"
    },
    "1623": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP6",
      "path": "49"
    },
    "1624": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP5",
      "path": "49"
    },
    "1625": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "1626": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1627": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1628": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1629": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x12C8"
    },
    "1633": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        5640,
        6082
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1634": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1635": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1637": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1638": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1641": {
      "op": "NOT"
    },
    "1642": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1643": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP5",
      "path": "49"
    },
    "1644": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SUB",
      "path": "49"
    },
    "1645": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1646": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1647": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1648": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1649": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1650": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1651": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1653": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1654": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "ADD",
      "path": "49"
    },
    "1655": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1656": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "AND",
      "path": "49"
    },
    "1666": {
      "op": "PUSH4",
      "value": "0x5FCBF16D"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "OR",
      "path": "49"
    },
    "1675": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1676": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5640,
        6082
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1677": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1678": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x698"
    },
    "1682": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1683": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xD4A"
    },
    "1687": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        5578,
        6092
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1688": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1689": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x6A5"
    },
    "1693": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1694": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1695": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1696": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1368"
    },
    "1700": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        5578,
        6092
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1701": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1702": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1704": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1705": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1706": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1707": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SUB",
      "path": "49"
    },
    "1708": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1709": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1711": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "CREATE",
      "path": "49"
    },
    "1712": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1713": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1714": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1715": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "1716": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x6C2"
    },
    "1720": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "1721": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1722": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1724": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1725": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "1726": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "1727": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1729": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "REVERT",
      "path": "49"
    },
    "1730": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5578,
        6092
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1731": {
      "op": "POP"
    },
    "1732": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6109
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 5,
      "value": "0x65"
    },
    "1734": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1735": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1736": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5558,
        6092
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1737": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        5558,
        6092
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6109
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1741": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x6D7"
    },
    "1745": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1746": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x1396"
    },
    "1750": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        6103,
        6111
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1751": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1752": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1753": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1754": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "POP",
      "path": "49"
    },
    "1755": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "1756": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6103,
        6111
      ],
      "op": "POP",
      "path": "49"
    },
    "1757": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6159,
        6165
      ],
      "op": "DUP1",
      "path": "49",
      "statement": 6
    },
    "1758": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6127
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x80"
    },
    "1760": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1762": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6129,
        6135
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x65"
    },
    "1764": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6129,
        6135
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1765": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1766": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1767": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1769": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "ADD",
      "path": "49"
    },
    "1770": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1771": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1772": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1773": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1775": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "ADD",
      "path": "49"
    },
    "1776": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1778": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "1779": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6137
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1781": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "PUSH2",
      "path": "49",
      "value": "0x100"
    },
    "1784": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "EXP",
      "path": "49"
    },
    "1785": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1786": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1787": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "SUB"
    },
    "1796": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "MUL",
      "path": "49"
    },
    "1797": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "NOT",
      "path": "49"
    },
    "1798": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "AND",
      "path": "49"
    },
    "1799": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1800": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "AND",
      "path": "49"
    },
    "1810": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "MUL",
      "path": "49"
    },
    "1811": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "OR",
      "path": "49"
    },
    "1812": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1813": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "1814": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6121,
        6169
      ],
      "op": "POP",
      "path": "49"
    },
    "1815": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6211,
        6217
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 7,
      "value": "0x65"
    },
    "1817": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6211,
        6217
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1818": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6187
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x7F"
    },
    "1820": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1822": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6198,
        6204
      ],
      "op": "DUP4",
      "path": "49"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "op": "SUB"
    },
    "1831": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "AND",
      "path": "49"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "op": "SUB"
    },
    "1840": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "AND",
      "path": "49"
    },
    "1841": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1842": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1843": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1845": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "ADD",
      "path": "49"
    },
    "1846": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1847": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1848": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "1849": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "1851": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "ADD",
      "path": "49"
    },
    "1852": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "1854": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6208
      ],
      "op": "KECCAK256",
      "path": "49"
    },
    "1855": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6217
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1856": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6217
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1857": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6217
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "1858": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6179,
        6217
      ],
      "op": "POP",
      "path": "49"
    },
    "1859": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "PUSH32",
      "path": "49",
      "statement": 8,
      "value": "0x6510209152E59FEB0A7445A97B24BC79BFCB456CA1D8BFF1E4980536C4E8CABB"
    },
    "1892": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6253,
        6259
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1893": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6263,
        6273
      ],
      "op": "DUP14",
      "path": "49"
    },
    "1894": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6275,
        6281
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x65"
    },
    "1896": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6275,
        6281
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1897": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1899": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1900": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x779"
    },
    "1904": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "1905": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "1906": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1907": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1908": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x13C0"
    },
    "1912": {
      "fn": "CLFactory.CreateCLH",
      "jump": "i",
      "offset": [
        6233,
        6283
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1913": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1914": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "1916": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1917": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1918": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1919": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SUB",
      "path": "49"
    },
    "1920": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1921": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        6233,
        6283
      ],
      "op": "LOG1",
      "path": "49"
    },
    "1922": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4555,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1923": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4555,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1924": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1925": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1926": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1927": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1928": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1929": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1930": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1931": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1932": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1933": {
      "fn": "CLFactory.CreateCLH",
      "offset": [
        4193,
        6290
      ],
      "op": "POP",
      "path": "49"
    },
    "1934": {
      "fn": "CLFactory.CreateCLH",
      "jump": "o",
      "offset": [
        4193,
        6290
      ],
      "op": "JUMP",
      "path": "49"
    },
    "1935": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "1936": {
      "offset": [
        1334,
        1347
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x799"
    },
    "1940": {
      "offset": [
        1334,
        1345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC33"
    },
    "1944": {
      "jump": "i",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1945": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1946": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x73"
    },
    "1948": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1949": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "op": "NOT"
    },
    "1959": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 9
    },
    "1960": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "AND",
      "path": "49"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "op": "SUB"
    },
    "1969": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "DUP5",
      "path": "49"
    },
    "1970": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "DUP2",
      "path": "49"
    },
    "1971": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "AND",
      "path": "49"
    },
    "1972": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "1973": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "DUP3",
      "path": "49"
    },
    "1974": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "OR",
      "path": "49"
    },
    "1975": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "1976": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "1977": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7585,
        7601
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "1978": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 10,
      "value": "0x40"
    },
    "1980": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "DUP1",
      "path": "49"
    },
    "1981": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1984": {
      "op": "DUP1"
    },
    "1985": {
      "op": "DUP3"
    },
    "1986": {
      "op": "MSTORE"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1989": {
      "op": "SWAP1"
    },
    "1990": {
      "op": "DUP3"
    },
    "1991": {
      "op": "ADD"
    },
    "1992": {
      "op": "MSTORE"
    },
    "1993": {
      "op": "PUSH6",
      "value": "0x434C48415049"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2002": {
      "op": "SHL"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2005": {
      "op": "DUP3"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2009": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2010": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2011": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "AND",
      "path": "49"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2014": {
      "op": "DUP5"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "DUP2"
    },
    "2017": {
      "op": "SWAP1"
    },
    "2018": {
      "op": "MSTORE"
    },
    "2019": {
      "op": "SWAP2"
    },
    "2020": {
      "op": "DUP4"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7569,
        7575
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2026": {
      "op": "DUP1"
    },
    "2027": {
      "op": "MLOAD"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2030": {
      "op": "PUSH3",
      "value": "0x1D4D"
    },
    "2034": {
      "op": "DUP4"
    },
    "2035": {
      "op": "CODECOPY"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "MLOAD"
    },
    "2038": {
      "op": "SWAP2"
    },
    "2039": {
      "op": "MSTORE"
    },
    "2040": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2045": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2047": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2048": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2049": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2050": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "SUB",
      "path": "49"
    },
    "2051": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2052": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7616,
        7658
      ],
      "op": "LOG1",
      "path": "49"
    },
    "2053": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7541,
        7665
      ],
      "op": "POP",
      "path": "49"
    },
    "2054": {
      "fn": "CLFactory.UpdateCLHAPI",
      "offset": [
        7481,
        7665
      ],
      "op": "POP",
      "path": "49"
    },
    "2055": {
      "fn": "CLFactory.UpdateCLHAPI",
      "jump": "o",
      "offset": [
        7481,
        7665
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2056": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2057": {
      "offset": [
        4418,
        4431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2059": {
      "fn": "CLFactory.Init",
      "offset": [
        4418,
        4431
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2060": {
      "offset": [
        342,
        343
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "2062": {
      "fn": "CLFactory.Init",
      "offset": [
        342,
        343
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2063": {
      "offset": [
        4418,
        4431
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2066": {
      "fn": "CLFactory.Init",
      "offset": [
        4418,
        4431
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2067": {
      "fn": "CLFactory.Init",
      "offset": [
        4418,
        4431
      ],
      "op": "DIV",
      "path": "1"
    },
    "2068": {
      "fn": "CLFactory.Init",
      "offset": [
        4418,
        4431
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2070": {
      "branch": 43,
      "fn": "CLFactory.Init",
      "offset": [
        4418,
        4431
      ],
      "op": "AND",
      "path": "1"
    },
    "2071": {
      "offset": [
        4417,
        4431
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2072": {
      "offset": [
        4417,
        4457
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2073": {
      "fn": "CLFactory.Init",
      "offset": [
        4417,
        4457
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2074": {
      "fn": "CLFactory.Init",
      "offset": [
        4417,
        4457
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x82B"
    },
    "2078": {
      "branch": 43,
      "offset": [
        4417,
        4457
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "offset": [
        4435,
        4447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2082": {
      "fn": "CLFactory.Init",
      "offset": [
        4435,
        4447
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2083": {
      "offset": [
        4435,
        4457
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2085": {
      "fn": "CLFactory.Init",
      "offset": [
        4435,
        4457
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2086": {
      "fn": "CLFactory.Init",
      "offset": [
        4435,
        4457
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2087": {
      "fn": "CLFactory.Init",
      "offset": [
        4435,
        4457
      ],
      "op": "AND",
      "path": "1"
    },
    "2088": {
      "offset": [
        4435,
        4447
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2089": {
      "fn": "CLFactory.Init",
      "offset": [
        4435,
        4447
      ],
      "op": "AND",
      "path": "1"
    },
    "2090": {
      "offset": [
        4435,
        4457
      ],
      "op": "LT",
      "path": "1"
    },
    "2091": {
      "offset": [
        4417,
        4457
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "offset": [
        4409,
        4508
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x890"
    },
    "2096": {
      "offset": [
        4409,
        4508
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2097": {
      "fn": "CLFactory.Init",
      "offset": [
        4409,
        4508
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2099": {
      "fn": "CLFactory.Init",
      "offset": [
        4409,
        4508
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "offset": [
        4409,
        4508
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2108": {
      "fn": "CLFactory.Init",
      "offset": [
        4409,
        4508
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2111": {
      "offset": [
        4409,
        4508
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2113": {
      "fn": "CLFactory.Init",
      "offset": [
        4409,
        4508
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2114": {
      "fn": "CLFactory.Init",
      "offset": [
        4409,
        4508
      ],
      "op": "ADD",
      "path": "1"
    },
    "2115": {
      "op": "MSTORE"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2120": {
      "op": "DUP3"
    },
    "2121": {
      "op": "ADD"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2158": {
      "op": "DUP3"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "op": "MSTORE"
    },
    "2161": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "offset": [
        4409,
        4508
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3C7"
    },
    "2191": {
      "op": "JUMP"
    },
    "2192": {
      "offset": [
        4409,
        4508
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2193": {
      "offset": [
        4518,
        4530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2195": {
      "offset": [
        4518,
        4540
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2196": {
      "fn": "CLFactory.Init",
      "offset": [
        4518,
        4540
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2197": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2200": {
      "op": "NOT"
    },
    "2201": {
      "offset": [
        4550,
        4570
      ],
      "op": "AND",
      "path": "1"
    },
    "2202": {
      "offset": [
        4518,
        4540
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2204": {
      "fn": "CLFactory.Init",
      "offset": [
        4518,
        4540
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2205": {
      "fn": "CLFactory.Init",
      "offset": [
        4518,
        4540
      ],
      "op": "AND",
      "path": "1"
    },
    "2206": {
      "offset": [
        4550,
        4570
      ],
      "op": "OR",
      "path": "1"
    },
    "2207": {
      "offset": [
        4518,
        4540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2210": {
      "offset": [
        4550,
        4570
      ],
      "op": "OR",
      "path": "1"
    },
    "2211": {
      "fn": "CLFactory.Init",
      "offset": [
        4550,
        4570
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2212": {
      "fn": "CLFactory.Init",
      "offset": [
        4550,
        4570
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2213": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3092
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 11,
      "value": "0x7E"
    },
    "2215": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2216": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2223": {
      "op": "SHL"
    },
    "2224": {
      "op": "SUB"
    },
    "2225": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2226": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "DUP8",
      "path": "49"
    },
    "2227": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "AND",
      "path": "49"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "op": "NOT"
    },
    "2237": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2238": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2239": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "AND",
      "path": "49"
    },
    "2240": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "OR",
      "path": "49"
    },
    "2241": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2242": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2243": {
      "fn": "CLFactory.Init",
      "offset": [
        3083,
        3117
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2244": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3136
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 12,
      "value": "0x81"
    },
    "2246": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2247": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2248": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2249": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2250": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "AND",
      "path": "49"
    },
    "2251": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2252": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2253": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "AND",
      "path": "49"
    },
    "2254": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "OR",
      "path": "49"
    },
    "2255": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2256": {
      "fn": "CLFactory.Init",
      "offset": [
        3127,
        3161
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2257": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3189
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 13,
      "value": "0x71"
    },
    "2259": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2260": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2261": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "DUP12",
      "path": "49"
    },
    "2262": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2263": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "AND",
      "path": "49"
    },
    "2264": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2265": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2266": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "AND",
      "path": "49"
    },
    "2267": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "OR",
      "path": "49"
    },
    "2268": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2269": {
      "fn": "CLFactory.Init",
      "offset": [
        3172,
        3210
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2270": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3233
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 14,
      "value": "0x72"
    },
    "2272": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2273": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2274": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "DUP11",
      "path": "49"
    },
    "2275": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2276": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "AND",
      "path": "49"
    },
    "2277": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2278": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2279": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "AND",
      "path": "49"
    },
    "2280": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "OR",
      "path": "49"
    },
    "2281": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2282": {
      "fn": "CLFactory.Init",
      "offset": [
        3220,
        3250
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2283": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3277
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 15,
      "value": "0x70"
    },
    "2285": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2286": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2287": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "DUP10",
      "path": "49"
    },
    "2288": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2289": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "AND",
      "path": "49"
    },
    "2290": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2291": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2292": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "AND",
      "path": "49"
    },
    "2293": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "OR",
      "path": "49"
    },
    "2294": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2295": {
      "fn": "CLFactory.Init",
      "offset": [
        3260,
        3298
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2296": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3314
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 16,
      "value": "0x73"
    },
    "2298": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2299": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2300": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2301": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP9",
      "path": "49"
    },
    "2302": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "AND",
      "path": "49"
    },
    "2303": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2304": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2305": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "AND",
      "path": "49"
    },
    "2306": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2307": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2308": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2309": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "OR",
      "path": "49"
    },
    "2310": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2311": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2312": {
      "fn": "CLFactory.Init",
      "offset": [
        3308,
        3324
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2313": {
      "fn": "CLFactory.Init",
      "offset": [
        3335,
        3341
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 17,
      "value": "0x65"
    },
    "2315": {
      "fn": "CLFactory.Init",
      "offset": [
        3335,
        3345
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2316": {
      "fn": "CLFactory.Init",
      "offset": [
        3335,
        3345
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2317": {
      "fn": "CLFactory.Init",
      "offset": [
        3335,
        3345
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2318": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3371
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 18
    },
    "2319": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3371
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2320": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3371
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2321": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3371
      ],
      "op": "PUSH32",
      "path": "49",
      "value": "0xAE0C3F803428DD501929F276001A4B5FD1D262991BBB98E97B4B7D918A5AF6DC"
    },
    "2354": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2355": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2356": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2357": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2358": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "AND",
      "path": "49"
    },
    "2359": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2360": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3396
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2361": {
      "fn": "CLFactory.Init",
      "offset": [
        3406,
        3414
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 19,
      "value": "0x7F"
    },
    "2363": {
      "fn": "CLFactory.Init",
      "offset": [
        3355,
        3371
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2365": {
      "fn": "CLFactory.Init",
      "offset": [
        3406,
        3428
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2366": {
      "fn": "CLFactory.Init",
      "offset": [
        3406,
        3428
      ],
      "op": "PUSH32",
      "path": "49",
      "value": "0x18B3A2798575D3A428C1F52E616A74B071539854E037E7D7C535365D474F4033"
    },
    "2399": {
      "fn": "CLFactory.Init",
      "offset": [
        3406,
        3437
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2400": {
      "fn": "CLFactory.Init",
      "offset": [
        3448,
        3464
      ],
      "op": "PUSH3",
      "path": "49",
      "statement": 20,
      "value": "0x969"
    },
    "2404": {
      "fn": "CLFactory.Init",
      "offset": [
        3448,
        3462
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xC8F"
    },
    "2408": {
      "fn": "CLFactory.Init",
      "jump": "i",
      "offset": [
        3448,
        3464
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2409": {
      "fn": "CLFactory.Init",
      "offset": [
        3448,
        3464
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2410": {
      "offset": [
        4607,
        4612
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2412": {
      "offset": [
        4591,
        4612
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2413": {
      "fn": "CLFactory.Init",
      "offset": [
        4591,
        4612
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2414": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2417": {
      "op": "NOT"
    },
    "2418": {
      "offset": [
        4591,
        4612
      ],
      "op": "AND",
      "path": "1"
    },
    "2419": {
      "fn": "CLFactory.Init",
      "offset": [
        4591,
        4612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2420": {
      "fn": "CLFactory.Init",
      "offset": [
        4591,
        4612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2421": {
      "offset": [
        4627,
        4647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2423": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2426": {
      "op": "DUP3"
    },
    "2427": {
      "op": "AND"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "offset": [
        4627,
        4647
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
    },
    "2463": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "offset": [
        4627,
        4647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2469": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2470": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2471": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2472": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "SUB",
      "path": "1"
    },
    "2473": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2474": {
      "fn": "CLFactory.Init",
      "offset": [
        4627,
        4647
      ],
      "op": "LOG1",
      "path": "1"
    },
    "2475": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2476": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2477": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2478": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2479": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2480": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2481": {
      "fn": "CLFactory.Init",
      "offset": [
        2796,
        3471
      ],
      "op": "POP",
      "path": "49"
    },
    "2482": {
      "fn": "CLFactory.Init",
      "jump": "o",
      "offset": [
        2796,
        3471
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2483": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2071,
        2172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2484": {
      "offset": [
        1334,
        1347
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x9BD"
    },
    "2488": {
      "offset": [
        1334,
        1345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC33"
    },
    "2492": {
      "jump": "i",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2493": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2494": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2135,
        2165
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 21,
      "value": "0x9C9"
    },
    "2498": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2162,
        2163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2500": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2135,
        2153
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCC3"
    },
    "2504": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        2135,
        2165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2505": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2135,
        2165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2506": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "o",
      "offset": [
        2071,
        2172
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2507": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6355,
        6469
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2508": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6445
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 22,
      "value": "0x7E"
    },
    "2510": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6445
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2511": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2513": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2514": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2515": {
      "op": "PUSH4",
      "value": "0x5C60DA1B"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2522": {
      "op": "SHL"
    },
    "2523": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2524": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2525": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2526": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2527": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6410,
        6417
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2529": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6410,
        6417
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2536": {
      "op": "SHL"
    },
    "2537": {
      "op": "SUB"
    },
    "2538": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6445
      ],
      "op": "AND",
      "path": "49"
    },
    "2539": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6445
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2540": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6460
      ],
      "op": "PUSH4",
      "path": "49",
      "value": "0x5C60DA1B"
    },
    "2545": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6460
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2546": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x4"
    },
    "2548": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2549": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP4",
      "path": "49"
    },
    "2550": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ADD",
      "path": "49"
    },
    "2551": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2552": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x20"
    },
    "2554": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2555": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2556": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2557": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2558": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2559": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SUB",
      "path": "49"
    },
    "2560": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ADD",
      "path": "49"
    },
    "2561": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2562": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6445
      ],
      "op": "DUP7",
      "path": "49"
    },
    "2563": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "GAS",
      "path": "49"
    },
    "2564": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "STATICCALL",
      "path": "49"
    },
    "2565": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2566": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2567": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ISZERO",
      "path": "49"
    },
    "2568": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xA16"
    },
    "2572": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "JUMPI",
      "path": "49"
    },
    "2573": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2574": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2576": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2577": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "RETURNDATACOPY",
      "path": "49"
    },
    "2578": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2579": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x0"
    },
    "2581": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "REVERT",
      "path": "49"
    },
    "2582": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2583": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "POP",
      "path": "49"
    },
    "2584": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "POP",
      "path": "49"
    },
    "2585": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "POP",
      "path": "49"
    },
    "2586": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "POP",
      "path": "49"
    },
    "2587": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2589": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2590": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "RETURNDATASIZE",
      "path": "49"
    },
    "2591": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2593": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "NOT",
      "path": "49"
    },
    "2594": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x1F"
    },
    "2596": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2597": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ADD",
      "path": "49"
    },
    "2598": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "AND",
      "path": "49"
    },
    "2599": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2600": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ADD",
      "path": "49"
    },
    "2601": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2602": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x40"
    },
    "2604": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "MSTORE",
      "path": "49"
    },
    "2605": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "POP",
      "path": "49"
    },
    "2606": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2607": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "ADD",
      "path": "49"
    },
    "2608": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2609": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0xA3C"
    },
    "2613": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2614": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2615": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x122E"
    },
    "2619": {
      "fn": "CLFactory.getCLHImplementation",
      "jump": "i",
      "offset": [
        6436,
        6462
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2620": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6436,
        6462
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2621": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6429,
        6462
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2622": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6429,
        6462
      ],
      "op": "POP",
      "path": "49"
    },
    "2623": {
      "fn": "CLFactory.getCLHImplementation",
      "offset": [
        6355,
        6469
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2624": {
      "fn": "CLFactory.getCLHImplementation",
      "jump": "o",
      "offset": [
        6355,
        6469
      ],
      "op": "JUMP",
      "path": "49"
    },
    "2625": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6866,
        7127
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2626": {
      "offset": [
        1334,
        1347
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xA4B"
    },
    "2630": {
      "offset": [
        1334,
        1345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC33"
    },
    "2634": {
      "jump": "i",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2635": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2636": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x71"
    },
    "2638": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2639": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "op": "NOT"
    },
    "2649": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 23
    },
    "2650": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "AND",
      "path": "49"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "op": "SUB"
    },
    "2659": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2660": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2661": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "AND",
      "path": "49"
    },
    "2662": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2663": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2664": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "OR",
      "path": "49"
    },
    "2665": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2666": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2667": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7003,
        7041
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2668": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7056,
        7120
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 24,
      "value": "0x40"
    },
    "2670": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7056,
        7120
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2671": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7056,
        7120
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2674": {
      "op": "DUP1"
    },
    "2675": {
      "op": "DUP3"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2679": {
      "op": "SWAP1"
    },
    "2680": {
      "op": "DUP3"
    },
    "2681": {
      "op": "ADD"
    },
    "2682": {
      "op": "MSTORE"
    },
    "2683": {
      "op": "PUSH17",
      "value": "0x10D313155CD95C93585B9859D95B595B9D"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "2703": {
      "op": "SHL"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2706": {
      "op": "DUP3"
    },
    "2707": {
      "op": "ADD"
    },
    "2708": {
      "op": "MSTORE"
    },
    "2709": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2710": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2711": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2712": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "AND",
      "path": "49"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2715": {
      "op": "DUP5"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "op": "DUP2"
    },
    "2718": {
      "op": "SWAP1"
    },
    "2719": {
      "op": "MSTORE"
    },
    "2720": {
      "op": "SWAP2"
    },
    "2721": {
      "op": "DUP4"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        6976,
        6993
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2727": {
      "op": "DUP1"
    },
    "2728": {
      "op": "MLOAD"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2731": {
      "op": "PUSH3",
      "value": "0x1D4D"
    },
    "2735": {
      "op": "DUP4"
    },
    "2736": {
      "op": "CODECOPY"
    },
    "2737": {
      "op": "DUP2"
    },
    "2738": {
      "op": "MLOAD"
    },
    "2739": {
      "op": "SWAP2"
    },
    "2740": {
      "op": "MSTORE"
    },
    "2741": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7056,
        7120
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "fn": "CLFactory.UpdateCLLUserManagement",
      "offset": [
        7056,
        7120
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x7FC"
    },
    "2749": {
      "op": "JUMP"
    },
    "2750": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7191,
        7424
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2751": {
      "offset": [
        1334,
        1347
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xAC8"
    },
    "2755": {
      "offset": [
        1334,
        1345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC33"
    },
    "2759": {
      "jump": "i",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2760": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2761": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x72"
    },
    "2763": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2764": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "op": "SUB"
    },
    "2773": {
      "op": "NOT"
    },
    "2774": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 25
    },
    "2775": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "AND",
      "path": "49"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "SUB"
    },
    "2784": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "DUP5",
      "path": "49"
    },
    "2785": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "DUP2",
      "path": "49"
    },
    "2786": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "AND",
      "path": "49"
    },
    "2787": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "2788": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "DUP3",
      "path": "49"
    },
    "2789": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "OR",
      "path": "49"
    },
    "2790": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2791": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2792": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7316,
        7346
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "2793": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7361,
        7417
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 26,
      "value": "0x40"
    },
    "2795": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7361,
        7417
      ],
      "op": "DUP1",
      "path": "49"
    },
    "2796": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7361,
        7417
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2799": {
      "op": "DUP1"
    },
    "2800": {
      "op": "DUP3"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2804": {
      "op": "SWAP1"
    },
    "2805": {
      "op": "DUP3"
    },
    "2806": {
      "op": "ADD"
    },
    "2807": {
      "op": "MSTORE"
    },
    "2808": {
      "op": "PUSH13",
      "value": "0x434C4C476F7665726E616E6365"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2824": {
      "op": "SHL"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2827": {
      "op": "DUP3"
    },
    "2828": {
      "op": "ADD"
    },
    "2829": {
      "op": "MSTORE"
    },
    "2830": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "2831": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2832": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "2833": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "AND",
      "path": "49"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2836": {
      "op": "DUP5"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "DUP2"
    },
    "2839": {
      "op": "SWAP1"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "SWAP2"
    },
    "2842": {
      "op": "DUP4"
    },
    "2843": {
      "op": "ADD"
    },
    "2844": {
      "op": "MSTORE"
    },
    "2845": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7293,
        7306
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2848": {
      "op": "DUP1"
    },
    "2849": {
      "op": "MLOAD"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2852": {
      "op": "PUSH3",
      "value": "0x1D4D"
    },
    "2856": {
      "op": "DUP4"
    },
    "2857": {
      "op": "CODECOPY"
    },
    "2858": {
      "op": "DUP2"
    },
    "2859": {
      "op": "MLOAD"
    },
    "2860": {
      "op": "SWAP2"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7361,
        7417
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2865": {
      "op": "ADD"
    },
    "2866": {
      "fn": "CLFactory.UpdateCLLGovernance",
      "offset": [
        7361,
        7417
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x7FC"
    },
    "2870": {
      "op": "JUMP"
    },
    "2871": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2872": {
      "offset": [
        1334,
        1347
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB41"
    },
    "2876": {
      "offset": [
        1334,
        1345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC33"
    },
    "2880": {
      "jump": "i",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2881": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "op": "SUB"
    },
    "2890": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2409,
        2431
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "2891": {
      "branch": 45,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2409,
        2431
      ],
      "op": "AND",
      "path": "0"
    },
    "2892": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xBA8"
    },
    "2896": {
      "branch": 45,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2897": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2899": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2900": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2906": {
      "op": "SHL"
    },
    "2907": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2908": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2911": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2913": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2914": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "ADD",
      "path": "0"
    },
    "2915": {
      "op": "MSTORE"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2920": {
      "op": "DUP3"
    },
    "2921": {
      "op": "ADD"
    },
    "2922": {
      "op": "MSTORE"
    },
    "2923": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2973": {
      "op": "DUP3"
    },
    "2974": {
      "op": "ADD"
    },
    "2975": {
      "op": "MSTORE"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2978": {
      "op": "ADD"
    },
    "2979": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x3C7"
    },
    "2983": {
      "op": "JUMP"
    },
    "2984": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2474
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2985": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2484,
        2512
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 28,
      "value": "0xBB3"
    },
    "2989": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2503,
        2511
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2990": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2484,
        2502
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCC3"
    },
    "2994": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2484,
        2512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2995": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2484,
        2512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2996": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2519
      ],
      "op": "POP",
      "path": "0"
    },
    "2997": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "o",
      "offset": [
        2321,
        2519
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2998": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6537,
        6798
      ],
      "op": "JUMPDEST",
      "path": "49"
    },
    "2999": {
      "offset": [
        1334,
        1347
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xBC0"
    },
    "3003": {
      "offset": [
        1334,
        1345
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC33"
    },
    "3007": {
      "jump": "i",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3008": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        1334,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3009": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "PUSH1",
      "path": "49",
      "value": "0x70"
    },
    "3011": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3012": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "SLOAD",
      "path": "49"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3019": {
      "op": "SHL"
    },
    "3020": {
      "op": "SUB"
    },
    "3021": {
      "op": "NOT"
    },
    "3022": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "DUP2",
      "path": "49",
      "statement": 29
    },
    "3023": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "AND",
      "path": "49"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "DUP5",
      "path": "49"
    },
    "3033": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "DUP2",
      "path": "49"
    },
    "3034": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "AND",
      "path": "49"
    },
    "3035": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "SWAP2",
      "path": "49"
    },
    "3036": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "DUP3",
      "path": "49"
    },
    "3037": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "OR",
      "path": "49"
    },
    "3038": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3039": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "3040": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6674,
        6712
      ],
      "op": "SSTORE",
      "path": "49"
    },
    "3041": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6727,
        6791
      ],
      "op": "PUSH1",
      "path": "49",
      "statement": 30,
      "value": "0x40"
    },
    "3043": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6727,
        6791
      ],
      "op": "DUP1",
      "path": "49"
    },
    "3044": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6727,
        6791
      ],
      "op": "MLOAD",
      "path": "49"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3047": {
      "op": "DUP1"
    },
    "3048": {
      "op": "DUP3"
    },
    "3049": {
      "op": "MSTORE"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3052": {
      "op": "SWAP1"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "op": "PUSH17",
      "value": "0x86989886DEDCE6E8E4EAC6E8DEE486989"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3079": {
      "op": "DUP3"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "SWAP4",
      "path": "49"
    },
    "3083": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3084": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "SWAP3",
      "path": "49"
    },
    "3085": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "AND",
      "path": "49"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3088": {
      "op": "DUP5"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "op": "DUP2"
    },
    "3091": {
      "op": "SWAP1"
    },
    "3092": {
      "op": "MSTORE"
    },
    "3093": {
      "op": "SWAP2"
    },
    "3094": {
      "op": "DUP4"
    },
    "3095": {
      "op": "ADD"
    },
    "3096": {
      "op": "MSTORE"
    },
    "3097": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6647,
        6664
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3100": {
      "op": "DUP1"
    },
    "3101": {
      "op": "MLOAD"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3104": {
      "op": "PUSH3",
      "value": "0x1D4D"
    },
    "3108": {
      "op": "DUP4"
    },
    "3109": {
      "op": "CODECOPY"
    },
    "3110": {
      "op": "DUP2"
    },
    "3111": {
      "op": "MLOAD"
    },
    "3112": {
      "op": "SWAP2"
    },
    "3113": {
      "op": "MSTORE"
    },
    "3114": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6727,
        6791
      ],
      "op": "SWAP1",
      "path": "49"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "fn": "CLFactory.UpdateCLLConstructorCLH",
      "offset": [
        6727,
        6791
      ],
      "op": "PUSH3",
      "path": "49",
      "value": "0x7FC"
    },
    "3122": {
      "op": "JUMP"
    },
    "3123": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1599,
        1729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3124": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1513,
        1519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "3126": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1513,
        1519
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "op": "SUB"
    },
    "3135": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1513,
        1519
      ],
      "op": "AND",
      "path": "0"
    },
    "3136": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 31
    },
    "3137": {
      "branch": 46,
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1662,
        1685
      ],
      "op": "EQ",
      "path": "0",
      "statement": 32
    },
    "3138": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x9C9"
    },
    "3142": {
      "branch": 46,
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3143": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3145": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3154": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3159": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3160": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "ADD",
      "path": "0"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "SWAP1"
    },
    "3163": {
      "op": "MSTORE"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "op": "MSTORE"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "fn": "OwnableUpgradeable._checkOwner",
      "offset": [
        1654,
        1722
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x3C7"
    },
    "3214": {
      "op": "JUMP"
    },
    "3215": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1003,
        1098
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3216": {
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3218": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4910,
        4923
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3219": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3222": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4910,
        4923
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3223": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4910,
        4923
      ],
      "op": "DIV",
      "path": "1"
    },
    "3224": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3226": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4910,
        4923
      ],
      "op": "AND",
      "path": "1"
    },
    "3227": {
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xCB9"
    },
    "3231": {
      "offset": [
        4902,
        4971
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3232": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3234": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "offset": [
        4902,
        4971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3243": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3244": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3246": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "ADD",
      "path": "1"
    },
    "3247": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3C7"
    },
    "3251": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3252": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x13F6"
    },
    "3256": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        4902,
        4971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3257": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        4902,
        4971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3258": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1065,
        1091
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 33,
      "value": "0x9C9"
    },
    "3262": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1065,
        1089
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xD15"
    },
    "3266": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        1065,
        1091
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3267": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2673,
        2860
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3268": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "3270": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3271": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3278": {
      "op": "SHL"
    },
    "3279": {
      "op": "SUB"
    },
    "3280": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 34
    },
    "3281": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3282": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "AND",
      "path": "0"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3289": {
      "op": "SHL"
    },
    "3290": {
      "op": "SUB"
    },
    "3291": {
      "op": "NOT"
    },
    "3292": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3293": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "AND",
      "path": "0"
    },
    "3294": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3295": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "OR",
      "path": "0"
    },
    "3296": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3297": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3298": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3299": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2813,
        2853
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x40"
    },
    "3301": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2813,
        2853
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3302": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3303": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "AND",
      "path": "0"
    },
    "3304": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3305": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2781,
        2798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3306": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3307": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2765,
        2771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3308": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2813,
        2853
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3341": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2813,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3342": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2746,
        2762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3344": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2746,
        2762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3345": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2813,
        2853
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3346": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2736,
        2860
      ],
      "op": "POP",
      "path": "0"
    },
    "3347": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2673,
        2860
      ],
      "op": "POP",
      "path": "0"
    },
    "3348": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "jump": "o",
      "offset": [
        2673,
        2860
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3349": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1104,
        1215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3350": {
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3352": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4910,
        4923
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3353": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3356": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4910,
        4923
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3357": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4910,
        4923
      ],
      "op": "DIV",
      "path": "1"
    },
    "3358": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4910,
        4923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3360": {
      "branch": 44,
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4910,
        4923
      ],
      "op": "AND",
      "path": "1"
    },
    "3361": {
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xD3F"
    },
    "3365": {
      "branch": 44,
      "offset": [
        4902,
        4971
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3366": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3368": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3375": {
      "op": "SHL"
    },
    "3376": {
      "offset": [
        4902,
        4971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3377": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3378": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3380": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "ADD",
      "path": "1"
    },
    "3381": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3C7"
    },
    "3385": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3386": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x13F6"
    },
    "3390": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [
        4902,
        4971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3391": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        4902,
        4971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3392": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1208
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 36,
      "value": "0x9C9"
    },
    "3396": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3397": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xCC3"
    },
    "3401": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [
        1176,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3402": {
      "op": "JUMPDEST"
    },
    "3403": {
      "op": "PUSH2",
      "value": "0x90B"
    },
    "3406": {
      "op": "DUP1"
    },
    "3407": {
      "op": "PUSH3",
      "value": "0x1442"
    },
    "3411": {
      "op": "DUP4"
    },
    "3412": {
      "op": "CODECOPY"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "SWAP1"
    },
    "3415": {
      "jump": "o",
      "op": "JUMP"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3427": {
      "op": "MSTORE"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3432": {
      "op": "MSTORE"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3437": {
      "op": "REVERT"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3441": {
      "op": "MLOAD"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3444": {
      "op": "DUP3"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3448": {
      "op": "NOT"
    },
    "3449": {
      "op": "AND"
    },
    "3450": {
      "op": "DUP2"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "GT"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "DUP3"
    },
    "3465": {
      "op": "LT"
    },
    "3466": {
      "op": "OR"
    },
    "3467": {
      "op": "ISZERO"
    },
    "3468": {
      "op": "PUSH3",
      "value": "0xD9A"
    },
    "3472": {
      "op": "JUMPI"
    },
    "3473": {
      "op": "PUSH3",
      "value": "0xD9A"
    },
    "3477": {
      "op": "PUSH3",
      "value": "0xD58"
    },
    "3481": {
      "jump": "i",
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3485": {
      "op": "MSTORE"
    },
    "3486": {
      "op": "SWAP2"
    },
    "3487": {
      "op": "SWAP1"
    },
    "3488": {
      "op": "POP"
    },
    "3489": {
      "jump": "o",
      "op": "JUMP"
    },
    "3490": {
      "op": "JUMPDEST"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "DUP3"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3496": {
      "op": "DUP4"
    },
    "3497": {
      "op": "ADD"
    },
    "3498": {
      "op": "SLT"
    },
    "3499": {
      "op": "PUSH3",
      "value": "0xDB4"
    },
    "3503": {
      "op": "JUMPI"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "REVERT"
    },
    "3508": {
      "op": "JUMPDEST"
    },
    "3509": {
      "op": "DUP2"
    },
    "3510": {
      "op": "CALLDATALOAD"
    },
    "3511": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3520": {
      "op": "DUP2"
    },
    "3521": {
      "op": "GT"
    },
    "3522": {
      "op": "ISZERO"
    },
    "3523": {
      "op": "PUSH3",
      "value": "0xDD1"
    },
    "3527": {
      "op": "JUMPI"
    },
    "3528": {
      "op": "PUSH3",
      "value": "0xDD1"
    },
    "3532": {
      "op": "PUSH3",
      "value": "0xD58"
    },
    "3536": {
      "jump": "i",
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "PUSH3",
      "value": "0xDE6"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3544": {
      "op": "DUP3"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3548": {
      "op": "NOT"
    },
    "3549": {
      "op": "AND"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "PUSH3",
      "value": "0xD6E"
    },
    "3557": {
      "jump": "i",
      "op": "JUMP"
    },
    "3558": {
      "op": "JUMPDEST"
    },
    "3559": {
      "op": "DUP2"
    },
    "3560": {
      "op": "DUP2"
    },
    "3561": {
      "op": "MSTORE"
    },
    "3562": {
      "op": "DUP5"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3565": {
      "op": "DUP4"
    },
    "3566": {
      "op": "DUP7"
    },
    "3567": {
      "op": "ADD"
    },
    "3568": {
      "op": "ADD"
    },
    "3569": {
      "op": "GT"
    },
    "3570": {
      "op": "ISZERO"
    },
    "3571": {
      "op": "PUSH3",
      "value": "0xDFC"
    },
    "3575": {
      "op": "JUMPI"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3578": {
      "op": "DUP1"
    },
    "3579": {
      "op": "REVERT"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "DUP2"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3584": {
      "op": "DUP6"
    },
    "3585": {
      "op": "ADD"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3588": {
      "op": "DUP4"
    },
    "3589": {
      "op": "ADD"
    },
    "3590": {
      "op": "CALLDATACOPY"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3593": {
      "op": "SWAP2"
    },
    "3594": {
      "op": "DUP2"
    },
    "3595": {
      "op": "ADD"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3598": {
      "op": "ADD"
    },
    "3599": {
      "op": "SWAP2"
    },
    "3600": {
      "op": "SWAP1"
    },
    "3601": {
      "op": "SWAP2"
    },
    "3602": {
      "op": "MSTORE"
    },
    "3603": {
      "op": "SWAP4"
    },
    "3604": {
      "op": "SWAP3"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "jump": "o",
      "op": "JUMP"
    },
    "3609": {
      "op": "JUMPDEST"
    },
    "3610": {
      "op": "DUP1"
    },
    "3611": {
      "op": "CALLDATALOAD"
    },
    "3612": {
      "op": "DUP1"
    },
    "3613": {
      "op": "ISZERO"
    },
    "3614": {
      "op": "ISZERO"
    },
    "3615": {
      "op": "DUP2"
    },
    "3616": {
      "op": "EQ"
    },
    "3617": {
      "op": "PUSH3",
      "value": "0xE2A"
    },
    "3621": {
      "op": "JUMPI"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3624": {
      "op": "DUP1"
    },
    "3625": {
      "op": "REVERT"
    },
    "3626": {
      "op": "JUMPDEST"
    },
    "3627": {
      "op": "SWAP2"
    },
    "3628": {
      "op": "SWAP1"
    },
    "3629": {
      "op": "POP"
    },
    "3630": {
      "jump": "o",
      "op": "JUMP"
    },
    "3631": {
      "op": "JUMPDEST"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3634": {
      "op": "DUP3"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3637": {
      "op": "DUP4"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "op": "SLT"
    },
    "3640": {
      "op": "PUSH3",
      "value": "0xE41"
    },
    "3644": {
      "op": "JUMPI"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3647": {
      "op": "DUP1"
    },
    "3648": {
      "op": "REVERT"
    },
    "3649": {
      "op": "JUMPDEST"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3652": {
      "op": "MLOAD"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3655": {
      "op": "DUP2"
    },
    "3656": {
      "op": "ADD"
    },
    "3657": {
      "op": "DUP2"
    },
    "3658": {
      "op": "DUP2"
    },
    "3659": {
      "op": "LT"
    },
    "3660": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3669": {
      "op": "DUP3"
    },
    "3670": {
      "op": "GT"
    },
    "3671": {
      "op": "OR"
    },
    "3672": {
      "op": "ISZERO"
    },
    "3673": {
      "op": "PUSH3",
      "value": "0xE67"
    },
    "3677": {
      "op": "JUMPI"
    },
    "3678": {
      "op": "PUSH3",
      "value": "0xE67"
    },
    "3682": {
      "op": "PUSH3",
      "value": "0xD58"
    },
    "3686": {
      "jump": "i",
      "op": "JUMP"
    },
    "3687": {
      "op": "JUMPDEST"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3690": {
      "op": "MSTORE"
    },
    "3691": {
      "op": "DUP1"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3694": {
      "op": "DUP5"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "DUP6"
    },
    "3697": {
      "op": "DUP2"
    },
    "3698": {
      "op": "GT"
    },
    "3699": {
      "op": "ISZERO"
    },
    "3700": {
      "op": "PUSH3",
      "value": "0xE7D"
    },
    "3704": {
      "op": "JUMPI"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3707": {
      "op": "DUP1"
    },
    "3708": {
      "op": "REVERT"
    },
    "3709": {
      "op": "JUMPDEST"
    },
    "3710": {
      "op": "DUP5"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "DUP2"
    },
    "3713": {
      "op": "DUP2"
    },
    "3714": {
      "op": "LT"
    },
    "3715": {
      "op": "ISZERO"
    },
    "3716": {
      "op": "PUSH3",
      "value": "0xE99"
    },
    "3720": {
      "op": "JUMPI"
    },
    "3721": {
      "op": "DUP1"
    },
    "3722": {
      "op": "CALLDATALOAD"
    },
    "3723": {
      "op": "DUP4"
    },
    "3724": {
      "op": "MSTORE"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3727": {
      "op": "SWAP3"
    },
    "3728": {
      "op": "DUP4"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "SWAP3"
    },
    "3731": {
      "op": "ADD"
    },
    "3732": {
      "op": "PUSH3",
      "value": "0xE7F"
    },
    "3736": {
      "op": "JUMP"
    },
    "3737": {
      "op": "JUMPDEST"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "SWAP2"
    },
    "3740": {
      "op": "SWAP6"
    },
    "3741": {
      "op": "SWAP5"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "POP"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "op": "POP"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "jump": "o",
      "op": "JUMP"
    },
    "3748": {
      "op": "JUMPDEST"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3755": {
      "op": "SHL"
    },
    "3756": {
      "op": "SUB"
    },
    "3757": {
      "op": "DUP2"
    },
    "3758": {
      "op": "AND"
    },
    "3759": {
      "op": "DUP2"
    },
    "3760": {
      "op": "EQ"
    },
    "3761": {
      "op": "PUSH3",
      "value": "0xBB3"
    },
    "3765": {
      "op": "JUMPI"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "DUP1"
    },
    "3769": {
      "op": "REVERT"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "CALLDATALOAD"
    },
    "3773": {
      "op": "PUSH3",
      "value": "0xE2A"
    },
    "3777": {
      "op": "DUP2"
    },
    "3778": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "3782": {
      "jump": "i",
      "op": "JUMP"
    },
    "3783": {
      "op": "JUMPDEST"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3789": {
      "op": "DUP4"
    },
    "3790": {
      "op": "ADD"
    },
    "3791": {
      "op": "SLT"
    },
    "3792": {
      "op": "PUSH3",
      "value": "0xED9"
    },
    "3796": {
      "op": "JUMPI"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3799": {
      "op": "DUP1"
    },
    "3800": {
      "op": "REVERT"
    },
    "3801": {
      "op": "JUMPDEST"
    },
    "3802": {
      "op": "DUP2"
    },
    "3803": {
      "op": "CALLDATALOAD"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3806": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "GT"
    },
    "3817": {
      "op": "ISZERO"
    },
    "3818": {
      "op": "PUSH3",
      "value": "0xEF8"
    },
    "3822": {
      "op": "JUMPI"
    },
    "3823": {
      "op": "PUSH3",
      "value": "0xEF8"
    },
    "3827": {
      "op": "PUSH3",
      "value": "0xD58"
    },
    "3831": {
      "jump": "i",
      "op": "JUMP"
    },
    "3832": {
      "op": "JUMPDEST"
    },
    "3833": {
      "op": "DUP2"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "op": "PUSH3",
      "value": "0xF09"
    },
    "3841": {
      "op": "DUP3"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "PUSH3",
      "value": "0xD6E"
    },
    "3848": {
      "jump": "i",
      "op": "JUMP"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "SWAP3"
    },
    "3851": {
      "op": "DUP4"
    },
    "3852": {
      "op": "MSTORE"
    },
    "3853": {
      "op": "DUP5"
    },
    "3854": {
      "op": "DUP2"
    },
    "3855": {
      "op": "ADD"
    },
    "3856": {
      "op": "DUP3"
    },
    "3857": {
      "op": "ADD"
    },
    "3858": {
      "op": "SWAP3"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "DUP2"
    },
    "3861": {
      "op": "ADD"
    },
    "3862": {
      "op": "SWAP1"
    },
    "3863": {
      "op": "DUP8"
    },
    "3864": {
      "op": "DUP6"
    },
    "3865": {
      "op": "GT"
    },
    "3866": {
      "op": "ISZERO"
    },
    "3867": {
      "op": "PUSH3",
      "value": "0xF24"
    },
    "3871": {
      "op": "JUMPI"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3874": {
      "op": "DUP1"
    },
    "3875": {
      "op": "REVERT"
    },
    "3876": {
      "op": "JUMPDEST"
    },
    "3877": {
      "op": "DUP4"
    },
    "3878": {
      "op": "DUP8"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "SWAP3"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "DUP5"
    },
    "3884": {
      "op": "DUP4"
    },
    "3885": {
      "op": "LT"
    },
    "3886": {
      "op": "ISZERO"
    },
    "3887": {
      "op": "PUSH3",
      "value": "0xF50"
    },
    "3891": {
      "op": "JUMPI"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "CALLDATALOAD"
    },
    "3894": {
      "op": "PUSH3",
      "value": "0xF40"
    },
    "3898": {
      "op": "DUP2"
    },
    "3899": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "3903": {
      "jump": "i",
      "op": "JUMP"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "DUP3"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "SWAP2"
    },
    "3908": {
      "op": "DUP4"
    },
    "3909": {
      "op": "ADD"
    },
    "3910": {
      "op": "SWAP2"
    },
    "3911": {
      "op": "SWAP1"
    },
    "3912": {
      "op": "DUP4"
    },
    "3913": {
      "op": "ADD"
    },
    "3914": {
      "op": "SWAP1"
    },
    "3915": {
      "op": "PUSH3",
      "value": "0xF2A"
    },
    "3919": {
      "op": "JUMP"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "SWAP8"
    },
    "3922": {
      "op": "SWAP7"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "op": "POP"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "op": "POP"
    },
    "3928": {
      "op": "POP"
    },
    "3929": {
      "op": "POP"
    },
    "3930": {
      "jump": "o",
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "DUP1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3940": {
      "op": "DUP1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3943": {
      "op": "DUP1"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3946": {
      "op": "DUP1"
    },
    "3947": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "3950": {
      "op": "DUP12"
    },
    "3951": {
      "op": "DUP14"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "op": "SLT"
    },
    "3954": {
      "op": "ISZERO"
    },
    "3955": {
      "op": "PUSH3",
      "value": "0xF7C"
    },
    "3959": {
      "op": "JUMPI"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3962": {
      "op": "DUP1"
    },
    "3963": {
      "op": "REVERT"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "DUP11"
    },
    "3966": {
      "op": "CALLDATALOAD"
    },
    "3967": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3976": {
      "op": "DUP1"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "GT"
    },
    "3979": {
      "op": "ISZERO"
    },
    "3980": {
      "op": "PUSH3",
      "value": "0xF95"
    },
    "3984": {
      "op": "JUMPI"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3987": {
      "op": "DUP1"
    },
    "3988": {
      "op": "REVERT"
    },
    "3989": {
      "op": "JUMPDEST"
    },
    "3990": {
      "op": "PUSH3",
      "value": "0xFA3"
    },
    "3994": {
      "op": "DUP15"
    },
    "3995": {
      "op": "DUP4"
    },
    "3996": {
      "op": "DUP16"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "PUSH3",
      "value": "0xDA2"
    },
    "4002": {
      "jump": "i",
      "op": "JUMP"
    },
    "4003": {
      "op": "JUMPDEST"
    },
    "4004": {
      "op": "SWAP12"
    },
    "4005": {
      "op": "POP"
    },
    "4006": {
      "op": "PUSH3",
      "value": "0xFB3"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4012": {
      "op": "DUP15"
    },
    "4013": {
      "op": "ADD"
    },
    "4014": {
      "op": "PUSH3",
      "value": "0xE19"
    },
    "4018": {
      "jump": "i",
      "op": "JUMP"
    },
    "4019": {
      "op": "JUMPDEST"
    },
    "4020": {
      "op": "SWAP11"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "op": "PUSH3",
      "value": "0xFC3"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4028": {
      "op": "DUP15"
    },
    "4029": {
      "op": "ADD"
    },
    "4030": {
      "op": "PUSH3",
      "value": "0xE19"
    },
    "4034": {
      "jump": "i",
      "op": "JUMP"
    },
    "4035": {
      "op": "JUMPDEST"
    },
    "4036": {
      "op": "SWAP10"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4040": {
      "op": "DUP14"
    },
    "4041": {
      "op": "ADD"
    },
    "4042": {
      "op": "CALLDATALOAD"
    },
    "4043": {
      "op": "SWAP9"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "PUSH3",
      "value": "0xFDB"
    },
    "4049": {
      "op": "DUP15"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4052": {
      "op": "DUP16"
    },
    "4053": {
      "op": "ADD"
    },
    "4054": {
      "op": "PUSH3",
      "value": "0xE2F"
    },
    "4058": {
      "jump": "i",
      "op": "JUMP"
    },
    "4059": {
      "op": "JUMPDEST"
    },
    "4060": {
      "op": "SWAP8"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4064": {
      "op": "DUP14"
    },
    "4065": {
      "op": "ADD"
    },
    "4066": {
      "op": "CALLDATALOAD"
    },
    "4067": {
      "op": "SWAP2"
    },
    "4068": {
      "op": "POP"
    },
    "4069": {
      "op": "DUP1"
    },
    "4070": {
      "op": "DUP3"
    },
    "4071": {
      "op": "GT"
    },
    "4072": {
      "op": "ISZERO"
    },
    "4073": {
      "op": "PUSH3",
      "value": "0xFF2"
    },
    "4077": {
      "op": "JUMPI"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4080": {
      "op": "DUP1"
    },
    "4081": {
      "op": "REVERT"
    },
    "4082": {
      "op": "JUMPDEST"
    },
    "4083": {
      "op": "PUSH3",
      "value": "0x1000"
    },
    "4087": {
      "op": "DUP15"
    },
    "4088": {
      "op": "DUP4"
    },
    "4089": {
      "op": "DUP16"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "op": "PUSH3",
      "value": "0xEC7"
    },
    "4095": {
      "jump": "i",
      "op": "JUMP"
    },
    "4096": {
      "op": "JUMPDEST"
    },
    "4097": {
      "op": "SWAP7"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "op": "PUSH3",
      "value": "0x1011"
    },
    "4103": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4106": {
      "op": "DUP15"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "PUSH3",
      "value": "0xEBA"
    },
    "4112": {
      "jump": "i",
      "op": "JUMP"
    },
    "4113": {
      "op": "JUMPDEST"
    },
    "4114": {
      "op": "SWAP6"
    },
    "4115": {
      "op": "POP"
    },
    "4116": {
      "op": "PUSH3",
      "value": "0x1022"
    },
    "4120": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4123": {
      "op": "DUP15"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "PUSH3",
      "value": "0xEBA"
    },
    "4129": {
      "jump": "i",
      "op": "JUMP"
    },
    "4130": {
      "op": "JUMPDEST"
    },
    "4131": {
      "op": "SWAP5"
    },
    "4132": {
      "op": "POP"
    },
    "4133": {
      "op": "PUSH3",
      "value": "0x1033"
    },
    "4137": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4140": {
      "op": "DUP15"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "PUSH3",
      "value": "0xEBA"
    },
    "4146": {
      "jump": "i",
      "op": "JUMP"
    },
    "4147": {
      "op": "JUMPDEST"
    },
    "4148": {
      "op": "SWAP4"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4153": {
      "op": "DUP14"
    },
    "4154": {
      "op": "ADD"
    },
    "4155": {
      "op": "CALLDATALOAD"
    },
    "4156": {
      "op": "SWAP2"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "op": "DUP1"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "GT"
    },
    "4161": {
      "op": "ISZERO"
    },
    "4162": {
      "op": "PUSH3",
      "value": "0x104B"
    },
    "4166": {
      "op": "JUMPI"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4169": {
      "op": "DUP1"
    },
    "4170": {
      "op": "REVERT"
    },
    "4171": {
      "op": "JUMPDEST"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "PUSH3",
      "value": "0x105A"
    },
    "4177": {
      "op": "DUP14"
    },
    "4178": {
      "op": "DUP3"
    },
    "4179": {
      "op": "DUP15"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "PUSH3",
      "value": "0xDA2"
    },
    "4185": {
      "jump": "i",
      "op": "JUMP"
    },
    "4186": {
      "op": "JUMPDEST"
    },
    "4187": {
      "op": "SWAP2"
    },
    "4188": {
      "op": "POP"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "op": "SWAP3"
    },
    "4191": {
      "op": "SWAP6"
    },
    "4192": {
      "op": "SWAP9"
    },
    "4193": {
      "op": "SWAP12"
    },
    "4194": {
      "op": "SWAP2"
    },
    "4195": {
      "op": "SWAP5"
    },
    "4196": {
      "op": "SWAP8"
    },
    "4197": {
      "op": "SWAP11"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "op": "SWAP3"
    },
    "4200": {
      "op": "SWAP6"
    },
    "4201": {
      "op": "SWAP9"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "jump": "o",
      "op": "JUMP"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4209": {
      "op": "DUP3"
    },
    "4210": {
      "op": "DUP5"
    },
    "4211": {
      "op": "SUB"
    },
    "4212": {
      "op": "SLT"
    },
    "4213": {
      "op": "ISZERO"
    },
    "4214": {
      "op": "PUSH3",
      "value": "0x107F"
    },
    "4218": {
      "op": "JUMPI"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "REVERT"
    },
    "4223": {
      "op": "JUMPDEST"
    },
    "4224": {
      "op": "DUP2"
    },
    "4225": {
      "op": "CALLDATALOAD"
    },
    "4226": {
      "op": "PUSH3",
      "value": "0x108C"
    },
    "4230": {
      "op": "DUP2"
    },
    "4231": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4235": {
      "jump": "i",
      "op": "JUMP"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "op": "SWAP4"
    },
    "4238": {
      "op": "SWAP3"
    },
    "4239": {
      "op": "POP"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "jump": "o",
      "op": "JUMP"
    },
    "4243": {
      "op": "JUMPDEST"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "DUP5"
    },
    "4250": {
      "op": "SUB"
    },
    "4251": {
      "op": "SLT"
    },
    "4252": {
      "op": "ISZERO"
    },
    "4253": {
      "op": "PUSH3",
      "value": "0x10A6"
    },
    "4257": {
      "op": "JUMPI"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4260": {
      "op": "DUP1"
    },
    "4261": {
      "op": "REVERT"
    },
    "4262": {
      "op": "JUMPDEST"
    },
    "4263": {
      "op": "POP"
    },
    "4264": {
      "op": "CALLDATALOAD"
    },
    "4265": {
      "op": "SWAP2"
    },
    "4266": {
      "op": "SWAP1"
    },
    "4267": {
      "op": "POP"
    },
    "4268": {
      "jump": "o",
      "op": "JUMP"
    },
    "4269": {
      "op": "JUMPDEST"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4272": {
      "op": "DUP1"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4275": {
      "op": "DUP1"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4278": {
      "op": "DUP1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4281": {
      "op": "DUP8"
    },
    "4282": {
      "op": "DUP10"
    },
    "4283": {
      "op": "SUB"
    },
    "4284": {
      "op": "SLT"
    },
    "4285": {
      "op": "ISZERO"
    },
    "4286": {
      "op": "PUSH3",
      "value": "0x10C7"
    },
    "4290": {
      "op": "JUMPI"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4293": {
      "op": "DUP1"
    },
    "4294": {
      "op": "REVERT"
    },
    "4295": {
      "op": "JUMPDEST"
    },
    "4296": {
      "op": "DUP7"
    },
    "4297": {
      "op": "CALLDATALOAD"
    },
    "4298": {
      "op": "PUSH3",
      "value": "0x10D4"
    },
    "4302": {
      "op": "DUP2"
    },
    "4303": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4307": {
      "jump": "i",
      "op": "JUMP"
    },
    "4308": {
      "op": "JUMPDEST"
    },
    "4309": {
      "op": "SWAP6"
    },
    "4310": {
      "op": "POP"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4313": {
      "op": "DUP8"
    },
    "4314": {
      "op": "ADD"
    },
    "4315": {
      "op": "CALLDATALOAD"
    },
    "4316": {
      "op": "PUSH3",
      "value": "0x10E6"
    },
    "4320": {
      "op": "DUP2"
    },
    "4321": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4325": {
      "jump": "i",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "SWAP5"
    },
    "4328": {
      "op": "POP"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4331": {
      "op": "DUP8"
    },
    "4332": {
      "op": "ADD"
    },
    "4333": {
      "op": "CALLDATALOAD"
    },
    "4334": {
      "op": "PUSH3",
      "value": "0x10F8"
    },
    "4338": {
      "op": "DUP2"
    },
    "4339": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4343": {
      "jump": "i",
      "op": "JUMP"
    },
    "4344": {
      "op": "JUMPDEST"
    },
    "4345": {
      "op": "SWAP4"
    },
    "4346": {
      "op": "POP"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4349": {
      "op": "DUP8"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "CALLDATALOAD"
    },
    "4352": {
      "op": "PUSH3",
      "value": "0x110A"
    },
    "4356": {
      "op": "DUP2"
    },
    "4357": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4361": {
      "jump": "i",
      "op": "JUMP"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "SWAP3"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4367": {
      "op": "DUP8"
    },
    "4368": {
      "op": "ADD"
    },
    "4369": {
      "op": "CALLDATALOAD"
    },
    "4370": {
      "op": "PUSH3",
      "value": "0x111C"
    },
    "4374": {
      "op": "DUP2"
    },
    "4375": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4379": {
      "jump": "i",
      "op": "JUMP"
    },
    "4380": {
      "op": "JUMPDEST"
    },
    "4381": {
      "op": "SWAP2"
    },
    "4382": {
      "op": "POP"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4385": {
      "op": "DUP8"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "CALLDATALOAD"
    },
    "4388": {
      "op": "PUSH3",
      "value": "0x112E"
    },
    "4392": {
      "op": "DUP2"
    },
    "4393": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4397": {
      "jump": "i",
      "op": "JUMP"
    },
    "4398": {
      "op": "JUMPDEST"
    },
    "4399": {
      "op": "DUP1"
    },
    "4400": {
      "op": "SWAP2"
    },
    "4401": {
      "op": "POP"
    },
    "4402": {
      "op": "POP"
    },
    "4403": {
      "op": "SWAP3"
    },
    "4404": {
      "op": "SWAP6"
    },
    "4405": {
      "op": "POP"
    },
    "4406": {
      "op": "SWAP3"
    },
    "4407": {
      "op": "SWAP6"
    },
    "4408": {
      "op": "POP"
    },
    "4409": {
      "op": "SWAP3"
    },
    "4410": {
      "op": "SWAP6"
    },
    "4411": {
      "jump": "o",
      "op": "JUMP"
    },
    "4412": {
      "op": "JUMPDEST"
    },
    "4413": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4420": {
      "op": "SHL"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4423": {
      "op": "MSTORE"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4428": {
      "op": "MSTORE"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4433": {
      "op": "REVERT"
    },
    "4434": {
      "op": "JUMPDEST"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4437": {
      "op": "DUP2"
    },
    "4438": {
      "op": "MLOAD"
    },
    "4439": {
      "op": "DUP1"
    },
    "4440": {
      "op": "DUP5"
    },
    "4441": {
      "op": "MSTORE"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "JUMPDEST"
    },
    "4445": {
      "op": "DUP2"
    },
    "4446": {
      "op": "DUP2"
    },
    "4447": {
      "op": "LT"
    },
    "4448": {
      "op": "ISZERO"
    },
    "4449": {
      "op": "PUSH3",
      "value": "0x117A"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "op": "DUP2"
    },
    "4457": {
      "op": "DUP6"
    },
    "4458": {
      "op": "ADD"
    },
    "4459": {
      "op": "DUP2"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "MLOAD"
    },
    "4462": {
      "op": "DUP7"
    },
    "4463": {
      "op": "DUP4"
    },
    "4464": {
      "op": "ADD"
    },
    "4465": {
      "op": "DUP3"
    },
    "4466": {
      "op": "ADD"
    },
    "4467": {
      "op": "MSTORE"
    },
    "4468": {
      "op": "ADD"
    },
    "4469": {
      "op": "PUSH3",
      "value": "0x115C"
    },
    "4473": {
      "op": "JUMP"
    },
    "4474": {
      "op": "JUMPDEST"
    },
    "4475": {
      "op": "DUP2"
    },
    "4476": {
      "op": "DUP2"
    },
    "4477": {
      "op": "GT"
    },
    "4478": {
      "op": "ISZERO"
    },
    "4479": {
      "op": "PUSH3",
      "value": "0x118D"
    },
    "4483": {
      "op": "JUMPI"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4488": {
      "op": "DUP4"
    },
    "4489": {
      "op": "DUP8"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "MSTORE"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "POP"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4497": {
      "op": "ADD"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4500": {
      "op": "NOT"
    },
    "4501": {
      "op": "AND"
    },
    "4502": {
      "op": "SWAP3"
    },
    "4503": {
      "op": "SWAP1"
    },
    "4504": {
      "op": "SWAP3"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4508": {
      "op": "ADD"
    },
    "4509": {
      "op": "SWAP3"
    },
    "4510": {
      "op": "SWAP2"
    },
    "4511": {
      "op": "POP"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "jump": "o",
      "op": "JUMP"
    },
    "4514": {
      "op": "JUMPDEST"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4520": {
      "op": "DUP1"
    },
    "4521": {
      "op": "DUP4"
    },
    "4522": {
      "op": "MSTORE"
    },
    "4523": {
      "op": "PUSH3",
      "value": "0x11B8"
    },
    "4527": {
      "op": "DUP2"
    },
    "4528": {
      "op": "DUP5"
    },
    "4529": {
      "op": "ADD"
    },
    "4530": {
      "op": "DUP16"
    },
    "4531": {
      "op": "PUSH3",
      "value": "0x1152"
    },
    "4535": {
      "jump": "i",
      "op": "JUMP"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "DUP14"
    },
    "4538": {
      "op": "ISZERO"
    },
    "4539": {
      "op": "ISZERO"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4542": {
      "op": "DUP6"
    },
    "4543": {
      "op": "ADD"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "DUP13"
    },
    "4546": {
      "op": "ISZERO"
    },
    "4547": {
      "op": "ISZERO"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4550": {
      "op": "DUP6"
    },
    "4551": {
      "op": "ADD"
    },
    "4552": {
      "op": "MSTORE"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4555": {
      "op": "DUP5"
    },
    "4556": {
      "op": "ADD"
    },
    "4557": {
      "op": "DUP13"
    },
    "4558": {
      "op": "SWAP1"
    },
    "4559": {
      "op": "MSTORE"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4562": {
      "op": "DUP5"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "DUP12"
    },
    "4565": {
      "op": "SWAP1"
    },
    "4566": {
      "op": "MSTORE"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4569": {
      "op": "DUP5"
    },
    "4570": {
      "op": "ADD"
    },
    "4571": {
      "op": "DUP11"
    },
    "4572": {
      "op": "SWAP1"
    },
    "4573": {
      "op": "MSTORE"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4576": {
      "op": "DUP5"
    },
    "4577": {
      "op": "ADD"
    },
    "4578": {
      "op": "DUP10"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "MSTORE"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4587": {
      "op": "SHL"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "op": "DUP9"
    },
    "4590": {
      "op": "DUP2"
    },
    "4591": {
      "op": "AND"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4594": {
      "op": "DUP7"
    },
    "4595": {
      "op": "ADD"
    },
    "4596": {
      "op": "MSTORE"
    },
    "4597": {
      "op": "DUP8"
    },
    "4598": {
      "op": "DUP2"
    },
    "4599": {
      "op": "AND"
    },
    "4600": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4603": {
      "op": "DUP7"
    },
    "4604": {
      "op": "ADD"
    },
    "4605": {
      "op": "MSTORE"
    },
    "4606": {
      "op": "DUP7"
    },
    "4607": {
      "op": "AND"
    },
    "4608": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4611": {
      "op": "DUP6"
    },
    "4612": {
      "op": "ADD"
    },
    "4613": {
      "op": "MSTORE"
    },
    "4614": {
      "op": "DUP4"
    },
    "4615": {
      "op": "DUP2"
    },
    "4616": {
      "op": "SUB"
    },
    "4617": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4620": {
      "op": "DUP6"
    },
    "4621": {
      "op": "ADD"
    },
    "4622": {
      "op": "MSTORE"
    },
    "4623": {
      "op": "SWAP1"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "op": "PUSH3",
      "value": "0x121C"
    },
    "4629": {
      "op": "DUP2"
    },
    "4630": {
      "op": "DUP6"
    },
    "4631": {
      "op": "PUSH3",
      "value": "0x1152"
    },
    "4635": {
      "jump": "i",
      "op": "JUMP"
    },
    "4636": {
      "op": "JUMPDEST"
    },
    "4637": {
      "op": "SWAP15"
    },
    "4638": {
      "op": "SWAP14"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "op": "POP"
    },
    "4641": {
      "op": "POP"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "op": "POP"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "jump": "o",
      "op": "JUMP"
    },
    "4654": {
      "op": "JUMPDEST"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4659": {
      "op": "DUP3"
    },
    "4660": {
      "op": "DUP5"
    },
    "4661": {
      "op": "SUB"
    },
    "4662": {
      "op": "SLT"
    },
    "4663": {
      "op": "ISZERO"
    },
    "4664": {
      "op": "PUSH3",
      "value": "0x1241"
    },
    "4668": {
      "op": "JUMPI"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4671": {
      "op": "DUP1"
    },
    "4672": {
      "op": "REVERT"
    },
    "4673": {
      "op": "JUMPDEST"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "MLOAD"
    },
    "4676": {
      "op": "PUSH3",
      "value": "0x108C"
    },
    "4680": {
      "op": "DUP2"
    },
    "4681": {
      "op": "PUSH3",
      "value": "0xEA4"
    },
    "4685": {
      "jump": "i",
      "op": "JUMP"
    },
    "4686": {
      "op": "JUMPDEST"
    },
    "4687": {
      "op": "DUP1"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4690": {
      "op": "JUMPDEST"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "LT"
    },
    "4695": {
      "op": "ISZERO"
    },
    "4696": {
      "op": "PUSH3",
      "value": "0x127C"
    },
    "4700": {
      "op": "JUMPI"
    },
    "4701": {
      "op": "DUP2"
    },
    "4702": {
      "op": "MLOAD"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4709": {
      "op": "SHL"
    },
    "4710": {
      "op": "SUB"
    },
    "4711": {
      "op": "AND"
    },
    "4712": {
      "op": "DUP5"
    },
    "4713": {
      "op": "MSTORE"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4716": {
      "op": "SWAP4"
    },
    "4717": {
      "op": "DUP5"
    },
    "4718": {
      "op": "ADD"
    },
    "4719": {
      "op": "SWAP4"
    },
    "4720": {
      "op": "SWAP1"
    },
    "4721": {
      "op": "SWAP2"
    },
    "4722": {
      "op": "ADD"
    },
    "4723": {
      "op": "SWAP1"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4726": {
      "op": "ADD"
    },
    "4727": {
      "op": "PUSH3",
      "value": "0x1252"
    },
    "4731": {
      "op": "JUMP"
    },
    "4732": {
      "op": "JUMPDEST"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "op": "POP"
    },
    "4736": {
      "op": "POP"
    },
    "4737": {
      "jump": "o",
      "op": "JUMP"
    },
    "4738": {
      "op": "JUMPDEST"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4741": {
      "op": "DUP2"
    },
    "4742": {
      "op": "MLOAD"
    },
    "4743": {
      "op": "DUP1"
    },
    "4744": {
      "op": "DUP5"
    },
    "4745": {
      "op": "MSTORE"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4748": {
      "op": "DUP1"
    },
    "4749": {
      "op": "DUP6"
    },
    "4750": {
      "op": "ADD"
    },
    "4751": {
      "op": "SWAP5"
    },
    "4752": {
      "op": "POP"
    },
    "4753": {
      "op": "DUP1"
    },
    "4754": {
      "op": "DUP5"
    },
    "4755": {
      "op": "ADD"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4758": {
      "op": "JUMPDEST"
    },
    "4759": {
      "op": "DUP4"
    },
    "4760": {
      "op": "DUP2"
    },
    "4761": {
      "op": "LT"
    },
    "4762": {
      "op": "ISZERO"
    },
    "4763": {
      "op": "PUSH3",
      "value": "0x12BD"
    },
    "4767": {
      "op": "JUMPI"
    },
    "4768": {
      "op": "DUP2"
    },
    "4769": {
      "op": "MLOAD"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4776": {
      "op": "SHL"
    },
    "4777": {
      "op": "SUB"
    },
    "4778": {
      "op": "AND"
    },
    "4779": {
      "op": "DUP8"
    },
    "4780": {
      "op": "MSTORE"
    },
    "4781": {
      "op": "SWAP6"
    },
    "4782": {
      "op": "DUP3"
    },
    "4783": {
      "op": "ADD"
    },
    "4784": {
      "op": "SWAP6"
    },
    "4785": {
      "op": "SWAP1"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "SWAP1"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4791": {
      "op": "ADD"
    },
    "4792": {
      "op": "PUSH3",
      "value": "0x1296"
    },
    "4796": {
      "op": "JUMP"
    },
    "4797": {
      "op": "JUMPDEST"
    },
    "4798": {
      "op": "POP"
    },
    "4799": {
      "op": "SWAP5"
    },
    "4800": {
      "op": "SWAP6"
    },
    "4801": {
      "op": "SWAP5"
    },
    "4802": {
      "op": "POP"
    },
    "4803": {
      "op": "POP"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "POP"
    },
    "4807": {
      "jump": "o",
      "op": "JUMP"
    },
    "4808": {
      "op": "JUMPDEST"
    },
    "4809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4815": {
      "op": "SHL"
    },
    "4816": {
      "op": "SUB"
    },
    "4817": {
      "op": "DUP10"
    },
    "4818": {
      "op": "AND"
    },
    "4819": {
      "op": "DUP2"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4826": {
      "op": "DUP1"
    },
    "4827": {
      "op": "DUP4"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "DUP3"
    },
    "4830": {
      "op": "SWAP1"
    },
    "4831": {
      "op": "MSTORE"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4834": {
      "op": "SWAP2"
    },
    "4835": {
      "op": "SWAP1"
    },
    "4836": {
      "op": "PUSH3",
      "value": "0x12F1"
    },
    "4840": {
      "op": "DUP5"
    },
    "4841": {
      "op": "DUP4"
    },
    "4842": {
      "op": "ADD"
    },
    "4843": {
      "op": "DUP13"
    },
    "4844": {
      "op": "PUSH3",
      "value": "0x1152"
    },
    "4848": {
      "jump": "i",
      "op": "JUMP"
    },
    "4849": {
      "op": "JUMPDEST"
    },
    "4850": {
      "op": "SWAP2"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "DUP10"
    },
    "4853": {
      "op": "ISZERO"
    },
    "4854": {
      "op": "ISZERO"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4857": {
      "op": "DUP6"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "op": "MSTORE"
    },
    "4860": {
      "op": "DUP9"
    },
    "4861": {
      "op": "ISZERO"
    },
    "4862": {
      "op": "ISZERO"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4865": {
      "op": "DUP6"
    },
    "4866": {
      "op": "ADD"
    },
    "4867": {
      "op": "MSTORE"
    },
    "4868": {
      "op": "DUP8"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4871": {
      "op": "DUP6"
    },
    "4872": {
      "op": "ADD"
    },
    "4873": {
      "op": "MSTORE"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4876": {
      "op": "DUP5"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "DUP8"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4881": {
      "op": "JUMPDEST"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4884": {
      "op": "DUP2"
    },
    "4885": {
      "op": "LT"
    },
    "4886": {
      "op": "ISZERO"
    },
    "4887": {
      "op": "PUSH3",
      "value": "0x1330"
    },
    "4891": {
      "op": "JUMPI"
    },
    "4892": {
      "op": "DUP2"
    },
    "4893": {
      "op": "MLOAD"
    },
    "4894": {
      "op": "DUP4"
    },
    "4895": {
      "op": "MSTORE"
    },
    "4896": {
      "op": "SWAP2"
    },
    "4897": {
      "op": "DUP4"
    },
    "4898": {
      "op": "ADD"
    },
    "4899": {
      "op": "SWAP2"
    },
    "4900": {
      "op": "SWAP1"
    },
    "4901": {
      "op": "DUP4"
    },
    "4902": {
      "op": "ADD"
    },
    "4903": {
      "op": "SWAP1"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "ADD"
    },
    "4907": {
      "op": "PUSH3",
      "value": "0x1311"
    },
    "4911": {
      "op": "JUMP"
    },
    "4912": {
      "op": "JUMPDEST"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "PUSH3",
      "value": "0x1344"
    },
    "4921": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4924": {
      "op": "DUP5"
    },
    "4925": {
      "op": "ADD"
    },
    "4926": {
      "op": "DUP7"
    },
    "4927": {
      "op": "PUSH3",
      "value": "0x124E"
    },
    "4931": {
      "jump": "i",
      "op": "JUMP"
    },
    "4932": {
      "op": "JUMPDEST"
    },
    "4933": {
      "op": "DUP3"
    },
    "4934": {
      "op": "DUP2"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "4939": {
      "op": "DUP5"
    },
    "4940": {
      "op": "ADD"
    },
    "4941": {
      "op": "MSTORE"
    },
    "4942": {
      "op": "PUSH3",
      "value": "0x1359"
    },
    "4946": {
      "op": "DUP2"
    },
    "4947": {
      "op": "DUP6"
    },
    "4948": {
      "op": "PUSH3",
      "value": "0x1282"
    },
    "4952": {
      "jump": "i",
      "op": "JUMP"
    },
    "4953": {
      "op": "JUMPDEST"
    },
    "4954": {
      "op": "SWAP12"
    },
    "4955": {
      "op": "SWAP11"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "op": "POP"
    },
    "4959": {
      "op": "POP"
    },
    "4960": {
      "op": "POP"
    },
    "4961": {
      "op": "POP"
    },
    "4962": {
      "op": "POP"
    },
    "4963": {
      "op": "POP"
    },
    "4964": {
      "op": "POP"
    },
    "4965": {
      "op": "POP"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "jump": "o",
      "op": "JUMP"
    },
    "4968": {
      "op": "JUMPDEST"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4975": {
      "op": "SHL"
    },
    "4976": {
      "op": "SUB"
    },
    "4977": {
      "op": "DUP4"
    },
    "4978": {
      "op": "AND"
    },
    "4979": {
      "op": "DUP2"
    },
    "4980": {
      "op": "MSTORE"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4985": {
      "op": "DUP3"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "DUP2"
    },
    "4988": {
      "op": "SWAP1"
    },
    "4989": {
      "op": "MSTORE"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4992": {
      "op": "SWAP1"
    },
    "4993": {
      "op": "PUSH3",
      "value": "0x138E"
    },
    "4997": {
      "op": "SWAP1"
    },
    "4998": {
      "op": "DUP4"
    },
    "4999": {
      "op": "ADD"
    },
    "5000": {
      "op": "DUP5"
    },
    "5001": {
      "op": "PUSH3",
      "value": "0x1152"
    },
    "5005": {
      "jump": "i",
      "op": "JUMP"
    },
    "5006": {
      "op": "JUMPDEST"
    },
    "5007": {
      "op": "SWAP5"
    },
    "5008": {
      "op": "SWAP4"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "POP"
    },
    "5011": {
      "op": "POP"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "jump": "o",
      "op": "JUMP"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5019": {
      "op": "NOT"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "EQ"
    },
    "5022": {
      "op": "ISZERO"
    },
    "5023": {
      "op": "PUSH3",
      "value": "0x13B9"
    },
    "5027": {
      "op": "JUMPI"
    },
    "5028": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5035": {
      "op": "SHL"
    },
    "5036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5038": {
      "op": "MSTORE"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5043": {
      "op": "MSTORE"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5048": {
      "op": "REVERT"
    },
    "5049": {
      "op": "JUMPDEST"
    },
    "5050": {
      "op": "POP"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5053": {
      "op": "ADD"
    },
    "5054": {
      "op": "SWAP1"
    },
    "5055": {
      "jump": "o",
      "op": "JUMP"
    },
    "5056": {
      "op": "JUMPDEST"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "op": "SUB"
    },
    "5065": {
      "op": "DUP5"
    },
    "5066": {
      "op": "AND"
    },
    "5067": {
      "op": "DUP2"
    },
    "5068": {
      "op": "MSTORE"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5073": {
      "op": "DUP3"
    },
    "5074": {
      "op": "ADD"
    },
    "5075": {
      "op": "DUP2"
    },
    "5076": {
      "op": "SWAP1"
    },
    "5077": {
      "op": "MSTORE"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5080": {
      "op": "SWAP1"
    },
    "5081": {
      "op": "PUSH3",
      "value": "0x13E6"
    },
    "5085": {
      "op": "SWAP1"
    },
    "5086": {
      "op": "DUP4"
    },
    "5087": {
      "op": "ADD"
    },
    "5088": {
      "op": "DUP6"
    },
    "5089": {
      "op": "PUSH3",
      "value": "0x1152"
    },
    "5093": {
      "jump": "i",
      "op": "JUMP"
    },
    "5094": {
      "op": "JUMPDEST"
    },
    "5095": {
      "op": "SWAP1"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "op": "DUP3"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5100": {
      "op": "DUP4"
    },
    "5101": {
      "op": "ADD"
    },
    "5102": {
      "op": "MSTORE"
    },
    "5103": {
      "op": "SWAP5"
    },
    "5104": {
      "op": "SWAP4"
    },
    "5105": {
      "op": "POP"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "POP"
    },
    "5108": {
      "op": "POP"
    },
    "5109": {
      "jump": "o",
      "op": "JUMP"
    },
    "5110": {
      "op": "JUMPDEST"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5113": {
      "op": "DUP1"
    },
    "5114": {
      "op": "DUP3"
    },
    "5115": {
      "op": "MSTORE"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "5118": {
      "op": "SWAP1"
    },
    "5119": {
      "op": "DUP3"
    },
    "5120": {
      "op": "ADD"
    },
    "5121": {
      "op": "MSTORE"
    },
    "5122": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5157": {
      "op": "DUP3"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "op": "MSTORE"
    },
    "5160": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5174": {
      "op": "SHL"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5177": {
      "op": "DUP3"
    },
    "5178": {
      "op": "ADD"
    },
    "5179": {
      "op": "MSTORE"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5182": {
      "op": "ADD"
    },
    "5183": {
      "op": "SWAP1"
    },
    "5184": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d23af13ff3888a1c3278db84fbddf4d8036e67c1",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\";\nimport \"../../interfaces/ICLHouse.sol\";\nimport \"../../interfaces/ICLFactory.sol\";\nimport \"../CLProxy/CLBeacon.sol\";\nimport \"../CLProxy/CLProxyCLH.sol\";\nimport \"../APICLH/CLHouseApi.sol\";\n\n\n/// @title Crypto League House Factory\n/// @notice Create and config CLHouses\n/// @dev This contract is the standard way to create CLH\n/// @author Leonardo Urrego\ncontract CLFactory is ICLFactory, Initializable, OwnableUpgradeable {\n    /// @notice Store the number of houses created\n    uint256 public numCLH;\n\n    uint256[10] __gapUint256;\n\n    /// @notice Contract with the CLH Constructor logic\n    address public CLLConstructorCLH;\n\n    /// @notice Contract with the functions for user management\n    address public CLLUserManagement;\n\n    /// @notice Contract with the functions for Governance\n    address public CLLGovernance;\n\n    /// @notice Contract CLHouse API\n    address public CLHAPI;\n\n    address[10] __gapAddress;\n\n    /// @notice Contract Object of the beacon (store the add)\n    /// @dev The beacon store the updated address of CLH\n    CLBeacon public beaconCLH;\n    \n    /// @notice Relation houseAddr with houseId\n    mapping( address => uint256 ) public mapIdCLH;\n    \n    /// @notice Mapping to store all the created houses\n    mapping(uint256 => ICLHouse) public mapCLH;\n\n    /// @notice Contract Object of the beacon (store the add)\n    /// @dev The beacon store the updated address of CLHNFT\n    CLBeacon public beaconNFT;\n\n\n\n\n\n    /// @notice Event when house is created\n    /// @param houseAddr Address of the created house\n    /// @param houseName Name of the created house\n    /// @param houseId Id of CLH of the created house\n    event evtNewCLH( address houseAddr, string houseName, uint256 houseId );\n\n    /// @notice Event when a CL Contract address is updated\n    /// @param CLCName Name of contract var\n    /// @param oldAddress Old Address value of the var\n    /// @param newAddress New Address value of the var\n    event evtUpdateCLC( string CLCName, address oldAddress, address newAddress );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /// @notice Config the CLFactory with the CL Logic Contracts\n    /// @param _CLLUserManagement Address Contract Logic for user management\n    /// @param _CLLGovernance Address Contract Logic for governance\n    /// @param _CLLConstructorCLH Address Contract with the Constructor logic\n    /// @param _CLHAPI Address of CLHAPI Contract\n    /// @param _beaconCLH Address Beacon CLH Contract\n    /// @param _beaconNFT Address Beacon NFT Contract\n    /// @dev The constructor create a default CLH with the houseId #0\n    function Init(\n        address _CLLUserManagement,\n        address _CLLGovernance,\n        address _CLLConstructorCLH,\n        address _CLHAPI,\n        address _beaconCLH,\n        address _beaconNFT\n    )\n        public\n        reinitializer( __UPGRADEABLE_CLF_VERSION__ )\n    {\n        beaconCLH = CLBeacon( _beaconCLH );\n        beaconNFT = CLBeacon( _beaconNFT );\n\n        CLLUserManagement = _CLLUserManagement;\n        CLLGovernance = _CLLGovernance;\n        CLLConstructorCLH = _CLLConstructorCLH;\n        CLHAPI = _CLHAPI;\n\n        numCLH = 0;\n        mapCLH[ numCLH ] = ICLHouse( address(0) );\n        mapIdCLH[ address(0) ] = numCLH;\n\n        __Ownable_init();\n    }\n\n\n    /// @notice Deploy a new CLHouse\n    /// @param _houseName Name of the CLH\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _houseOpen If is set to 1, the CLH is set to open\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRules Array for goverment rules see `enum gRule`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    /// @param _gnosisSafe Contract address of SAFE\n    /// @param _signerWallet Wallet address of the signer for OffChain Tx\n    /// @param _signature Signature for validate OffChain Tx\n    /// @dev Some parameters wil be ignored depending on the governance model\n    function CreateCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256[3] memory _govRules,\n        address[] memory _ManagerWallets,\n        address _gnosisSafe,\n        address _whiteListNFT,\n        address _signerWallet,\n        bytes memory _signature\n    ) \n        public\n    {\n        address houseOwner = msg.sender;\n\n        require( \n            __GOV_DICTATORSHIP__ == _govModel ||\n            __GOV_COMMITTEE__ == _govModel ||\n            __GOV_SIMPLE_MAJORITY__ == _govModel ,\n            \"Invalid Governance Type\"\n        );\n\n        if( _signerWallet != address(0) ) {\n            require( _signature.length == 65, \"CreateCLH: Bad signature length\" );\n            \n            require(\n                _signerWallet == CLHouseApi( CLHAPI ).SignerOCNewCLH(\n                    _houseName,\n                    _housePrivate,\n                    _houseOpen,\n                    _govModel,\n                    _govRules[0],\n                    _govRules[1],\n                    _govRules[2],\n                    _whiteListNFT,\n                    _ManagerWallets[0],\n                    address(this),\n                    _signature\n                ),\n                \"CreateCLH: Invalid Signature\"\n            );\n\n            houseOwner = _signerWallet;\n        }\n\n        CLProxyCLH pxyCLH = new CLProxyCLH(\n            address( beaconCLH ),\n            abi.encodeWithSignature(\n                \"Init(address,string,bool,bool,bytes32,uint256[3],address[6],address[])\",\n                houseOwner, \n                _houseName,\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRules,\n                [ CLLConstructorCLH, address(this), CLHAPI, _gnosisSafe, _whiteListNFT, address( beaconNFT ) ],\n                _ManagerWallets\n            )\n        );\n\n        numCLH++;\n        mapCLH[ numCLH ] = ICLHouse( address( pxyCLH ) );\n        mapIdCLH[ address( pxyCLH ) ] = numCLH;\n\n        emit evtNewCLH( address( pxyCLH ), _houseName, numCLH );\n    }\n\n\n    /// @notice Get the address of the CLH contract logic\n    function getCLHImplementation() external view returns (address) {\n        return beaconCLH.implementation();\n    }\n\n    /// @notice Update the CLLConstructorCLH contract Address\n    function UpdateCLLConstructorCLH( address _CLLConstructorCLH ) external onlyOwner {\n        address oldAddr = CLLConstructorCLH;\n        CLLConstructorCLH = _CLLConstructorCLH;\n        emit evtUpdateCLC( \"CLLConstructorCLH\", oldAddr, _CLLConstructorCLH );\n    }\n\n    /// @notice Update the CLLUserManagement contract Address\n    function UpdateCLLUserManagement( address _CLLUserManagement ) external onlyOwner {\n        address oldAddr = CLLUserManagement;\n        CLLUserManagement = _CLLUserManagement;\n        emit evtUpdateCLC( \"CLLUserManagement\", oldAddr, _CLLUserManagement );\n    }\n\n    /// @notice Update the CLLGovernance contract Address\n    function UpdateCLLGovernance( address _CLLGovernance ) external onlyOwner {\n        address oldAddr = CLLGovernance;\n        CLLGovernance = _CLLGovernance;\n        emit evtUpdateCLC( \"CLLGovernance\", oldAddr, _CLLGovernance );\n    }\n\n    /// @notice Update the CLHAPI contract Address\n    function UpdateCLHAPI( address _CLHAPI ) external onlyOwner {\n        address oldAddr = CLHAPI;\n        CLHAPI = _CLHAPI;\n        emit evtUpdateCLC( \"CLHAPI\", oldAddr, _CLHAPI );\n    }\n}",
  "sourceMap": "496:7171:49:-:0;;;2221:53;;;;;;;;;-1:-1:-1;2245:22:49;:20;:22::i;:::-;496:7171;;5388:279:1;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:1;;216:2:66;5447:66:1;;;198:21:66;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:66;;;338:37;392:19;;5447:66:1;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:1;5588:15;5573:30;;;;;;5622:28;;564:36:66;;;5622:28:1;;552:2:66;537:18;5622:28:1;;;;;;;5523:138;5388:279::o;422:184:66:-;496:7171:49;;;;;;",
  "sourcePath": "contracts/CLFactory/CLFactory.sol",
  "type": "contract"
}