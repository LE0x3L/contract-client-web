{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "numUsers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "numManagers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxUsers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "govRuleMaxManagers",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUser",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strUser[]",
          "name": "arrUsers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCDelUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleMaxUsers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleMaxManagers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_whiteListWallets",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addrCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "44": "contracts/CLHouse/CLHouseApi.sol",
    "50": "contracts/CLHouse/CLTypes.sol",
    "53": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouseApi.sol",
    "exportedSymbols": {
      "CLHouseApi": [
        1753
      ],
      "DebugDLGTCLL": [
        6341
      ],
      "ICLHouse": [
        5389
      ],
      "InvalidGovernanceType": [
        6335
      ],
      "__CONTRACT_NAME_HASH__": [
        6367
      ],
      "__CONTRACT_VERSION_HASH__": [
        6372
      ],
      "__GOV_COMMITTEE__": [
        6357
      ],
      "__GOV_DICTATORSHIP__": [
        6352
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        6362
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        6380
      ],
      "__STR_OCDELUSER_HASH__": [
        6412
      ],
      "__STR_OCINVIT_HASH__": [
        6388
      ],
      "__STR_OCNEWCLH_HASH__": [
        6428
      ],
      "__STR_OCNEWUSER_HASH__": [
        6404
      ],
      "__STR_OCREQUEST_HASH__": [
        6420
      ],
      "__STR_OCVOTE_HASH__": [
        6396
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        6347
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        6344
      ],
      "assetsEvent": [
        6442
      ],
      "eCLC": [
        6465
      ],
      "gRule": [
        6460
      ],
      "proposalEvent": [
        6446
      ],
      "proposalType": [
        6456
      ],
      "strDataAddUser": [
        6510
      ],
      "strDataGovRules": [
        6522
      ],
      "strDataTxAssets": [
        6519
      ],
      "strProposal": [
        6496
      ],
      "strUser": [
        6476
      ],
      "strVote": [
        6503
      ],
      "userEvent": [
        6435
      ]
    },
    "id": 1754,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1091,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:44"
      },
      {
        "absolutePath": "contracts/CLHouse/ICLHouse.sol",
        "file": "./ICLHouse.sol",
        "id": 1092,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1754,
        "sourceUnit": 5390,
        "src": "58:24:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CLHouseApi",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1093,
          "nodeType": "StructuredDocumentation",
          "src": "84:124:44",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 1753,
        "linearizedBaseContracts": [
          1753
        ],
        "name": "CLHouseApi",
        "nameLocation": "217:10:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "583:546:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1104,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "602:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "602:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "623:2:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "602:23:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "627:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 1103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "593:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "593:58:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "593:58:44"
                },
                {
                  "assignments": [
                    1112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1112,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "670:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "662:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1111,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "662:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1113,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "662:13:44"
                },
                {
                  "assignments": [
                    1115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1115,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "693:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "685:13:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1114,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "685:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1116,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "685:13:44"
                },
                {
                  "assignments": [
                    1118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "714:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "708:11:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "708:11:44"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "739:324:44",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "808:39:44",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "829:10:44"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "841:2:44",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "824:3:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "824:21:44"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "817:5:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:30:44"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "808:5:44"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "891:39:44",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "912:10:44"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "924:2:44",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "907:3:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "907:21:44"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "900:5:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "900:30:44"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "891:5:44"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1003:50:44",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1018:1:44",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1033:10:44"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1045:2:44",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1028:3:44"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1028:21:44"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1021:5:44"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1021:30:44"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1012:4:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1012:41:44"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "1003:5:44"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1098,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1033:10:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1098,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "829:10:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1098,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "912:10:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1112,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "808:5:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1115,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "891:5:44",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1118,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1003:5:44",
                      "valueSize": 1
                    }
                  ],
                  "id": 1120,
                  "nodeType": "InlineAssembly",
                  "src": "730:333:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1122,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "1091:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1123,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "1101:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1124,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "1108:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1125,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "1115:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1121,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1080:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:42:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1102,
                  "id": 1127,
                  "nodeType": "Return",
                  "src": "1073:49:44"
                }
              ]
            },
            "documentation": {
              "id": 1094,
              "nodeType": "StructuredDocumentation",
              "src": "235:197:44",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "446:11:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "476:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "467:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1098,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "507:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "494:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:66:44"
            },
            "returnParameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "569:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "567:11:44"
            },
            "scope": 1753,
            "src": "437:692:44",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "1750:601:44",
              "statements": [
                {
                  "assignments": [
                    1147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1147,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1769:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1206,
                      "src": "1760:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5389",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 1146,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1145,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5389,
                          "src": "1760:8:44"
                        },
                        "referencedDeclaration": 5389,
                        "src": "1760:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5389",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1151,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1149,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "1788:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1148,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5389,
                      "src": "1778:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5389_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5389",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1760:40:44"
                },
                {
                  "assignments": [
                    1153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1153,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1819:3:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1206,
                      "src": "1811:11:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1811:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1158,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1156,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "1843:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1154,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "1825:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5389",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5274,
                      "src": "1825:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1811:45:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1876:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1161,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1153,
                          "src": "1881:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1876:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1887:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 1159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1867:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:43:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:43:44"
                },
                {
                  "assignments": [
                    1168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1168,
                      "mutability": "mutable",
                      "name": "houseUser",
                      "nameLocation": "1936:9:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1206,
                      "src": "1921:24:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                        "typeString": "struct strUser"
                      },
                      "typeName": {
                        "id": 1167,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1166,
                          "name": "strUser",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6476,
                          "src": "1921:7:44"
                        },
                        "referencedDeclaration": 6476,
                        "src": "1921:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strUser_$6476_storage_ptr",
                          "typeString": "struct strUser"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1169,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1921:24:44"
                },
                {
                  "expression": {
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 1170,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "1960:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6467,
                          "src": "1960:20:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1173,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "1994:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6469,
                          "src": "1994:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 1175,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2022:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6471,
                          "src": "2022:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1177,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2053:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6473,
                          "src": "2053:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 1179,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2083:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6475,
                          "src": "2083:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1181,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1956:148:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1184,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1153,
                          "src": "2124:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1182,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1147,
                          "src": "2107:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$5389",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5216,
                        "src": "2107:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2107:22:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1956:173:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:173:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2149:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1190,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2157:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6473,
                          "src": "2157:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2149:24:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4973206e6f7420612075736572",
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2177:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        },
                        "value": "Is not a user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        }
                      ],
                      "id": 1188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2140:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:54:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "2140:54:44"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1196,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "2226:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6469,
                        "src": "2226:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1198,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "2254:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6471,
                        "src": "2254:17:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1200,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "2285:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6473,
                        "src": "2285:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 1202,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "2315:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6475,
                        "src": "2315:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1204,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2212:132:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 1144,
                  "id": 1205,
                  "nodeType": "Return",
                  "src": "2205:139:44"
                }
              ]
            },
            "documentation": {
              "id": 1130,
              "nodeType": "StructuredDocumentation",
              "src": "1135:346:44",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isUser true if is User\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 1207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1495:20:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1533:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1525:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1561:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1553:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1515:63:44"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1652:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1638:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1675:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1670:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "isUser",
                  "nameLocation": "1701:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1696:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1726:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "1721:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:121:44"
            },
            "scope": 1753,
            "src": "1486:865:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1303,
              "nodeType": "Block",
              "src": "2657:731:44",
              "statements": [
                {
                  "assignments": [
                    1219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1219,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2676:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1303,
                      "src": "2667:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5389",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 1218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1217,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5389,
                          "src": "2667:8:44"
                        },
                        "referencedDeclaration": 5389,
                        "src": "2667:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5389",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1223,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1221,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "2695:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1220,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5389,
                      "src": "2685:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5389_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5389",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2667:40:44"
                },
                {
                  "assignments": [
                    1225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1225,
                      "mutability": "mutable",
                      "name": "numUsers",
                      "nameLocation": "2724:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1303,
                      "src": "2718:14:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1224,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2718:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1229,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1226,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "2735:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5389",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5181,
                      "src": "2735:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2735:18:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2718:35:44"
                },
                {
                  "assignments": [
                    1231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1231,
                      "mutability": "mutable",
                      "name": "arrUsersLength",
                      "nameLocation": "2771:14:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1303,
                      "src": "2763:22:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2763:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1235,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1232,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "2788:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5389",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrUsersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5299,
                      "src": "2788:24:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:51:44"
                },
                {
                  "assignments": [
                    1240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "_arrUsers",
                      "nameLocation": "2841:9:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1303,
                      "src": "2824:26:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$6476_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strUser[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1237,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6476,
                            "src": "2824:7:44"
                          },
                          "referencedDeclaration": 6476,
                          "src": "2824:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$6476_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 1239,
                        "nodeType": "ArrayTypeName",
                        "src": "2824:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$6476_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1247,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1245,
                        "name": "numUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "2869:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2853:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strUser_$6476_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strUser memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1242,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1241,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6476,
                            "src": "2857:7:44"
                          },
                          "referencedDeclaration": 6476,
                          "src": "2857:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$6476_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 1243,
                        "nodeType": "ArrayTypeName",
                        "src": "2857:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$6476_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2853:26:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$6476_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2824:55:44"
                },
                {
                  "assignments": [
                    1249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2896:5:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1303,
                      "src": "2890:11:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1248,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2890:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1251,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2904:1:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2890:15:44"
                },
                {
                  "body": {
                    "id": 1299,
                    "nodeType": "Block",
                    "src": "2971:385:44",
                    "statements": [
                      {
                        "assignments": [
                          1264
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1264,
                            "mutability": "mutable",
                            "name": "houseUser",
                            "nameLocation": "3000:9:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 1299,
                            "src": "2985:24:44",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                              "typeString": "struct strUser"
                            },
                            "typeName": {
                              "id": 1263,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1262,
                                "name": "strUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 6476,
                                "src": "2985:7:44"
                              },
                              "referencedDeclaration": 6476,
                              "src": "2985:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$6476_storage_ptr",
                                "typeString": "struct strUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1265,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:24:44"
                      },
                      {
                        "expression": {
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 1266,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "3028:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 1268,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6467,
                                "src": "3028:20:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1269,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "3066:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6469,
                                "src": "3066:14:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1271,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "3098:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 1272,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6471,
                                "src": "3098:17:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1273,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "3133:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 1274,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6473,
                                "src": "3133:16:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1275,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "3167:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 1276,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6475,
                                "src": "3167:19:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1277,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3024:164:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1280,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1253,
                                "src": "3208:3:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1278,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1219,
                                "src": "3191:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$5389",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 1279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5216,
                              "src": "3191:15:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3191:22:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "3024:189:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1283,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:189:44"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3232:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1285,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "3240:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                "typeString": "struct strUser memory"
                              }
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6473,
                            "src": "3240:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3232:24:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1298,
                        "nodeType": "IfStatement",
                        "src": "3228:118:44",
                        "trueBody": {
                          "id": 1297,
                          "nodeType": "Block",
                          "src": "3258:88:44",
                          "statements": [
                            {
                              "expression": {
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1288,
                                    "name": "_arrUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1240,
                                    "src": "3276:9:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strUser_$6476_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strUser memory[] memory"
                                    }
                                  },
                                  "id": 1290,
                                  "indexExpression": {
                                    "id": 1289,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1249,
                                    "src": "3287:5:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3276:18:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1291,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1264,
                                  "src": "3297:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "src": "3276:30:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strUser_$6476_memory_ptr",
                                  "typeString": "struct strUser memory"
                                }
                              },
                              "id": 1293,
                              "nodeType": "ExpressionStatement",
                              "src": "3276:30:44"
                            },
                            {
                              "expression": {
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3324:7:44",
                                "subExpression": {
                                  "id": 1294,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1249,
                                  "src": "3324:5:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1296,
                              "nodeType": "ExpressionStatement",
                              "src": "3324:7:44"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1256,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "2940:3:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1257,
                      "name": "arrUsersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "2946:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2940:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1300,
                  "initializationExpression": {
                    "assignments": [
                      1253
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2930:3:44",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "2922:11:44",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2922:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1255,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2936:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2922:15:44"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2963:5:44",
                      "subExpression": {
                        "id": 1259,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "2963:3:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1261,
                    "nodeType": "ExpressionStatement",
                    "src": "2963:5:44"
                  },
                  "nodeType": "ForStatement",
                  "src": "2917:439:44"
                },
                {
                  "expression": {
                    "id": 1301,
                    "name": "_arrUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1240,
                    "src": "3372:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$6476_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "functionReturnParameters": 1216,
                  "id": 1302,
                  "nodeType": "Return",
                  "src": "3365:16:44"
                }
              ]
            },
            "documentation": {
              "id": 1208,
              "nodeType": "StructuredDocumentation",
              "src": "2357:136:44",
              "text": "@notice The list of all users address\n @param _houseAddr address of the CLH\n @return arrUsers array with list of users"
            },
            "functionSelector": "b698be8d",
            "id": 1304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2507:16:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1210,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2541:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "2533:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2533:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2523:34:44"
            },
            "returnParameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "arrUsers",
                  "nameLocation": "2634:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "2617:25:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strUser_$6476_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1213,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1212,
                        "name": "strUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6476,
                        "src": "2617:7:44"
                      },
                      "referencedDeclaration": 6476,
                      "src": "2617:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$6476_storage_ptr",
                        "typeString": "struct strUser"
                      }
                    },
                    "id": 1214,
                    "nodeType": "ArrayTypeName",
                    "src": "2617:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$6476_storage_$dyn_storage_ptr",
                      "typeString": "struct strUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2603:49:44"
            },
            "scope": 1753,
            "src": "2498:890:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "4409:387:44",
              "statements": [
                {
                  "assignments": [
                    1328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1328,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4428:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1359,
                      "src": "4419:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5389",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 1327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1326,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5389,
                          "src": "4419:8:44"
                        },
                        "referencedDeclaration": 5389,
                        "src": "4419:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5389",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1332,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1330,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "4447:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1329,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5389,
                      "src": "4437:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5389_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4437:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5389",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4419:40:44"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1333,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4490:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5171,
                          "src": "4490:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4490:19:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1336,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4523:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5176,
                          "src": "4523:29:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4523:31:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1339,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4568:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5166,
                          "src": "4568:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4568:21:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1342,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4603:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5181,
                          "src": "4603:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4603:17:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1345,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4634:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5186,
                          "src": "4634:18:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4634:20:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1348,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4668:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5191,
                          "src": "4668:30:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4668:32:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1351,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4714:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5196,
                          "src": "4714:22:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4714:24:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1354,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "4752:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5389",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 1355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5201,
                          "src": "4752:25:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4752:27:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1357,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4476:313:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(string memory,bytes32,bool,uint8,uint8,uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 1325,
                  "id": 1358,
                  "nodeType": "Return",
                  "src": "4470:319:44"
                }
              ]
            },
            "documentation": {
              "id": 1305,
              "nodeType": "StructuredDocumentation",
              "src": "3394:600:44",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return numUsers Current users of a CLH\n @return numManagers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n @return govRuleMaxUsers Max of all users (including managers)\n @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "4008:18:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4044:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4036:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4026:34:44"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "4134:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4120:24:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4120:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "4166:22:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4158:30:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "4207:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4202:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4202:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "numUsers",
                  "nameLocation": "4239:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4233:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4233:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "numManagers",
                  "nameLocation": "4267:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4261:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4298:23:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4292:29:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4292:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "govRuleMaxUsers",
                  "nameLocation": "4341:15:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4335:21:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagers",
                  "nameLocation": "4376:18:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4370:24:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4370:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4106:298:44"
            },
            "scope": 1753,
            "src": "3999:797:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1411,
              "nodeType": "Block",
              "src": "4973:592:44",
              "statements": [
                {
                  "assignments": [
                    1372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "4991:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "4983:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1371,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4983:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1384,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1376,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "5061:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1377,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6367,
                            "src": "5104:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1378,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6372,
                            "src": "5144:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1379,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5187:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "5187:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1381,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "5218:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1374,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5033:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5033:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5033:209:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1373,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5010:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5010:242:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4983:269:44"
                },
                {
                  "assignments": [
                    1386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1386,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "5271:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "5263:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5263:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1394,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1390,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6388,
                            "src": "5332:20:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1391,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "5370:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 1388,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5304:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5304:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5304:91:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1387,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5281:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:124:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5263:142:44"
                },
                {
                  "assignments": [
                    1396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1396,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5424:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1411,
                      "src": "5416:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1395,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5416:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1405,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5464:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1401,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "5476:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1402,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1386,
                            "src": "5494:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1398,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5446:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5446:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5446:57:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1397,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5435:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5435:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5416:89:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1407,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1396,
                        "src": "5536:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1408,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "5546:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1406,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "5523:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1370,
                  "id": 1410,
                  "nodeType": "Return",
                  "src": "5516:42:44"
                }
              ]
            },
            "functionSelector": "9f6fd7ab",
            "id": 1412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "4812:13:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "4840:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "4835:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4835:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4869:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "4861:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4861:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4902:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "4889:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4889:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4825:93:44"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "4959:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4959:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4957:11:44"
            },
            "scope": 1753,
            "src": "4803:762:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "5798:678:44",
              "statements": [
                {
                  "assignments": [
                    1428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1428,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5816:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "5808:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1427,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5808:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1440,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1432,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "5886:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1433,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6367,
                            "src": "5929:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1434,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6372,
                            "src": "5969:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1435,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6012:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6012:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1437,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1420,
                            "src": "6043:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1430,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5858:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5858:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5858:209:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1429,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5835:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5835:242:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5808:269:44"
                },
                {
                  "assignments": [
                    1442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1442,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "6096:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "6088:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1441,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6088:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1457,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1446,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6396,
                            "src": "6157:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1447,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "6194:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1448,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "6219:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1452,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1418,
                                    "src": "6274:14:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1450,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6256:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6256:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6256:34:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1449,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6245:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6245:47:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1444,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6129:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6129:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6129:177:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1443,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6106:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:210:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6088:228:44"
                },
                {
                  "assignments": [
                    1459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1459,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "6335:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "6327:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1458,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6327:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1468,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6375:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1464,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1428,
                            "src": "6387:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1465,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1442,
                            "src": "6405:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1461,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6357:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6357:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6357:57:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1460,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6346:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6346:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6327:89:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1470,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "6447:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1471,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1422,
                        "src": "6457:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1469,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "6434:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6434:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1426,
                  "id": 1473,
                  "nodeType": "Return",
                  "src": "6427:42:44"
                }
              ]
            },
            "functionSelector": "89ab062a",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "5581:12:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "5608:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "5603:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5603:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1416,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "5630:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "5625:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1415,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5625:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1418,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "5662:14:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "5648:28:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1420,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5694:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "5686:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5686:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5727:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "5714:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5593:150:44"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "5784:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5784:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5782:11:44"
            },
            "scope": 1753,
            "src": "5572:904:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1548,
              "nodeType": "Block",
              "src": "6776:769:44",
              "statements": [
                {
                  "assignments": [
                    1495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1495,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "6794:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1548,
                      "src": "6786:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1494,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6786:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1507,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1499,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "6864:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1500,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6367,
                            "src": "6907:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1501,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6372,
                            "src": "6947:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1502,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6990:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6990:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1504,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "7021:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1497,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6836:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6836:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6836:209:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1496,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6813:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6813:242:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6786:269:44"
                },
                {
                  "assignments": [
                    1509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1509,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7074:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1548,
                      "src": "7066:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1508,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7066:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1531,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1513,
                            "name": "__STR_OCNEWUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6404,
                            "src": "7135:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1514,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "7175:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1518,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "7233:5:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1516,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7215:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7215:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7215:25:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1515,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7204:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7204:38:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1524,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1481,
                                    "src": "7289:12:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1522,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7271:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7271:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7271:32:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1521,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7260:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7260:45:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1527,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1483,
                            "src": "7323:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1528,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1485,
                            "src": "7351:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1511,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7107:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7107:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7107:268:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1510,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7084:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7084:301:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7066:319:44"
                },
                {
                  "assignments": [
                    1533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1533,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7404:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1548,
                      "src": "7396:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1532,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7396:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1542,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7444:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1538,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "7456:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1539,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1509,
                            "src": "7474:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1535,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7426:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7426:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7426:57:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1534,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7415:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7415:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7396:89:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1544,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "7516:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1545,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "7526:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1543,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "7503:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7503:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1493,
                  "id": 1547,
                  "nodeType": "Return",
                  "src": "7496:42:44"
                }
              ]
            },
            "functionSelector": "f240c7e9",
            "id": 1549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewUser",
            "nameLocation": "6492:15:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6525:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6517:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6517:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "6560:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6546:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6546:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6589:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6575:26:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "6616:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6611:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6611:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6644:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6636:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6672:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6664:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6664:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6705:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6692:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6692:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6507:214:44"
            },
            "returnParameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "6762:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6762:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6760:11:44"
            },
            "scope": 1753,
            "src": "6483:1062:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1611,
              "nodeType": "Block",
              "src": "7791:685:44",
              "statements": [
                {
                  "assignments": [
                    1565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1565,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "7809:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1611,
                      "src": "7801:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1564,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7801:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1577,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1569,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "7879:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1570,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6367,
                            "src": "7922:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1571,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6372,
                            "src": "7962:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1572,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8005:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8005:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1574,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1557,
                            "src": "8036:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1567,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7851:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7851:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7851:209:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1566,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7828:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7828:242:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7801:269:44"
                },
                {
                  "assignments": [
                    1579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1579,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8089:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1611,
                      "src": "8081:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1578,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8081:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1594,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1583,
                            "name": "__STR_OCDELUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6412,
                            "src": "8150:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1584,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1551,
                            "src": "8190:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1588,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1553,
                                    "src": "8248:12:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1586,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8230:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8230:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8230:32:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1585,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8219:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8219:45:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1591,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "8282:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1581,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8122:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8122:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8122:184:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1580,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8099:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8099:217:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8081:235:44"
                },
                {
                  "assignments": [
                    1596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1596,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8335:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1611,
                      "src": "8327:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1595,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8327:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1605,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8375:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1601,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1565,
                            "src": "8387:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1602,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1579,
                            "src": "8405:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1598,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8357:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8357:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8357:57:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1597,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8346:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8346:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8327:89:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1607,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "8447:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1608,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1559,
                        "src": "8457:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1606,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "8434:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8434:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1563,
                  "id": 1610,
                  "nodeType": "Return",
                  "src": "8427:42:44"
                }
              ]
            },
            "functionSelector": "349dc296",
            "id": 1612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCDelUser",
            "nameLocation": "7561:15:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7594:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "7586:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7586:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7629:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "7615:26:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7615:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7659:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "7651:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7651:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7687:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "7679:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7679:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7720:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "7707:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7707:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7576:160:44"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "7777:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7777:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7775:11:44"
            },
            "scope": 1753,
            "src": "7552:924:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "8694:684:44",
              "statements": [
                {
                  "assignments": [
                    1626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1626,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8712:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "8704:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1625,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8704:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1638,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1630,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "8782:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1631,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6367,
                            "src": "8825:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1632,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6372,
                            "src": "8865:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1633,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8908:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8908:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1635,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1618,
                            "src": "8939:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1628,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8754:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8754:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8754:209:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1627,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8731:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8731:242:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8704:269:44"
                },
                {
                  "assignments": [
                    1640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1640,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8992:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "8984:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1639,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8984:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1659,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1644,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6420,
                            "src": "9053:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1648,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1614,
                                    "src": "9122:5:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1646,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9104:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9104:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9104:25:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1645,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9093:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9093:38:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1654,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1616,
                                    "src": "9178:12:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1652,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9160:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9160:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9160:32:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1651,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9149:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9149:45:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1642,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9025:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9025:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9025:183:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1641,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9002:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9002:216:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8984:234:44"
                },
                {
                  "assignments": [
                    1661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1661,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9237:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1676,
                      "src": "9229:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1660,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9229:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1670,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9277:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1666,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "9289:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1667,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1640,
                            "src": "9307:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1663,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9259:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9259:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9259:57:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1662,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9248:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9248:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9229:89:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1672,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1661,
                        "src": "9349:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1673,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "9359:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1671,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "9336:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9336:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1624,
                  "id": 1675,
                  "nodeType": "Return",
                  "src": "9329:42:44"
                }
              ]
            },
            "functionSelector": "7b3bb156",
            "id": 1677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequest",
            "nameLocation": "8492:15:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8531:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "8517:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8517:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1616,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8560:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "8546:26:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8546:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1618,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "8590:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "8582:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8582:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8623:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "8610:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8610:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8507:132:44"
            },
            "returnParameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "8680:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8680:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8678:11:44"
            },
            "scope": 1753,
            "src": "8483:895:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1751,
              "nodeType": "Block",
              "src": "9759:899:44",
              "statements": [
                {
                  "assignments": [
                    1701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1701,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9777:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1751,
                      "src": "9769:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1700,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9769:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1713,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1705,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "9847:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1706,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6367,
                            "src": "9890:22:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1707,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6372,
                            "src": "9930:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1708,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9973:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9973:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1710,
                            "name": "_addrCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1693,
                            "src": "10004:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1703,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9819:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9819:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9819:207:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1702,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9796:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9796:240:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9769:267:44"
                },
                {
                  "assignments": [
                    1715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1715,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "10055:7:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1751,
                      "src": "10047:15:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1714,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10047:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1734,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1719,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6428,
                            "src": "10116:21:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1723,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1679,
                                    "src": "10184:10:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1721,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10166:3:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10166:16:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10166:30:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1720,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10155:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10155:43:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1726,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "10216:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1727,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1683,
                            "src": "10247:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1728,
                            "name": "_govRuleMaxUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "10274:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 1729,
                            "name": "_govRuleMaxManagers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "10308:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 1730,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1689,
                            "src": "10345:24:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 1731,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "10387:17:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1717,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10088:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10088:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10088:400:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1716,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10065:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10065:433:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10047:451:44"
                },
                {
                  "assignments": [
                    1736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1736,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "10517:8:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 1751,
                      "src": "10509:16:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1735,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10509:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1745,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10557:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1741,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1701,
                            "src": "10569:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1742,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "10587:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1738,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10539:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10539:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10539:57:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1737,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10528:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10528:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10509:89:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1747,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1736,
                        "src": "10629:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1748,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1695,
                        "src": "10639:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1746,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "10616:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10616:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1699,
                  "id": 1750,
                  "nodeType": "Return",
                  "src": "10609:42:44"
                }
              ]
            },
            "functionSelector": "364ae0d8",
            "id": 1752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "9394:14:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "9432:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9418:24:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9418:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "9457:13:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9452:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9452:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "9488:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9480:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9480:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1685,
                  "mutability": "mutable",
                  "name": "_govRuleMaxUsers",
                  "nameLocation": "9513:16:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9507:22:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9507:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1687,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagers",
                  "nameLocation": "9545:19:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9539:25:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9539:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1689,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "9580:24:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9574:30:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1688,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9574:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1691,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "9622:17:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9614:25:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1693,
                  "mutability": "mutable",
                  "name": "_addrCLF",
                  "nameLocation": "9657:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9649:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9649:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9688:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9675:23:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9675:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9408:296:44"
            },
            "returnParameters": {
              "id": 1699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1752,
                  "src": "9745:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9745:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9743:11:44"
            },
            "scope": 1753,
            "src": "9385:1273:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1754,
        "src": "208:10452:44",
        "usedErrors": []
      }
    ],
    "src": "32:10628:44"
  },
  "bytecode": "608060405234801561001057600080fd5b50611d88806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638750bc3e116100665780638750bc3e1461012f57806389ab062a146101565780639f6fd7ab14610169578063b698be8d1461017c578063f240c7e91461019c57600080fd5b8063349dc296146100a3578063364ae0d8146100d3578063622eca77146100e65780637b3bb156146100f957806386abd8261461010c575b600080fd5b6100b66100b1366004611497565b6101af565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e1366004611554565b610359565b6100b66100f436600461162f565b610591565b6100b6610107366004611676565b610655565b61011f61011a366004611713565b6107ec565b6040516100ca94939291906117a8565b61014261013d3660046117d9565b6109b1565b6040516100ca9897969594939291906117fd565b6100b6610164366004611850565b610cf2565b6100b66101773660046118b5565b610e26565b61018f61018a3660046117d9565b610f49565b6040516100ca9190611917565b6100b66101aa3660046119bb565b61117c565b6000806040516020016101c190611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d13833981519152468760405160200161020b959493929190611af0565b604051602081830303815290604052805190602001209050600060405160200161028c907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016102b49190611b1c565b60405160208183030381529060405280519060200120886040516020016102fd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040516020818303038152906040528051906020012090506000828260405160200161032a929190611b38565b60405160208183030381529060405280519060200120905061034c8186610591565b9998505050505050505050565b60008060405160200161036b90611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d1383398151915246876040516020016103b5959493929190611af0565b60405160208183030381529060405280519060200120905060006040516020016104a9907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c6279746573333220676f764d6f64656c2c60208201527f75696e743820676f7652756c654d617855736572732c75696e743820676f765260408201527f756c654d61784d616e61676572732c75696e743820676f7652756c654170707260608201527f6f7650657263656e746167652c616464726573732077686974654c69737457616080820152656c6c6574732960d01b60a082015260a60190565b604051602081830303815290604052805190602001208c6040516020016104d09190611b1c565b60408051601f198184030181528282528051602091820120908301939093528101919091528b15156060820152608081018b905260ff808b1660a0830152808a1660c0830152881660e08201526001600160a01b038716610100820152610120016040516020818303038152906040528051906020012090506000828260405160200161055e929190611b38565b6040516020818303038152906040528051906020012090506105808186610591565b9d9c50505050505050505050505050565b600081516041146105e05760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610640573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161066790611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d1383398151915246876040516020016106b1959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001610713907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b604051602081830303815290604052805190602001208760405160200161073a9190611b1c565b60405160208183030381529060405280519060200120876040516020016107619190611b1c565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001209050600082826040516020016107be929190611b38565b6040516020818303038152906040528051906020012090506107e08186610591565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190611b53565b9050806108a95760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016105d7565b6108b161136e565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa1580156108f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261091e9190810190611bb9565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011461098a5760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016105d7565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a00573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a289190810190611c3c565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190611b53565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec9190611c71565b836001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e9190611c8e565b846001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb09190611c8e565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c129190611c8e565b866001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190611c8e565b876001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd69190611c8e565b9850985098509850985098509850985050919395975091939597565b600080604051602001610d0490611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d138339815191524687604051602001610d4e959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001610dc1907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610dea9190611b1c565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a0016102fd565b600080604051602001610e3890611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d138339815191524687604051602001610e82959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001610ecf907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610f1c9084908490608001611b38565b604051602081830303815290604052805190602001209050610f3e8186610591565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190611c8e565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a9190611b53565b905060008260ff1667ffffffffffffffff81111561103a5761103a6113d2565b60405190808252806020026020018201604052801561107357816020015b61106061136e565b8152602001906001900390816110585790505b509050600060015b838110156111705761108b61136e565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa1580156110d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f89190810190611bb9565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561115d5780848460ff168151811061114357611143611cab565b6020026020010181905250828061115990611cd7565b9350505b508061116881611cf7565b91505061107b565b50909695505050505050565b60008060405160200161118e90611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d1383398151915246876040516020016111d8959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001611271907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016112999190611b1c565b604051602081830303815290604052805190602001208a6040516020016112c09190611b1c565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e0016040516020818303038152906040528051906020012090506000828260405160200161133d929190611b38565b60405160208183030381529060405280519060200120905061135f8186610591565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b03811681146113bf57600080fd5b50565b80356113cd816113aa565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611411576114116113d2565b604052919050565b600067ffffffffffffffff821115611433576114336113d2565b50601f01601f191660200190565b600082601f83011261145257600080fd5b813561146561146082611419565b6113e8565b81815284602083860101111561147a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156114af57600080fd5b85356114ba816113aa565b9450602086013567ffffffffffffffff808211156114d757600080fd5b6114e389838a01611441565b955060408801359450606088013591506114fc826113aa565b9092506080870135908082111561151257600080fd5b5061151f88828901611441565b9150509295509295909350565b80151581146113bf57600080fd5b60ff811681146113bf57600080fd5b80356113cd8161153a565b60008060008060008060008060006101208a8c03121561157357600080fd5b893567ffffffffffffffff8082111561158b57600080fd5b6115978d838e01611441565b9a5060208c013591506115a98261152c565b90985060408b0135975060608b0135906115c28261153a565b8197506115d160808d01611549565b96506115df60a08d01611549565b95506115ed60c08d016113c2565b94506115fb60e08d016113c2565b93506101008c013591508082111561161257600080fd5b5061161f8c828d01611441565b9150509295985092959850929598565b6000806040838503121561164257600080fd5b82359150602083013567ffffffffffffffff81111561166057600080fd5b61166c85828601611441565b9150509250929050565b6000806000806080858703121561168c57600080fd5b843567ffffffffffffffff808211156116a457600080fd5b6116b088838901611441565b955060208701359150808211156116c657600080fd5b6116d288838901611441565b9450604087013591506116e4826113aa565b909250606086013590808211156116fa57600080fd5b5061170787828801611441565b91505092959194509250565b6000806040838503121561172657600080fd5b8235611731816113aa565b91506020830135611741816113aa565b809150509250929050565b60005b8381101561176757818101518382015260200161174f565b83811115611776576000848401525b50505050565b6000815180845261179481602086016020860161174c565b601f01601f19169290920160200192915050565b6080815260006117bb608083018761177c565b60208301959095525091151560408301521515606090910152919050565b6000602082840312156117eb57600080fd5b81356117f6816113aa565b9392505050565b60006101008083526118118184018c61177c565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b600080600080600060a0868803121561186857600080fd5b85359450602086013561187a8161152c565b9350604086013567ffffffffffffffff8082111561189757600080fd5b6118a389838a01611441565b9450606088013591506114fc826113aa565b6000806000606084860312156118ca57600080fd5b83356118d58161152c565b925060208401356118e5816113aa565b9150604084013567ffffffffffffffff81111561190157600080fd5b61190d86828701611441565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156119ad57888303603f19018552815180516001600160a01b031684528781015160a0898601819052906119778287018261177c565b838a0151878b0152606080850151151590880152608093840151151593909601929092525050938601939086019060010161193e565b509098975050505050505050565b600080600080600080600060e0888a0312156119d657600080fd5b87356119e1816113aa565b9650602088013567ffffffffffffffff808211156119fe57600080fd5b611a0a8b838c01611441565b975060408a0135915080821115611a2057600080fd5b611a2c8b838c01611441565b965060608a01359150611a3e8261152c565b81955060808a01359450611a5460a08b016113c2565b935060c08a0135915080821115611a6a57600080fd5b50611a778a828b01611441565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611b2e81846020870161174c565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611b6557600080fd5b5051919050565b600082601f830112611b7d57600080fd5b8151611b8b61146082611419565b818152846020838601011115611ba057600080fd5b611bb182602083016020870161174c565b949350505050565b600080600080600060a08688031215611bd157600080fd5b8551611bdc816113aa565b602087015190955067ffffffffffffffff811115611bf957600080fd5b611c0588828901611b6c565b945050604086015192506060860151611c1d8161152c565b6080870151909250611c2e8161152c565b809150509295509295909350565b600060208284031215611c4e57600080fd5b815167ffffffffffffffff811115611c6557600080fd5b611bb184828501611b6c565b600060208284031215611c8357600080fd5b81516117f68161152c565b600060208284031215611ca057600080fd5b81516117f68161153a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611cee57611cee611cc1565b60010192915050565b6000600019821415611d0b57611d0b611cc1565b506001019056feaa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a264697066735822122026fdc4812d0f0b47d56589a99f5d3bfe0564a0d0afdb260524d1de281eb9055164736f6c634300080c0033",
  "bytecodeSha1": "a31e9a1b9ea9ae1c9defb3dfc4e1eb81e8ac9c51",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouseApi",
  "coverageMap": {
    "branches": {
      "44": {
        "CLHouseApi.GetHouseUserList": {
          "20": [
            3232,
            3256,
            false
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "18": [
            1876,
            1884,
            true
          ],
          "19": [
            2149,
            2173,
            true
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "17": [
            602,
            625,
            true
          ]
        }
      },
      "50": {},
      "53": {}
    },
    "statements": {
      "44": {
        "CLHouseApi.GetHouseProperties": {
          "9": [
            4470,
            4789
          ]
        },
        "CLHouseApi.GetHouseUserList": {
          "11": [
            3024,
            3213
          ],
          "12": [
            3276,
            3306
          ],
          "13": [
            3324,
            3331
          ],
          "14": [
            2963,
            2968
          ],
          "15": [
            3365,
            3381
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "5": [
            1867,
            1910
          ],
          "6": [
            1956,
            2129
          ],
          "7": [
            2140,
            2194
          ],
          "8": [
            2205,
            2344
          ]
        },
        "CLHouseApi.SignerOCDelUser": {
          "0": [
            8427,
            8469
          ]
        },
        "CLHouseApi.SignerOCInvit": {
          "10": [
            5516,
            5558
          ]
        },
        "CLHouseApi.SignerOCNewCLH": {
          "1": [
            10609,
            10651
          ]
        },
        "CLHouseApi.SignerOCNewUser": {
          "16": [
            7496,
            7538
          ]
        },
        "CLHouseApi.SignerOCRequest": {
          "4": [
            9329,
            9371
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "2": [
            593,
            651
          ],
          "3": [
            1073,
            1122
          ]
        }
      },
      "50": {},
      "53": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638750bc3e116100665780638750bc3e1461012f57806389ab062a146101565780639f6fd7ab14610169578063b698be8d1461017c578063f240c7e91461019c57600080fd5b8063349dc296146100a3578063364ae0d8146100d3578063622eca77146100e65780637b3bb156146100f957806386abd8261461010c575b600080fd5b6100b66100b1366004611497565b6101af565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e1366004611554565b610359565b6100b66100f436600461162f565b610591565b6100b6610107366004611676565b610655565b61011f61011a366004611713565b6107ec565b6040516100ca94939291906117a8565b61014261013d3660046117d9565b6109b1565b6040516100ca9897969594939291906117fd565b6100b6610164366004611850565b610cf2565b6100b66101773660046118b5565b610e26565b61018f61018a3660046117d9565b610f49565b6040516100ca9190611917565b6100b66101aa3660046119bb565b61117c565b6000806040516020016101c190611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d13833981519152468760405160200161020b959493929190611af0565b604051602081830303815290604052805190602001209050600060405160200161028c907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016102b49190611b1c565b60405160208183030381529060405280519060200120886040516020016102fd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040516020818303038152906040528051906020012090506000828260405160200161032a929190611b38565b60405160208183030381529060405280519060200120905061034c8186610591565b9998505050505050505050565b60008060405160200161036b90611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d1383398151915246876040516020016103b5959493929190611af0565b60405160208183030381529060405280519060200120905060006040516020016104a9907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c6279746573333220676f764d6f64656c2c60208201527f75696e743820676f7652756c654d617855736572732c75696e743820676f765260408201527f756c654d61784d616e61676572732c75696e743820676f7652756c654170707260608201527f6f7650657263656e746167652c616464726573732077686974654c69737457616080820152656c6c6574732960d01b60a082015260a60190565b604051602081830303815290604052805190602001208c6040516020016104d09190611b1c565b60408051601f198184030181528282528051602091820120908301939093528101919091528b15156060820152608081018b905260ff808b1660a0830152808a1660c0830152881660e08201526001600160a01b038716610100820152610120016040516020818303038152906040528051906020012090506000828260405160200161055e929190611b38565b6040516020818303038152906040528051906020012090506105808186610591565b9d9c50505050505050505050505050565b600081516041146105e05760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610640573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161066790611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d1383398151915246876040516020016106b1959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001610713907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b604051602081830303815290604052805190602001208760405160200161073a9190611b1c565b60405160208183030381529060405280519060200120876040516020016107619190611b1c565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001209050600082826040516020016107be929190611b38565b6040516020818303038152906040528051906020012090506107e08186610591565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190611b53565b9050806108a95760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016105d7565b6108b161136e565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa1580156108f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261091e9190810190611bb9565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011461098a5760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016105d7565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b6060600080600080600080600080899050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a00573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a289190810190611c3c565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190611b53565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec9190611c71565b836001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4e9190611c8e565b846001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb09190611c8e565b856001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c129190611c8e565b866001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190611c8e565b876001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd69190611c8e565b9850985098509850985098509850985050919395975091939597565b600080604051602001610d0490611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d138339815191524687604051602001610d4e959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001610dc1907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610dea9190611b1c565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a0016102fd565b600080604051602001610e3890611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d138339815191524687604051602001610e82959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001610ecf907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610f1c9084908490608001611b38565b604051602081830303815290604052805190602001209050610f3e8186610591565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190611c8e565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a9190611b53565b905060008260ff1667ffffffffffffffff81111561103a5761103a6113d2565b60405190808252806020026020018201604052801561107357816020015b61106061136e565b8152602001906001900390816110585790505b509050600060015b838110156111705761108b61136e565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa1580156110d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f89190810190611bb9565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561115d5780848460ff168151811061114357611143611cab565b6020026020010181905250828061115990611cd7565b9350505b508061116881611cf7565b91505061107b565b50909695505050505050565b60008060405160200161118e90611a86565b60405160208183030381529060405280519060200120600080516020611d33833981519152600080516020611d1383398151915246876040516020016111d8959493929190611af0565b6040516020818303038152906040528051906020012090506000604051602001611271907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016112999190611b1c565b604051602081830303815290604052805190602001208a6040516020016112c09190611b1c565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e0016040516020818303038152906040528051906020012090506000828260405160200161133d929190611b38565b60405160208183030381529060405280519060200120905061135f8186610591565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b03811681146113bf57600080fd5b50565b80356113cd816113aa565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611411576114116113d2565b604052919050565b600067ffffffffffffffff821115611433576114336113d2565b50601f01601f191660200190565b600082601f83011261145257600080fd5b813561146561146082611419565b6113e8565b81815284602083860101111561147a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156114af57600080fd5b85356114ba816113aa565b9450602086013567ffffffffffffffff808211156114d757600080fd5b6114e389838a01611441565b955060408801359450606088013591506114fc826113aa565b9092506080870135908082111561151257600080fd5b5061151f88828901611441565b9150509295509295909350565b80151581146113bf57600080fd5b60ff811681146113bf57600080fd5b80356113cd8161153a565b60008060008060008060008060006101208a8c03121561157357600080fd5b893567ffffffffffffffff8082111561158b57600080fd5b6115978d838e01611441565b9a5060208c013591506115a98261152c565b90985060408b0135975060608b0135906115c28261153a565b8197506115d160808d01611549565b96506115df60a08d01611549565b95506115ed60c08d016113c2565b94506115fb60e08d016113c2565b93506101008c013591508082111561161257600080fd5b5061161f8c828d01611441565b9150509295985092959850929598565b6000806040838503121561164257600080fd5b82359150602083013567ffffffffffffffff81111561166057600080fd5b61166c85828601611441565b9150509250929050565b6000806000806080858703121561168c57600080fd5b843567ffffffffffffffff808211156116a457600080fd5b6116b088838901611441565b955060208701359150808211156116c657600080fd5b6116d288838901611441565b9450604087013591506116e4826113aa565b909250606086013590808211156116fa57600080fd5b5061170787828801611441565b91505092959194509250565b6000806040838503121561172657600080fd5b8235611731816113aa565b91506020830135611741816113aa565b809150509250929050565b60005b8381101561176757818101518382015260200161174f565b83811115611776576000848401525b50505050565b6000815180845261179481602086016020860161174c565b601f01601f19169290920160200192915050565b6080815260006117bb608083018761177c565b60208301959095525091151560408301521515606090910152919050565b6000602082840312156117eb57600080fd5b81356117f6816113aa565b9392505050565b60006101008083526118118184018c61177c565b602084019a909a525050951515604087015260ff9485166060870152928416608086015290831660a0850152821660c08401521660e090910152919050565b600080600080600060a0868803121561186857600080fd5b85359450602086013561187a8161152c565b9350604086013567ffffffffffffffff8082111561189757600080fd5b6118a389838a01611441565b9450606088013591506114fc826113aa565b6000806000606084860312156118ca57600080fd5b83356118d58161152c565b925060208401356118e5816113aa565b9150604084013567ffffffffffffffff81111561190157600080fd5b61190d86828701611441565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156119ad57888303603f19018552815180516001600160a01b031684528781015160a0898601819052906119778287018261177c565b838a0151878b0152606080850151151590880152608093840151151593909601929092525050938601939086019060010161193e565b509098975050505050505050565b600080600080600080600060e0888a0312156119d657600080fd5b87356119e1816113aa565b9650602088013567ffffffffffffffff808211156119fe57600080fd5b611a0a8b838c01611441565b975060408a0135915080821115611a2057600080fd5b611a2c8b838c01611441565b965060608a01359150611a3e8261152c565b81955060808a01359450611a5460a08b016113c2565b935060c08a0135915080821115611a6a57600080fd5b50611a778a828b01611441565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611b2e81846020870161174c565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611b6557600080fd5b5051919050565b600082601f830112611b7d57600080fd5b8151611b8b61146082611419565b818152846020838601011115611ba057600080fd5b611bb182602083016020870161174c565b949350505050565b600080600080600060a08688031215611bd157600080fd5b8551611bdc816113aa565b602087015190955067ffffffffffffffff811115611bf957600080fd5b611c0588828901611b6c565b945050604086015192506060860151611c1d8161152c565b6080870151909250611c2e8161152c565b809150509295509295909350565b600060208284031215611c4e57600080fd5b815167ffffffffffffffff811115611c6557600080fd5b611bb184828501611b6c565b600060208284031215611c8357600080fd5b81516117f68161152c565b600060208284031215611ca057600080fd5b81516117f68161153a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611cee57611cee611cc1565b60010192915050565b6000600019821415611d0b57611d0b611cc1565b506001019056feaa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a264697066735822122026fdc4812d0f0b47d56589a99f5d3bfe0564a0d0afdb260524d1de281eb9055164736f6c634300080c0033",
  "deployedSourceMap": "208:10452:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7552:924;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2419:32:56;;;2401:51;;2389:2;2374:18;7552:924:44;;;;;;;;9385:1273;;;;;;:::i;:::-;;:::i;437:692::-;;;;;;:::i;:::-;;:::i;8483:895::-;;;;;;:::i;:::-;;:::i;1486:865::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3999:797::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;5572:904::-;;;;;;:::i;:::-;;:::i;4803:762::-;;;;;;:::i;:::-;;:::i;2498:890::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6483:1062::-;;;;;;:::i;:::-;;:::i;7552:924::-;7777:7;7801:24;713:116:50;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8005:13:44;8036:10;7851:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7828:242;;;;;;7801:269;;8081:15;1352:103:50;;;;;;12846:34:56;12834:47;;12911:34;12906:2;12897:12;;12890:56;-1:-1:-1;;;12971:2:56;12962:12;;12955:29;13009:2;13000:12;;12632:386;1352:103:50;;;;;;;;;;;;;1337:120;;;;;;8190:11:44;8248:12;8230:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;8219:45;;;;;;8282:10;8122:184;;;;;;;;;;13535:25:56;;;-1:-1:-1;;;;;13596:32:56;;;;13591:2;13576:18;;13569:60;13660:2;13645:18;;13638:34;13703:2;13688:18;;13681:34;13522:3;13507:19;;13304:417;8122:184:44;;;;;;;;;;;;;8099:217;;;;;;8081:235;;8327:16;8387;8405:7;8357:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8346:70;;;;;;8327:89;;8434:35;8447:8;8457:10;8434:11;:35::i;:::-;8427:42;7552:924;-1:-1:-1;;;;;;;;;7552:924:44:o;9385:1273::-;9745:7;9769:24;713:116:50;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9973:13:44;10004:8;9819:207;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9796:240;;;;;;9769:267;;10047:15;1654:200:50;;;;;;14337:34:56;14325:47;;14402:34;14397:2;14388:12;;14381:56;14467:34;14462:2;14453:12;;14446:56;14532:34;14527:2;14518:12;;14511:56;14598:34;14592:3;14583:13;;14576:57;-1:-1:-1;;;14658:3:56;14649:13;;14642:31;14698:3;14689:13;;14123:585;1654:200:50;;;;;;;;;;;;;1639:217;;;;;;10184:10:44;10166:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10166:30:44;;;;;;;;;10155:43;;10166:30;10155:43;;;;10088:400;;;15038:25:56;;;;15079:18;;15072:34;;;;15149:14;;15142:22;15122:18;;;15115:50;15181:18;;;15174:34;;;15257:4;15245:17;;;15224:19;;;15217:46;15300:17;;;15279:19;;;15272:46;15355:17;;15334:19;;;15327:46;-1:-1:-1;;;;;15410:32:56;;15389:19;;;15382:61;15010:19;;10088:400:44;;;;;;;;;;;;10065:433;;;;;;10047:451;;10509:16;10569;10587:7;10539:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10528:70;;;;;;10509:89;;10616:35;10629:8;10639:10;10616:11;:35::i;:::-;10609:42;9385:1273;-1:-1:-1;;;;;;;;;;;;;9385:1273:44:o;437:692::-;569:7;602:10;:17;623:2;602:23;593:58;;;;-1:-1:-1;;;593:58:44;;15656:2:56;593:58:44;;;15638:21:56;15695:2;15675:18;;;15668:30;-1:-1:-1;;;15714:18:56;;;15707:50;15774:18;;593:58:44;;;;;;;;;841:2;824:21;;;817:30;924:2;907:21;;;900:30;1045:2;1028:21;;;1021:30;1080:42;;662:13;1080:42;;;;;;;;;16030:25:56;;;1012:41:44;;16071:18:56;;;16064:45;;;16125:18;;16118:34;;;16168:18;;;16161:34;;;817:30:44;;1080:42;;16002:19:56;;1080:42:44;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1080:42:44;;-1:-1:-1;;1080:42:44;;;437:692;-1:-1:-1;;;;;;;437:692:44:o;8483:895::-;8680:7;8704:24;713:116:50;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8908:13:44;8939:10;8754:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8731:242;;;;;;8704:269;;8984:15;1516:78:50;;;;;;16420:34:56;16408:47;;-1:-1:-1;;;16480:2:56;16471:12;;16464:36;16525:2;16516:12;;16206:328;1516:78:50;;;;;;;;;;;;;1501:95;;;;;;9122:5:44;9104:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9093:38;;;;;;9178:12;9160:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9160:32:44;;;;;;;;;9149:45;;9160:32;9149:45;;;;9025:183;;;16741:25:56;;;;16782:18;;16775:34;;;;16825:18;;;16818:34;;;;16714:18;;9025:183:44;;;;;;;;;;;;9002:216;;;;;;8984:234;;9229:16;9289;9307:7;9259:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9248:70;;;;;;9229:89;;9336:35;9349:8;9359:10;9336:11;:35::i;:::-;9329:42;8483:895;-1:-1:-1;;;;;;;;8483:895:44:o;1486:865::-;1825:31;;-1:-1:-1;;;1825:31:44;;-1:-1:-1;;;;;2419:32:56;;;1825:31:44;;;2401:51:56;1638:18:44;;1670:12;;;;;;1788:10;;1670:12;;1825:16;;;;;2374:18:56;;1825:31:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1811:45;-1:-1:-1;1876:8:44;1867:43;;;;-1:-1:-1;;;1867:43:44;;17254:2:56;1867:43:44;;;17236:21:56;17293:2;17273:18;;;17266:30;-1:-1:-1;;;17312:18:56;;;17305:49;17371:18;;1867:43:44;17052:343:56;1867:43:44;1921:24;;:::i;:::-;2107:22;;-1:-1:-1;;;2107:22:44;;;;;17546:25:56;;;-1:-1:-1;;;;;2107:15:44;;;;;17519:18:56;;2107:22:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2107:22:44;;;;;;;;;;;;:::i;:::-;1956:173;;2083:19;;;1956:173;;;2053:16;;;1956:173;;;2022:17;;;1956:173;;;;1994:14;;;1956:173;;;;-1:-1:-1;;;;;1956:173:44;;;;;2149:4;:24;2140:54;;;;-1:-1:-1;;;2140:54:44;;19008:2:56;2140:54:44;;;18990:21:56;19047:2;19027:18;;;19020:30;-1:-1:-1;;;19066:18:56;;;19059:43;19119:18;;2140:54:44;18806:337:56;2140:54:44;2226:14;;;;2254:17;;;;2285:16;;;;2315:19;;;;;2226:14;;2254:17;;-1:-1:-1;2285:16:44;;-1:-1:-1;2315:19:44;-1:-1:-1;1486:865:44;-1:-1:-1;;;;;1486:865:44:o;3999:797::-;4120:24;4158:30;4202:17;4233:14;4261:17;4292:29;4335:21;4370:24;4419:15;4447:10;4419:40;;4490:6;-1:-1:-1;;;;;4490:17:44;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4490:19:44;;;;;;;;;;;;:::i;:::-;4523:6;-1:-1:-1;;;;;4523:29:44;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4568:6;-1:-1:-1;;;;;4568:19:44;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4603:6;-1:-1:-1;;;;;4603:15:44;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4634:6;-1:-1:-1;;;;;4634:18:44;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4668:6;-1:-1:-1;;;;;4668:30:44;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4714:6;-1:-1:-1;;;;;4714:22:44;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4752:6;-1:-1:-1;;;;;4752:25:44;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4470:319;;;;;;;;;;;;;;;;;3999:797;;;;;;;;;:::o;5572:904::-;5784:7;5808:24;713:116:50;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;6012:13:44;6043:10;5858:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5835:242;;;;;;5808:269;;6088:15;1007:93:50;;;;;;20395:34:56;20383:47;;20460:29;20455:2;20446:12;;20439:51;20515:2;20506:12;;20181:343;1007:93:50;;;;;;;;;;;;;992:110;;;;;;6194:7:44;6219:8;6274:14;6256:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6256:34:44;;;;;;;;;6245:47;;6256:34;6245:47;;;;6129:177;;;20754:25:56;;;;20795:18;;20788:34;;;;20865:14;20858:22;20838:18;;;20831:50;20897:18;;;20890:34;;;;20726:19;;6129:177:44;20529:401:56;4803:762:44;4959:7;4983:24;713:116:50;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;5187:13:44;5218:10;5033:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5010:242;;;;;;4983:269;;5263:15;888:61:50;;;;;;21149:29:56;21137:42;;21204:2;21195:12;;20935:278;888:61:50;;;;;;;-1:-1:-1;;888:61:50;;;;;;873:78;;888:61;873:78;;;;5304:91:44;;;21386:25:56;21454:14;;21447:22;21427:18;;;21420:50;5304:91:44;;;;;;;;;21359:18:56;;;5304:91:44;;;5281:124;;;;;;-1:-1:-1;;;5446:57:44;;5476:16;;5281:124;;5446:57;;;:::i;:::-;;;;;;;;;;;;;5435:70;;;;;;5416:89;;5523:35;5536:8;5546:10;5523:11;:35::i;:::-;5516:42;4803:762;-1:-1:-1;;;;;;;4803:762:44:o;2498:890::-;2617:25;2667:15;2695:10;2667:40;;2718:14;2735:6;-1:-1:-1;;;;;2735:15:44;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2718:35;;2763:22;2788:6;-1:-1:-1;;;;;2788:24:44;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2763:51;;2824:26;2869:8;2853:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2824:55:44;-1:-1:-1;2890:11:44;2936:1;2917:439;2946:14;2940:3;:20;2917:439;;;2985:24;;:::i;:::-;3191:22;;-1:-1:-1;;;3191:22:44;;;;;17546:25:56;;;-1:-1:-1;;;;;3191:15:44;;;;;17519:18:56;;3191:22:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3191:22:44;;;;;;;;;;;;:::i;:::-;3024:189;;3167:19;;;3024:189;;;3133:16;;;3024:189;;;3098:17;;;3024:189;;;;3066:14;;;3024:189;;;;-1:-1:-1;;;;;3024:189:44;;;;;3232:4;:24;3228:118;;;3297:9;3276;3287:5;3276:18;;;;;;;;;;:::i;:::-;;;;;;:30;;;;3324:7;;;;;:::i;:::-;;;;3228:118;-1:-1:-1;2963:5:44;;;;:::i;:::-;;;;2917:439;;;-1:-1:-1;3372:9:44;;2498:890;-1:-1:-1;;;;;;2498:890:44:o;6483:1062::-;6762:7;6786:24;713:116:50;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;6990:13:44;7021:10;6836:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6813:242;;;;;;6786:269;;7066:15;1161:130:50;;;;;;22279:34:56;22267:47;;22344:34;22339:2;22330:12;;22323:56;22409:34;22404:2;22395:12;;22388:56;22469:2;22460:12;;22065:413;1161:130:50;;;;;;;;;;;;;1146:147;;;;;;7175:11:44;7233:5;7215:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;7204:38;;;;;;7289:12;7271:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7271:32:44;;;;;;;;;7260:45;;7271:32;7260:45;;;;7107:268;;;22764:25:56;;;;-1:-1:-1;;;;;22825:32:56;;;22805:18;;;22798:60;;;;22874:18;;;22867:34;22917:18;;;22910:34;;;;22988:14;;22981:22;22960:19;;;22953:51;23020:19;;;23013:35;;;22736:19;;7107:268:44;;;;;;;;;;;;7084:301;;;;;;7066:319;;7396:16;7456;7474:7;7426:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7415:70;;;;;;7396:89;;7503:35;7516:8;7526:10;7503:11;:35::i;:::-;7496:42;6483:1062;-1:-1:-1;;;;;;;;;;;6483:1062:44:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:56:-;-1:-1:-1;;;;;89:31:56;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:275;492:2;486:9;557:2;538:13;;-1:-1:-1;;534:27:56;522:40;;592:18;577:34;;613:22;;;574:62;571:88;;;639:18;;:::i;:::-;675:2;668:22;421:275;;-1:-1:-1;421:275:56:o;701:187::-;750:4;783:18;775:6;772:30;769:56;;;805:18;;:::i;:::-;-1:-1:-1;871:2:56;850:15;-1:-1:-1;;846:29:56;877:4;842:40;;701:187::o;893:464::-;936:5;989:3;982:4;974:6;970:17;966:27;956:55;;1007:1;1004;997:12;956:55;1043:6;1030:20;1074:49;1090:32;1119:2;1090:32;:::i;:::-;1074:49;:::i;:::-;1148:2;1139:7;1132:19;1194:3;1187:4;1182:2;1174:6;1170:15;1166:26;1163:35;1160:55;;;1211:1;1208;1201:12;1160:55;1276:2;1269:4;1261:6;1257:17;1250:4;1241:7;1237:18;1224:55;1324:1;1299:16;;;1317:4;1295:27;1288:38;;;;1303:7;893:464;-1:-1:-1;;;893:464:56:o;1362:888::-;1476:6;1484;1492;1500;1508;1561:3;1549:9;1540:7;1536:23;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1617:9;1604:23;1636:31;1661:5;1636:31;:::i;:::-;1686:5;-1:-1:-1;1742:2:56;1727:18;;1714:32;1765:18;1795:14;;;1792:34;;;1822:1;1819;1812:12;1792:34;1845:50;1887:7;1878:6;1867:9;1863:22;1845:50;:::i;:::-;1835:60;;1942:2;1931:9;1927:18;1914:32;1904:42;;1998:2;1987:9;1983:18;1970:32;1955:47;;2011:33;2036:7;2011:33;:::i;:::-;2063:7;;-1:-1:-1;2123:3:56;2108:19;;2095:33;;2140:16;;;2137:36;;;2169:1;2166;2159:12;2137:36;;2192:52;2236:7;2225:8;2214:9;2210:24;2192:52;:::i;:::-;2182:62;;;1362:888;;;;;;;;:::o;2463:118::-;2549:5;2542:13;2535:21;2528:5;2525:32;2515:60;;2571:1;2568;2561:12;2586:114;2670:4;2663:5;2659:16;2652:5;2649:27;2639:55;;2690:1;2687;2680:12;2705:130;2771:20;;2800:29;2771:20;2800:29;:::i;2840:1170::-;2981:6;2989;2997;3005;3013;3021;3029;3037;3045;3098:3;3086:9;3077:7;3073:23;3069:33;3066:53;;;3115:1;3112;3105:12;3066:53;3155:9;3142:23;3184:18;3225:2;3217:6;3214:14;3211:34;;;3241:1;3238;3231:12;3211:34;3264:50;3306:7;3297:6;3286:9;3282:22;3264:50;:::i;:::-;3254:60;;3364:2;3353:9;3349:18;3336:32;3323:45;;3377:28;3399:5;3377:28;:::i;:::-;3424:5;;-1:-1:-1;3476:2:56;3461:18;;3448:32;;-1:-1:-1;3532:2:56;3517:18;;3504:32;;3545:31;3504:32;3545:31;:::i;:::-;3595:7;3585:17;;3621:37;3653:3;3642:9;3638:19;3621:37;:::i;:::-;3611:47;;3677:37;3709:3;3698:9;3694:19;3677:37;:::i;:::-;3667:47;;3733:39;3767:3;3756:9;3752:19;3733:39;:::i;:::-;3723:49;;3791:39;3825:3;3814:9;3810:19;3791:39;:::i;:::-;3781:49;;3883:3;3872:9;3868:19;3855:33;3839:49;;3913:2;3903:8;3900:16;3897:36;;;3929:1;3926;3919:12;3897:36;;3952:52;3996:7;3985:8;3974:9;3970:24;3952:52;:::i;:::-;3942:62;;;2840:1170;;;;;;;;;;;:::o;4015:389::-;4092:6;4100;4153:2;4141:9;4132:7;4128:23;4124:32;4121:52;;;4169:1;4166;4159:12;4121:52;4205:9;4192:23;4182:33;;4266:2;4255:9;4251:18;4238:32;4293:18;4285:6;4282:30;4279:50;;;4325:1;4322;4315:12;4279:50;4348;4390:7;4381:6;4370:9;4366:22;4348:50;:::i;:::-;4338:60;;;4015:389;;;;;:::o;4409:878::-;4524:6;4532;4540;4548;4601:3;4589:9;4580:7;4576:23;4572:33;4569:53;;;4618:1;4615;4608:12;4569:53;4658:9;4645:23;4687:18;4728:2;4720:6;4717:14;4714:34;;;4744:1;4741;4734:12;4714:34;4767:50;4809:7;4800:6;4789:9;4785:22;4767:50;:::i;:::-;4757:60;;4870:2;4859:9;4855:18;4842:32;4826:48;;4899:2;4889:8;4886:16;4883:36;;;4915:1;4912;4905:12;4883:36;4938:52;4982:7;4971:8;4960:9;4956:24;4938:52;:::i;:::-;4928:62;;5040:2;5029:9;5025:18;5012:32;4999:45;;5053:31;5078:5;5053:31;:::i;:::-;5103:5;;-1:-1:-1;5161:2:56;5146:18;;5133:32;;5177:16;;;5174:36;;;5206:1;5203;5196:12;5174:36;;5229:52;5273:7;5262:8;5251:9;5247:24;5229:52;:::i;:::-;5219:62;;;4409:878;;;;;;;:::o;5292:388::-;5360:6;5368;5421:2;5409:9;5400:7;5396:23;5392:32;5389:52;;;5437:1;5434;5427:12;5389:52;5476:9;5463:23;5495:31;5520:5;5495:31;:::i;:::-;5545:5;-1:-1:-1;5602:2:56;5587:18;;5574:32;5615:33;5574:32;5615:33;:::i;:::-;5667:7;5657:17;;;5292:388;;;;;:::o;5685:258::-;5757:1;5767:113;5781:6;5778:1;5775:13;5767:113;;;5857:11;;;5851:18;5838:11;;;5831:39;5803:2;5796:10;5767:113;;;5898:6;5895:1;5892:13;5889:48;;;5933:1;5924:6;5919:3;5915:16;5908:27;5889:48;;5685:258;;;:::o;5948:::-;5990:3;6028:5;6022:12;6055:6;6050:3;6043:19;6071:63;6127:6;6120:4;6115:3;6111:14;6104:4;6097:5;6093:16;6071:63;:::i;:::-;6188:2;6167:15;-1:-1:-1;;6163:29:56;6154:39;;;;6195:4;6150:50;;5948:258;-1:-1:-1;;5948:258:56:o;6211:455::-;6432:3;6421:9;6414:22;6395:4;6453:46;6494:3;6483:9;6479:19;6471:6;6453:46;:::i;:::-;6530:2;6515:18;;6508:34;;;;-1:-1:-1;6585:14:56;;6578:22;6573:2;6558:18;;6551:50;6644:14;6637:22;6632:2;6617:18;;;6610:50;6445:54;6211:455;-1:-1:-1;6211:455:56:o;6671:247::-;6730:6;6783:2;6771:9;6762:7;6758:23;6754:32;6751:52;;;6799:1;6796;6789:12;6751:52;6838:9;6825:23;6857:31;6882:5;6857:31;:::i;:::-;6907:5;6671:247;-1:-1:-1;;;6671:247:56:o;6923:788::-;7205:4;7234:3;7264:2;7253:9;7246:21;7284:45;7325:2;7314:9;7310:18;7302:6;7284:45;:::i;:::-;7360:2;7345:18;;7338:34;;;;-1:-1:-1;;7415:14:56;;7408:22;7403:2;7388:18;;7381:50;7479:4;7467:17;;;7462:2;7447:18;;7440:45;7522:17;;;7516:3;7501:19;;7494:46;7577:17;;;7571:3;7556:19;;7549:46;7632:17;;7626:3;7611:19;;7604:46;7687:17;7681:3;7666:19;;;7659:46;7276:53;6923:788;-1:-1:-1;6923:788:56:o;7716:882::-;7827:6;7835;7843;7851;7859;7912:3;7900:9;7891:7;7887:23;7883:33;7880:53;;;7929:1;7926;7919:12;7880:53;7965:9;7952:23;7942:33;;8025:2;8014:9;8010:18;7997:32;8038:28;8060:5;8038:28;:::i;:::-;8085:5;-1:-1:-1;8141:2:56;8126:18;;8113:32;8164:18;8194:14;;;8191:34;;;8221:1;8218;8211:12;8191:34;8244:50;8286:7;8277:6;8266:9;8262:22;8244:50;:::i;:::-;8234:60;;8346:2;8335:9;8331:18;8318:32;8303:47;;8359:33;8384:7;8359:33;:::i;8603:591::-;8686:6;8694;8702;8755:2;8743:9;8734:7;8730:23;8726:32;8723:52;;;8771:1;8768;8761:12;8723:52;8810:9;8797:23;8829:28;8851:5;8829:28;:::i;:::-;8876:5;-1:-1:-1;8933:2:56;8918:18;;8905:32;8946:33;8905:32;8946:33;:::i;:::-;8998:7;-1:-1:-1;9056:2:56;9041:18;;9028:32;9083:18;9072:30;;9069:50;;;9115:1;9112;9105:12;9069:50;9138;9180:7;9171:6;9160:9;9156:22;9138:50;:::i;:::-;9128:60;;;8603:591;;;;;:::o;9199:1367::-;9391:4;9420:2;9460;9449:9;9445:18;9490:2;9479:9;9472:21;9513:6;9548;9542:13;9579:6;9571;9564:22;9605:2;9595:12;;9638:2;9627:9;9623:18;9616:25;;9700:2;9690:6;9687:1;9683:14;9672:9;9668:30;9664:39;9738:2;9730:6;9726:15;9759:1;9769:768;9783:6;9780:1;9777:13;9769:768;;;9848:22;;;-1:-1:-1;;9844:36:56;9832:49;;9904:13;;9976:9;;-1:-1:-1;;;;;9972:35:56;9957:51;;10047:11;;;10041:18;9940:4;10079:15;;;10072:27;;;9940:4;10126:48;10158:15;;;10041:18;10126:48;:::i;:::-;10217:11;;;10211:18;10194:15;;;10187:43;10253:4;10314:11;;;10308:18;10301:26;10294:34;10277:15;;;10270:59;10352:4;10413:11;;;10407:18;10400:26;10393:34;10376:15;;;;10369:59;;;;-1:-1:-1;;10515:12:56;;;;10480:15;;;;9805:1;9798:9;9769:768;;;-1:-1:-1;10554:6:56;;9199:1367;-1:-1:-1;;;;;;;;9199:1367:56:o;10571:1158::-;10710:6;10718;10726;10734;10742;10750;10758;10811:3;10799:9;10790:7;10786:23;10782:33;10779:53;;;10828:1;10825;10818:12;10779:53;10867:9;10854:23;10886:31;10911:5;10886:31;:::i;:::-;10936:5;-1:-1:-1;10992:2:56;10977:18;;10964:32;11015:18;11045:14;;;11042:34;;;11072:1;11069;11062:12;11042:34;11095:50;11137:7;11128:6;11117:9;11113:22;11095:50;:::i;:::-;11085:60;;11198:2;11187:9;11183:18;11170:32;11154:48;;11227:2;11217:8;11214:16;11211:36;;;11243:1;11240;11233:12;11211:36;11266:52;11310:7;11299:8;11288:9;11284:24;11266:52;:::i;:::-;11256:62;;11370:2;11359:9;11355:18;11342:32;11327:47;;11383:30;11405:7;11383:30;:::i;:::-;11432:7;11422:17;;11486:3;11475:9;11471:19;11458:33;11448:43;;11510:39;11544:3;11533:9;11529:19;11510:39;:::i;:::-;11500:49;;11602:3;11591:9;11587:19;11574:33;11558:49;;11632:2;11622:8;11619:16;11616:36;;;11648:1;11645;11638:12;11616:36;;11671:52;11715:7;11704:8;11693:9;11689:24;11671:52;:::i;:::-;11661:62;;;10571:1158;;;;;;;;;;:::o;11734:399::-;11948:34;11936:47;;12013:34;12008:2;11999:12;;11992:56;-1:-1:-1;;;12073:2:56;12064:12;;12057:42;12124:2;12115:12;;11734:399::o;12138:489::-;12397:25;;;12453:2;12438:18;;12431:34;;;;12496:2;12481:18;;12474:34;;;;12539:2;12524:18;;12517:34;-1:-1:-1;;;;;12588:32:56;12582:3;12567:19;;12560:61;12384:3;12369:19;;12138:489::o;13023:276::-;13154:3;13192:6;13186:13;13208:53;13254:6;13249:3;13242:4;13234:6;13230:17;13208:53;:::i;:::-;13277:16;;;;;13023:276;-1:-1:-1;;13023:276:56:o;13726:392::-;-1:-1:-1;;;13984:27:56;;14036:1;14027:11;;14020:27;;;;14072:2;14063:12;;14056:28;14109:2;14100:12;;13726:392::o;16863:184::-;16933:6;16986:2;16974:9;16965:7;16961:23;16957:32;16954:52;;;17002:1;16999;16992:12;16954:52;-1:-1:-1;17025:16:56;;16863:184;-1:-1:-1;16863:184:56:o;17582:430::-;17636:5;17689:3;17682:4;17674:6;17670:17;17666:27;17656:55;;17707:1;17704;17697:12;17656:55;17736:6;17730:13;17767:49;17783:32;17812:2;17783:32;:::i;17767:49::-;17841:2;17832:7;17825:19;17887:3;17880:4;17875:2;17867:6;17863:15;17859:26;17856:35;17853:55;;;17904:1;17901;17894:12;17853:55;17917:64;17978:2;17971:4;17962:7;17958:18;17951:4;17943:6;17939:17;17917:64;:::i;:::-;17999:7;17582:430;-1:-1:-1;;;;17582:430:56:o;18017:784::-;18127:6;18135;18143;18151;18159;18212:3;18200:9;18191:7;18187:23;18183:33;18180:53;;;18229:1;18226;18219:12;18180:53;18261:9;18255:16;18280:31;18305:5;18280:31;:::i;:::-;18379:2;18364:18;;18358:25;18330:5;;-1:-1:-1;18406:18:56;18395:30;;18392:50;;;18438:1;18435;18428:12;18392:50;18461:61;18514:7;18505:6;18494:9;18490:22;18461:61;:::i;:::-;18451:71;;;18562:2;18551:9;18547:18;18541:25;18531:35;;18611:2;18600:9;18596:18;18590:25;18624:30;18646:7;18624:30;:::i;:::-;18725:3;18710:19;;18704:26;18673:7;;-1:-1:-1;18739:30:56;18704:26;18739:30;:::i;:::-;18788:7;18778:17;;;18017:784;;;;;;;;:::o;19148:337::-;19228:6;19281:2;19269:9;19260:7;19256:23;19252:32;19249:52;;;19297:1;19294;19287:12;19249:52;19330:9;19324:16;19363:18;19355:6;19352:30;19349:50;;;19395:1;19392;19385:12;19349:50;19418:61;19471:7;19462:6;19451:9;19447:22;19418:61;:::i;19679:245::-;19746:6;19799:2;19787:9;19778:7;19774:23;19770:32;19767:52;;;19815:1;19812;19805:12;19767:52;19847:9;19841:16;19866:28;19888:5;19866:28;:::i;19929:247::-;19997:6;20050:2;20038:9;20029:7;20025:23;20021:32;20018:52;;;20066:1;20063;20056:12;20018:52;20098:9;20092:16;20117:29;20140:5;20117:29;:::i;21481:127::-;21542:10;21537:3;21533:20;21530:1;21523:31;21573:4;21570:1;21563:15;21597:4;21594:1;21587:15;21613:127;21674:10;21669:3;21665:20;21662:1;21655:31;21705:4;21702:1;21695:15;21729:4;21726:1;21719:15;21745:175;21782:3;21826:4;21819:5;21815:16;21855:4;21846:7;21843:17;21840:43;;;21863:18;;:::i;:::-;21912:1;21899:15;;21745:175;-1:-1:-1;;21745:175:56:o;21925:135::-;21964:3;-1:-1:-1;;21985:17:56;;21982:43;;;22005:18;;:::i;:::-;-1:-1:-1;22052:1:56;22041:13;;21925:135::o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagers`",
          "govRuleMaxManagers": "Max of managers that CLH can accept (only for COMMITTEE )",
          "govRuleMaxUsers": "Max of all users (including managers)",
          "housePrivate": "True if is private",
          "numManagers": "Current managers of a CLH",
          "numUsers": "Current users of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all users address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrUsers": "array with list of users"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isUser": "true if is User",
          "name": "Nickname ot other user identificaction"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    208,
    10660
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8750BC3E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x9F6FD7AB EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xF240C7E9 EQ PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x349DC296 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x364AE0D8 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x7B3BB156 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0x10C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x162F JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1676 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x1713 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x142 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x1850 JUMP JUMPDEST PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x117C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C1 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D33 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28C SWAP1 PUSH32 0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179 PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0x54696D6529 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32A SWAP3 SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x34C DUP2 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36B SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D33 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A9 SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C6279746573333220676F764D6F64656C2C PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x75696E743820676F7652756C654D617855736572732C75696E743820676F7652 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x756C654D61784D616E61676572732C75696E743820676F7652756C6541707072 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x6F7650657263656E746167652C616464726573732077686974654C6973745761 PUSH1 0x80 DUP3 ADD MSTORE PUSH6 0x6C6C65747329 PUSH1 0xD0 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA6 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP13 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP12 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xFF DUP1 DUP12 AND PUSH1 0xA0 DUP4 ADD MSTORE DUP1 DUP11 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP9 AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x55E SWAP3 SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x580 DUP2 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x667 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D33 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x713 SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BE SWAP3 SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x7E0 DUP2 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3FE463 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70FF918C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x840 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x91E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B9903737BA1030903AB9B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA28 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C3C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE68777D7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1343E9A5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE810A58E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD04 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D33 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD4E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDC1 SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE38 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D33 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE82 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xECF SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000 DUP2 MSTORE PUSH1 0x1B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE DUP9 ISZERO ISZERO DUP4 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xF1C SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xF3E DUP2 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB4 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA693649A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH2 0x103A PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1073 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1060 PUSH2 0x136E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1058 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1170 JUMPI PUSH2 0x108B PUSH2 0x136E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10F8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0x115D JUMPI DUP1 DUP5 DUP5 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1143 JUMPI PUSH2 0x1143 PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x1159 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x1168 DUP2 PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x107B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x118E SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D33 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11D8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1271 SWAP1 PUSH32 0x7374724F434E65775573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C0 SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x133D SWAP3 SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x135F DUP2 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x13CD DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1411 JUMPI PUSH2 0x1411 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1433 JUMPI PUSH2 0x1433 PUSH2 0x13D2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1465 PUSH2 0x1460 DUP3 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x147A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x14AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x14BA DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E3 DUP10 DUP4 DUP11 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x14FC DUP3 PUSH2 0x13AA JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151F DUP9 DUP3 DUP10 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x13CD DUP2 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1597 DUP14 DUP4 DUP15 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP11 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x15A9 DUP3 PUSH2 0x152C JUMP JUMPDEST SWAP1 SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP1 PUSH2 0x15C2 DUP3 PUSH2 0x153A JUMP JUMPDEST DUP2 SWAP8 POP PUSH2 0x15D1 PUSH1 0x80 DUP14 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP7 POP PUSH2 0x15DF PUSH1 0xA0 DUP14 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP6 POP PUSH2 0x15ED PUSH1 0xC0 DUP14 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP5 POP PUSH2 0x15FB PUSH1 0xE0 DUP14 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161F DUP13 DUP3 DUP14 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166C DUP6 DUP3 DUP7 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B0 DUP9 DUP4 DUP10 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D2 DUP9 DUP4 DUP10 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x16E4 DUP3 PUSH2 0x13AA JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x16FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1707 DUP8 DUP3 DUP9 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1731 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1741 DUP2 PUSH2 0x13AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1767 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x174F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1776 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1794 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x174C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x17BB PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17F6 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x1811 DUP2 DUP5 ADD DUP13 PUSH2 0x177C JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE POP POP SWAP6 ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xFF SWAP5 DUP6 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x80 DUP7 ADD MSTORE SWAP1 DUP4 AND PUSH1 0xA0 DUP6 ADD MSTORE DUP3 AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x187A DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A3 DUP10 DUP4 DUP11 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x14FC DUP3 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18D5 DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x18E5 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x190D DUP7 DUP3 DUP8 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19AD JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1977 DUP3 DUP8 ADD DUP3 PUSH2 0x177C JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x193E JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x19E1 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A0A DUP12 DUP4 DUP13 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2C DUP12 DUP4 DUP13 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1A3E DUP3 PUSH2 0x152C JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1A54 PUSH1 0xA0 DUP12 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A77 DUP11 DUP3 DUP12 ADD PUSH2 0x1441 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B2E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x174C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B8B PUSH2 0x1460 DUP3 PUSH2 0x1419 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB1 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x174C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1BDC DUP2 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C05 DUP9 DUP3 DUP10 ADD PUSH2 0x1B6C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1C1D DUP2 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1C2E DUP2 PUSH2 0x152C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB1 DUP5 DUP3 DUP6 ADD PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17F6 DUP2 PUSH2 0x152C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17F6 DUP2 PUSH2 0x153A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CEE PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D0B JUMPI PUSH2 0x1D0B PUSH2 0x1CC1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xAA PUSH29 0xDBE2CCE2EC7B606B0E199DDD9B264A6E645E767FB8479A7917DCD1B869 EXTCODEHASH ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C875A2646970667358221220 0x26 REVERT 0xC4 DUP2 0x2D 0xF SIGNEXTEND SELFBALANCE 0xD5 PUSH6 0x89A99F5D3BFE SDIV PUSH5 0xA0D0AFDB26 SDIV 0x24 0xD1 0xDE 0x28 0x1E 0xB9 SDIV MLOAD PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "6": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "7": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "8": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "12": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "REVERT",
      "path": "44"
    },
    "16": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "17": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "POP",
      "path": "44"
    },
    "18": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "21": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "LT",
      "path": "44"
    },
    "22": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "26": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "29": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "SHR",
      "path": "44"
    },
    "32": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "33": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x8750BC3E"
    },
    "38": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "GT",
      "path": "44"
    },
    "39": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "43": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "44": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x8750BC3E"
    },
    "49": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "50": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x12F"
    },
    "53": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "54": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "55": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x89AB062A"
    },
    "60": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "61": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x156"
    },
    "64": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "65": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "66": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9F6FD7AB"
    },
    "71": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "72": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x169"
    },
    "75": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "76": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "77": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xB698BE8D"
    },
    "82": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "83": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17C"
    },
    "86": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "87": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "88": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xF240C7E9"
    },
    "93": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "94": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19C"
    },
    "97": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "98": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "101": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "REVERT",
      "path": "44"
    },
    "102": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "103": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "104": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x349DC296"
    },
    "109": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "110": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "114": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "115": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x364AE0D8"
    },
    "120": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "121": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD3"
    },
    "124": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "125": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "126": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x622ECA77"
    },
    "131": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "132": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE6"
    },
    "135": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "136": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "137": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x7B3BB156"
    },
    "142": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "143": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF9"
    },
    "146": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "147": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "148": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x86ABD826"
    },
    "153": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "EQ",
      "path": "44"
    },
    "154": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10C"
    },
    "157": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "158": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "159": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "DUP1",
      "path": "44"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        208,
        10660
      ],
      "op": "REVERT",
      "path": "44"
    },
    "163": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "164": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "167": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB1"
    },
    "170": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "171": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "173": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1497"
    },
    "176": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMP",
      "path": "44"
    },
    "177": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "178": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF"
    },
    "181": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMP",
      "path": "44"
    },
    "182": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "183": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "185": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "192": {
      "op": "SHL"
    },
    "193": {
      "op": "SUB"
    },
    "194": {
      "op": "SWAP1"
    },
    "195": {
      "op": "SWAP2"
    },
    "196": {
      "op": "AND"
    },
    "197": {
      "op": "DUP2"
    },
    "198": {
      "op": "MSTORE"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "201": {
      "op": "ADD"
    },
    "202": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "203": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "205": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "206": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "DUP1",
      "path": "44"
    },
    "207": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "208": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "SUB",
      "path": "44"
    },
    "209": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "210": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "RETURN",
      "path": "44"
    },
    "211": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "212": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "215": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE1"
    },
    "218": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "219": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "221": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1554"
    },
    "224": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        9385,
        10658
      ],
      "op": "JUMP",
      "path": "44"
    },
    "225": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "226": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x359"
    },
    "229": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        9385,
        10658
      ],
      "op": "JUMP",
      "path": "44"
    },
    "230": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "231": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "234": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF4"
    },
    "237": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "238": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "240": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x162F"
    },
    "243": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        437,
        1129
      ],
      "op": "JUMP",
      "path": "44"
    },
    "244": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "245": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x591"
    },
    "248": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        437,
        1129
      ],
      "op": "JUMP",
      "path": "44"
    },
    "249": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "250": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "253": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x107"
    },
    "256": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "257": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "259": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1676"
    },
    "262": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        8483,
        9378
      ],
      "op": "JUMP",
      "path": "44"
    },
    "263": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "264": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x655"
    },
    "267": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        8483,
        9378
      ],
      "op": "JUMP",
      "path": "44"
    },
    "268": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "269": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11F"
    },
    "272": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11A"
    },
    "275": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "276": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "278": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1713"
    },
    "281": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMP",
      "path": "44"
    },
    "282": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "283": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7EC"
    },
    "286": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMP",
      "path": "44"
    },
    "287": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "288": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "290": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "291": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCA"
    },
    "294": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "295": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "296": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "297": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "298": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "299": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17A8"
    },
    "302": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMP",
      "path": "44"
    },
    "303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "304": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x142"
    },
    "307": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x13D"
    },
    "310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "311": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17D9"
    },
    "316": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMP",
      "path": "44"
    },
    "317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x9B1"
    },
    "321": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMP",
      "path": "44"
    },
    "322": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "323": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCA"
    },
    "329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "330": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "331": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "332": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "333": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "334": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "335": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "336": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "337": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "338": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17FD"
    },
    "341": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMP",
      "path": "44"
    },
    "342": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "343": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "346": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x164"
    },
    "349": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "350": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "352": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1850"
    },
    "355": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5572,
        6476
      ],
      "op": "JUMP",
      "path": "44"
    },
    "356": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "357": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCF2"
    },
    "360": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5572,
        6476
      ],
      "op": "JUMP",
      "path": "44"
    },
    "361": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "362": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "365": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x177"
    },
    "368": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "369": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "371": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x18B5"
    },
    "374": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4803,
        5565
      ],
      "op": "JUMP",
      "path": "44"
    },
    "375": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "376": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE26"
    },
    "379": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4803,
        5565
      ],
      "op": "JUMP",
      "path": "44"
    },
    "380": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "381": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x18F"
    },
    "384": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x18A"
    },
    "387": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "388": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "390": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x17D9"
    },
    "393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMP",
      "path": "44"
    },
    "394": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "395": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF49"
    },
    "398": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMP",
      "path": "44"
    },
    "399": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "400": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "402": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "403": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCA"
    },
    "406": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "407": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "408": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1917"
    },
    "411": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMP",
      "path": "44"
    },
    "412": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "413": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "416": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AA"
    },
    "419": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "420": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "422": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19BB"
    },
    "425": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        6483,
        7545
      ],
      "op": "JUMP",
      "path": "44"
    },
    "426": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "427": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x117C"
    },
    "430": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        6483,
        7545
      ],
      "op": "JUMP",
      "path": "44"
    },
    "431": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "432": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7777,
        7784
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "434": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7801,
        7825
      ],
      "op": "DUP1",
      "path": "44"
    },
    "435": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "437": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "438": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "440": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "50"
    },
    "441": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C1"
    },
    "444": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "445": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A86"
    },
    "448": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "50"
    },
    "449": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "450": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "452": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "453": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "455": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "456": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "50"
    },
    "457": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "458": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "459": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "460": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "461": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "462": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "464": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "465": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "466": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "467": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "468": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "470": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "50"
    },
    "471": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "474": {
      "op": "DUP1"
    },
    "475": {
      "op": "MLOAD"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "478": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "481": {
      "op": "DUP4"
    },
    "482": {
      "op": "CODECOPY"
    },
    "483": {
      "op": "DUP2"
    },
    "484": {
      "op": "MLOAD"
    },
    "485": {
      "op": "SWAP2"
    },
    "486": {
      "op": "MSTORE"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "489": {
      "op": "DUP1"
    },
    "490": {
      "op": "MLOAD"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "493": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "496": {
      "op": "DUP4"
    },
    "497": {
      "op": "CODECOPY"
    },
    "498": {
      "op": "DUP2"
    },
    "499": {
      "op": "MLOAD"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8005,
        8018
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "503": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8036,
        8046
      ],
      "op": "DUP8",
      "path": "44"
    },
    "504": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "506": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "507": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "509": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "ADD",
      "path": "44"
    },
    "510": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x20B"
    },
    "513": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "514": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "515": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "516": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "517": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "518": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "519": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF0"
    },
    "522": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        7851,
        8060
      ],
      "op": "JUMP",
      "path": "44"
    },
    "523": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "524": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "526": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "527": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "529": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "DUP2",
      "path": "44"
    },
    "530": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "DUP4",
      "path": "44"
    },
    "531": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SUB",
      "path": "44"
    },
    "532": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SUB",
      "path": "44"
    },
    "533": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "DUP2",
      "path": "44"
    },
    "534": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "535": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "536": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "538": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7851,
        8060
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "539": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7828,
        8070
      ],
      "op": "DUP1",
      "path": "44"
    },
    "540": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7828,
        8070
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "541": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7828,
        8070
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "542": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7828,
        8070
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "544": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7828,
        8070
      ],
      "op": "ADD",
      "path": "44"
    },
    "545": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7828,
        8070
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "546": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7801,
        8070
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "547": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7801,
        8070
      ],
      "op": "POP",
      "path": "44"
    },
    "548": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8081,
        8096
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "550": {
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "552": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "553": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "555": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "ADD",
      "path": "50"
    },
    "556": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "559": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "560": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C"
    },
    "593": {
      "op": "DUP2"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH32",
      "value": "0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH5",
      "value": "0x54696D6529"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "644": {
      "op": "DUP3"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "op": "SWAP1"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "offset": [
        1352,
        1455
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "653": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "655": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "656": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "658": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "DUP2",
      "path": "50"
    },
    "659": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "DUP4",
      "path": "50"
    },
    "660": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SUB",
      "path": "50"
    },
    "661": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SUB",
      "path": "50"
    },
    "662": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "DUP2",
      "path": "50"
    },
    "663": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "664": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "665": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "667": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "668": {
      "offset": [
        1337,
        1457
      ],
      "op": "DUP1",
      "path": "50"
    },
    "669": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "670": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "671": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "673": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "ADD",
      "path": "50"
    },
    "674": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "675": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8190,
        8201
      ],
      "op": "DUP9",
      "path": "44"
    },
    "676": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8248,
        8260
      ],
      "op": "DUP9",
      "path": "44"
    },
    "677": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "679": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "680": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "682": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "ADD",
      "path": "44"
    },
    "683": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2B4"
    },
    "686": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "687": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "688": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "691": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8230,
        8262
      ],
      "op": "JUMP",
      "path": "44"
    },
    "692": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "693": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "695": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "696": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "698": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "DUP2",
      "path": "44"
    },
    "699": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "DUP4",
      "path": "44"
    },
    "700": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "SUB",
      "path": "44"
    },
    "701": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "SUB",
      "path": "44"
    },
    "702": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "DUP2",
      "path": "44"
    },
    "703": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "704": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "705": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "707": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8262
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "708": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8219,
        8264
      ],
      "op": "DUP1",
      "path": "44"
    },
    "709": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8219,
        8264
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "710": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8219,
        8264
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "711": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8219,
        8264
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "713": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8219,
        8264
      ],
      "op": "ADD",
      "path": "44"
    },
    "714": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8219,
        8264
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "715": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8282,
        8292
      ],
      "op": "DUP9",
      "path": "44"
    },
    "716": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "718": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "719": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "721": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "ADD",
      "path": "44"
    },
    "722": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2FD"
    },
    "725": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "726": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "727": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "728": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "729": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "730": {
      "op": "SWAP4"
    },
    "731": {
      "op": "DUP5"
    },
    "732": {
      "op": "MSTORE"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "op": "SWAP3"
    },
    "742": {
      "op": "SWAP1"
    },
    "743": {
      "op": "SWAP3"
    },
    "744": {
      "op": "AND"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "747": {
      "op": "DUP5"
    },
    "748": {
      "op": "ADD"
    },
    "749": {
      "op": "MSTORE"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "752": {
      "op": "DUP4"
    },
    "753": {
      "op": "ADD"
    },
    "754": {
      "op": "MSTORE"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "op": "SWAP1"
    },
    "764": {
      "op": "JUMP"
    },
    "765": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "766": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "768": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "769": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "771": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "DUP2",
      "path": "44"
    },
    "772": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "DUP4",
      "path": "44"
    },
    "773": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SUB",
      "path": "44"
    },
    "774": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SUB",
      "path": "44"
    },
    "775": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "DUP2",
      "path": "44"
    },
    "776": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "777": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "778": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "780": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8122,
        8306
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "781": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8099,
        8316
      ],
      "op": "DUP1",
      "path": "44"
    },
    "782": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8099,
        8316
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "783": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8099,
        8316
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "784": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8099,
        8316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "786": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8099,
        8316
      ],
      "op": "ADD",
      "path": "44"
    },
    "787": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8099,
        8316
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "788": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8081,
        8316
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "789": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8081,
        8316
      ],
      "op": "POP",
      "path": "44"
    },
    "790": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8327,
        8343
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "792": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8387,
        8403
      ],
      "op": "DUP3",
      "path": "44"
    },
    "793": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8405,
        8412
      ],
      "op": "DUP3",
      "path": "44"
    },
    "794": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "796": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "797": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "799": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "ADD",
      "path": "44"
    },
    "800": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x32A"
    },
    "803": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "804": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "805": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "806": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B38"
    },
    "809": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8357,
        8414
      ],
      "op": "JUMP",
      "path": "44"
    },
    "810": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "811": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "813": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "814": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "816": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "DUP2",
      "path": "44"
    },
    "817": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "DUP4",
      "path": "44"
    },
    "818": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "SUB",
      "path": "44"
    },
    "819": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "SUB",
      "path": "44"
    },
    "820": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "DUP2",
      "path": "44"
    },
    "821": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "822": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "823": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "825": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8357,
        8414
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "826": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8346,
        8416
      ],
      "op": "DUP1",
      "path": "44"
    },
    "827": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8346,
        8416
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "828": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8346,
        8416
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "829": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8346,
        8416
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "831": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8346,
        8416
      ],
      "op": "ADD",
      "path": "44"
    },
    "832": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8346,
        8416
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "833": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8327,
        8416
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "834": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8327,
        8416
      ],
      "op": "POP",
      "path": "44"
    },
    "835": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8434,
        8469
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 0,
      "value": "0x34C"
    },
    "838": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8447,
        8455
      ],
      "op": "DUP2",
      "path": "44"
    },
    "839": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8457,
        8467
      ],
      "op": "DUP7",
      "path": "44"
    },
    "840": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8434,
        8445
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x591"
    },
    "843": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8434,
        8469
      ],
      "op": "JUMP",
      "path": "44"
    },
    "844": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8434,
        8469
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "845": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8427,
        8469
      ],
      "op": "SWAP10",
      "path": "44"
    },
    "846": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7552,
        8476
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "o",
      "offset": [
        7552,
        8476
      ],
      "op": "JUMP",
      "path": "44"
    },
    "857": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "858": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9745,
        9752
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "860": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9769,
        9793
      ],
      "op": "DUP1",
      "path": "44"
    },
    "861": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "863": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "864": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "866": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "50"
    },
    "867": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x36B"
    },
    "870": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "871": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A86"
    },
    "874": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "50"
    },
    "875": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "876": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "878": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "879": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "881": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "882": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "50"
    },
    "883": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "884": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "885": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "886": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "887": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "888": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "890": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "891": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "892": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "893": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "894": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "896": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "50"
    },
    "897": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "900": {
      "op": "DUP1"
    },
    "901": {
      "op": "MLOAD"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "907": {
      "op": "DUP4"
    },
    "908": {
      "op": "CODECOPY"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "MLOAD"
    },
    "911": {
      "op": "SWAP2"
    },
    "912": {
      "op": "MSTORE"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "915": {
      "op": "DUP1"
    },
    "916": {
      "op": "MLOAD"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "919": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "922": {
      "op": "DUP4"
    },
    "923": {
      "op": "CODECOPY"
    },
    "924": {
      "op": "DUP2"
    },
    "925": {
      "op": "MLOAD"
    },
    "926": {
      "op": "SWAP2"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9973,
        9986
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "929": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10004,
        10012
      ],
      "op": "DUP8",
      "path": "44"
    },
    "930": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "932": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "933": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "935": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "ADD",
      "path": "44"
    },
    "936": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3B5"
    },
    "939": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "940": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "941": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "942": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "943": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "944": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "945": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF0"
    },
    "948": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        9819,
        10026
      ],
      "op": "JUMP",
      "path": "44"
    },
    "949": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "950": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "952": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "953": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "955": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "DUP2",
      "path": "44"
    },
    "956": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "DUP4",
      "path": "44"
    },
    "957": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SUB",
      "path": "44"
    },
    "958": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SUB",
      "path": "44"
    },
    "959": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "DUP2",
      "path": "44"
    },
    "960": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "961": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "962": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "964": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9819,
        10026
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "965": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9796,
        10036
      ],
      "op": "DUP1",
      "path": "44"
    },
    "966": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9796,
        10036
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "967": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9796,
        10036
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "968": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9796,
        10036
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "970": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9796,
        10036
      ],
      "op": "ADD",
      "path": "44"
    },
    "971": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9796,
        10036
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "972": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9769,
        10036
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "973": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9769,
        10036
      ],
      "op": "POP",
      "path": "44"
    },
    "974": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10047,
        10062
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "976": {
      "offset": [
        1654,
        1854
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "978": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "979": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "981": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "ADD",
      "path": "50"
    },
    "982": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A9"
    },
    "985": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "986": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "1019": {
      "op": "DUP2"
    },
    "1020": {
      "op": "MSTORE"
    },
    "1021": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C6279746573333220676F764D6F64656C2C"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1056": {
      "op": "DUP3"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "op": "MSTORE"
    },
    "1059": {
      "op": "PUSH32",
      "value": "0x75696E743820676F7652756C654D617855736572732C75696E743820676F7652"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1094": {
      "op": "DUP3"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "op": "MSTORE"
    },
    "1097": {
      "op": "PUSH32",
      "value": "0x756C654D61784D616E61676572732C75696E743820676F7652756C6541707072"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1132": {
      "op": "DUP3"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "op": "MSTORE"
    },
    "1135": {
      "op": "PUSH32",
      "value": "0x6F7650657263656E746167652C616464726573732077686974654C6973745761"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1170": {
      "op": "DUP3"
    },
    "1171": {
      "op": "ADD"
    },
    "1172": {
      "op": "MSTORE"
    },
    "1173": {
      "op": "PUSH6",
      "value": "0x6C6C65747329"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "DUP3"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0xA6"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "SWAP1"
    },
    "1192": {
      "op": "JUMP"
    },
    "1193": {
      "offset": [
        1654,
        1854
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1194": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1196": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1197": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1199": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1200": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1201": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "SUB",
      "path": "50"
    },
    "1202": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "SUB",
      "path": "50"
    },
    "1203": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1204": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1205": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1206": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1208": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1854
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1209": {
      "offset": [
        1639,
        1856
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1210": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1856
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1211": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1856
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1212": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1856
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1214": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1856
      ],
      "op": "ADD",
      "path": "50"
    },
    "1215": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1856
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1216": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10184,
        10194
      ],
      "op": "DUP13",
      "path": "44"
    },
    "1217": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1219": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1220": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1222": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "ADD",
      "path": "44"
    },
    "1223": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4D0"
    },
    "1226": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1227": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1228": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "1231": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10166,
        10196
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1232": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1233": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1235": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1236": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1239": {
      "op": "NOT"
    },
    "1240": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1241": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1242": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "SUB",
      "path": "44"
    },
    "1243": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "ADD",
      "path": "44"
    },
    "1244": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1245": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1246": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1247": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1248": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1249": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10155,
        10198
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1250": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10155,
        10198
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1251": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1253": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10155,
        10198
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1254": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10155,
        10198
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1255": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10155,
        10198
      ],
      "op": "ADD",
      "path": "44"
    },
    "1256": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10155,
        10198
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1257": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1258": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1259": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "ADD",
      "path": "44"
    },
    "1260": {
      "op": "SWAP4"
    },
    "1261": {
      "op": "SWAP1"
    },
    "1262": {
      "op": "SWAP4"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "DUP2"
    },
    "1265": {
      "op": "ADD"
    },
    "1266": {
      "op": "SWAP2"
    },
    "1267": {
      "op": "SWAP1"
    },
    "1268": {
      "op": "SWAP2"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "DUP12"
    },
    "1271": {
      "op": "ISZERO"
    },
    "1272": {
      "op": "ISZERO"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1275": {
      "op": "DUP3"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "op": "MSTORE"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1280": {
      "op": "DUP2"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "DUP12"
    },
    "1283": {
      "op": "SWAP1"
    },
    "1284": {
      "op": "MSTORE"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1287": {
      "op": "DUP1"
    },
    "1288": {
      "op": "DUP12"
    },
    "1289": {
      "op": "AND"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1292": {
      "op": "DUP4"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "DUP1"
    },
    "1296": {
      "op": "DUP11"
    },
    "1297": {
      "op": "AND"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1300": {
      "op": "DUP4"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "DUP9"
    },
    "1304": {
      "op": "AND"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1307": {
      "op": "DUP3"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "MSTORE"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "op": "DUP8"
    },
    "1319": {
      "op": "AND"
    },
    "1320": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1332": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1333": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1335": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1336": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1337": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "SUB",
      "path": "44"
    },
    "1338": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "SUB",
      "path": "44"
    },
    "1339": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1340": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1341": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1342": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1344": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10088,
        10488
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1345": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10065,
        10498
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1346": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10065,
        10498
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1347": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10065,
        10498
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1348": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10065,
        10498
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1350": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10065,
        10498
      ],
      "op": "ADD",
      "path": "44"
    },
    "1351": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10065,
        10498
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1352": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10047,
        10498
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1353": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10047,
        10498
      ],
      "op": "POP",
      "path": "44"
    },
    "1354": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10509,
        10525
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1356": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10569,
        10585
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1357": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10587,
        10594
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1358": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1360": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1361": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1363": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "ADD",
      "path": "44"
    },
    "1364": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x55E"
    },
    "1367": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1368": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1369": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1370": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B38"
    },
    "1373": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10539,
        10596
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1374": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1375": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1377": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1378": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1380": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1381": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1382": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "SUB",
      "path": "44"
    },
    "1383": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "SUB",
      "path": "44"
    },
    "1384": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1385": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1386": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1387": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1389": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10539,
        10596
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1390": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10528,
        10598
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1391": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10528,
        10598
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1392": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10528,
        10598
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1393": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10528,
        10598
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1395": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10528,
        10598
      ],
      "op": "ADD",
      "path": "44"
    },
    "1396": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10528,
        10598
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1397": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10509,
        10598
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1398": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10509,
        10598
      ],
      "op": "POP",
      "path": "44"
    },
    "1399": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10616,
        10651
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 1,
      "value": "0x580"
    },
    "1402": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10629,
        10637
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1403": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10639,
        10649
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1404": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10616,
        10627
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x591"
    },
    "1407": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10616,
        10651
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1408": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10616,
        10651
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1409": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10609,
        10651
      ],
      "op": "SWAP14",
      "path": "44"
    },
    "1410": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9385,
        10658
      ],
      "op": "SWAP13",
      "path": "44"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "op": "POP"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "POP"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "op": "POP"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "op": "POP"
    },
    "1424": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        9385,
        10658
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1425": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1426": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        576
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1428": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        602,
        612
      ],
      "op": "DUP2",
      "path": "44",
      "statement": 2
    },
    "1429": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        602,
        619
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1430": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        623,
        625
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x41"
    },
    "1432": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        602,
        625
      ],
      "op": "EQ",
      "path": "44"
    },
    "1433": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5E0"
    },
    "1436": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1437": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1439": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1448": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1451": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1453": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1454": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "ADD",
      "path": "44"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1489": {
      "op": "DUP3"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1496": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1498": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1499": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1500": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1501": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "SUB",
      "path": "44"
    },
    "1502": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1503": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "44"
    },
    "1504": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        593,
        651
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1505": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        841,
        843
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1507": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        824,
        845
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1508": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        824,
        845
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1509": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        824,
        845
      ],
      "op": "ADD",
      "path": "44"
    },
    "1510": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        817,
        847
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1511": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        924,
        926
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1513": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        907,
        928
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1514": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        907,
        928
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1515": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        907,
        928
      ],
      "op": "ADD",
      "path": "44"
    },
    "1516": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        900,
        930
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1517": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1045,
        1047
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1519": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1028,
        1049
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1520": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1028,
        1049
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1521": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1028,
        1049
      ],
      "op": "ADD",
      "path": "44"
    },
    "1522": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1021,
        1051
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1523": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 3
    },
    "1524": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1525": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        662,
        675
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1527": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1528": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1529": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1530": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "1531": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1532": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "ADD",
      "path": "44"
    },
    "1533": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1534": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1535": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1536": {
      "op": "DUP11"
    },
    "1537": {
      "op": "SWAP1"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1012,
        1053
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "1540": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1012,
        1053
      ],
      "op": "BYTE",
      "path": "44"
    },
    "1541": {
      "op": "SWAP3"
    },
    "1542": {
      "op": "DUP6"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "op": "DUP4"
    },
    "1545": {
      "op": "SWAP1"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "op": "DUP5"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "op": "DUP4"
    },
    "1550": {
      "op": "SWAP1"
    },
    "1551": {
      "op": "MSTORE"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1554": {
      "op": "DUP5"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "DUP2"
    },
    "1557": {
      "op": "SWAP1"
    },
    "1558": {
      "op": "MSTORE"
    },
    "1559": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        817,
        847
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1560": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        817,
        847
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1561": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1563": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1569": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1571": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1572": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1574": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1575": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SUB",
      "path": "44"
    },
    "1576": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1577": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1578": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1579": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SUB",
      "path": "44"
    },
    "1580": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1581": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1582": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "GAS",
      "path": "44"
    },
    "1583": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "1584": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1585": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1586": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1587": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x640"
    },
    "1590": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1591": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1592": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1594": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1595": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "1596": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "1597": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1599": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1600": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1605": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1608": {
      "op": "NOT"
    },
    "1609": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "ADD",
      "path": "44"
    },
    "1610": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1611": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1080,
        1122
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "1612": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        437,
        1129
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "op": "POP"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "o",
      "offset": [
        437,
        1129
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1621": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1622": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8680,
        8687
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1624": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8704,
        8728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1625": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1627": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1628": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1630": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "50"
    },
    "1631": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x667"
    },
    "1634": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1635": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A86"
    },
    "1638": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1639": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1640": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1642": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1643": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1645": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1646": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1647": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "1648": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "1649": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1650": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1651": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1652": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1654": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1655": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1656": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1657": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1658": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1660": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "50"
    },
    "1661": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1664": {
      "op": "DUP1"
    },
    "1665": {
      "op": "MLOAD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "1671": {
      "op": "DUP4"
    },
    "1672": {
      "op": "CODECOPY"
    },
    "1673": {
      "op": "DUP2"
    },
    "1674": {
      "op": "MLOAD"
    },
    "1675": {
      "op": "SWAP2"
    },
    "1676": {
      "op": "MSTORE"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1679": {
      "op": "DUP1"
    },
    "1680": {
      "op": "MLOAD"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "1686": {
      "op": "DUP4"
    },
    "1687": {
      "op": "CODECOPY"
    },
    "1688": {
      "op": "DUP2"
    },
    "1689": {
      "op": "MLOAD"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8908,
        8921
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "1693": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8939,
        8949
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1694": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1696": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1697": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1699": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "ADD",
      "path": "44"
    },
    "1700": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6B1"
    },
    "1703": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "1704": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1705": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1706": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1707": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1708": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1709": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF0"
    },
    "1712": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        8754,
        8963
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1713": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1714": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1716": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1717": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1719": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1720": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1721": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SUB",
      "path": "44"
    },
    "1722": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SUB",
      "path": "44"
    },
    "1723": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1724": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1725": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1726": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1728": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8754,
        8963
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1729": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8731,
        8973
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1730": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8731,
        8973
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1731": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8731,
        8973
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1732": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8731,
        8973
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1734": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8731,
        8973
      ],
      "op": "ADD",
      "path": "44"
    },
    "1735": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8731,
        8973
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1736": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8704,
        8973
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1737": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8704,
        8973
      ],
      "op": "POP",
      "path": "44"
    },
    "1738": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8984,
        8999
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1740": {
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1742": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1743": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1745": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "ADD",
      "path": "50"
    },
    "1746": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x713"
    },
    "1749": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1750": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1803": {
      "op": "DUP3"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "op": "MSTORE"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1808": {
      "op": "ADD"
    },
    "1809": {
      "op": "SWAP1"
    },
    "1810": {
      "op": "JUMP"
    },
    "1811": {
      "offset": [
        1516,
        1594
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1812": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1814": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1815": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1817": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1818": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1819": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SUB",
      "path": "50"
    },
    "1820": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SUB",
      "path": "50"
    },
    "1821": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1822": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1823": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1824": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1826": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1827": {
      "offset": [
        1501,
        1596
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1828": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1829": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1830": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1832": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "ADD",
      "path": "50"
    },
    "1833": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "1834": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9122,
        9127
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1835": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1837": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1838": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1840": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "ADD",
      "path": "44"
    },
    "1841": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x73A"
    },
    "1844": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1845": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1846": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "1849": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9104,
        9129
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1850": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1851": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1853": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1854": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1856": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1857": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1858": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "SUB",
      "path": "44"
    },
    "1859": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "SUB",
      "path": "44"
    },
    "1860": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1861": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1862": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1863": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1865": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9104,
        9129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1866": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9093,
        9131
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1867": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9093,
        9131
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1868": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9093,
        9131
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1869": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9093,
        9131
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1871": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9093,
        9131
      ],
      "op": "ADD",
      "path": "44"
    },
    "1872": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9093,
        9131
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1873": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9178,
        9190
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1874": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1876": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1877": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1879": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "ADD",
      "path": "44"
    },
    "1880": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x761"
    },
    "1883": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1884": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1885": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "1888": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9160,
        9192
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1889": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1890": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1892": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1893": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1896": {
      "op": "NOT"
    },
    "1897": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1898": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1899": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "SUB",
      "path": "44"
    },
    "1900": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "ADD",
      "path": "44"
    },
    "1901": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1902": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1903": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1904": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1905": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1906": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9149,
        9194
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1907": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9149,
        9194
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1908": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9160,
        9192
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1910": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9149,
        9194
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1911": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9149,
        9194
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1912": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9149,
        9194
      ],
      "op": "ADD",
      "path": "44"
    },
    "1913": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9149,
        9194
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1914": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1915": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1916": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "ADD",
      "path": "44"
    },
    "1917": {
      "op": "SWAP5"
    },
    "1918": {
      "op": "SWAP1"
    },
    "1919": {
      "op": "SWAP5"
    },
    "1920": {
      "op": "MSTORE"
    },
    "1921": {
      "op": "DUP2"
    },
    "1922": {
      "op": "ADD"
    },
    "1923": {
      "op": "SWAP2"
    },
    "1924": {
      "op": "SWAP1"
    },
    "1925": {
      "op": "SWAP2"
    },
    "1926": {
      "op": "MSTORE"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1929": {
      "op": "DUP2"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "op": "SWAP2"
    },
    "1932": {
      "op": "SWAP1"
    },
    "1933": {
      "op": "SWAP2"
    },
    "1934": {
      "op": "MSTORE"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1940": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1941": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1943": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1944": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1945": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "SUB",
      "path": "44"
    },
    "1946": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "SUB",
      "path": "44"
    },
    "1947": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1948": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1949": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1950": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1952": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9025,
        9208
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1953": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9002,
        9218
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1954": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9002,
        9218
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1955": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9002,
        9218
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1956": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9002,
        9218
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1958": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9002,
        9218
      ],
      "op": "ADD",
      "path": "44"
    },
    "1959": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9002,
        9218
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1960": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8984,
        9218
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1961": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8984,
        9218
      ],
      "op": "POP",
      "path": "44"
    },
    "1962": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9229,
        9245
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1964": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9289,
        9305
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1965": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9307,
        9314
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1966": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1968": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1969": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1971": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "ADD",
      "path": "44"
    },
    "1972": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7BE"
    },
    "1975": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1976": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1977": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1978": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B38"
    },
    "1981": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9259,
        9316
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1982": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1983": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1985": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1986": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1988": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1989": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1990": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "SUB",
      "path": "44"
    },
    "1991": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "SUB",
      "path": "44"
    },
    "1992": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1993": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1994": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1995": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1997": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9259,
        9316
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1998": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9248,
        9318
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1999": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9248,
        9318
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2000": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9248,
        9318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2001": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9248,
        9318
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2003": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9248,
        9318
      ],
      "op": "ADD",
      "path": "44"
    },
    "2004": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9248,
        9318
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "2005": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9229,
        9318
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2006": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9229,
        9318
      ],
      "op": "POP",
      "path": "44"
    },
    "2007": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9336,
        9371
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 4,
      "value": "0x7E0"
    },
    "2010": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9349,
        9357
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2011": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9359,
        9369
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2012": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9336,
        9347
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x591"
    },
    "2015": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9336,
        9371
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2016": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9336,
        9371
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2017": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9329,
        9371
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "2018": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8483,
        9378
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "op": "POP"
    },
    "2021": {
      "op": "POP"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "op": "POP"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "o",
      "offset": [
        8483,
        9378
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2028": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2029": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2031": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2032": {
      "op": "PUSH4",
      "value": "0x1C3FE463"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2041": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2048": {
      "op": "SHL"
    },
    "2049": {
      "op": "SUB"
    },
    "2050": {
      "op": "DUP3"
    },
    "2051": {
      "op": "DUP2"
    },
    "2052": {
      "op": "AND"
    },
    "2053": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2055": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2056": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "ADD",
      "path": "44"
    },
    "2057": {
      "op": "MSTORE"
    },
    "2058": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1638,
        1656
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2060": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1638,
        1656
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2061": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2063": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2064": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2065": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2066": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2067": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2068": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1788,
        1798
      ],
      "op": "DUP8",
      "path": "44"
    },
    "2069": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1788,
        1798
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2070": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2071": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1670,
        1682
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2072": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1841
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2073": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1841
      ],
      "op": "AND",
      "path": "44"
    },
    "2074": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1841
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2075": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1841
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x70FF918C"
    },
    "2080": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1841
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2086": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2088": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2089": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2090": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2091": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "SUB",
      "path": "44"
    },
    "2092": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2093": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2094": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "GAS",
      "path": "44"
    },
    "2095": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2096": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2097": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2098": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2099": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x840"
    },
    "2102": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2103": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2104": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2106": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2107": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2108": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2109": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2111": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2112": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2113": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "POP",
      "path": "44"
    },
    "2114": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "POP",
      "path": "44"
    },
    "2115": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "POP",
      "path": "44"
    },
    "2116": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "POP",
      "path": "44"
    },
    "2117": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2119": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2120": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2121": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2123": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "NOT",
      "path": "44"
    },
    "2124": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2126": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2127": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "ADD",
      "path": "44"
    },
    "2128": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "AND",
      "path": "44"
    },
    "2129": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2130": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "ADD",
      "path": "44"
    },
    "2131": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2132": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2134": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2135": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "POP",
      "path": "44"
    },
    "2136": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2137": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "ADD",
      "path": "44"
    },
    "2138": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2139": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x864"
    },
    "2142": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2143": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2144": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B53"
    },
    "2147": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1825,
        1856
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2148": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1825,
        1856
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2149": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1811,
        1856
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1876,
        1884
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 5
    },
    "2152": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8A9"
    },
    "2155": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2156": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2158": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2167": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2170": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2172": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2173": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "ADD",
      "path": "44"
    },
    "2174": {
      "op": "MSTORE"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2179": {
      "op": "DUP3"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "MSTORE"
    },
    "2182": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2207": {
      "op": "DUP3"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2212": {
      "op": "ADD"
    },
    "2213": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5D7"
    },
    "2216": {
      "op": "JUMP"
    },
    "2217": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1867,
        1910
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2218": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1921,
        1945
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8B1"
    },
    "2221": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1921,
        1945
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x136E"
    },
    "2224": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1921,
        1945
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2225": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1921,
        1945
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2226": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 6,
      "value": "0x40"
    },
    "2228": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2229": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2238": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2239": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2241": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2242": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "ADD",
      "path": "44"
    },
    "2243": {
      "op": "DUP4"
    },
    "2244": {
      "op": "SWAP1"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2252": {
      "op": "SHL"
    },
    "2253": {
      "op": "SUB"
    },
    "2254": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2122
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2255": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2122
      ],
      "op": "AND",
      "path": "44"
    },
    "2256": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2257": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2122
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x22B4081C"
    },
    "2262": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2122
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2265": {
      "op": "ADD"
    },
    "2266": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2268": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2270": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2271": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2272": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2273": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "SUB",
      "path": "44"
    },
    "2274": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2275": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2276": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "GAS",
      "path": "44"
    },
    "2277": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2278": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2279": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2280": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2281": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8F6"
    },
    "2284": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2285": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2286": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2288": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2289": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2290": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2291": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2293": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2294": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2295": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "POP",
      "path": "44"
    },
    "2296": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "POP",
      "path": "44"
    },
    "2297": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "POP",
      "path": "44"
    },
    "2298": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "POP",
      "path": "44"
    },
    "2299": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2301": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2302": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2303": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2305": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2306": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2307": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2309": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2310": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2311": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2312": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "ADD",
      "path": "44"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2315": {
      "op": "NOT"
    },
    "2316": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "AND",
      "path": "44"
    },
    "2317": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2318": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "ADD",
      "path": "44"
    },
    "2319": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2321": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2322": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x91E"
    },
    "2325": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2326": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2327": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2328": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "ADD",
      "path": "44"
    },
    "2329": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2330": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BB9"
    },
    "2333": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        2107,
        2129
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2334": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2107,
        2129
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2335": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2336": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2337": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2083,
        2102
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2339": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2083,
        2102
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2340": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2083,
        2102
      ],
      "op": "ADD",
      "path": "44"
    },
    "2341": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2342": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2343": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2344": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2053,
        2069
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2346": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2053,
        2069
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2347": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2053,
        2069
      ],
      "op": "ADD",
      "path": "44"
    },
    "2348": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2349": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2350": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2351": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2022,
        2039
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2353": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2022,
        2039
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2354": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2022,
        2039
      ],
      "op": "ADD",
      "path": "44"
    },
    "2355": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2356": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2357": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2358": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2359": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1994,
        2008
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2361": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1994,
        2008
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2362": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1994,
        2008
      ],
      "op": "ADD",
      "path": "44"
    },
    "2363": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2364": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2365": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2366": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2376": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2377": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "AND",
      "path": "44"
    },
    "2378": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2379": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1956,
        2129
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2380": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2149,
        2153
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 7,
      "value": "0x1"
    },
    "2382": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2149,
        2173
      ],
      "op": "EQ",
      "path": "44"
    },
    "2383": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x98A"
    },
    "2386": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2387": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2389": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2396": {
      "op": "SHL"
    },
    "2397": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2398": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2401": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2403": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2404": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "ADD",
      "path": "44"
    },
    "2405": {
      "op": "MSTORE"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH13",
      "value": "0x24B9903737BA1030903AB9B2B9"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2429": {
      "op": "SHL"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2432": {
      "op": "DUP3"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "op": "MSTORE"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5D7"
    },
    "2441": {
      "op": "JUMP"
    },
    "2442": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2140,
        2194
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2443": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2226,
        2240
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 8,
      "value": "0x20"
    },
    "2445": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2226,
        2240
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2446": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2226,
        2240
      ],
      "op": "ADD",
      "path": "44"
    },
    "2447": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2226,
        2240
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2448": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2254,
        2271
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2450": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2254,
        2271
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2451": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2254,
        2271
      ],
      "op": "ADD",
      "path": "44"
    },
    "2452": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2254,
        2271
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2453": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2285,
        2301
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2455": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2285,
        2301
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2456": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2285,
        2301
      ],
      "op": "ADD",
      "path": "44"
    },
    "2457": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2285,
        2301
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2458": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2315,
        2334
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2460": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2315,
        2334
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2461": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2315,
        2334
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "2462": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2315,
        2334
      ],
      "op": "ADD",
      "path": "44"
    },
    "2463": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2315,
        2334
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2464": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2226,
        2240
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2465": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2226,
        2240
      ],
      "op": "SWAP12",
      "path": "44"
    },
    "2466": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2254,
        2271
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2467": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2254,
        2271
      ],
      "op": "SWAP11",
      "path": "44"
    },
    "2468": {
      "op": "POP"
    },
    "2469": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2285,
        2301
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2470": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2285,
        2301
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2315,
        2334
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1486,
        2351
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1486,
        2351
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2481": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2482": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4120,
        4144
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "2484": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4158,
        4188
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2486": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4202,
        4219
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2487": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4233,
        4247
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2489": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4261,
        4278
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2490": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4292,
        4321
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2492": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4335,
        4356
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2493": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4370,
        4394
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2495": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4419,
        4434
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2496": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4447,
        4457
      ],
      "op": "DUP10",
      "path": "44"
    },
    "2497": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4419,
        4459
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2498": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4419,
        4459
      ],
      "op": "POP",
      "path": "44"
    },
    "2499": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4496
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 9
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2506": {
      "op": "SHL"
    },
    "2507": {
      "op": "SUB"
    },
    "2508": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4507
      ],
      "op": "AND",
      "path": "44"
    },
    "2509": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4507
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x59CA2D03"
    },
    "2514": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2516": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2517": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2518": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "2523": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "AND",
      "path": "44"
    },
    "2524": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "2526": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "SHL",
      "path": "44"
    },
    "2527": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2528": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2529": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2531": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "ADD",
      "path": "44"
    },
    "2532": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2534": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2536": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2537": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2538": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2539": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "SUB",
      "path": "44"
    },
    "2540": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2541": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2542": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "GAS",
      "path": "44"
    },
    "2543": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2544": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2545": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2546": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2547": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA00"
    },
    "2550": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2551": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2552": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2554": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2555": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2556": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2557": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2559": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2560": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2561": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "POP",
      "path": "44"
    },
    "2562": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "POP",
      "path": "44"
    },
    "2563": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "POP",
      "path": "44"
    },
    "2564": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "POP",
      "path": "44"
    },
    "2565": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2567": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2568": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2569": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2571": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2572": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2573": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2575": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2576": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2577": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2578": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "ADD",
      "path": "44"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2581": {
      "op": "NOT"
    },
    "2582": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "AND",
      "path": "44"
    },
    "2583": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2584": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "ADD",
      "path": "44"
    },
    "2585": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2587": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2588": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA28"
    },
    "2591": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2592": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2593": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2594": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "ADD",
      "path": "44"
    },
    "2595": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2596": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C3C"
    },
    "2599": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4490,
        4509
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2600": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4490,
        4509
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2601": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4529
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "op": "SUB"
    },
    "2610": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4552
      ],
      "op": "AND",
      "path": "44"
    },
    "2611": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4552
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x1D5FD3CA"
    },
    "2616": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2618": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2619": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2620": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "2625": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "AND",
      "path": "44"
    },
    "2626": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "2628": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "SHL",
      "path": "44"
    },
    "2629": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2630": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2631": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2633": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "ADD",
      "path": "44"
    },
    "2634": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2636": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2638": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2639": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2640": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2641": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "SUB",
      "path": "44"
    },
    "2642": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2643": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2644": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "GAS",
      "path": "44"
    },
    "2645": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2646": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2647": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2648": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2649": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA66"
    },
    "2652": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2653": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2654": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2656": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2657": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2658": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2659": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2661": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2662": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2663": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "POP",
      "path": "44"
    },
    "2664": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "POP",
      "path": "44"
    },
    "2665": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "POP",
      "path": "44"
    },
    "2666": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "POP",
      "path": "44"
    },
    "2667": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2669": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2670": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2671": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2673": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "NOT",
      "path": "44"
    },
    "2674": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2676": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2677": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "ADD",
      "path": "44"
    },
    "2678": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "AND",
      "path": "44"
    },
    "2679": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2680": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "ADD",
      "path": "44"
    },
    "2681": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2682": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2684": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2685": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "POP",
      "path": "44"
    },
    "2686": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2687": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "ADD",
      "path": "44"
    },
    "2688": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2689": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA8A"
    },
    "2692": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2693": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2694": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B53"
    },
    "2697": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4523,
        4554
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2698": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4523,
        4554
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2699": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4574
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "op": "SUB"
    },
    "2708": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4587
      ],
      "op": "AND",
      "path": "44"
    },
    "2709": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4587
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xF00D6274"
    },
    "2714": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2716": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2717": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2718": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "2723": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "AND",
      "path": "44"
    },
    "2724": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "2726": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "SHL",
      "path": "44"
    },
    "2727": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2728": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2729": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2731": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "ADD",
      "path": "44"
    },
    "2732": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2734": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2736": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2737": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2738": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2739": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "SUB",
      "path": "44"
    },
    "2740": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2741": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2742": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "GAS",
      "path": "44"
    },
    "2743": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2744": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2745": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2746": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2747": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xAC8"
    },
    "2750": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2751": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2752": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2754": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2755": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2756": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2757": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2759": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2760": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2761": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "POP",
      "path": "44"
    },
    "2762": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "POP",
      "path": "44"
    },
    "2763": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "POP",
      "path": "44"
    },
    "2764": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "POP",
      "path": "44"
    },
    "2765": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2767": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2768": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2769": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2771": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "NOT",
      "path": "44"
    },
    "2772": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2774": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2775": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "ADD",
      "path": "44"
    },
    "2776": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "AND",
      "path": "44"
    },
    "2777": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2778": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "ADD",
      "path": "44"
    },
    "2779": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2780": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2782": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2783": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "POP",
      "path": "44"
    },
    "2784": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2785": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "ADD",
      "path": "44"
    },
    "2786": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2787": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xAEC"
    },
    "2790": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2791": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2792": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C71"
    },
    "2795": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4568,
        4589
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2796": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4568,
        4589
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2797": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4609
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2804": {
      "op": "SHL"
    },
    "2805": {
      "op": "SUB"
    },
    "2806": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4618
      ],
      "op": "AND",
      "path": "44"
    },
    "2807": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4618
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x19A50F49"
    },
    "2812": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2814": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2815": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2816": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "2821": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "AND",
      "path": "44"
    },
    "2822": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "2824": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "SHL",
      "path": "44"
    },
    "2825": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2826": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2827": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2829": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "ADD",
      "path": "44"
    },
    "2830": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2832": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2834": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2835": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2836": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2837": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "SUB",
      "path": "44"
    },
    "2838": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2839": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2840": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "GAS",
      "path": "44"
    },
    "2841": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2842": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2843": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2844": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2845": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB2A"
    },
    "2848": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2849": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2850": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2852": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2853": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2854": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2855": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2857": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2858": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2859": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "POP",
      "path": "44"
    },
    "2860": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "POP",
      "path": "44"
    },
    "2861": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "POP",
      "path": "44"
    },
    "2862": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "POP",
      "path": "44"
    },
    "2863": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2865": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2866": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2867": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2869": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "NOT",
      "path": "44"
    },
    "2870": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2872": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2873": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "ADD",
      "path": "44"
    },
    "2874": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "AND",
      "path": "44"
    },
    "2875": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2876": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "ADD",
      "path": "44"
    },
    "2877": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2878": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2880": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2881": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "POP",
      "path": "44"
    },
    "2882": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2883": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "ADD",
      "path": "44"
    },
    "2884": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2885": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB4E"
    },
    "2888": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2889": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2890": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C8E"
    },
    "2893": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4603,
        4620
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2894": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4603,
        4620
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2895": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4640
      ],
      "op": "DUP5",
      "path": "44"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "op": "SUB"
    },
    "2904": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4652
      ],
      "op": "AND",
      "path": "44"
    },
    "2905": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4652
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE68777D7"
    },
    "2910": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2912": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2913": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2914": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "2919": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "AND",
      "path": "44"
    },
    "2920": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "2922": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "SHL",
      "path": "44"
    },
    "2923": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2924": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2925": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "2927": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "ADD",
      "path": "44"
    },
    "2928": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "2930": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2932": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2933": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2934": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP4",
      "path": "44"
    },
    "2935": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "SUB",
      "path": "44"
    },
    "2936": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2937": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP7",
      "path": "44"
    },
    "2938": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "GAS",
      "path": "44"
    },
    "2939": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "2940": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2941": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2942": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "2943": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB8C"
    },
    "2946": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "2947": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2948": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2950": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2951": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "2952": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2953": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "2955": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "REVERT",
      "path": "44"
    },
    "2956": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2957": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "POP",
      "path": "44"
    },
    "2958": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "POP",
      "path": "44"
    },
    "2959": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "POP",
      "path": "44"
    },
    "2960": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "POP",
      "path": "44"
    },
    "2961": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2963": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "2964": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "2965": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2967": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "NOT",
      "path": "44"
    },
    "2968": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "2970": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2971": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "ADD",
      "path": "44"
    },
    "2972": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "AND",
      "path": "44"
    },
    "2973": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP3",
      "path": "44"
    },
    "2974": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "ADD",
      "path": "44"
    },
    "2975": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP1",
      "path": "44"
    },
    "2976": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "2978": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "2979": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "POP",
      "path": "44"
    },
    "2980": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "DUP2",
      "path": "44"
    },
    "2981": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "ADD",
      "path": "44"
    },
    "2982": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2983": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBB0"
    },
    "2986": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "2987": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "2988": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C8E"
    },
    "2991": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4634,
        4654
      ],
      "op": "JUMP",
      "path": "44"
    },
    "2992": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4634,
        4654
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2993": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4674
      ],
      "op": "DUP6",
      "path": "44"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "SUB"
    },
    "3002": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4698
      ],
      "op": "AND",
      "path": "44"
    },
    "3003": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4698
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x9C630A88"
    },
    "3008": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3010": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3011": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3012": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "3017": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "AND",
      "path": "44"
    },
    "3018": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3020": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "SHL",
      "path": "44"
    },
    "3021": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3022": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3023": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3025": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "ADD",
      "path": "44"
    },
    "3026": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3028": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3030": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3031": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3032": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3033": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "SUB",
      "path": "44"
    },
    "3034": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3035": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3036": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "GAS",
      "path": "44"
    },
    "3037": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3038": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3039": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3040": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3041": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xBEE"
    },
    "3044": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3045": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3046": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3048": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3049": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3050": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3051": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3053": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3054": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3055": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "POP",
      "path": "44"
    },
    "3056": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "POP",
      "path": "44"
    },
    "3057": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "POP",
      "path": "44"
    },
    "3058": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "POP",
      "path": "44"
    },
    "3059": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3061": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3062": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3063": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3065": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "NOT",
      "path": "44"
    },
    "3066": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3068": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3069": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "ADD",
      "path": "44"
    },
    "3070": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "AND",
      "path": "44"
    },
    "3071": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3072": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "ADD",
      "path": "44"
    },
    "3073": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3074": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3076": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3077": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "POP",
      "path": "44"
    },
    "3078": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3079": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "ADD",
      "path": "44"
    },
    "3080": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3081": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC12"
    },
    "3084": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3085": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3086": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C8E"
    },
    "3089": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4668,
        4700
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3090": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4668,
        4700
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3091": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4720
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "op": "SUB"
    },
    "3100": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4736
      ],
      "op": "AND",
      "path": "44"
    },
    "3101": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4736
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x1343E9A5"
    },
    "3106": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3108": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3109": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3110": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "3115": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "AND",
      "path": "44"
    },
    "3116": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3118": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "SHL",
      "path": "44"
    },
    "3119": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3120": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3121": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3123": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "ADD",
      "path": "44"
    },
    "3124": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3126": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3128": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3129": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3130": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3131": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "SUB",
      "path": "44"
    },
    "3132": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3133": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3134": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "GAS",
      "path": "44"
    },
    "3135": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3136": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3137": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3138": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3139": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC50"
    },
    "3142": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3143": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3144": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3146": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3147": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3148": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3149": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3151": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3152": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3153": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "POP",
      "path": "44"
    },
    "3154": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "POP",
      "path": "44"
    },
    "3155": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "POP",
      "path": "44"
    },
    "3156": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "POP",
      "path": "44"
    },
    "3157": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3159": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3160": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3161": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3163": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "NOT",
      "path": "44"
    },
    "3164": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3166": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3167": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "ADD",
      "path": "44"
    },
    "3168": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "AND",
      "path": "44"
    },
    "3169": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3170": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "ADD",
      "path": "44"
    },
    "3171": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3172": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3174": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3175": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "POP",
      "path": "44"
    },
    "3176": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3177": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "ADD",
      "path": "44"
    },
    "3178": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3179": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xC74"
    },
    "3182": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3183": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3184": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C8E"
    },
    "3187": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4714,
        4738
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3188": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4714,
        4738
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3189": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4758
      ],
      "op": "DUP8",
      "path": "44"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "op": "SUB"
    },
    "3198": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4777
      ],
      "op": "AND",
      "path": "44"
    },
    "3199": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4777
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xE810A58E"
    },
    "3204": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3206": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3207": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3208": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "3213": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "AND",
      "path": "44"
    },
    "3214": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3216": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "SHL",
      "path": "44"
    },
    "3217": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3218": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3219": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3221": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "ADD",
      "path": "44"
    },
    "3222": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3224": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3226": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3227": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3228": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3229": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "SUB",
      "path": "44"
    },
    "3230": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3231": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3232": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "GAS",
      "path": "44"
    },
    "3233": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3234": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3235": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3236": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3237": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCB2"
    },
    "3240": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3241": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3242": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3244": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3245": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3246": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3247": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3249": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3250": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3251": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "POP",
      "path": "44"
    },
    "3252": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "POP",
      "path": "44"
    },
    "3253": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "POP",
      "path": "44"
    },
    "3254": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "POP",
      "path": "44"
    },
    "3255": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3257": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3258": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3259": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3261": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "NOT",
      "path": "44"
    },
    "3262": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3264": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3265": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "ADD",
      "path": "44"
    },
    "3266": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "AND",
      "path": "44"
    },
    "3267": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3268": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "ADD",
      "path": "44"
    },
    "3269": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3270": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3272": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3273": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "POP",
      "path": "44"
    },
    "3274": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3275": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "ADD",
      "path": "44"
    },
    "3276": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3277": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xCD6"
    },
    "3280": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3281": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3282": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C8E"
    },
    "3285": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4752,
        4779
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3286": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4752,
        4779
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3287": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3288": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3289": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3290": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3291": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3292": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3293": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3294": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3295": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3296": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3297": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3298": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3299": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3300": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3301": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "SWAP9",
      "path": "44"
    },
    "3302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4470,
        4789
      ],
      "op": "POP",
      "path": "44"
    },
    "3304": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3305": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3306": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3307": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "3308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "POP",
      "path": "44"
    },
    "3309": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3311": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3312": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        3999,
        4796
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "3313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "o",
      "offset": [
        3999,
        4796
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3314": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5572,
        6476
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3315": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5784,
        5791
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3317": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5808,
        5832
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3318": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3320": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3321": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3323": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "50"
    },
    "3324": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD04"
    },
    "3327": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3328": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A86"
    },
    "3331": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3332": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3333": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3335": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3336": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3338": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3339": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3340": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "3341": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "3342": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3343": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3344": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3345": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3347": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3348": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3349": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3350": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3351": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3353": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "50"
    },
    "3354": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3357": {
      "op": "DUP1"
    },
    "3358": {
      "op": "MLOAD"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "3364": {
      "op": "DUP4"
    },
    "3365": {
      "op": "CODECOPY"
    },
    "3366": {
      "op": "DUP2"
    },
    "3367": {
      "op": "MLOAD"
    },
    "3368": {
      "op": "SWAP2"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3372": {
      "op": "DUP1"
    },
    "3373": {
      "op": "MLOAD"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3376": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "3379": {
      "op": "DUP4"
    },
    "3380": {
      "op": "CODECOPY"
    },
    "3381": {
      "op": "DUP2"
    },
    "3382": {
      "op": "MLOAD"
    },
    "3383": {
      "op": "SWAP2"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6012,
        6025
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "3386": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6043,
        6053
      ],
      "op": "DUP8",
      "path": "44"
    },
    "3387": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3389": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3390": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3392": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "ADD",
      "path": "44"
    },
    "3393": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD4E"
    },
    "3396": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3397": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3398": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3399": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3400": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3401": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3402": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF0"
    },
    "3405": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5858,
        6067
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3406": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3407": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3409": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3410": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3412": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3413": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3414": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SUB",
      "path": "44"
    },
    "3415": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SUB",
      "path": "44"
    },
    "3416": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3417": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3418": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3419": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3421": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5858,
        6067
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3422": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5835,
        6077
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3423": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5835,
        6077
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3424": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5835,
        6077
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3425": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5835,
        6077
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3427": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5835,
        6077
      ],
      "op": "ADD",
      "path": "44"
    },
    "3428": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5835,
        6077
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "3429": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5808,
        6077
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3430": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5808,
        6077
      ],
      "op": "POP",
      "path": "44"
    },
    "3431": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6088,
        6103
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3433": {
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3435": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3436": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3438": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "ADD",
      "path": "50"
    },
    "3439": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDC1"
    },
    "3442": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3443": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3476": {
      "op": "DUP2"
    },
    "3477": {
      "op": "MSTORE"
    },
    "3478": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3513": {
      "op": "DUP3"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "MSTORE"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "SWAP1"
    },
    "3520": {
      "op": "JUMP"
    },
    "3521": {
      "offset": [
        1007,
        1100
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3522": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3524": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3525": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3527": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3528": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3529": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SUB",
      "path": "50"
    },
    "3530": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SUB",
      "path": "50"
    },
    "3531": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3532": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3533": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3534": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3536": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3537": {
      "offset": [
        992,
        1102
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3538": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3539": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3540": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3542": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "ADD",
      "path": "50"
    },
    "3543": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3544": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6194,
        6201
      ],
      "op": "DUP9",
      "path": "44"
    },
    "3545": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6219,
        6227
      ],
      "op": "DUP9",
      "path": "44"
    },
    "3546": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6274,
        6288
      ],
      "op": "DUP9",
      "path": "44"
    },
    "3547": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3549": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3550": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3552": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "ADD",
      "path": "44"
    },
    "3553": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xDEA"
    },
    "3556": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3557": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3558": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "3561": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        6256,
        6290
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3562": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3563": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3565": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3566": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3569": {
      "op": "NOT"
    },
    "3570": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3571": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3572": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "SUB",
      "path": "44"
    },
    "3573": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "ADD",
      "path": "44"
    },
    "3574": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3575": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3576": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3577": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3578": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3579": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6245,
        6292
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3580": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6245,
        6292
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3581": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6256,
        6290
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3583": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6245,
        6292
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3584": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6245,
        6292
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3585": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6245,
        6292
      ],
      "op": "ADD",
      "path": "44"
    },
    "3586": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6245,
        6292
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "3587": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6129,
        6306
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3588": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6129,
        6306
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3589": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6129,
        6306
      ],
      "op": "ADD",
      "path": "44"
    },
    "3590": {
      "op": "SWAP6"
    },
    "3591": {
      "op": "SWAP1"
    },
    "3592": {
      "op": "SWAP6"
    },
    "3593": {
      "op": "MSTORE"
    },
    "3594": {
      "op": "DUP2"
    },
    "3595": {
      "op": "ADD"
    },
    "3596": {
      "op": "SWAP3"
    },
    "3597": {
      "op": "SWAP1"
    },
    "3598": {
      "op": "SWAP3"
    },
    "3599": {
      "op": "MSTORE"
    },
    "3600": {
      "op": "ISZERO"
    },
    "3601": {
      "op": "ISZERO"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3604": {
      "op": "DUP3"
    },
    "3605": {
      "op": "ADD"
    },
    "3606": {
      "op": "MSTORE"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3609": {
      "op": "DUP2"
    },
    "3610": {
      "op": "ADD"
    },
    "3611": {
      "op": "SWAP2"
    },
    "3612": {
      "op": "SWAP1"
    },
    "3613": {
      "op": "SWAP2"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3617": {
      "op": "ADD"
    },
    "3618": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6129,
        6306
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2FD"
    },
    "3621": {
      "op": "JUMP"
    },
    "3622": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3623": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4959,
        4966
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3625": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4983,
        5007
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3626": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3628": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3629": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3631": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "50"
    },
    "3632": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE38"
    },
    "3635": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3636": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A86"
    },
    "3639": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3640": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3641": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3643": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3644": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3646": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3647": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3648": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "3649": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "3650": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3651": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3652": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3653": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3655": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3656": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3657": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3658": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3659": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3661": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "50"
    },
    "3662": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "DUP1"
    },
    "3666": {
      "op": "MLOAD"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "3672": {
      "op": "DUP4"
    },
    "3673": {
      "op": "CODECOPY"
    },
    "3674": {
      "op": "DUP2"
    },
    "3675": {
      "op": "MLOAD"
    },
    "3676": {
      "op": "SWAP2"
    },
    "3677": {
      "op": "MSTORE"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3680": {
      "op": "DUP1"
    },
    "3681": {
      "op": "MLOAD"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "3687": {
      "op": "DUP4"
    },
    "3688": {
      "op": "CODECOPY"
    },
    "3689": {
      "op": "DUP2"
    },
    "3690": {
      "op": "MLOAD"
    },
    "3691": {
      "op": "SWAP2"
    },
    "3692": {
      "op": "MSTORE"
    },
    "3693": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5187,
        5200
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "3694": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5218,
        5228
      ],
      "op": "DUP8",
      "path": "44"
    },
    "3695": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3697": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3698": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3700": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "ADD",
      "path": "44"
    },
    "3701": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xE82"
    },
    "3704": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "3705": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "3706": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "3707": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3708": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3709": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3710": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF0"
    },
    "3713": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5033,
        5242
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3714": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3715": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3717": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3718": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3720": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3721": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3722": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SUB",
      "path": "44"
    },
    "3723": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SUB",
      "path": "44"
    },
    "3724": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3725": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3726": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3727": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3729": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5033,
        5242
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3730": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5010,
        5252
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3731": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5010,
        5252
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3732": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5010,
        5252
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3733": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5010,
        5252
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3735": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5010,
        5252
      ],
      "op": "ADD",
      "path": "44"
    },
    "3736": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5010,
        5252
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "3737": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4983,
        5252
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3738": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4983,
        5252
      ],
      "op": "POP",
      "path": "44"
    },
    "3739": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5263,
        5278
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3741": {
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3743": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3744": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3746": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "ADD",
      "path": "50"
    },
    "3747": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xECF"
    },
    "3750": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3751": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000"
    },
    "3784": {
      "op": "DUP2"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3788": {
      "op": "ADD"
    },
    "3789": {
      "op": "SWAP1"
    },
    "3790": {
      "op": "JUMP"
    },
    "3791": {
      "offset": [
        888,
        949
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3792": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3794": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3795": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3796": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3797": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3798": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "SUB",
      "path": "50"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3801": {
      "op": "NOT"
    },
    "3802": {
      "offset": [
        888,
        949
      ],
      "op": "ADD",
      "path": "50"
    },
    "3803": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3804": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3805": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3806": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3807": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3808": {
      "offset": [
        873,
        951
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3809": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3810": {
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3812": {
      "offset": [
        873,
        951
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3813": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3814": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "ADD",
      "path": "50"
    },
    "3815": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3816": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3817": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3818": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "ADD",
      "path": "44"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "op": "DUP9"
    },
    "3821": {
      "op": "ISZERO"
    },
    "3822": {
      "op": "ISZERO"
    },
    "3823": {
      "op": "DUP4"
    },
    "3824": {
      "op": "DUP4"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "MSTORE"
    },
    "3827": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3828": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3829": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3830": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3831": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "SUB",
      "path": "44"
    },
    "3832": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3833": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "ADD",
      "path": "44"
    },
    "3834": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3835": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3838": {
      "op": "DUP5"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3841": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "3842": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5304,
        5395
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3843": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3844": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3845": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3846": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "ADD",
      "path": "44"
    },
    "3847": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "3848": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3852": {
      "op": "SWAP1"
    },
    "3853": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF1C"
    },
    "3856": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3857": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5476,
        5492
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3858": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5476,
        5492
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3859": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "DUP5",
      "path": "44"
    },
    "3860": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5281,
        5405
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3861": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "3863": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "ADD",
      "path": "44"
    },
    "3864": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B38"
    },
    "3867": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5446,
        5503
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3868": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3869": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3871": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3872": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3874": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3875": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3876": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "SUB",
      "path": "44"
    },
    "3877": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "SUB",
      "path": "44"
    },
    "3878": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3879": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3880": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3881": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3883": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5446,
        5503
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3884": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5505
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3885": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5505
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3886": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5505
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3887": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5505
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3889": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5505
      ],
      "op": "ADD",
      "path": "44"
    },
    "3890": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5505
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "3891": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5416,
        5505
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3892": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5416,
        5505
      ],
      "op": "POP",
      "path": "44"
    },
    "3893": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5523,
        5558
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 10,
      "value": "0xF3E"
    },
    "3896": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5536,
        5544
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3897": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5546,
        5556
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3898": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5523,
        5534
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x591"
    },
    "3901": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5523,
        5558
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3902": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5523,
        5558
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3903": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5516,
        5558
      ],
      "op": "SWAP8",
      "path": "44"
    },
    "3904": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4803,
        5565
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "op": "POP"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "op": "POP"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "o",
      "offset": [
        4803,
        5565
      ],
      "op": "JUMP",
      "path": "44"
    },
    "3913": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3914": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2617,
        2642
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "3916": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2667,
        2682
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3918": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2695,
        2705
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3919": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2667,
        2707
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "3920": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2667,
        2707
      ],
      "op": "POP",
      "path": "44"
    },
    "3921": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2718,
        2732
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3923": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2741
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3930": {
      "op": "SHL"
    },
    "3931": {
      "op": "SUB"
    },
    "3932": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2750
      ],
      "op": "AND",
      "path": "44"
    },
    "3933": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2750
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x19A50F49"
    },
    "3938": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3940": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3941": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3942": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "3947": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "AND",
      "path": "44"
    },
    "3948": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "3950": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "SHL",
      "path": "44"
    },
    "3951": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3952": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "3953": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "3955": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "ADD",
      "path": "44"
    },
    "3956": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "3958": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3960": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3961": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3962": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP4",
      "path": "44"
    },
    "3963": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "SUB",
      "path": "44"
    },
    "3964": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP2",
      "path": "44"
    },
    "3965": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP7",
      "path": "44"
    },
    "3966": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "GAS",
      "path": "44"
    },
    "3967": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "3968": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3969": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3970": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "3971": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF90"
    },
    "3974": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "3975": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3976": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3978": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP1",
      "path": "44"
    },
    "3979": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "3980": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3981": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "3983": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "REVERT",
      "path": "44"
    },
    "3984": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "3985": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "POP",
      "path": "44"
    },
    "3986": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "POP",
      "path": "44"
    },
    "3987": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "POP",
      "path": "44"
    },
    "3988": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "POP",
      "path": "44"
    },
    "3989": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "3991": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "3992": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "3993": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3995": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "NOT",
      "path": "44"
    },
    "3996": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "3998": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP3",
      "path": "44"
    },
    "3999": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "ADD",
      "path": "44"
    },
    "4000": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "AND",
      "path": "44"
    },
    "4001": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4002": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "ADD",
      "path": "44"
    },
    "4003": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4004": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4006": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4007": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "POP",
      "path": "44"
    },
    "4008": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4009": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "ADD",
      "path": "44"
    },
    "4010": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4011": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFB4"
    },
    "4014": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4015": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4016": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C8E"
    },
    "4019": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2735,
        2753
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4020": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2735,
        2753
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4021": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2718,
        2753
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4022": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2718,
        2753
      ],
      "op": "POP",
      "path": "44"
    },
    "4023": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2763,
        2785
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4025": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2794
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "op": "SUB"
    },
    "4034": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2812
      ],
      "op": "AND",
      "path": "44"
    },
    "4035": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2812
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA693649A"
    },
    "4040": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4042": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4043": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4044": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "4049": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "AND",
      "path": "44"
    },
    "4050": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "4052": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "SHL",
      "path": "44"
    },
    "4053": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4054": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4055": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4057": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "ADD",
      "path": "44"
    },
    "4058": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4060": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4062": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4063": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4064": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4065": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "SUB",
      "path": "44"
    },
    "4066": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4067": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4068": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "GAS",
      "path": "44"
    },
    "4069": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "4070": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4071": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4072": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4073": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xFF6"
    },
    "4076": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4077": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4078": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4080": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4081": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4082": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4083": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4085": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4086": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4087": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "POP",
      "path": "44"
    },
    "4088": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "POP",
      "path": "44"
    },
    "4089": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "POP",
      "path": "44"
    },
    "4090": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "POP",
      "path": "44"
    },
    "4091": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4093": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4094": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4095": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4097": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "NOT",
      "path": "44"
    },
    "4098": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4100": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4101": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "ADD",
      "path": "44"
    },
    "4102": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "AND",
      "path": "44"
    },
    "4103": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4104": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "ADD",
      "path": "44"
    },
    "4105": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4106": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4108": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4109": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "POP",
      "path": "44"
    },
    "4110": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4111": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "ADD",
      "path": "44"
    },
    "4112": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4113": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x101A"
    },
    "4116": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4117": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4118": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B53"
    },
    "4121": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2788,
        2814
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4122": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2788,
        2814
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4123": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2763,
        2814
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4124": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2763,
        2814
      ],
      "op": "POP",
      "path": "44"
    },
    "4125": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2824,
        2850
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4127": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4128": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xFF"
    },
    "4130": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "AND",
      "path": "44"
    },
    "4131": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH8",
      "path": "44",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4140": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4141": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "GT",
      "path": "44"
    },
    "4142": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4143": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x103A"
    },
    "4146": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4147": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x103A"
    },
    "4150": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x13D2"
    },
    "4153": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4154": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4155": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4157": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4158": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4159": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4160": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4161": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4162": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4163": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4165": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "MUL",
      "path": "44"
    },
    "4166": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4168": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "ADD",
      "path": "44"
    },
    "4169": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4170": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "ADD",
      "path": "44"
    },
    "4171": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4173": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4174": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4175": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4176": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1073"
    },
    "4179": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4180": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4181": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4183": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "ADD",
      "path": "44"
    },
    "4184": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4185": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1060"
    },
    "4188": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x136E"
    },
    "4191": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4192": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4193": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4194": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4195": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4197": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "ADD",
      "path": "44"
    },
    "4198": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4199": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "4201": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4202": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "SUB",
      "path": "44"
    },
    "4203": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4204": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4205": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1058"
    },
    "4208": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4209": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4210": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "POP",
      "path": "44"
    },
    "4211": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2853,
        2879
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2824,
        2879
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2890,
        2901
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4217": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        2937
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "4219": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4220": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2946,
        2960
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4221": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2940,
        2943
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4222": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2940,
        2960
      ],
      "op": "LT",
      "path": "44"
    },
    "4223": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4224": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1170"
    },
    "4227": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4228": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2985,
        3009
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x108B"
    },
    "4231": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2985,
        3009
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x136E"
    },
    "4234": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2985,
        3009
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4235": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2985,
        3009
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4236": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 11,
      "value": "0x40"
    },
    "4238": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4239": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4246": {
      "op": "SHL"
    },
    "4247": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4248": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4249": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "4251": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4252": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "ADD",
      "path": "44"
    },
    "4253": {
      "op": "DUP4"
    },
    "4254": {
      "op": "SWAP1"
    },
    "4255": {
      "op": "MSTORE"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "op": "SUB"
    },
    "4264": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3206
      ],
      "op": "DUP9",
      "path": "44"
    },
    "4265": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3206
      ],
      "op": "AND",
      "path": "44"
    },
    "4266": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3206
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4267": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3206
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x22B4081C"
    },
    "4272": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3206
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4278": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4280": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4281": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4282": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4283": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "SUB",
      "path": "44"
    },
    "4284": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4285": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4286": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "GAS",
      "path": "44"
    },
    "4287": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "4288": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4289": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4290": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4291": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10D0"
    },
    "4294": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4295": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4296": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4298": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4299": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4300": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4301": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4303": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "REVERT",
      "path": "44"
    },
    "4304": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4305": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "POP",
      "path": "44"
    },
    "4306": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "POP",
      "path": "44"
    },
    "4307": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "POP",
      "path": "44"
    },
    "4308": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "POP",
      "path": "44"
    },
    "4309": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4311": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4312": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4313": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4315": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4316": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "4317": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "4319": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "4320": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4321": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4322": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "ADD",
      "path": "44"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4325": {
      "op": "NOT"
    },
    "4326": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "AND",
      "path": "44"
    },
    "4327": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4328": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "ADD",
      "path": "44"
    },
    "4329": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4331": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4332": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10F8"
    },
    "4335": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4336": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4337": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4338": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "ADD",
      "path": "44"
    },
    "4339": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4340": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BB9"
    },
    "4343": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3191,
        3213
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4344": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3191,
        3213
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4345": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4346": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4347": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3167,
        3186
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "4349": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3167,
        3186
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4350": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3167,
        3186
      ],
      "op": "ADD",
      "path": "44"
    },
    "4351": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4352": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4353": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4354": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3133,
        3149
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "4356": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3133,
        3149
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4357": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3133,
        3149
      ],
      "op": "ADD",
      "path": "44"
    },
    "4358": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4359": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4360": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4361": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3098,
        3115
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4363": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3098,
        3115
      ],
      "op": "DUP6",
      "path": "44"
    },
    "4364": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3098,
        3115
      ],
      "op": "ADD",
      "path": "44"
    },
    "4365": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4366": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4367": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4368": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4369": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3066,
        3080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4371": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3066,
        3080
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4372": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3066,
        3080
      ],
      "op": "ADD",
      "path": "44"
    },
    "4373": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4374": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4375": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4376": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4383": {
      "op": "SHL"
    },
    "4384": {
      "op": "SUB"
    },
    "4385": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4386": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4387": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "AND",
      "path": "44"
    },
    "4388": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4389": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3024,
        3213
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4390": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3232,
        3236
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "4392": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3232,
        3256
      ],
      "op": "EQ",
      "path": "44"
    },
    "4393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3228,
        3346
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "4394": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3228,
        3346
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x115D"
    },
    "4397": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3228,
        3346
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4398": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3297,
        3306
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 12
    },
    "4399": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3285
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4400": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3287,
        3292
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4401": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xFF"
    },
    "4403": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "AND",
      "path": "44"
    },
    "4404": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4405": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4406": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4407": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "LT",
      "path": "44"
    },
    "4408": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1143"
    },
    "4411": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "4412": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1143"
    },
    "4415": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CAB"
    },
    "4418": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3276,
        3294
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4419": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4420": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4422": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "MUL",
      "path": "44"
    },
    "4423": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4425": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "ADD",
      "path": "44"
    },
    "4426": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3294
      ],
      "op": "ADD",
      "path": "44"
    },
    "4427": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3306
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4428": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3306
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4429": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3306
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4430": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3276,
        3306
      ],
      "op": "POP",
      "path": "44"
    },
    "4431": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "DUP3",
      "path": "44",
      "statement": 13
    },
    "4432": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4433": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1159"
    },
    "4436": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4437": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CD7"
    },
    "4440": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3324,
        3331
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4441": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4442": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4443": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "POP",
      "path": "44"
    },
    "4444": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3324,
        3331
      ],
      "op": "POP",
      "path": "44"
    },
    "4445": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3228,
        3346
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 14
    },
    "4448": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1168"
    },
    "4451": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4452": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1CF7"
    },
    "4455": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2963,
        2968
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4456": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4457": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4458": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "POP",
      "path": "44"
    },
    "4459": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2963,
        2968
      ],
      "op": "POP",
      "path": "44"
    },
    "4460": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x107B"
    },
    "4463": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4464": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2917,
        3356
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3372,
        3381
      ],
      "op": "SWAP1",
      "path": "44",
      "statement": 15
    },
    "4467": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3372,
        3381
      ],
      "op": "SWAP7",
      "path": "44"
    },
    "4468": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2498,
        3388
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "4469": {
      "op": "POP"
    },
    "4470": {
      "op": "POP"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "op": "POP"
    },
    "4473": {
      "op": "POP"
    },
    "4474": {
      "op": "POP"
    },
    "4475": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "o",
      "offset": [
        2498,
        3388
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4476": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4477": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6762,
        6769
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4479": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6786,
        6810
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4480": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4482": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4483": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4485": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "50"
    },
    "4486": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x118E"
    },
    "4489": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4490": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A86"
    },
    "4493": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4494": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4495": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4497": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4498": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4500": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4501": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4502": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "4503": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "50"
    },
    "4504": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4505": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4506": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4507": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4509": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4510": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4511": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4512": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4513": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4515": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "50"
    },
    "4516": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4519": {
      "op": "DUP1"
    },
    "4520": {
      "op": "MLOAD"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4523": {
      "op": "PUSH2",
      "value": "0x1D33"
    },
    "4526": {
      "op": "DUP4"
    },
    "4527": {
      "op": "CODECOPY"
    },
    "4528": {
      "op": "DUP2"
    },
    "4529": {
      "op": "MLOAD"
    },
    "4530": {
      "op": "SWAP2"
    },
    "4531": {
      "op": "MSTORE"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4534": {
      "op": "DUP1"
    },
    "4535": {
      "op": "MLOAD"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "4541": {
      "op": "DUP4"
    },
    "4542": {
      "op": "CODECOPY"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "MLOAD"
    },
    "4545": {
      "op": "SWAP2"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6990,
        7003
      ],
      "op": "CHAINID",
      "path": "44"
    },
    "4548": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7021,
        7031
      ],
      "op": "DUP8",
      "path": "44"
    },
    "4549": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4551": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4552": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4554": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "ADD",
      "path": "44"
    },
    "4555": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11D8"
    },
    "4558": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "4559": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "4560": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "4561": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4562": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4563": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4564": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1AF0"
    },
    "4567": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        6836,
        7045
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4568": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4569": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4571": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4572": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4574": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4575": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4576": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SUB",
      "path": "44"
    },
    "4577": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SUB",
      "path": "44"
    },
    "4578": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4579": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4580": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4581": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4583": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6836,
        7045
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4584": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6813,
        7055
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4585": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6813,
        7055
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4586": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6813,
        7055
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4587": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6813,
        7055
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4589": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6813,
        7055
      ],
      "op": "ADD",
      "path": "44"
    },
    "4590": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6813,
        7055
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "4591": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6786,
        7055
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4592": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6786,
        7055
      ],
      "op": "POP",
      "path": "44"
    },
    "4593": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7066,
        7081
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4595": {
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4597": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4598": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4600": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "ADD",
      "path": "50"
    },
    "4601": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1271"
    },
    "4604": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4605": {
      "op": "PUSH32",
      "value": "0x7374724F434E65775573657228616464726573732077616C6C6574416464722C"
    },
    "4638": {
      "op": "DUP2"
    },
    "4639": {
      "op": "MSTORE"
    },
    "4640": {
      "op": "PUSH32",
      "value": "0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4675": {
      "op": "DUP3"
    },
    "4676": {
      "op": "ADD"
    },
    "4677": {
      "op": "MSTORE"
    },
    "4678": {
      "op": "PUSH32",
      "value": "0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4713": {
      "op": "DUP3"
    },
    "4714": {
      "op": "ADD"
    },
    "4715": {
      "op": "MSTORE"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4718": {
      "op": "ADD"
    },
    "4719": {
      "op": "SWAP1"
    },
    "4720": {
      "op": "JUMP"
    },
    "4721": {
      "offset": [
        1161,
        1291
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4722": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4724": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4725": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4727": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4728": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4729": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SUB",
      "path": "50"
    },
    "4730": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SUB",
      "path": "50"
    },
    "4731": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4732": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4733": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4734": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4736": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4737": {
      "offset": [
        1146,
        1293
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4738": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4739": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4740": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4742": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "ADD",
      "path": "50"
    },
    "4743": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "4744": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7175,
        7186
      ],
      "op": "DUP11",
      "path": "44"
    },
    "4745": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7233,
        7238
      ],
      "op": "DUP11",
      "path": "44"
    },
    "4746": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4748": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4749": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4751": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "ADD",
      "path": "44"
    },
    "4752": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1299"
    },
    "4755": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4756": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4757": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "4760": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7215,
        7240
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4761": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4762": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4764": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4765": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4767": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4768": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4769": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "SUB",
      "path": "44"
    },
    "4770": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "SUB",
      "path": "44"
    },
    "4771": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4772": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4773": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4774": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4776": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7240
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4777": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7204,
        7242
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4778": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7204,
        7242
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4779": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7204,
        7242
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4780": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7204,
        7242
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4782": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7204,
        7242
      ],
      "op": "ADD",
      "path": "44"
    },
    "4783": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7204,
        7242
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "4784": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7289,
        7301
      ],
      "op": "DUP11",
      "path": "44"
    },
    "4785": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4787": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4788": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4790": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "ADD",
      "path": "44"
    },
    "4791": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x12C0"
    },
    "4794": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4795": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4796": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B1C"
    },
    "4799": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7271,
        7303
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4800": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4801": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4803": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4804": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4807": {
      "op": "NOT"
    },
    "4808": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4809": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "DUP5",
      "path": "44"
    },
    "4810": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "SUB",
      "path": "44"
    },
    "4811": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "ADD",
      "path": "44"
    },
    "4812": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4813": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4814": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4815": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4816": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4817": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7260,
        7305
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4818": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7260,
        7305
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4819": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7271,
        7303
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4821": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7260,
        7305
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4822": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7260,
        7305
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4823": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7260,
        7305
      ],
      "op": "ADD",
      "path": "44"
    },
    "4824": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7260,
        7305
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "4825": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4826": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4827": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "ADD",
      "path": "44"
    },
    "4828": {
      "op": "SWAP6"
    },
    "4829": {
      "op": "SWAP1"
    },
    "4830": {
      "op": "SWAP6"
    },
    "4831": {
      "op": "MSTORE"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "op": "SUB"
    },
    "4840": {
      "op": "SWAP1"
    },
    "4841": {
      "op": "SWAP4"
    },
    "4842": {
      "op": "AND"
    },
    "4843": {
      "op": "SWAP3"
    },
    "4844": {
      "op": "DUP2"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "SWAP3"
    },
    "4847": {
      "op": "SWAP1"
    },
    "4848": {
      "op": "SWAP3"
    },
    "4849": {
      "op": "MSTORE"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4852": {
      "op": "DUP3"
    },
    "4853": {
      "op": "ADD"
    },
    "4854": {
      "op": "MSTORE"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4857": {
      "op": "DUP2"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "op": "SWAP2"
    },
    "4860": {
      "op": "SWAP1"
    },
    "4861": {
      "op": "SWAP2"
    },
    "4862": {
      "op": "MSTORE"
    },
    "4863": {
      "op": "DUP8"
    },
    "4864": {
      "op": "ISZERO"
    },
    "4865": {
      "op": "ISZERO"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4868": {
      "op": "DUP3"
    },
    "4869": {
      "op": "ADD"
    },
    "4870": {
      "op": "MSTORE"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4873": {
      "op": "DUP2"
    },
    "4874": {
      "op": "ADD"
    },
    "4875": {
      "op": "DUP8"
    },
    "4876": {
      "op": "SWAP1"
    },
    "4877": {
      "op": "MSTORE"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4880": {
      "op": "ADD"
    },
    "4881": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4883": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4884": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4886": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4887": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4888": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "SUB",
      "path": "44"
    },
    "4889": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "SUB",
      "path": "44"
    },
    "4890": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4891": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4892": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4893": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4895": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7107,
        7375
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4896": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7084,
        7385
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4897": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7084,
        7385
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4898": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7084,
        7385
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4899": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7084,
        7385
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4901": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7084,
        7385
      ],
      "op": "ADD",
      "path": "44"
    },
    "4902": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7084,
        7385
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "4903": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7066,
        7385
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4904": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7066,
        7385
      ],
      "op": "POP",
      "path": "44"
    },
    "4905": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7396,
        7412
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "4907": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7456,
        7472
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4908": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7474,
        7481
      ],
      "op": "DUP3",
      "path": "44"
    },
    "4909": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4911": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4912": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4914": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "ADD",
      "path": "44"
    },
    "4915": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x133D"
    },
    "4918": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "4919": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "4920": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4921": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1B38"
    },
    "4924": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7426,
        7483
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4925": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4926": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4928": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4929": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4931": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4932": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "DUP4",
      "path": "44"
    },
    "4933": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "SUB",
      "path": "44"
    },
    "4934": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "SUB",
      "path": "44"
    },
    "4935": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4936": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4937": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4938": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4940": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7426,
        7483
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "4941": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7415,
        7485
      ],
      "op": "DUP1",
      "path": "44"
    },
    "4942": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7415,
        7485
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "4943": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7415,
        7485
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4944": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7415,
        7485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "4946": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7415,
        7485
      ],
      "op": "ADD",
      "path": "44"
    },
    "4947": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7415,
        7485
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "4948": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7396,
        7485
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "4949": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7396,
        7485
      ],
      "op": "POP",
      "path": "44"
    },
    "4950": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7503,
        7538
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 16,
      "value": "0x135F"
    },
    "4953": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7516,
        7524
      ],
      "op": "DUP2",
      "path": "44"
    },
    "4954": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7526,
        7536
      ],
      "op": "DUP7",
      "path": "44"
    },
    "4955": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7503,
        7514
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x591"
    },
    "4958": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7503,
        7538
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4959": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7503,
        7538
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "4960": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7496,
        7538
      ],
      "op": "SWAP12",
      "path": "44"
    },
    "4961": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6483,
        7545
      ],
      "op": "SWAP11",
      "path": "44"
    },
    "4962": {
      "op": "POP"
    },
    "4963": {
      "op": "POP"
    },
    "4964": {
      "op": "POP"
    },
    "4965": {
      "op": "POP"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "op": "POP"
    },
    "4970": {
      "op": "POP"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "op": "POP"
    },
    "4973": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "o",
      "offset": [
        6483,
        7545
      ],
      "op": "JUMP",
      "path": "44"
    },
    "4974": {
      "op": "JUMPDEST"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4977": {
      "op": "MLOAD"
    },
    "4978": {
      "op": "DUP1"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4981": {
      "op": "ADD"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4984": {
      "op": "MSTORE"
    },
    "4985": {
      "op": "DUP1"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4994": {
      "op": "SHL"
    },
    "4995": {
      "op": "SUB"
    },
    "4996": {
      "op": "AND"
    },
    "4997": {
      "op": "DUP2"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5001": {
      "op": "ADD"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "MSTORE"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5011": {
      "op": "DUP2"
    },
    "5012": {
      "op": "MSTORE"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5015": {
      "op": "ADD"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5018": {
      "op": "ISZERO"
    },
    "5019": {
      "op": "ISZERO"
    },
    "5020": {
      "op": "DUP2"
    },
    "5021": {
      "op": "MSTORE"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5027": {
      "op": "ISZERO"
    },
    "5028": {
      "op": "ISZERO"
    },
    "5029": {
      "op": "DUP2"
    },
    "5030": {
      "op": "MSTORE"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "op": "SWAP1"
    },
    "5033": {
      "jump": "o",
      "op": "JUMP"
    },
    "5034": {
      "op": "JUMPDEST"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5041": {
      "op": "SHL"
    },
    "5042": {
      "op": "SUB"
    },
    "5043": {
      "op": "DUP2"
    },
    "5044": {
      "op": "AND"
    },
    "5045": {
      "op": "DUP2"
    },
    "5046": {
      "op": "EQ"
    },
    "5047": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5050": {
      "op": "JUMPI"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5053": {
      "op": "DUP1"
    },
    "5054": {
      "op": "REVERT"
    },
    "5055": {
      "op": "JUMPDEST"
    },
    "5056": {
      "op": "POP"
    },
    "5057": {
      "jump": "o",
      "op": "JUMP"
    },
    "5058": {
      "op": "JUMPDEST"
    },
    "5059": {
      "op": "DUP1"
    },
    "5060": {
      "op": "CALLDATALOAD"
    },
    "5061": {
      "op": "PUSH2",
      "value": "0x13CD"
    },
    "5064": {
      "op": "DUP2"
    },
    "5065": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5068": {
      "jump": "i",
      "op": "JUMP"
    },
    "5069": {
      "op": "JUMPDEST"
    },
    "5070": {
      "op": "SWAP2"
    },
    "5071": {
      "op": "SWAP1"
    },
    "5072": {
      "op": "POP"
    },
    "5073": {
      "jump": "o",
      "op": "JUMP"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5082": {
      "op": "SHL"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5085": {
      "op": "MSTORE"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5090": {
      "op": "MSTORE"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5095": {
      "op": "REVERT"
    },
    "5096": {
      "op": "JUMPDEST"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5099": {
      "op": "MLOAD"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "ADD"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5106": {
      "op": "NOT"
    },
    "5107": {
      "op": "AND"
    },
    "5108": {
      "op": "DUP2"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5119": {
      "op": "DUP2"
    },
    "5120": {
      "op": "GT"
    },
    "5121": {
      "op": "DUP3"
    },
    "5122": {
      "op": "DUP3"
    },
    "5123": {
      "op": "LT"
    },
    "5124": {
      "op": "OR"
    },
    "5125": {
      "op": "ISZERO"
    },
    "5126": {
      "op": "PUSH2",
      "value": "0x1411"
    },
    "5129": {
      "op": "JUMPI"
    },
    "5130": {
      "op": "PUSH2",
      "value": "0x1411"
    },
    "5133": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5136": {
      "jump": "i",
      "op": "JUMP"
    },
    "5137": {
      "op": "JUMPDEST"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "SWAP2"
    },
    "5142": {
      "op": "SWAP1"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "jump": "o",
      "op": "JUMP"
    },
    "5145": {
      "op": "JUMPDEST"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5148": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5157": {
      "op": "DUP3"
    },
    "5158": {
      "op": "GT"
    },
    "5159": {
      "op": "ISZERO"
    },
    "5160": {
      "op": "PUSH2",
      "value": "0x1433"
    },
    "5163": {
      "op": "JUMPI"
    },
    "5164": {
      "op": "PUSH2",
      "value": "0x1433"
    },
    "5167": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5170": {
      "jump": "i",
      "op": "JUMP"
    },
    "5171": {
      "op": "JUMPDEST"
    },
    "5172": {
      "op": "POP"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5175": {
      "op": "ADD"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5178": {
      "op": "NOT"
    },
    "5179": {
      "op": "AND"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5182": {
      "op": "ADD"
    },
    "5183": {
      "op": "SWAP1"
    },
    "5184": {
      "jump": "o",
      "op": "JUMP"
    },
    "5185": {
      "op": "JUMPDEST"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5188": {
      "op": "DUP3"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5191": {
      "op": "DUP4"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "SLT"
    },
    "5194": {
      "op": "PUSH2",
      "value": "0x1452"
    },
    "5197": {
      "op": "JUMPI"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5200": {
      "op": "DUP1"
    },
    "5201": {
      "op": "REVERT"
    },
    "5202": {
      "op": "JUMPDEST"
    },
    "5203": {
      "op": "DUP2"
    },
    "5204": {
      "op": "CALLDATALOAD"
    },
    "5205": {
      "op": "PUSH2",
      "value": "0x1465"
    },
    "5208": {
      "op": "PUSH2",
      "value": "0x1460"
    },
    "5211": {
      "op": "DUP3"
    },
    "5212": {
      "op": "PUSH2",
      "value": "0x1419"
    },
    "5215": {
      "jump": "i",
      "op": "JUMP"
    },
    "5216": {
      "op": "JUMPDEST"
    },
    "5217": {
      "op": "PUSH2",
      "value": "0x13E8"
    },
    "5220": {
      "jump": "i",
      "op": "JUMP"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "DUP2"
    },
    "5223": {
      "op": "DUP2"
    },
    "5224": {
      "op": "MSTORE"
    },
    "5225": {
      "op": "DUP5"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5228": {
      "op": "DUP4"
    },
    "5229": {
      "op": "DUP7"
    },
    "5230": {
      "op": "ADD"
    },
    "5231": {
      "op": "ADD"
    },
    "5232": {
      "op": "GT"
    },
    "5233": {
      "op": "ISZERO"
    },
    "5234": {
      "op": "PUSH2",
      "value": "0x147A"
    },
    "5237": {
      "op": "JUMPI"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5240": {
      "op": "DUP1"
    },
    "5241": {
      "op": "REVERT"
    },
    "5242": {
      "op": "JUMPDEST"
    },
    "5243": {
      "op": "DUP2"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5246": {
      "op": "DUP6"
    },
    "5247": {
      "op": "ADD"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5250": {
      "op": "DUP4"
    },
    "5251": {
      "op": "ADD"
    },
    "5252": {
      "op": "CALLDATACOPY"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5255": {
      "op": "SWAP2"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5260": {
      "op": "ADD"
    },
    "5261": {
      "op": "SWAP2"
    },
    "5262": {
      "op": "SWAP1"
    },
    "5263": {
      "op": "SWAP2"
    },
    "5264": {
      "op": "MSTORE"
    },
    "5265": {
      "op": "SWAP4"
    },
    "5266": {
      "op": "SWAP3"
    },
    "5267": {
      "op": "POP"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "jump": "o",
      "op": "JUMP"
    },
    "5271": {
      "op": "JUMPDEST"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5274": {
      "op": "DUP1"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5277": {
      "op": "DUP1"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5282": {
      "op": "DUP7"
    },
    "5283": {
      "op": "DUP9"
    },
    "5284": {
      "op": "SUB"
    },
    "5285": {
      "op": "SLT"
    },
    "5286": {
      "op": "ISZERO"
    },
    "5287": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "5290": {
      "op": "JUMPI"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5293": {
      "op": "DUP1"
    },
    "5294": {
      "op": "REVERT"
    },
    "5295": {
      "op": "JUMPDEST"
    },
    "5296": {
      "op": "DUP6"
    },
    "5297": {
      "op": "CALLDATALOAD"
    },
    "5298": {
      "op": "PUSH2",
      "value": "0x14BA"
    },
    "5301": {
      "op": "DUP2"
    },
    "5302": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5305": {
      "jump": "i",
      "op": "JUMP"
    },
    "5306": {
      "op": "JUMPDEST"
    },
    "5307": {
      "op": "SWAP5"
    },
    "5308": {
      "op": "POP"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5311": {
      "op": "DUP7"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "CALLDATALOAD"
    },
    "5314": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5323": {
      "op": "DUP1"
    },
    "5324": {
      "op": "DUP3"
    },
    "5325": {
      "op": "GT"
    },
    "5326": {
      "op": "ISZERO"
    },
    "5327": {
      "op": "PUSH2",
      "value": "0x14D7"
    },
    "5330": {
      "op": "JUMPI"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5333": {
      "op": "DUP1"
    },
    "5334": {
      "op": "REVERT"
    },
    "5335": {
      "op": "JUMPDEST"
    },
    "5336": {
      "op": "PUSH2",
      "value": "0x14E3"
    },
    "5339": {
      "op": "DUP10"
    },
    "5340": {
      "op": "DUP4"
    },
    "5341": {
      "op": "DUP11"
    },
    "5342": {
      "op": "ADD"
    },
    "5343": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5346": {
      "jump": "i",
      "op": "JUMP"
    },
    "5347": {
      "op": "JUMPDEST"
    },
    "5348": {
      "op": "SWAP6"
    },
    "5349": {
      "op": "POP"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5352": {
      "op": "DUP9"
    },
    "5353": {
      "op": "ADD"
    },
    "5354": {
      "op": "CALLDATALOAD"
    },
    "5355": {
      "op": "SWAP5"
    },
    "5356": {
      "op": "POP"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5359": {
      "op": "DUP9"
    },
    "5360": {
      "op": "ADD"
    },
    "5361": {
      "op": "CALLDATALOAD"
    },
    "5362": {
      "op": "SWAP2"
    },
    "5363": {
      "op": "POP"
    },
    "5364": {
      "op": "PUSH2",
      "value": "0x14FC"
    },
    "5367": {
      "op": "DUP3"
    },
    "5368": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5371": {
      "jump": "i",
      "op": "JUMP"
    },
    "5372": {
      "op": "JUMPDEST"
    },
    "5373": {
      "op": "SWAP1"
    },
    "5374": {
      "op": "SWAP3"
    },
    "5375": {
      "op": "POP"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5378": {
      "op": "DUP8"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "CALLDATALOAD"
    },
    "5381": {
      "op": "SWAP1"
    },
    "5382": {
      "op": "DUP1"
    },
    "5383": {
      "op": "DUP3"
    },
    "5384": {
      "op": "GT"
    },
    "5385": {
      "op": "ISZERO"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x1512"
    },
    "5389": {
      "op": "JUMPI"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5392": {
      "op": "DUP1"
    },
    "5393": {
      "op": "REVERT"
    },
    "5394": {
      "op": "JUMPDEST"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "PUSH2",
      "value": "0x151F"
    },
    "5399": {
      "op": "DUP9"
    },
    "5400": {
      "op": "DUP3"
    },
    "5401": {
      "op": "DUP10"
    },
    "5402": {
      "op": "ADD"
    },
    "5403": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5406": {
      "jump": "i",
      "op": "JUMP"
    },
    "5407": {
      "op": "JUMPDEST"
    },
    "5408": {
      "op": "SWAP2"
    },
    "5409": {
      "op": "POP"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "op": "SWAP3"
    },
    "5412": {
      "op": "SWAP6"
    },
    "5413": {
      "op": "POP"
    },
    "5414": {
      "op": "SWAP3"
    },
    "5415": {
      "op": "SWAP6"
    },
    "5416": {
      "op": "SWAP1"
    },
    "5417": {
      "op": "SWAP4"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "jump": "o",
      "op": "JUMP"
    },
    "5420": {
      "op": "JUMPDEST"
    },
    "5421": {
      "op": "DUP1"
    },
    "5422": {
      "op": "ISZERO"
    },
    "5423": {
      "op": "ISZERO"
    },
    "5424": {
      "op": "DUP2"
    },
    "5425": {
      "op": "EQ"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5429": {
      "op": "JUMPI"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5432": {
      "op": "DUP1"
    },
    "5433": {
      "op": "REVERT"
    },
    "5434": {
      "op": "JUMPDEST"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5437": {
      "op": "DUP2"
    },
    "5438": {
      "op": "AND"
    },
    "5439": {
      "op": "DUP2"
    },
    "5440": {
      "op": "EQ"
    },
    "5441": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5444": {
      "op": "JUMPI"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5447": {
      "op": "DUP1"
    },
    "5448": {
      "op": "REVERT"
    },
    "5449": {
      "op": "JUMPDEST"
    },
    "5450": {
      "op": "DUP1"
    },
    "5451": {
      "op": "CALLDATALOAD"
    },
    "5452": {
      "op": "PUSH2",
      "value": "0x13CD"
    },
    "5455": {
      "op": "DUP2"
    },
    "5456": {
      "op": "PUSH2",
      "value": "0x153A"
    },
    "5459": {
      "jump": "i",
      "op": "JUMP"
    },
    "5460": {
      "op": "JUMPDEST"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5463": {
      "op": "DUP1"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5466": {
      "op": "DUP1"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5469": {
      "op": "DUP1"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5472": {
      "op": "DUP1"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5475": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "5478": {
      "op": "DUP11"
    },
    "5479": {
      "op": "DUP13"
    },
    "5480": {
      "op": "SUB"
    },
    "5481": {
      "op": "SLT"
    },
    "5482": {
      "op": "ISZERO"
    },
    "5483": {
      "op": "PUSH2",
      "value": "0x1573"
    },
    "5486": {
      "op": "JUMPI"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5489": {
      "op": "DUP1"
    },
    "5490": {
      "op": "REVERT"
    },
    "5491": {
      "op": "JUMPDEST"
    },
    "5492": {
      "op": "DUP10"
    },
    "5493": {
      "op": "CALLDATALOAD"
    },
    "5494": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5503": {
      "op": "DUP1"
    },
    "5504": {
      "op": "DUP3"
    },
    "5505": {
      "op": "GT"
    },
    "5506": {
      "op": "ISZERO"
    },
    "5507": {
      "op": "PUSH2",
      "value": "0x158B"
    },
    "5510": {
      "op": "JUMPI"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5513": {
      "op": "DUP1"
    },
    "5514": {
      "op": "REVERT"
    },
    "5515": {
      "op": "JUMPDEST"
    },
    "5516": {
      "op": "PUSH2",
      "value": "0x1597"
    },
    "5519": {
      "op": "DUP14"
    },
    "5520": {
      "op": "DUP4"
    },
    "5521": {
      "op": "DUP15"
    },
    "5522": {
      "op": "ADD"
    },
    "5523": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5526": {
      "jump": "i",
      "op": "JUMP"
    },
    "5527": {
      "op": "JUMPDEST"
    },
    "5528": {
      "op": "SWAP11"
    },
    "5529": {
      "op": "POP"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5532": {
      "op": "DUP13"
    },
    "5533": {
      "op": "ADD"
    },
    "5534": {
      "op": "CALLDATALOAD"
    },
    "5535": {
      "op": "SWAP2"
    },
    "5536": {
      "op": "POP"
    },
    "5537": {
      "op": "PUSH2",
      "value": "0x15A9"
    },
    "5540": {
      "op": "DUP3"
    },
    "5541": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "5544": {
      "jump": "i",
      "op": "JUMP"
    },
    "5545": {
      "op": "JUMPDEST"
    },
    "5546": {
      "op": "SWAP1"
    },
    "5547": {
      "op": "SWAP9"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5551": {
      "op": "DUP12"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "CALLDATALOAD"
    },
    "5554": {
      "op": "SWAP8"
    },
    "5555": {
      "op": "POP"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5558": {
      "op": "DUP12"
    },
    "5559": {
      "op": "ADD"
    },
    "5560": {
      "op": "CALLDATALOAD"
    },
    "5561": {
      "op": "SWAP1"
    },
    "5562": {
      "op": "PUSH2",
      "value": "0x15C2"
    },
    "5565": {
      "op": "DUP3"
    },
    "5566": {
      "op": "PUSH2",
      "value": "0x153A"
    },
    "5569": {
      "jump": "i",
      "op": "JUMP"
    },
    "5570": {
      "op": "JUMPDEST"
    },
    "5571": {
      "op": "DUP2"
    },
    "5572": {
      "op": "SWAP8"
    },
    "5573": {
      "op": "POP"
    },
    "5574": {
      "op": "PUSH2",
      "value": "0x15D1"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5579": {
      "op": "DUP14"
    },
    "5580": {
      "op": "ADD"
    },
    "5581": {
      "op": "PUSH2",
      "value": "0x1549"
    },
    "5584": {
      "jump": "i",
      "op": "JUMP"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "SWAP7"
    },
    "5587": {
      "op": "POP"
    },
    "5588": {
      "op": "PUSH2",
      "value": "0x15DF"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5593": {
      "op": "DUP14"
    },
    "5594": {
      "op": "ADD"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x1549"
    },
    "5598": {
      "jump": "i",
      "op": "JUMP"
    },
    "5599": {
      "op": "JUMPDEST"
    },
    "5600": {
      "op": "SWAP6"
    },
    "5601": {
      "op": "POP"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x15ED"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5607": {
      "op": "DUP14"
    },
    "5608": {
      "op": "ADD"
    },
    "5609": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "5612": {
      "jump": "i",
      "op": "JUMP"
    },
    "5613": {
      "op": "JUMPDEST"
    },
    "5614": {
      "op": "SWAP5"
    },
    "5615": {
      "op": "POP"
    },
    "5616": {
      "op": "PUSH2",
      "value": "0x15FB"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5621": {
      "op": "DUP14"
    },
    "5622": {
      "op": "ADD"
    },
    "5623": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "5626": {
      "jump": "i",
      "op": "JUMP"
    },
    "5627": {
      "op": "JUMPDEST"
    },
    "5628": {
      "op": "SWAP4"
    },
    "5629": {
      "op": "POP"
    },
    "5630": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5633": {
      "op": "DUP13"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "op": "CALLDATALOAD"
    },
    "5636": {
      "op": "SWAP2"
    },
    "5637": {
      "op": "POP"
    },
    "5638": {
      "op": "DUP1"
    },
    "5639": {
      "op": "DUP3"
    },
    "5640": {
      "op": "GT"
    },
    "5641": {
      "op": "ISZERO"
    },
    "5642": {
      "op": "PUSH2",
      "value": "0x1612"
    },
    "5645": {
      "op": "JUMPI"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5648": {
      "op": "DUP1"
    },
    "5649": {
      "op": "REVERT"
    },
    "5650": {
      "op": "JUMPDEST"
    },
    "5651": {
      "op": "POP"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x161F"
    },
    "5655": {
      "op": "DUP13"
    },
    "5656": {
      "op": "DUP3"
    },
    "5657": {
      "op": "DUP14"
    },
    "5658": {
      "op": "ADD"
    },
    "5659": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5662": {
      "jump": "i",
      "op": "JUMP"
    },
    "5663": {
      "op": "JUMPDEST"
    },
    "5664": {
      "op": "SWAP2"
    },
    "5665": {
      "op": "POP"
    },
    "5666": {
      "op": "POP"
    },
    "5667": {
      "op": "SWAP3"
    },
    "5668": {
      "op": "SWAP6"
    },
    "5669": {
      "op": "SWAP9"
    },
    "5670": {
      "op": "POP"
    },
    "5671": {
      "op": "SWAP3"
    },
    "5672": {
      "op": "SWAP6"
    },
    "5673": {
      "op": "SWAP9"
    },
    "5674": {
      "op": "POP"
    },
    "5675": {
      "op": "SWAP3"
    },
    "5676": {
      "op": "SWAP6"
    },
    "5677": {
      "op": "SWAP9"
    },
    "5678": {
      "jump": "o",
      "op": "JUMP"
    },
    "5679": {
      "op": "JUMPDEST"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5682": {
      "op": "DUP1"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5685": {
      "op": "DUP4"
    },
    "5686": {
      "op": "DUP6"
    },
    "5687": {
      "op": "SUB"
    },
    "5688": {
      "op": "SLT"
    },
    "5689": {
      "op": "ISZERO"
    },
    "5690": {
      "op": "PUSH2",
      "value": "0x1642"
    },
    "5693": {
      "op": "JUMPI"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5696": {
      "op": "DUP1"
    },
    "5697": {
      "op": "REVERT"
    },
    "5698": {
      "op": "JUMPDEST"
    },
    "5699": {
      "op": "DUP3"
    },
    "5700": {
      "op": "CALLDATALOAD"
    },
    "5701": {
      "op": "SWAP2"
    },
    "5702": {
      "op": "POP"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5705": {
      "op": "DUP4"
    },
    "5706": {
      "op": "ADD"
    },
    "5707": {
      "op": "CALLDATALOAD"
    },
    "5708": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5717": {
      "op": "DUP2"
    },
    "5718": {
      "op": "GT"
    },
    "5719": {
      "op": "ISZERO"
    },
    "5720": {
      "op": "PUSH2",
      "value": "0x1660"
    },
    "5723": {
      "op": "JUMPI"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5726": {
      "op": "DUP1"
    },
    "5727": {
      "op": "REVERT"
    },
    "5728": {
      "op": "JUMPDEST"
    },
    "5729": {
      "op": "PUSH2",
      "value": "0x166C"
    },
    "5732": {
      "op": "DUP6"
    },
    "5733": {
      "op": "DUP3"
    },
    "5734": {
      "op": "DUP7"
    },
    "5735": {
      "op": "ADD"
    },
    "5736": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5739": {
      "jump": "i",
      "op": "JUMP"
    },
    "5740": {
      "op": "JUMPDEST"
    },
    "5741": {
      "op": "SWAP2"
    },
    "5742": {
      "op": "POP"
    },
    "5743": {
      "op": "POP"
    },
    "5744": {
      "op": "SWAP3"
    },
    "5745": {
      "op": "POP"
    },
    "5746": {
      "op": "SWAP3"
    },
    "5747": {
      "op": "SWAP1"
    },
    "5748": {
      "op": "POP"
    },
    "5749": {
      "jump": "o",
      "op": "JUMP"
    },
    "5750": {
      "op": "JUMPDEST"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5753": {
      "op": "DUP1"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5756": {
      "op": "DUP1"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5759": {
      "op": "DUP6"
    },
    "5760": {
      "op": "DUP8"
    },
    "5761": {
      "op": "SUB"
    },
    "5762": {
      "op": "SLT"
    },
    "5763": {
      "op": "ISZERO"
    },
    "5764": {
      "op": "PUSH2",
      "value": "0x168C"
    },
    "5767": {
      "op": "JUMPI"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5770": {
      "op": "DUP1"
    },
    "5771": {
      "op": "REVERT"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "DUP5"
    },
    "5774": {
      "op": "CALLDATALOAD"
    },
    "5775": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5784": {
      "op": "DUP1"
    },
    "5785": {
      "op": "DUP3"
    },
    "5786": {
      "op": "GT"
    },
    "5787": {
      "op": "ISZERO"
    },
    "5788": {
      "op": "PUSH2",
      "value": "0x16A4"
    },
    "5791": {
      "op": "JUMPI"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5794": {
      "op": "DUP1"
    },
    "5795": {
      "op": "REVERT"
    },
    "5796": {
      "op": "JUMPDEST"
    },
    "5797": {
      "op": "PUSH2",
      "value": "0x16B0"
    },
    "5800": {
      "op": "DUP9"
    },
    "5801": {
      "op": "DUP4"
    },
    "5802": {
      "op": "DUP10"
    },
    "5803": {
      "op": "ADD"
    },
    "5804": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5807": {
      "jump": "i",
      "op": "JUMP"
    },
    "5808": {
      "op": "JUMPDEST"
    },
    "5809": {
      "op": "SWAP6"
    },
    "5810": {
      "op": "POP"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5813": {
      "op": "DUP8"
    },
    "5814": {
      "op": "ADD"
    },
    "5815": {
      "op": "CALLDATALOAD"
    },
    "5816": {
      "op": "SWAP2"
    },
    "5817": {
      "op": "POP"
    },
    "5818": {
      "op": "DUP1"
    },
    "5819": {
      "op": "DUP3"
    },
    "5820": {
      "op": "GT"
    },
    "5821": {
      "op": "ISZERO"
    },
    "5822": {
      "op": "PUSH2",
      "value": "0x16C6"
    },
    "5825": {
      "op": "JUMPI"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5828": {
      "op": "DUP1"
    },
    "5829": {
      "op": "REVERT"
    },
    "5830": {
      "op": "JUMPDEST"
    },
    "5831": {
      "op": "PUSH2",
      "value": "0x16D2"
    },
    "5834": {
      "op": "DUP9"
    },
    "5835": {
      "op": "DUP4"
    },
    "5836": {
      "op": "DUP10"
    },
    "5837": {
      "op": "ADD"
    },
    "5838": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5841": {
      "jump": "i",
      "op": "JUMP"
    },
    "5842": {
      "op": "JUMPDEST"
    },
    "5843": {
      "op": "SWAP5"
    },
    "5844": {
      "op": "POP"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5847": {
      "op": "DUP8"
    },
    "5848": {
      "op": "ADD"
    },
    "5849": {
      "op": "CALLDATALOAD"
    },
    "5850": {
      "op": "SWAP2"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "op": "PUSH2",
      "value": "0x16E4"
    },
    "5855": {
      "op": "DUP3"
    },
    "5856": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5859": {
      "jump": "i",
      "op": "JUMP"
    },
    "5860": {
      "op": "JUMPDEST"
    },
    "5861": {
      "op": "SWAP1"
    },
    "5862": {
      "op": "SWAP3"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5866": {
      "op": "DUP7"
    },
    "5867": {
      "op": "ADD"
    },
    "5868": {
      "op": "CALLDATALOAD"
    },
    "5869": {
      "op": "SWAP1"
    },
    "5870": {
      "op": "DUP1"
    },
    "5871": {
      "op": "DUP3"
    },
    "5872": {
      "op": "GT"
    },
    "5873": {
      "op": "ISZERO"
    },
    "5874": {
      "op": "PUSH2",
      "value": "0x16FA"
    },
    "5877": {
      "op": "JUMPI"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5880": {
      "op": "DUP1"
    },
    "5881": {
      "op": "REVERT"
    },
    "5882": {
      "op": "JUMPDEST"
    },
    "5883": {
      "op": "POP"
    },
    "5884": {
      "op": "PUSH2",
      "value": "0x1707"
    },
    "5887": {
      "op": "DUP8"
    },
    "5888": {
      "op": "DUP3"
    },
    "5889": {
      "op": "DUP9"
    },
    "5890": {
      "op": "ADD"
    },
    "5891": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5894": {
      "jump": "i",
      "op": "JUMP"
    },
    "5895": {
      "op": "JUMPDEST"
    },
    "5896": {
      "op": "SWAP2"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "op": "POP"
    },
    "5899": {
      "op": "SWAP3"
    },
    "5900": {
      "op": "SWAP6"
    },
    "5901": {
      "op": "SWAP2"
    },
    "5902": {
      "op": "SWAP5"
    },
    "5903": {
      "op": "POP"
    },
    "5904": {
      "op": "SWAP3"
    },
    "5905": {
      "op": "POP"
    },
    "5906": {
      "jump": "o",
      "op": "JUMP"
    },
    "5907": {
      "op": "JUMPDEST"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5910": {
      "op": "DUP1"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5913": {
      "op": "DUP4"
    },
    "5914": {
      "op": "DUP6"
    },
    "5915": {
      "op": "SUB"
    },
    "5916": {
      "op": "SLT"
    },
    "5917": {
      "op": "ISZERO"
    },
    "5918": {
      "op": "PUSH2",
      "value": "0x1726"
    },
    "5921": {
      "op": "JUMPI"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5924": {
      "op": "DUP1"
    },
    "5925": {
      "op": "REVERT"
    },
    "5926": {
      "op": "JUMPDEST"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "CALLDATALOAD"
    },
    "5929": {
      "op": "PUSH2",
      "value": "0x1731"
    },
    "5932": {
      "op": "DUP2"
    },
    "5933": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5936": {
      "jump": "i",
      "op": "JUMP"
    },
    "5937": {
      "op": "JUMPDEST"
    },
    "5938": {
      "op": "SWAP2"
    },
    "5939": {
      "op": "POP"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5942": {
      "op": "DUP4"
    },
    "5943": {
      "op": "ADD"
    },
    "5944": {
      "op": "CALLDATALOAD"
    },
    "5945": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5948": {
      "op": "DUP2"
    },
    "5949": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "5952": {
      "jump": "i",
      "op": "JUMP"
    },
    "5953": {
      "op": "JUMPDEST"
    },
    "5954": {
      "op": "DUP1"
    },
    "5955": {
      "op": "SWAP2"
    },
    "5956": {
      "op": "POP"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "op": "SWAP3"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "op": "SWAP3"
    },
    "5961": {
      "op": "SWAP1"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "jump": "o",
      "op": "JUMP"
    },
    "5964": {
      "op": "JUMPDEST"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5967": {
      "op": "JUMPDEST"
    },
    "5968": {
      "op": "DUP4"
    },
    "5969": {
      "op": "DUP2"
    },
    "5970": {
      "op": "LT"
    },
    "5971": {
      "op": "ISZERO"
    },
    "5972": {
      "op": "PUSH2",
      "value": "0x1767"
    },
    "5975": {
      "op": "JUMPI"
    },
    "5976": {
      "op": "DUP2"
    },
    "5977": {
      "op": "DUP2"
    },
    "5978": {
      "op": "ADD"
    },
    "5979": {
      "op": "MLOAD"
    },
    "5980": {
      "op": "DUP4"
    },
    "5981": {
      "op": "DUP3"
    },
    "5982": {
      "op": "ADD"
    },
    "5983": {
      "op": "MSTORE"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5986": {
      "op": "ADD"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x174F"
    },
    "5990": {
      "op": "JUMP"
    },
    "5991": {
      "op": "JUMPDEST"
    },
    "5992": {
      "op": "DUP4"
    },
    "5993": {
      "op": "DUP2"
    },
    "5994": {
      "op": "GT"
    },
    "5995": {
      "op": "ISZERO"
    },
    "5996": {
      "op": "PUSH2",
      "value": "0x1776"
    },
    "5999": {
      "op": "JUMPI"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6002": {
      "op": "DUP5"
    },
    "6003": {
      "op": "DUP5"
    },
    "6004": {
      "op": "ADD"
    },
    "6005": {
      "op": "MSTORE"
    },
    "6006": {
      "op": "JUMPDEST"
    },
    "6007": {
      "op": "POP"
    },
    "6008": {
      "op": "POP"
    },
    "6009": {
      "op": "POP"
    },
    "6010": {
      "op": "POP"
    },
    "6011": {
      "jump": "o",
      "op": "JUMP"
    },
    "6012": {
      "op": "JUMPDEST"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6015": {
      "op": "DUP2"
    },
    "6016": {
      "op": "MLOAD"
    },
    "6017": {
      "op": "DUP1"
    },
    "6018": {
      "op": "DUP5"
    },
    "6019": {
      "op": "MSTORE"
    },
    "6020": {
      "op": "PUSH2",
      "value": "0x1794"
    },
    "6023": {
      "op": "DUP2"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6026": {
      "op": "DUP7"
    },
    "6027": {
      "op": "ADD"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6030": {
      "op": "DUP7"
    },
    "6031": {
      "op": "ADD"
    },
    "6032": {
      "op": "PUSH2",
      "value": "0x174C"
    },
    "6035": {
      "jump": "i",
      "op": "JUMP"
    },
    "6036": {
      "op": "JUMPDEST"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6042": {
      "op": "NOT"
    },
    "6043": {
      "op": "AND"
    },
    "6044": {
      "op": "SWAP3"
    },
    "6045": {
      "op": "SWAP1"
    },
    "6046": {
      "op": "SWAP3"
    },
    "6047": {
      "op": "ADD"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6050": {
      "op": "ADD"
    },
    "6051": {
      "op": "SWAP3"
    },
    "6052": {
      "op": "SWAP2"
    },
    "6053": {
      "op": "POP"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "jump": "o",
      "op": "JUMP"
    },
    "6056": {
      "op": "JUMPDEST"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6059": {
      "op": "DUP2"
    },
    "6060": {
      "op": "MSTORE"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6063": {
      "op": "PUSH2",
      "value": "0x17BB"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6068": {
      "op": "DUP4"
    },
    "6069": {
      "op": "ADD"
    },
    "6070": {
      "op": "DUP8"
    },
    "6071": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "6074": {
      "jump": "i",
      "op": "JUMP"
    },
    "6075": {
      "op": "JUMPDEST"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6078": {
      "op": "DUP4"
    },
    "6079": {
      "op": "ADD"
    },
    "6080": {
      "op": "SWAP6"
    },
    "6081": {
      "op": "SWAP1"
    },
    "6082": {
      "op": "SWAP6"
    },
    "6083": {
      "op": "MSTORE"
    },
    "6084": {
      "op": "POP"
    },
    "6085": {
      "op": "SWAP2"
    },
    "6086": {
      "op": "ISZERO"
    },
    "6087": {
      "op": "ISZERO"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6090": {
      "op": "DUP4"
    },
    "6091": {
      "op": "ADD"
    },
    "6092": {
      "op": "MSTORE"
    },
    "6093": {
      "op": "ISZERO"
    },
    "6094": {
      "op": "ISZERO"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6097": {
      "op": "SWAP1"
    },
    "6098": {
      "op": "SWAP2"
    },
    "6099": {
      "op": "ADD"
    },
    "6100": {
      "op": "MSTORE"
    },
    "6101": {
      "op": "SWAP2"
    },
    "6102": {
      "op": "SWAP1"
    },
    "6103": {
      "op": "POP"
    },
    "6104": {
      "jump": "o",
      "op": "JUMP"
    },
    "6105": {
      "op": "JUMPDEST"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6110": {
      "op": "DUP3"
    },
    "6111": {
      "op": "DUP5"
    },
    "6112": {
      "op": "SUB"
    },
    "6113": {
      "op": "SLT"
    },
    "6114": {
      "op": "ISZERO"
    },
    "6115": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6118": {
      "op": "JUMPI"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6121": {
      "op": "DUP1"
    },
    "6122": {
      "op": "REVERT"
    },
    "6123": {
      "op": "JUMPDEST"
    },
    "6124": {
      "op": "DUP2"
    },
    "6125": {
      "op": "CALLDATALOAD"
    },
    "6126": {
      "op": "PUSH2",
      "value": "0x17F6"
    },
    "6129": {
      "op": "DUP2"
    },
    "6130": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "6133": {
      "jump": "i",
      "op": "JUMP"
    },
    "6134": {
      "op": "JUMPDEST"
    },
    "6135": {
      "op": "SWAP4"
    },
    "6136": {
      "op": "SWAP3"
    },
    "6137": {
      "op": "POP"
    },
    "6138": {
      "op": "POP"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "jump": "o",
      "op": "JUMP"
    },
    "6141": {
      "op": "JUMPDEST"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6144": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6147": {
      "op": "DUP1"
    },
    "6148": {
      "op": "DUP4"
    },
    "6149": {
      "op": "MSTORE"
    },
    "6150": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "6153": {
      "op": "DUP2"
    },
    "6154": {
      "op": "DUP5"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "DUP13"
    },
    "6157": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "6160": {
      "jump": "i",
      "op": "JUMP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6164": {
      "op": "DUP5"
    },
    "6165": {
      "op": "ADD"
    },
    "6166": {
      "op": "SWAP11"
    },
    "6167": {
      "op": "SWAP1"
    },
    "6168": {
      "op": "SWAP11"
    },
    "6169": {
      "op": "MSTORE"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "op": "POP"
    },
    "6172": {
      "op": "SWAP6"
    },
    "6173": {
      "op": "ISZERO"
    },
    "6174": {
      "op": "ISZERO"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6177": {
      "op": "DUP8"
    },
    "6178": {
      "op": "ADD"
    },
    "6179": {
      "op": "MSTORE"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6182": {
      "op": "SWAP5"
    },
    "6183": {
      "op": "DUP6"
    },
    "6184": {
      "op": "AND"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6187": {
      "op": "DUP8"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "op": "MSTORE"
    },
    "6190": {
      "op": "SWAP3"
    },
    "6191": {
      "op": "DUP5"
    },
    "6192": {
      "op": "AND"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6195": {
      "op": "DUP7"
    },
    "6196": {
      "op": "ADD"
    },
    "6197": {
      "op": "MSTORE"
    },
    "6198": {
      "op": "SWAP1"
    },
    "6199": {
      "op": "DUP4"
    },
    "6200": {
      "op": "AND"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6203": {
      "op": "DUP6"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "MSTORE"
    },
    "6206": {
      "op": "DUP3"
    },
    "6207": {
      "op": "AND"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6210": {
      "op": "DUP5"
    },
    "6211": {
      "op": "ADD"
    },
    "6212": {
      "op": "MSTORE"
    },
    "6213": {
      "op": "AND"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6216": {
      "op": "SWAP1"
    },
    "6217": {
      "op": "SWAP2"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "SWAP2"
    },
    "6221": {
      "op": "SWAP1"
    },
    "6222": {
      "op": "POP"
    },
    "6223": {
      "jump": "o",
      "op": "JUMP"
    },
    "6224": {
      "op": "JUMPDEST"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6227": {
      "op": "DUP1"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6230": {
      "op": "DUP1"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6235": {
      "op": "DUP7"
    },
    "6236": {
      "op": "DUP9"
    },
    "6237": {
      "op": "SUB"
    },
    "6238": {
      "op": "SLT"
    },
    "6239": {
      "op": "ISZERO"
    },
    "6240": {
      "op": "PUSH2",
      "value": "0x1868"
    },
    "6243": {
      "op": "JUMPI"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6246": {
      "op": "DUP1"
    },
    "6247": {
      "op": "REVERT"
    },
    "6248": {
      "op": "JUMPDEST"
    },
    "6249": {
      "op": "DUP6"
    },
    "6250": {
      "op": "CALLDATALOAD"
    },
    "6251": {
      "op": "SWAP5"
    },
    "6252": {
      "op": "POP"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6255": {
      "op": "DUP7"
    },
    "6256": {
      "op": "ADD"
    },
    "6257": {
      "op": "CALLDATALOAD"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x187A"
    },
    "6261": {
      "op": "DUP2"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "6265": {
      "jump": "i",
      "op": "JUMP"
    },
    "6266": {
      "op": "JUMPDEST"
    },
    "6267": {
      "op": "SWAP4"
    },
    "6268": {
      "op": "POP"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6271": {
      "op": "DUP7"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "CALLDATALOAD"
    },
    "6274": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6283": {
      "op": "DUP1"
    },
    "6284": {
      "op": "DUP3"
    },
    "6285": {
      "op": "GT"
    },
    "6286": {
      "op": "ISZERO"
    },
    "6287": {
      "op": "PUSH2",
      "value": "0x1897"
    },
    "6290": {
      "op": "JUMPI"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6293": {
      "op": "DUP1"
    },
    "6294": {
      "op": "REVERT"
    },
    "6295": {
      "op": "JUMPDEST"
    },
    "6296": {
      "op": "PUSH2",
      "value": "0x18A3"
    },
    "6299": {
      "op": "DUP10"
    },
    "6300": {
      "op": "DUP4"
    },
    "6301": {
      "op": "DUP11"
    },
    "6302": {
      "op": "ADD"
    },
    "6303": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "6306": {
      "jump": "i",
      "op": "JUMP"
    },
    "6307": {
      "op": "JUMPDEST"
    },
    "6308": {
      "op": "SWAP5"
    },
    "6309": {
      "op": "POP"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6312": {
      "op": "DUP9"
    },
    "6313": {
      "op": "ADD"
    },
    "6314": {
      "op": "CALLDATALOAD"
    },
    "6315": {
      "op": "SWAP2"
    },
    "6316": {
      "op": "POP"
    },
    "6317": {
      "op": "PUSH2",
      "value": "0x14FC"
    },
    "6320": {
      "op": "DUP3"
    },
    "6321": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "6324": {
      "jump": "i",
      "op": "JUMP"
    },
    "6325": {
      "op": "JUMPDEST"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6328": {
      "op": "DUP1"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6333": {
      "op": "DUP5"
    },
    "6334": {
      "op": "DUP7"
    },
    "6335": {
      "op": "SUB"
    },
    "6336": {
      "op": "SLT"
    },
    "6337": {
      "op": "ISZERO"
    },
    "6338": {
      "op": "PUSH2",
      "value": "0x18CA"
    },
    "6341": {
      "op": "JUMPI"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6344": {
      "op": "DUP1"
    },
    "6345": {
      "op": "REVERT"
    },
    "6346": {
      "op": "JUMPDEST"
    },
    "6347": {
      "op": "DUP4"
    },
    "6348": {
      "op": "CALLDATALOAD"
    },
    "6349": {
      "op": "PUSH2",
      "value": "0x18D5"
    },
    "6352": {
      "op": "DUP2"
    },
    "6353": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "6356": {
      "jump": "i",
      "op": "JUMP"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "SWAP3"
    },
    "6359": {
      "op": "POP"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6362": {
      "op": "DUP5"
    },
    "6363": {
      "op": "ADD"
    },
    "6364": {
      "op": "CALLDATALOAD"
    },
    "6365": {
      "op": "PUSH2",
      "value": "0x18E5"
    },
    "6368": {
      "op": "DUP2"
    },
    "6369": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "6372": {
      "jump": "i",
      "op": "JUMP"
    },
    "6373": {
      "op": "JUMPDEST"
    },
    "6374": {
      "op": "SWAP2"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6378": {
      "op": "DUP5"
    },
    "6379": {
      "op": "ADD"
    },
    "6380": {
      "op": "CALLDATALOAD"
    },
    "6381": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6390": {
      "op": "DUP2"
    },
    "6391": {
      "op": "GT"
    },
    "6392": {
      "op": "ISZERO"
    },
    "6393": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6396": {
      "op": "JUMPI"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6399": {
      "op": "DUP1"
    },
    "6400": {
      "op": "REVERT"
    },
    "6401": {
      "op": "JUMPDEST"
    },
    "6402": {
      "op": "PUSH2",
      "value": "0x190D"
    },
    "6405": {
      "op": "DUP7"
    },
    "6406": {
      "op": "DUP3"
    },
    "6407": {
      "op": "DUP8"
    },
    "6408": {
      "op": "ADD"
    },
    "6409": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "6412": {
      "jump": "i",
      "op": "JUMP"
    },
    "6413": {
      "op": "JUMPDEST"
    },
    "6414": {
      "op": "SWAP2"
    },
    "6415": {
      "op": "POP"
    },
    "6416": {
      "op": "POP"
    },
    "6417": {
      "op": "SWAP3"
    },
    "6418": {
      "op": "POP"
    },
    "6419": {
      "op": "SWAP3"
    },
    "6420": {
      "op": "POP"
    },
    "6421": {
      "op": "SWAP3"
    },
    "6422": {
      "jump": "o",
      "op": "JUMP"
    },
    "6423": {
      "op": "JUMPDEST"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6428": {
      "op": "DUP1"
    },
    "6429": {
      "op": "DUP4"
    },
    "6430": {
      "op": "ADD"
    },
    "6431": {
      "op": "DUP2"
    },
    "6432": {
      "op": "DUP5"
    },
    "6433": {
      "op": "MSTORE"
    },
    "6434": {
      "op": "DUP1"
    },
    "6435": {
      "op": "DUP6"
    },
    "6436": {
      "op": "MLOAD"
    },
    "6437": {
      "op": "DUP1"
    },
    "6438": {
      "op": "DUP4"
    },
    "6439": {
      "op": "MSTORE"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6442": {
      "op": "SWAP3"
    },
    "6443": {
      "op": "POP"
    },
    "6444": {
      "op": "DUP3"
    },
    "6445": {
      "op": "DUP7"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "op": "SWAP2"
    },
    "6448": {
      "op": "POP"
    },
    "6449": {
      "op": "DUP3"
    },
    "6450": {
      "op": "DUP2"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6453": {
      "op": "SHL"
    },
    "6454": {
      "op": "DUP8"
    },
    "6455": {
      "op": "ADD"
    },
    "6456": {
      "op": "ADD"
    },
    "6457": {
      "op": "DUP5"
    },
    "6458": {
      "op": "DUP9"
    },
    "6459": {
      "op": "ADD"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6462": {
      "op": "JUMPDEST"
    },
    "6463": {
      "op": "DUP4"
    },
    "6464": {
      "op": "DUP2"
    },
    "6465": {
      "op": "LT"
    },
    "6466": {
      "op": "ISZERO"
    },
    "6467": {
      "op": "PUSH2",
      "value": "0x19AD"
    },
    "6470": {
      "op": "JUMPI"
    },
    "6471": {
      "op": "DUP9"
    },
    "6472": {
      "op": "DUP4"
    },
    "6473": {
      "op": "SUB"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6476": {
      "op": "NOT"
    },
    "6477": {
      "op": "ADD"
    },
    "6478": {
      "op": "DUP6"
    },
    "6479": {
      "op": "MSTORE"
    },
    "6480": {
      "op": "DUP2"
    },
    "6481": {
      "op": "MLOAD"
    },
    "6482": {
      "op": "DUP1"
    },
    "6483": {
      "op": "MLOAD"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6490": {
      "op": "SHL"
    },
    "6491": {
      "op": "SUB"
    },
    "6492": {
      "op": "AND"
    },
    "6493": {
      "op": "DUP5"
    },
    "6494": {
      "op": "MSTORE"
    },
    "6495": {
      "op": "DUP8"
    },
    "6496": {
      "op": "DUP2"
    },
    "6497": {
      "op": "ADD"
    },
    "6498": {
      "op": "MLOAD"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6501": {
      "op": "DUP10"
    },
    "6502": {
      "op": "DUP7"
    },
    "6503": {
      "op": "ADD"
    },
    "6504": {
      "op": "DUP2"
    },
    "6505": {
      "op": "SWAP1"
    },
    "6506": {
      "op": "MSTORE"
    },
    "6507": {
      "op": "SWAP1"
    },
    "6508": {
      "op": "PUSH2",
      "value": "0x1977"
    },
    "6511": {
      "op": "DUP3"
    },
    "6512": {
      "op": "DUP8"
    },
    "6513": {
      "op": "ADD"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "PUSH2",
      "value": "0x177C"
    },
    "6518": {
      "jump": "i",
      "op": "JUMP"
    },
    "6519": {
      "op": "JUMPDEST"
    },
    "6520": {
      "op": "DUP4"
    },
    "6521": {
      "op": "DUP11"
    },
    "6522": {
      "op": "ADD"
    },
    "6523": {
      "op": "MLOAD"
    },
    "6524": {
      "op": "DUP8"
    },
    "6525": {
      "op": "DUP12"
    },
    "6526": {
      "op": "ADD"
    },
    "6527": {
      "op": "MSTORE"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6530": {
      "op": "DUP1"
    },
    "6531": {
      "op": "DUP6"
    },
    "6532": {
      "op": "ADD"
    },
    "6533": {
      "op": "MLOAD"
    },
    "6534": {
      "op": "ISZERO"
    },
    "6535": {
      "op": "ISZERO"
    },
    "6536": {
      "op": "SWAP1"
    },
    "6537": {
      "op": "DUP9"
    },
    "6538": {
      "op": "ADD"
    },
    "6539": {
      "op": "MSTORE"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6542": {
      "op": "SWAP4"
    },
    "6543": {
      "op": "DUP5"
    },
    "6544": {
      "op": "ADD"
    },
    "6545": {
      "op": "MLOAD"
    },
    "6546": {
      "op": "ISZERO"
    },
    "6547": {
      "op": "ISZERO"
    },
    "6548": {
      "op": "SWAP4"
    },
    "6549": {
      "op": "SWAP1"
    },
    "6550": {
      "op": "SWAP7"
    },
    "6551": {
      "op": "ADD"
    },
    "6552": {
      "op": "SWAP3"
    },
    "6553": {
      "op": "SWAP1"
    },
    "6554": {
      "op": "SWAP3"
    },
    "6555": {
      "op": "MSTORE"
    },
    "6556": {
      "op": "POP"
    },
    "6557": {
      "op": "POP"
    },
    "6558": {
      "op": "SWAP4"
    },
    "6559": {
      "op": "DUP7"
    },
    "6560": {
      "op": "ADD"
    },
    "6561": {
      "op": "SWAP4"
    },
    "6562": {
      "op": "SWAP1"
    },
    "6563": {
      "op": "DUP7"
    },
    "6564": {
      "op": "ADD"
    },
    "6565": {
      "op": "SWAP1"
    },
    "6566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6568": {
      "op": "ADD"
    },
    "6569": {
      "op": "PUSH2",
      "value": "0x193E"
    },
    "6572": {
      "op": "JUMP"
    },
    "6573": {
      "op": "JUMPDEST"
    },
    "6574": {
      "op": "POP"
    },
    "6575": {
      "op": "SWAP1"
    },
    "6576": {
      "op": "SWAP9"
    },
    "6577": {
      "op": "SWAP8"
    },
    "6578": {
      "op": "POP"
    },
    "6579": {
      "op": "POP"
    },
    "6580": {
      "op": "POP"
    },
    "6581": {
      "op": "POP"
    },
    "6582": {
      "op": "POP"
    },
    "6583": {
      "op": "POP"
    },
    "6584": {
      "op": "POP"
    },
    "6585": {
      "op": "POP"
    },
    "6586": {
      "jump": "o",
      "op": "JUMP"
    },
    "6587": {
      "op": "JUMPDEST"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6590": {
      "op": "DUP1"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6593": {
      "op": "DUP1"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6596": {
      "op": "DUP1"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6601": {
      "op": "DUP9"
    },
    "6602": {
      "op": "DUP11"
    },
    "6603": {
      "op": "SUB"
    },
    "6604": {
      "op": "SLT"
    },
    "6605": {
      "op": "ISZERO"
    },
    "6606": {
      "op": "PUSH2",
      "value": "0x19D6"
    },
    "6609": {
      "op": "JUMPI"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6612": {
      "op": "DUP1"
    },
    "6613": {
      "op": "REVERT"
    },
    "6614": {
      "op": "JUMPDEST"
    },
    "6615": {
      "op": "DUP8"
    },
    "6616": {
      "op": "CALLDATALOAD"
    },
    "6617": {
      "op": "PUSH2",
      "value": "0x19E1"
    },
    "6620": {
      "op": "DUP2"
    },
    "6621": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "6624": {
      "jump": "i",
      "op": "JUMP"
    },
    "6625": {
      "op": "JUMPDEST"
    },
    "6626": {
      "op": "SWAP7"
    },
    "6627": {
      "op": "POP"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6630": {
      "op": "DUP9"
    },
    "6631": {
      "op": "ADD"
    },
    "6632": {
      "op": "CALLDATALOAD"
    },
    "6633": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6642": {
      "op": "DUP1"
    },
    "6643": {
      "op": "DUP3"
    },
    "6644": {
      "op": "GT"
    },
    "6645": {
      "op": "ISZERO"
    },
    "6646": {
      "op": "PUSH2",
      "value": "0x19FE"
    },
    "6649": {
      "op": "JUMPI"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6652": {
      "op": "DUP1"
    },
    "6653": {
      "op": "REVERT"
    },
    "6654": {
      "op": "JUMPDEST"
    },
    "6655": {
      "op": "PUSH2",
      "value": "0x1A0A"
    },
    "6658": {
      "op": "DUP12"
    },
    "6659": {
      "op": "DUP4"
    },
    "6660": {
      "op": "DUP13"
    },
    "6661": {
      "op": "ADD"
    },
    "6662": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "6665": {
      "jump": "i",
      "op": "JUMP"
    },
    "6666": {
      "op": "JUMPDEST"
    },
    "6667": {
      "op": "SWAP8"
    },
    "6668": {
      "op": "POP"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6671": {
      "op": "DUP11"
    },
    "6672": {
      "op": "ADD"
    },
    "6673": {
      "op": "CALLDATALOAD"
    },
    "6674": {
      "op": "SWAP2"
    },
    "6675": {
      "op": "POP"
    },
    "6676": {
      "op": "DUP1"
    },
    "6677": {
      "op": "DUP3"
    },
    "6678": {
      "op": "GT"
    },
    "6679": {
      "op": "ISZERO"
    },
    "6680": {
      "op": "PUSH2",
      "value": "0x1A20"
    },
    "6683": {
      "op": "JUMPI"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6686": {
      "op": "DUP1"
    },
    "6687": {
      "op": "REVERT"
    },
    "6688": {
      "op": "JUMPDEST"
    },
    "6689": {
      "op": "PUSH2",
      "value": "0x1A2C"
    },
    "6692": {
      "op": "DUP12"
    },
    "6693": {
      "op": "DUP4"
    },
    "6694": {
      "op": "DUP13"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "6699": {
      "jump": "i",
      "op": "JUMP"
    },
    "6700": {
      "op": "JUMPDEST"
    },
    "6701": {
      "op": "SWAP7"
    },
    "6702": {
      "op": "POP"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6705": {
      "op": "DUP11"
    },
    "6706": {
      "op": "ADD"
    },
    "6707": {
      "op": "CALLDATALOAD"
    },
    "6708": {
      "op": "SWAP2"
    },
    "6709": {
      "op": "POP"
    },
    "6710": {
      "op": "PUSH2",
      "value": "0x1A3E"
    },
    "6713": {
      "op": "DUP3"
    },
    "6714": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "6717": {
      "jump": "i",
      "op": "JUMP"
    },
    "6718": {
      "op": "JUMPDEST"
    },
    "6719": {
      "op": "DUP2"
    },
    "6720": {
      "op": "SWAP6"
    },
    "6721": {
      "op": "POP"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6724": {
      "op": "DUP11"
    },
    "6725": {
      "op": "ADD"
    },
    "6726": {
      "op": "CALLDATALOAD"
    },
    "6727": {
      "op": "SWAP5"
    },
    "6728": {
      "op": "POP"
    },
    "6729": {
      "op": "PUSH2",
      "value": "0x1A54"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6734": {
      "op": "DUP12"
    },
    "6735": {
      "op": "ADD"
    },
    "6736": {
      "op": "PUSH2",
      "value": "0x13C2"
    },
    "6739": {
      "jump": "i",
      "op": "JUMP"
    },
    "6740": {
      "op": "JUMPDEST"
    },
    "6741": {
      "op": "SWAP4"
    },
    "6742": {
      "op": "POP"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6745": {
      "op": "DUP11"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "CALLDATALOAD"
    },
    "6748": {
      "op": "SWAP2"
    },
    "6749": {
      "op": "POP"
    },
    "6750": {
      "op": "DUP1"
    },
    "6751": {
      "op": "DUP3"
    },
    "6752": {
      "op": "GT"
    },
    "6753": {
      "op": "ISZERO"
    },
    "6754": {
      "op": "PUSH2",
      "value": "0x1A6A"
    },
    "6757": {
      "op": "JUMPI"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6760": {
      "op": "DUP1"
    },
    "6761": {
      "op": "REVERT"
    },
    "6762": {
      "op": "JUMPDEST"
    },
    "6763": {
      "op": "POP"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "6767": {
      "op": "DUP11"
    },
    "6768": {
      "op": "DUP3"
    },
    "6769": {
      "op": "DUP12"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "6774": {
      "jump": "i",
      "op": "JUMP"
    },
    "6775": {
      "op": "JUMPDEST"
    },
    "6776": {
      "op": "SWAP2"
    },
    "6777": {
      "op": "POP"
    },
    "6778": {
      "op": "POP"
    },
    "6779": {
      "op": "SWAP3"
    },
    "6780": {
      "op": "SWAP6"
    },
    "6781": {
      "op": "SWAP9"
    },
    "6782": {
      "op": "SWAP2"
    },
    "6783": {
      "op": "SWAP5"
    },
    "6784": {
      "op": "SWAP8"
    },
    "6785": {
      "op": "POP"
    },
    "6786": {
      "op": "SWAP3"
    },
    "6787": {
      "op": "SWAP6"
    },
    "6788": {
      "op": "POP"
    },
    "6789": {
      "jump": "o",
      "op": "JUMP"
    },
    "6790": {
      "op": "JUMPDEST"
    },
    "6791": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "6824": {
      "op": "DUP2"
    },
    "6825": {
      "op": "MSTORE"
    },
    "6826": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6861": {
      "op": "DUP3"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "MSTORE"
    },
    "6864": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6885": {
      "op": "SHL"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6888": {
      "op": "DUP3"
    },
    "6889": {
      "op": "ADD"
    },
    "6890": {
      "op": "MSTORE"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "6893": {
      "op": "ADD"
    },
    "6894": {
      "op": "SWAP1"
    },
    "6895": {
      "jump": "o",
      "op": "JUMP"
    },
    "6896": {
      "op": "JUMPDEST"
    },
    "6897": {
      "op": "SWAP5"
    },
    "6898": {
      "op": "DUP6"
    },
    "6899": {
      "op": "MSTORE"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6902": {
      "op": "DUP6"
    },
    "6903": {
      "op": "ADD"
    },
    "6904": {
      "op": "SWAP4"
    },
    "6905": {
      "op": "SWAP1"
    },
    "6906": {
      "op": "SWAP4"
    },
    "6907": {
      "op": "MSTORE"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6910": {
      "op": "DUP5"
    },
    "6911": {
      "op": "ADD"
    },
    "6912": {
      "op": "SWAP2"
    },
    "6913": {
      "op": "SWAP1"
    },
    "6914": {
      "op": "SWAP2"
    },
    "6915": {
      "op": "MSTORE"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6918": {
      "op": "DUP4"
    },
    "6919": {
      "op": "ADD"
    },
    "6920": {
      "op": "MSTORE"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6927": {
      "op": "SHL"
    },
    "6928": {
      "op": "SUB"
    },
    "6929": {
      "op": "AND"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6932": {
      "op": "DUP3"
    },
    "6933": {
      "op": "ADD"
    },
    "6934": {
      "op": "MSTORE"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "op": "SWAP1"
    },
    "6939": {
      "jump": "o",
      "op": "JUMP"
    },
    "6940": {
      "op": "JUMPDEST"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6943": {
      "op": "DUP3"
    },
    "6944": {
      "op": "MLOAD"
    },
    "6945": {
      "op": "PUSH2",
      "value": "0x1B2E"
    },
    "6948": {
      "op": "DUP2"
    },
    "6949": {
      "op": "DUP5"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6952": {
      "op": "DUP8"
    },
    "6953": {
      "op": "ADD"
    },
    "6954": {
      "op": "PUSH2",
      "value": "0x174C"
    },
    "6957": {
      "jump": "i",
      "op": "JUMP"
    },
    "6958": {
      "op": "JUMPDEST"
    },
    "6959": {
      "op": "SWAP2"
    },
    "6960": {
      "op": "SWAP1"
    },
    "6961": {
      "op": "SWAP2"
    },
    "6962": {
      "op": "ADD"
    },
    "6963": {
      "op": "SWAP3"
    },
    "6964": {
      "op": "SWAP2"
    },
    "6965": {
      "op": "POP"
    },
    "6966": {
      "op": "POP"
    },
    "6967": {
      "jump": "o",
      "op": "JUMP"
    },
    "6968": {
      "op": "JUMPDEST"
    },
    "6969": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6974": {
      "op": "SHL"
    },
    "6975": {
      "op": "DUP2"
    },
    "6976": {
      "op": "MSTORE"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6979": {
      "op": "DUP2"
    },
    "6980": {
      "op": "ADD"
    },
    "6981": {
      "op": "SWAP3"
    },
    "6982": {
      "op": "SWAP1"
    },
    "6983": {
      "op": "SWAP3"
    },
    "6984": {
      "op": "MSTORE"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6987": {
      "op": "DUP3"
    },
    "6988": {
      "op": "ADD"
    },
    "6989": {
      "op": "MSTORE"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "6992": {
      "op": "ADD"
    },
    "6993": {
      "op": "SWAP1"
    },
    "6994": {
      "jump": "o",
      "op": "JUMP"
    },
    "6995": {
      "op": "JUMPDEST"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7000": {
      "op": "DUP3"
    },
    "7001": {
      "op": "DUP5"
    },
    "7002": {
      "op": "SUB"
    },
    "7003": {
      "op": "SLT"
    },
    "7004": {
      "op": "ISZERO"
    },
    "7005": {
      "op": "PUSH2",
      "value": "0x1B65"
    },
    "7008": {
      "op": "JUMPI"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7011": {
      "op": "DUP1"
    },
    "7012": {
      "op": "REVERT"
    },
    "7013": {
      "op": "JUMPDEST"
    },
    "7014": {
      "op": "POP"
    },
    "7015": {
      "op": "MLOAD"
    },
    "7016": {
      "op": "SWAP2"
    },
    "7017": {
      "op": "SWAP1"
    },
    "7018": {
      "op": "POP"
    },
    "7019": {
      "jump": "o",
      "op": "JUMP"
    },
    "7020": {
      "op": "JUMPDEST"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7023": {
      "op": "DUP3"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7026": {
      "op": "DUP4"
    },
    "7027": {
      "op": "ADD"
    },
    "7028": {
      "op": "SLT"
    },
    "7029": {
      "op": "PUSH2",
      "value": "0x1B7D"
    },
    "7032": {
      "op": "JUMPI"
    },
    "7033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7035": {
      "op": "DUP1"
    },
    "7036": {
      "op": "REVERT"
    },
    "7037": {
      "op": "JUMPDEST"
    },
    "7038": {
      "op": "DUP2"
    },
    "7039": {
      "op": "MLOAD"
    },
    "7040": {
      "op": "PUSH2",
      "value": "0x1B8B"
    },
    "7043": {
      "op": "PUSH2",
      "value": "0x1460"
    },
    "7046": {
      "op": "DUP3"
    },
    "7047": {
      "op": "PUSH2",
      "value": "0x1419"
    },
    "7050": {
      "jump": "i",
      "op": "JUMP"
    },
    "7051": {
      "op": "JUMPDEST"
    },
    "7052": {
      "op": "DUP2"
    },
    "7053": {
      "op": "DUP2"
    },
    "7054": {
      "op": "MSTORE"
    },
    "7055": {
      "op": "DUP5"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7058": {
      "op": "DUP4"
    },
    "7059": {
      "op": "DUP7"
    },
    "7060": {
      "op": "ADD"
    },
    "7061": {
      "op": "ADD"
    },
    "7062": {
      "op": "GT"
    },
    "7063": {
      "op": "ISZERO"
    },
    "7064": {
      "op": "PUSH2",
      "value": "0x1BA0"
    },
    "7067": {
      "op": "JUMPI"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7070": {
      "op": "DUP1"
    },
    "7071": {
      "op": "REVERT"
    },
    "7072": {
      "op": "JUMPDEST"
    },
    "7073": {
      "op": "PUSH2",
      "value": "0x1BB1"
    },
    "7076": {
      "op": "DUP3"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7079": {
      "op": "DUP4"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7083": {
      "op": "DUP8"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "op": "PUSH2",
      "value": "0x174C"
    },
    "7088": {
      "jump": "i",
      "op": "JUMP"
    },
    "7089": {
      "op": "JUMPDEST"
    },
    "7090": {
      "op": "SWAP5"
    },
    "7091": {
      "op": "SWAP4"
    },
    "7092": {
      "op": "POP"
    },
    "7093": {
      "op": "POP"
    },
    "7094": {
      "op": "POP"
    },
    "7095": {
      "op": "POP"
    },
    "7096": {
      "jump": "o",
      "op": "JUMP"
    },
    "7097": {
      "op": "JUMPDEST"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7100": {
      "op": "DUP1"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7103": {
      "op": "DUP1"
    },
    "7104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7108": {
      "op": "DUP7"
    },
    "7109": {
      "op": "DUP9"
    },
    "7110": {
      "op": "SUB"
    },
    "7111": {
      "op": "SLT"
    },
    "7112": {
      "op": "ISZERO"
    },
    "7113": {
      "op": "PUSH2",
      "value": "0x1BD1"
    },
    "7116": {
      "op": "JUMPI"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7119": {
      "op": "DUP1"
    },
    "7120": {
      "op": "REVERT"
    },
    "7121": {
      "op": "JUMPDEST"
    },
    "7122": {
      "op": "DUP6"
    },
    "7123": {
      "op": "MLOAD"
    },
    "7124": {
      "op": "PUSH2",
      "value": "0x1BDC"
    },
    "7127": {
      "op": "DUP2"
    },
    "7128": {
      "op": "PUSH2",
      "value": "0x13AA"
    },
    "7131": {
      "jump": "i",
      "op": "JUMP"
    },
    "7132": {
      "op": "JUMPDEST"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7135": {
      "op": "DUP8"
    },
    "7136": {
      "op": "ADD"
    },
    "7137": {
      "op": "MLOAD"
    },
    "7138": {
      "op": "SWAP1"
    },
    "7139": {
      "op": "SWAP6"
    },
    "7140": {
      "op": "POP"
    },
    "7141": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7150": {
      "op": "DUP2"
    },
    "7151": {
      "op": "GT"
    },
    "7152": {
      "op": "ISZERO"
    },
    "7153": {
      "op": "PUSH2",
      "value": "0x1BF9"
    },
    "7156": {
      "op": "JUMPI"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7159": {
      "op": "DUP1"
    },
    "7160": {
      "op": "REVERT"
    },
    "7161": {
      "op": "JUMPDEST"
    },
    "7162": {
      "op": "PUSH2",
      "value": "0x1C05"
    },
    "7165": {
      "op": "DUP9"
    },
    "7166": {
      "op": "DUP3"
    },
    "7167": {
      "op": "DUP10"
    },
    "7168": {
      "op": "ADD"
    },
    "7169": {
      "op": "PUSH2",
      "value": "0x1B6C"
    },
    "7172": {
      "jump": "i",
      "op": "JUMP"
    },
    "7173": {
      "op": "JUMPDEST"
    },
    "7174": {
      "op": "SWAP5"
    },
    "7175": {
      "op": "POP"
    },
    "7176": {
      "op": "POP"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7179": {
      "op": "DUP7"
    },
    "7180": {
      "op": "ADD"
    },
    "7181": {
      "op": "MLOAD"
    },
    "7182": {
      "op": "SWAP3"
    },
    "7183": {
      "op": "POP"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7186": {
      "op": "DUP7"
    },
    "7187": {
      "op": "ADD"
    },
    "7188": {
      "op": "MLOAD"
    },
    "7189": {
      "op": "PUSH2",
      "value": "0x1C1D"
    },
    "7192": {
      "op": "DUP2"
    },
    "7193": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "7196": {
      "jump": "i",
      "op": "JUMP"
    },
    "7197": {
      "op": "JUMPDEST"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7200": {
      "op": "DUP8"
    },
    "7201": {
      "op": "ADD"
    },
    "7202": {
      "op": "MLOAD"
    },
    "7203": {
      "op": "SWAP1"
    },
    "7204": {
      "op": "SWAP3"
    },
    "7205": {
      "op": "POP"
    },
    "7206": {
      "op": "PUSH2",
      "value": "0x1C2E"
    },
    "7209": {
      "op": "DUP2"
    },
    "7210": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "7213": {
      "jump": "i",
      "op": "JUMP"
    },
    "7214": {
      "op": "JUMPDEST"
    },
    "7215": {
      "op": "DUP1"
    },
    "7216": {
      "op": "SWAP2"
    },
    "7217": {
      "op": "POP"
    },
    "7218": {
      "op": "POP"
    },
    "7219": {
      "op": "SWAP3"
    },
    "7220": {
      "op": "SWAP6"
    },
    "7221": {
      "op": "POP"
    },
    "7222": {
      "op": "SWAP3"
    },
    "7223": {
      "op": "SWAP6"
    },
    "7224": {
      "op": "SWAP1"
    },
    "7225": {
      "op": "SWAP4"
    },
    "7226": {
      "op": "POP"
    },
    "7227": {
      "jump": "o",
      "op": "JUMP"
    },
    "7228": {
      "op": "JUMPDEST"
    },
    "7229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7233": {
      "op": "DUP3"
    },
    "7234": {
      "op": "DUP5"
    },
    "7235": {
      "op": "SUB"
    },
    "7236": {
      "op": "SLT"
    },
    "7237": {
      "op": "ISZERO"
    },
    "7238": {
      "op": "PUSH2",
      "value": "0x1C4E"
    },
    "7241": {
      "op": "JUMPI"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7244": {
      "op": "DUP1"
    },
    "7245": {
      "op": "REVERT"
    },
    "7246": {
      "op": "JUMPDEST"
    },
    "7247": {
      "op": "DUP2"
    },
    "7248": {
      "op": "MLOAD"
    },
    "7249": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7258": {
      "op": "DUP2"
    },
    "7259": {
      "op": "GT"
    },
    "7260": {
      "op": "ISZERO"
    },
    "7261": {
      "op": "PUSH2",
      "value": "0x1C65"
    },
    "7264": {
      "op": "JUMPI"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7267": {
      "op": "DUP1"
    },
    "7268": {
      "op": "REVERT"
    },
    "7269": {
      "op": "JUMPDEST"
    },
    "7270": {
      "op": "PUSH2",
      "value": "0x1BB1"
    },
    "7273": {
      "op": "DUP5"
    },
    "7274": {
      "op": "DUP3"
    },
    "7275": {
      "op": "DUP6"
    },
    "7276": {
      "op": "ADD"
    },
    "7277": {
      "op": "PUSH2",
      "value": "0x1B6C"
    },
    "7280": {
      "jump": "i",
      "op": "JUMP"
    },
    "7281": {
      "op": "JUMPDEST"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7286": {
      "op": "DUP3"
    },
    "7287": {
      "op": "DUP5"
    },
    "7288": {
      "op": "SUB"
    },
    "7289": {
      "op": "SLT"
    },
    "7290": {
      "op": "ISZERO"
    },
    "7291": {
      "op": "PUSH2",
      "value": "0x1C83"
    },
    "7294": {
      "op": "JUMPI"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7297": {
      "op": "DUP1"
    },
    "7298": {
      "op": "REVERT"
    },
    "7299": {
      "op": "JUMPDEST"
    },
    "7300": {
      "op": "DUP2"
    },
    "7301": {
      "op": "MLOAD"
    },
    "7302": {
      "op": "PUSH2",
      "value": "0x17F6"
    },
    "7305": {
      "op": "DUP2"
    },
    "7306": {
      "op": "PUSH2",
      "value": "0x152C"
    },
    "7309": {
      "jump": "i",
      "op": "JUMP"
    },
    "7310": {
      "op": "JUMPDEST"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7315": {
      "op": "DUP3"
    },
    "7316": {
      "op": "DUP5"
    },
    "7317": {
      "op": "SUB"
    },
    "7318": {
      "op": "SLT"
    },
    "7319": {
      "op": "ISZERO"
    },
    "7320": {
      "op": "PUSH2",
      "value": "0x1CA0"
    },
    "7323": {
      "op": "JUMPI"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7326": {
      "op": "DUP1"
    },
    "7327": {
      "op": "REVERT"
    },
    "7328": {
      "op": "JUMPDEST"
    },
    "7329": {
      "op": "DUP2"
    },
    "7330": {
      "op": "MLOAD"
    },
    "7331": {
      "op": "PUSH2",
      "value": "0x17F6"
    },
    "7334": {
      "op": "DUP2"
    },
    "7335": {
      "op": "PUSH2",
      "value": "0x153A"
    },
    "7338": {
      "jump": "i",
      "op": "JUMP"
    },
    "7339": {
      "op": "JUMPDEST"
    },
    "7340": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7347": {
      "op": "SHL"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7350": {
      "op": "MSTORE"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7355": {
      "op": "MSTORE"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7360": {
      "op": "REVERT"
    },
    "7361": {
      "op": "JUMPDEST"
    },
    "7362": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7369": {
      "op": "SHL"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7372": {
      "op": "MSTORE"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7377": {
      "op": "MSTORE"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7382": {
      "op": "REVERT"
    },
    "7383": {
      "op": "JUMPDEST"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7388": {
      "op": "DUP3"
    },
    "7389": {
      "op": "AND"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7392": {
      "op": "DUP2"
    },
    "7393": {
      "op": "EQ"
    },
    "7394": {
      "op": "ISZERO"
    },
    "7395": {
      "op": "PUSH2",
      "value": "0x1CEE"
    },
    "7398": {
      "op": "JUMPI"
    },
    "7399": {
      "op": "PUSH2",
      "value": "0x1CEE"
    },
    "7402": {
      "op": "PUSH2",
      "value": "0x1CC1"
    },
    "7405": {
      "jump": "i",
      "op": "JUMP"
    },
    "7406": {
      "op": "JUMPDEST"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7409": {
      "op": "ADD"
    },
    "7410": {
      "op": "SWAP3"
    },
    "7411": {
      "op": "SWAP2"
    },
    "7412": {
      "op": "POP"
    },
    "7413": {
      "op": "POP"
    },
    "7414": {
      "jump": "o",
      "op": "JUMP"
    },
    "7415": {
      "op": "JUMPDEST"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7420": {
      "op": "NOT"
    },
    "7421": {
      "op": "DUP3"
    },
    "7422": {
      "op": "EQ"
    },
    "7423": {
      "op": "ISZERO"
    },
    "7424": {
      "op": "PUSH2",
      "value": "0x1D0B"
    },
    "7427": {
      "op": "JUMPI"
    },
    "7428": {
      "op": "PUSH2",
      "value": "0x1D0B"
    },
    "7431": {
      "op": "PUSH2",
      "value": "0x1CC1"
    },
    "7434": {
      "jump": "i",
      "op": "JUMP"
    },
    "7435": {
      "op": "JUMPDEST"
    },
    "7436": {
      "op": "POP"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "ADD"
    },
    "7440": {
      "op": "SWAP1"
    },
    "7441": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3eff92559331e9127ebb5b4ec516b3f0cae42c28",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract CLHouseApi {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            signR := mload( add( _signature, 32 ) )\n            // second 32 bytes\n            signS := mload( add( _signature, 64 ) )\n            // final byte (first byte of the next 32 bytes)\n            signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isUser true if is User\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isUser,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdUser( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strUser memory houseUser;\n\n        (   houseUser.walletAddr,\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n        require( true == houseUser.isUser  , \"Is not a user\" );\n\n        return (\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager\n        );\n    }\n\n    /// @notice The list of all users address\n    /// @param _houseAddr address of the CLH\n    /// @return arrUsers array with list of users\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strUser[] memory arrUsers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint8 numUsers = daoCLH.numUsers( );\n        uint256 arrUsersLength = daoCLH.GetArrUsersLength();\n        strUser[] memory _arrUsers = new strUser[] ( numUsers );\n\n        uint8 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrUsersLength ; uid++ ) {\n            strUser memory houseUser;\n\n            (   houseUser.walletAddr,\n                houseUser.name,\n                houseUser.balance,\n                houseUser.isUser,\n                houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n            if( true == houseUser.isUser ){\n                _arrUsers[ index ] = houseUser;\n                index++;\n            }\n        }\n        return _arrUsers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return numUsers Current users of a CLH\n    /// @return numManagers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n    /// @return govRuleMaxUsers Max of all users (including managers)\n    /// @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            uint8 numUsers,\n            uint8 numManagers,\n            uint8 govRuleApprovPercentage,\n            uint8 govRuleMaxUsers,\n            uint8 govRuleMaxManagers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.numUsers(),\n            daoCLH.numManagers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxUsers(),\n            daoCLH.govRuleMaxManagers()\n        );\n    }\n\n\n    function SignerOCInvit(\n        bool _acceptance,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCDelUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCDELUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCRequest(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bytes32 _govModel,\n        uint8 _govRuleMaxUsers,\n        uint8 _govRuleMaxManagers,\n        uint8 _govRuleApprovPercentage,\n        address _whiteListWallets,\n        address _addrCLF,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _addrCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _govModel,\n                _govRuleMaxUsers,\n                _govRuleMaxManagers,\n                _govRuleApprovPercentage,\n                _whiteListWallets\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "208:10452:44:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouseApi.sol",
  "type": "contract"
}