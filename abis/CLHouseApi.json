{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "houseOpen",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxManagers",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUser",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strUser[]",
          "name": "arrUsers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCBulkVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCDelUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whiteListNFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_whiteListWallets",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addrCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_expirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewLock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "46": "contracts/APICLH/CLHouseApi.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "64": "interfaces/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/APICLH/CLHouseApi.sol",
    "exportedSymbols": {
      "CLHouseApi": [
        1036
      ],
      "DebugDLGTCLL": [
        9428
      ],
      "ICLHouse": [
        6987
      ],
      "InvalidGovernanceType": [
        9422
      ],
      "__CLHOUSE_VERSION__": [
        9431
      ],
      "__CONTRACT_NAME_HASH__": [
        9460
      ],
      "__CONTRACT_VERSION_HASH__": [
        9468
      ],
      "__GOV_COMMITTEE__": [
        9450
      ],
      "__GOV_DICTATORSHIP__": [
        9445
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9455
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9476
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9500
      ],
      "__STR_OCDELUSER_HASH__": [
        9516
      ],
      "__STR_OCINVIT_HASH__": [
        9484
      ],
      "__STR_OCNEWCLH_HASH__": [
        9532
      ],
      "__STR_OCNEWLOCK_HASH__": [
        9540
      ],
      "__STR_OCNEWUSER_HASH__": [
        9508
      ],
      "__STR_OCREQUEST_HASH__": [
        9524
      ],
      "__STR_OCVOTE_HASH__": [
        9492
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9437
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9434
      ],
      "__UPGRADEABLE_NFT_VERSION__": [
        9440
      ],
      "assetsEvent": [
        9554
      ],
      "eCLC": [
        9579
      ],
      "gRule": [
        9572
      ],
      "proposalEvent": [
        9558
      ],
      "proposalType": [
        9568
      ],
      "strDataGovRules": [
        9636
      ],
      "strDataTxAssets": [
        9633
      ],
      "strDataUser": [
        9624
      ],
      "strProposal": [
        9610
      ],
      "strUser": [
        9590
      ],
      "strVote": [
        9617
      ],
      "userEvent": [
        9547
      ]
    },
    "id": 1037,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:46"
      },
      {
        "absolutePath": "interfaces/ICLHouse.sol",
        "file": "../../interfaces/ICLHouse.sol",
        "id": 229,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1037,
        "sourceUnit": 6988,
        "src": "58:39:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CLHouseApi",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 230,
          "nodeType": "StructuredDocumentation",
          "src": "99:124:46",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 1036,
        "linearizedBaseContracts": [
          1036
        ],
        "name": "CLHouseApi",
        "nameLocation": "232:10:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "598:546:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 241,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "617:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "617:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "638:2:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "617:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "642:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "608:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "608:58:46"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "685:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "677:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "677:13:46"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "708:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "700:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:13:46"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "729:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "723:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "723:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "723:11:46"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "754:324:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "823:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "856:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "839:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "839:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "832:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "823:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "906:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "927:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "939:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "922:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "922:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "915:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "906:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1018:50:46",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1048:10:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1060:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1043:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1043:21:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1036:5:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1036:30:46"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1027:4:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1027:41:46"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "1018:5:46"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1048:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "844:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "927:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 249,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "823:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 252,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "906:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 255,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1018:5:46",
                      "valueSize": 1
                    }
                  ],
                  "id": 257,
                  "nodeType": "InlineAssembly",
                  "src": "745:333:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 259,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1106:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 260,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "1116:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 261,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1123:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 262,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "1130:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 258,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1095:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "1088:49:46"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "250:197:46",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "461:11:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "491:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "482:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "522:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "509:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:66:46"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "584:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:11:46"
            },
            "scope": 1036,
            "src": "452:692:46",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "1765:601:46",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1784:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1775:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 282,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6987,
                          "src": "1775:8:46"
                        },
                        "referencedDeclaration": 6987,
                        "src": "1775:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6987",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "1803:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6987,
                      "src": "1793:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6987_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6987",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1775:40:46"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1834:3:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1826:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1826:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 293,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "1858:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 291,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1840:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6987",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6860,
                      "src": "1840:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:45:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1891:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 298,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "1896:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1891:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1902:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1882:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:43:46"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "houseUser",
                      "nameLocation": "1951:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1936:24:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                        "typeString": "struct strUser"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "strUser",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9590,
                          "src": "1936:7:46"
                        },
                        "referencedDeclaration": 9590,
                        "src": "1936:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strUser_$9590_storage_ptr",
                          "typeString": "struct strUser"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1936:24:46"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 307,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1975:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9581,
                          "src": "1975:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 310,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2009:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9583,
                          "src": "2009:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 312,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2037:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9585,
                          "src": "2037:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 314,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2068:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9587,
                          "src": "2068:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 316,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2098:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9589,
                          "src": "2098:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 318,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1971:148:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 321,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "2139:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 319,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "2122:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$6987",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6802,
                        "src": "2122:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2122:22:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1971:173:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:173:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2164:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 327,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2172:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9587,
                          "src": "2172:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2164:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4973206e6f7420612075736572",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        },
                        "value": "Is not a user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2155:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:54:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:54:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 333,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2241:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9583,
                        "src": "2241:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 335,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2269:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9585,
                        "src": "2269:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 337,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2300:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9587,
                        "src": "2300:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 339,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2330:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9589,
                        "src": "2330:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 341,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2227:132:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 281,
                  "id": 342,
                  "nodeType": "Return",
                  "src": "2220:139:46"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "1150:346:46",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isUser true if is User\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1510:20:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1548:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1540:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1576:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1568:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:63:46"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1667:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1653:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1690:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1685:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "isUser",
                  "nameLocation": "1716:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1711:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1741:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1736:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:121:46"
            },
            "scope": 1036,
            "src": "1501:865:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "2672:735:46",
              "statements": [
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2691:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2682:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6987,
                          "src": "2682:8:46"
                        },
                        "referencedDeclaration": 6987,
                        "src": "2682:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6987",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "2710:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 357,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6987,
                      "src": "2700:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6987_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6987",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2682:40:46"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "numUsers",
                      "nameLocation": "2741:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2733:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2733:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 363,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2752:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6987",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6767,
                      "src": "2752:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:18:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2733:37:46"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "arrUsersLength",
                      "nameLocation": "2788:14:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2780:22:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 369,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2805:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6987",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrUsersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6885,
                      "src": "2805:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:51:46"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "_arrUsers",
                      "nameLocation": "2858:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2841:26:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9590_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strUser[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 375,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 374,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9590,
                            "src": "2841:7:46"
                          },
                          "referencedDeclaration": 9590,
                          "src": "2841:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9590_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 376,
                        "nodeType": "ArrayTypeName",
                        "src": "2841:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9590_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "numUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2886:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2870:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strUser_$9590_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strUser memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 379,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 378,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9590,
                            "src": "2874:7:46"
                          },
                          "referencedDeclaration": 9590,
                          "src": "2874:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9590_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 380,
                        "nodeType": "ArrayTypeName",
                        "src": "2874:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9590_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9590_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2841:55:46"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2915:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2907:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2907:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2923:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2907:17:46"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "2990:385:46",
                    "statements": [
                      {
                        "assignments": [
                          401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 401,
                            "mutability": "mutable",
                            "name": "houseUser",
                            "nameLocation": "3019:9:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 436,
                            "src": "3004:24:46",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                              "typeString": "struct strUser"
                            },
                            "typeName": {
                              "id": 400,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 399,
                                "name": "strUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9590,
                                "src": "3004:7:46"
                              },
                              "referencedDeclaration": 9590,
                              "src": "3004:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9590_storage_ptr",
                                "typeString": "struct strUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 402,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3004:24:46"
                      },
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 403,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3047:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9581,
                                "src": "3047:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 406,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3085:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9583,
                                "src": "3085:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 408,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3117:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9585,
                                "src": "3117:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 410,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3152:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9587,
                                "src": "3152:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 412,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3186:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9589,
                                "src": "3186:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 414,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3043:164:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 417,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "3227:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 415,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3210:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$6987",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6802,
                              "src": "3210:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3210:22:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "3043:189:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "3043:189:46"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3251:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 422,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "3259:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                "typeString": "struct strUser memory"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9587,
                            "src": "3259:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3251:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 435,
                        "nodeType": "IfStatement",
                        "src": "3247:118:46",
                        "trueBody": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "3277:88:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 425,
                                    "name": "_arrUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "3295:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strUser_$9590_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strUser memory[] memory"
                                    }
                                  },
                                  "id": 427,
                                  "indexExpression": {
                                    "id": 426,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 386,
                                    "src": "3306:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3295:18:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 428,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3316:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "src": "3295:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strUser_$9590_memory_ptr",
                                  "typeString": "struct strUser memory"
                                }
                              },
                              "id": 430,
                              "nodeType": "ExpressionStatement",
                              "src": "3295:30:46"
                            },
                            {
                              "expression": {
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3343:7:46",
                                "subExpression": {
                                  "id": 431,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "3343:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "3343:7:46"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 393,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "2959:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 394,
                      "name": "arrUsersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2965:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2959:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "initializationExpression": {
                    "assignments": [
                      390
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2949:3:46",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "2941:11:46",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2941:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 392,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2955:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2941:15:46"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2982:5:46",
                      "subExpression": {
                        "id": 396,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "2982:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 398,
                    "nodeType": "ExpressionStatement",
                    "src": "2982:5:46"
                  },
                  "nodeType": "ForStatement",
                  "src": "2936:439:46"
                },
                {
                  "expression": {
                    "id": 438,
                    "name": "_arrUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 377,
                    "src": "3391:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9590_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "functionReturnParameters": 353,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "3384:16:46"
                }
              ]
            },
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "2372:136:46",
              "text": "@notice The list of all users address\n @param _houseAddr address of the CLH\n @return arrUsers array with list of users"
            },
            "functionSelector": "b698be8d",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2522:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2556:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2548:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:34:46"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "arrUsers",
                  "nameLocation": "2649:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2632:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strUser_$9590_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 350,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 349,
                        "name": "strUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9590,
                        "src": "2632:7:46"
                      },
                      "referencedDeclaration": 9590,
                      "src": "2632:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9590_storage_ptr",
                        "typeString": "struct strUser"
                      }
                    },
                    "id": 351,
                    "nodeType": "ArrayTypeName",
                    "src": "2632:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9590_storage_$dyn_storage_ptr",
                      "typeString": "struct strUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2618:49:46"
            },
            "scope": 1036,
            "src": "2513:894:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "4508:419:46",
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4527:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4518:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6987",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 465,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6987,
                          "src": "4518:8:46"
                        },
                        "referencedDeclaration": 6987,
                        "src": "4518:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6987",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4546:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 468,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6987,
                      "src": "4536:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6987_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6987",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4518:40:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 472,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4589:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6757,
                          "src": "4589:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:19:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 475,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4622:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6762,
                          "src": "4622:29:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4622:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 478,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4667:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6747,
                          "src": "4667:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 481,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4702:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "houseOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6752,
                          "src": "4702:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4702:18:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 484,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4734:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6767,
                          "src": "4734:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4734:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 487,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4765:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6772,
                          "src": "4765:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4765:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 490,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4799:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6777,
                          "src": "4799:30:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4799:32:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 493,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4845:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6782,
                          "src": "4845:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4845:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 496,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4883:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6987",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6787,
                          "src": "4883:25:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4883:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 499,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4575:345:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string memory,bytes32,bool,bool,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "4569:351:46"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "3413:642:46",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return houseOpen True if is Open\n @return numUsers Current users of a CLH\n @return numManagers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n @return govRuleMaxUsers Max of all users (including managers)\n @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "4069:18:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4105:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4097:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4087:34:46"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "4195:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4181:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "4227:22:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4219:30:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4219:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "4268:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4263:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "houseOpen",
                  "nameLocation": "4299:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4294:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "numUsers",
                  "nameLocation": "4330:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4322:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "numManagers",
                  "nameLocation": "4360:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4352:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4393:23:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4385:31:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "govRuleMaxUsers",
                  "nameLocation": "4438:15:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4430:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagers",
                  "nameLocation": "4475:18:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4467:26:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:336:46"
            },
            "scope": 1036,
            "src": "4060:867:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5104:592:46",
              "statements": [
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5122:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5114:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 513,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5114:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 518,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "5192:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 519,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "5235:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 520,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "5275:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 521,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5318:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "5318:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 523,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "5349:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 516,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5164:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5164:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5164:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 515,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5141:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5114:269:46"
                },
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "5402:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5394:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5394:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9484,
                            "src": "5463:20:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 533,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5501:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 530,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5435:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5435:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5435:91:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 529,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5412:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:124:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5394:142:46"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5555:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5547:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5547:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5595:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 543,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "5607:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 544,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "5625:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 540,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5577:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5577:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5577:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 539,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5566:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5547:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 549,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "5667:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 550,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "5677:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 548,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5654:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 512,
                  "id": 552,
                  "nodeType": "Return",
                  "src": "5647:42:46"
                }
              ]
            },
            "functionSelector": "9f6fd7ab",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "4943:13:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "4971:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4966:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5000:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4992:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5033:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5020:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:93:46"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5090:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:11:46"
            },
            "scope": 1036,
            "src": "4934:762:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "5929:678:46",
              "statements": [
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5947:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "5939:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5939:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 574,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "6017:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 575,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "6060:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 576,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "6100:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 577,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6143:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6143:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 579,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "6174:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5989:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5989:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 571,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5966:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5939:269:46"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "6227:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6219:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6219:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 588,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9492,
                            "src": "6288:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 589,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "6325:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 590,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "6350:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 560,
                                    "src": "6405:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 592,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6387:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6387:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6387:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 591,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6376:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6376:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 586,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6260:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6260:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6260:177:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 585,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6237:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6237:210:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6219:228:46"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "6466:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6458:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6458:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6506:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 606,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "6518:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 607,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6536:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 603,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6488:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6488:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6488:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 602,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6477:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6477:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "6578:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 613,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "6588:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 611,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "6565:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 568,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "6558:42:46"
                }
              ]
            },
            "functionSelector": "89ab062a",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "5712:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "5739:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5734:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5734:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "5761:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5756:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "5793:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5779:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5779:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5825:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5817:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5858:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5845:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:150:46"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5915:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5913:11:46"
            },
            "scope": 1036,
            "src": "5703:904:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "6857:716:46",
              "statements": [
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "6875:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "6867:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6867:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 638,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "6945:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 639,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "6988:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 640,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "7028:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 641,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7071:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "7071:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 643,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "7102:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 636,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6917:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6917:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6917:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 635,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6894:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6867:269:46"
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7155:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "7147:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7147:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 668,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 652,
                            "name": "__STR_OCBULKVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9500,
                            "src": "7216:23:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 656,
                                    "name": "_propIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "7286:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 654,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7268:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7268:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7268:28:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 653,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7257:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7257:41:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 659,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "7316:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 663,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "7371:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 661,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7353:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7353:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7353:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 660,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7342:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7342:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 650,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7188:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7188:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:215:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 649,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7165:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7165:248:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7147:266:46"
                },
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7432:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "7424:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7424:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 679,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7472:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 675,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "7484:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 676,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "7502:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 672,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7454:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7454:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7454:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 671,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7443:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7443:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7424:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "7544:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 682,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "7554:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 680,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7531:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7531:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "7524:42:46"
                }
              ]
            },
            "functionSelector": "f0b00c9f",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCBulkVote",
            "nameLocation": "6623:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_propIds",
                  "nameLocation": "6666:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6649:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 618,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6649:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "nodeType": "ArrayTypeName",
                    "src": "6649:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "6689:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6684:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "6721:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6707:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6753:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6745:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6745:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6786:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6773:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6639:163:46"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6843:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6841:11:46"
            },
            "scope": 1036,
            "src": "6614:959:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "7873:769:46",
              "statements": [
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "7891:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "7883:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7883:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 710,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "7961:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 711,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "8004:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 712,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "8044:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 713,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8087:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8087:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 715,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "8118:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 708,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7933:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7933:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7933:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 707,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7910:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7883:269:46"
                },
                {
                  "assignments": [
                    720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 720,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8171:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "8163:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 719,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8163:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 742,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 724,
                            "name": "__STR_OCNEWUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9508,
                            "src": "8232:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 725,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "8272:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 729,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "8330:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 727,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8312:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8312:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8312:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 726,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8301:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8301:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 735,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 692,
                                    "src": "8386:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 733,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8368:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8368:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8368:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 732,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8357:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8357:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 738,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "8420:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 739,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "8448:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 722,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8204:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8204:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8204:268:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 721,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8181:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8181:301:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8163:319:46"
                },
                {
                  "assignments": [
                    744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 744,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8501:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "8493:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 743,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8493:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 753,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8541:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 749,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "8553:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 750,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8571:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 746,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8523:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8523:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8523:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 745,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8512:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8512:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8493:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "8613:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 756,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8623:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 754,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8600:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 704,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "8593:42:46"
                }
              ]
            },
            "functionSelector": "f240c7e9",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewUser",
            "nameLocation": "7589:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7622:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7614:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7614:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7657:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7643:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7643:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7686:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7672:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "7713:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7708:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7741:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7733:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7733:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7769:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7761:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7802:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7789:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7789:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:214:46"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7859:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7859:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7857:11:46"
            },
            "scope": 1036,
            "src": "7580:1062:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "8888:685:46",
              "statements": [
                {
                  "assignments": [
                    776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 776,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8906:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "8898:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 775,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8898:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 780,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "8976:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 781,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "9019:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 782,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "9059:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 783,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9102:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9102:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 785,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "9133:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 778,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8948:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8948:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8948:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 777,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8925:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8898:269:46"
                },
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "9186:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "9178:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9178:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 794,
                            "name": "__STR_OCDELUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9516,
                            "src": "9247:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 795,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "9287:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 799,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
                                    "src": "9345:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 797,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9327:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9327:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9327:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 796,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9316:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9316:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 802,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "9379:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 792,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9219:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9219:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9219:184:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 791,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9196:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9196:217:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9178:235:46"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9432:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "9424:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9424:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9472:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 812,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "9484:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 813,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "9502:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 809,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9454:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9454:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9454:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 808,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9443:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9424:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 818,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "9544:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 819,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "9554:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 817,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9531:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9531:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 774,
                  "id": 821,
                  "nodeType": "Return",
                  "src": "9524:42:46"
                }
              ]
            },
            "functionSelector": "349dc296",
            "id": 823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCDelUser",
            "nameLocation": "8658:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "8691:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8683:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8683:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8726:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8712:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8712:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8756:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8748:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8748:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "8784:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8776:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8817:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8804:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8804:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8673:160:46"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8874:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8874:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8872:11:46"
            },
            "scope": 1036,
            "src": "8649:924:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "9791:684:46",
              "statements": [
                {
                  "assignments": [
                    837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9809:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "9801:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9801:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 849,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 841,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "9879:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 842,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "9922:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 843,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "9962:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 844,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10005:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "10005:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 846,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "10036:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 839,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9851:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9851:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9851:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 838,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9828:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9828:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9801:269:46"
                },
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "10089:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "10081:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10081:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 870,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 855,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9524,
                            "src": "10150:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 859,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 825,
                                    "src": "10219:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 857,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10201:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10201:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10201:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 856,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10190:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10190:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 865,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 827,
                                    "src": "10275:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 863,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10257:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10257:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10257:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 862,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10246:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10246:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 853,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10122:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10122:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10122:183:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 852,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10099:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10099:216:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10081:234:46"
                },
                {
                  "assignments": [
                    872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "10334:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "10326:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10326:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10374:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 877,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "10386:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 878,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "10404:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 874,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10356:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10356:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10356:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 873,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10345:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10345:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10326:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "10446:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 884,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "10456:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 882,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "10433:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10433:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "10426:42:46"
                }
              ]
            },
            "functionSelector": "7b3bb156",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequest",
            "nameLocation": "9589:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9628:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9614:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9657:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9643:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9643:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "9687:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9679:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9679:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9720:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9707:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9707:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9604:132:46"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9777:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9777:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:11:46"
            },
            "scope": 1036,
            "src": "9580:895:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "10918:958:46",
              "statements": [
                {
                  "assignments": [
                    916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 916,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "10936:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "10928:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 915,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10928:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 928,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 920,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "11006:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 921,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "11049:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 922,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "11089:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 923,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11132:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "11132:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 925,
                            "name": "_addrCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "11163:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 918,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10978:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10978:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10978:207:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 917,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10955:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10955:240:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10928:267:46"
                },
                {
                  "assignments": [
                    930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 930,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "11214:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "11206:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 929,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11206:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 951,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 934,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9532,
                            "src": "11275:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 938,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 890,
                                    "src": "11343:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 936,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11325:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11325:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11325:30:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 935,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11314:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11314:43:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 941,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "11375:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 942,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "11406:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 943,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "11434:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 944,
                            "name": "_govRuleMaxUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "11461:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 945,
                            "name": "_govRuleMaxManagers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "11495:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 946,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "11532:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 947,
                            "name": "_whiteListNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "11574:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 948,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "11605:17:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 932,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11247:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11247:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11247:459:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 931,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11224:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11224:492:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11206:510:46"
                },
                {
                  "assignments": [
                    953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 953,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "11735:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "11727:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 952,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11727:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 962,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11775:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 958,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "11787:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 959,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "11805:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 955,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11757:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11757:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11757:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 954,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11746:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11746:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11727:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 964,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "11847:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 965,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "11857:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 963,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "11834:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11834:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 914,
                  "id": 967,
                  "nodeType": "Return",
                  "src": "11827:42:46"
                }
              ]
            },
            "functionSelector": "8b4bccca",
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "10491:14:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "10529:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10515:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10515:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "10554:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10549:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10549:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "10582:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10577:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10577:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "10610:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10602:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10602:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "_govRuleMaxUsers",
                  "nameLocation": "10637:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10629:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10629:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagers",
                  "nameLocation": "10671:19:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10663:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10663:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "10708:24:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10700:32:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10700:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "_whiteListNFT",
                  "nameLocation": "10750:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10742:21:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10742:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "10781:17:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10773:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10773:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_addrCLF",
                  "nameLocation": "10816:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10808:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10808:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10847:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10834:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10834:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10505:358:46"
            },
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10904:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10904:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10902:11:46"
            },
            "scope": 1036,
            "src": "10482:1394:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "12159:723:46",
              "statements": [
                {
                  "assignments": [
                    987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 987,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "12177:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 1034,
                      "src": "12169:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 986,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12169:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 999,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 991,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "12247:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 992,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "12290:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 993,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "12330:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 994,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12373:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "12373:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 996,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "12404:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 989,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12219:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12219:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12219:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 988,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12196:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12196:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12169:269:46"
                },
                {
                  "assignments": [
                    1001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1001,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "12457:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 1034,
                      "src": "12449:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1000,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12449:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1005,
                            "name": "__STR_OCNEWLOCK_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9540,
                            "src": "12518:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1006,
                            "name": "_expirationDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "12558:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1007,
                            "name": "_keyPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "12595:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1008,
                            "name": "_maxNumberOfKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "12622:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1012,
                                    "name": "_lockName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 977,
                                    "src": "12685:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1010,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "12667:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "12667:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12667:29:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1009,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "12656:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12656:42:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1003,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12490:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12490:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12490:222:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1002,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12467:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12467:255:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12449:273:46"
                },
                {
                  "assignments": [
                    1019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1019,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "12741:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 1034,
                      "src": "12733:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1018,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12733:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1028,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12781:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1024,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "12793:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1025,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "12811:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1021,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12763:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "12763:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12763:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1020,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12752:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12752:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12733:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1030,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "12853:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1031,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "12863:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1029,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "12840:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12840:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 985,
                  "id": 1033,
                  "nodeType": "Return",
                  "src": "12833:42:46"
                }
              ]
            },
            "functionSelector": "0daff036",
            "id": 1035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewLock",
            "nameLocation": "11891:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "_expirationDuration",
                  "nameLocation": "11924:19:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "11916:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11916:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "_keyPrice",
                  "nameLocation": "11961:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "11953:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11953:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "_maxNumberOfKeys",
                  "nameLocation": "11988:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "11980:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11980:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "_lockName",
                  "nameLocation": "12028:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "12014:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12014:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "12055:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "12047:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12047:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "12088:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "12075:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12075:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11906:198:46"
            },
            "returnParameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "12145:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12145:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12143:11:46"
            },
            "scope": 1036,
            "src": "11882:1000:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1037,
        "src": "223:12661:46",
        "usedErrors": []
      }
    ],
    "src": "32:12852:46"
  },
  "bytecode": "608060405234801561001057600080fd5b5061240a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806389ab062a1161007157806389ab062a1461016d5780638b4bccca146101805780639f6fd7ab14610193578063b698be8d146101a6578063f0b00c9f146101c6578063f240c7e9146101d957600080fd5b80630daff036146100b9578063349dc296146100e9578063622eca77146100fc5780637b3bb1561461010f57806386abd826146101225780638750bc3e14610145575b600080fd5b6100cc6100c73660046119cf565b6101ec565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc6100f7366004611a62565b6103dd565b6100cc61010a366004611af6565b6105b5565b6100cc61011d366004611b3c565b610679565b610135610130366004611bd8565b61083e565b6040516100e09493929190611c6d565b610158610153366004611c9e565b610a03565b6040516100e099989796959493929190611cc2565b6100cc61017b366004611d2f565b610dac565b6100cc61018e366004611d93565b610f0e565b6100cc6101a1366004611e74565b6111b4565b6101b96101b4366004611c9e565b611305565b6040516100e09190611ed5565b6100cc6101d4366004611f79565b611531565b6100cc6101e736600461206f565b611688565b6000806040516020016101fe90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261024a92016121a3565b6040516020818303038152906040528051906020012046876040516020016102769594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001610319907f7374724f434e65774c6f636b2875696e743235362065787069726174696f6e4481527f75726174696f6e2c75696e74323536206b657950726963652c75696e7432353660208201527f206d61784e756d6265724f664b6579732c737472696e67206c6f636b4e616d656040820152602960f81b606082015260610190565b604051602081830303815290604052805190602001208989898960405160200161034391906121a3565b60408051601f198184030181528282528051602091820120908301969096528101939093526060830191909152608082015260a081019190915260c001604051602081830303815290604052805190602001209050600082826040516020016103ad9291906121eb565b6040516020818303038152906040528051906020012090506103cf81866105b5565b9a9950505050505050505050565b6000806040516020016103ef90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261043b92016121a3565b6040516020818303038152906040528051906020012046876040516020016104679594939291906121bf565b60405160208183030381529060405280519060200120905060006040516020016104e8907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b60405160208183030381529060405280519060200120888860405160200161051091906121a3565b604051602081830303815290604052805190602001208860405160200161055994939291909384526001600160a01b039290921660208401526040830152606082015260800190565b604051602081830303815290604052805190602001209050600082826040516020016105869291906121eb565b6040516020818303038152906040528051906020012090506105a881866105b5565b9998505050505050505050565b600081516041146106045760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610664573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161068b90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b5833981519152926106d792016121a3565b6040516020818303038152906040528051906020012046876040516020016107039594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001610765907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b604051602081830303815290604052805190602001208760405160200161078c91906121a3565b60405160208183030381529060405280519060200120876040516020016107b391906121a3565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001209050600082826040516020016108109291906121eb565b60405160208183030381529060405280519060200120905061083281866105b5565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190612206565b9050806108fb5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016105fb565b6109036118a8565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610970919081019061226c565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146109dc5760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016105fb565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7c91908101906122ee565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190612206565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190612322565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190612322565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c049190612206565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c669190612206565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc89190612206565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190612206565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8c9190612206565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610dbe90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b583398151915292610e0a92016121a3565b604051602081830303815290604052805190602001204687604051602001610e369594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001610ea9907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610ed291906121a3565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a001610559565b600080604051602001610f2090612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b583398151915292610f6c92016121a3565b604051602081830303815290604052805190602001204687604051602001610f989594939291906121bf565b60405160208183030381529060405280519060200120905060006040516020016110bc907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c6973744e46542c61646472657373207760a08201526f686974654c69737457616c6c6574732960801b60c082015260d00190565b604051602081830303815290604052805190602001208e6040516020016110e391906121a3565b60408051601f198184030181528282528051602091820120908301939093528101919091528d151560608201528c1515608082015260a081018c905260c081018b905260e081018a905261010081018990526001600160a01b038089166101208301528716610140820152610160016040516020818303038152906040528051906020012090506000828260405160200161117f9291906121eb565b6040516020818303038152906040528051906020012090506111a181866105b5565b9f9e505050505050505050505050505050565b6000806040516020016111c690612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261121292016121a3565b60405160208183030381529060405280519060200120468760405160200161123e9594939291906121bf565b604051602081830303815290604052805190602001209050600060405160200161128b907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f190181528282528051602091820120818401528815158383015281518084038301815260608401909252815191012091506000906112d890849084906080016121eb565b6040516020818303038152906040528051906020012090506112fa81866105b5565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa15801561134c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113709190612206565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190612206565b90506000826001600160401b038111156113f2576113f26118e4565b60405190808252806020026020018201604052801561142b57816020015b6114186118a8565b8152602001906001900390816114105790505b509050600060015b83811015611525576114436118a8565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015611488573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b0919081019061226c565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561151257808484815181106114f8576114f861233f565b6020026020010181905250828061150e90612355565b9350505b508061151d81612355565b915050611433565b50909695505050505050565b60008060405160200161154390612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261158f92016121a3565b6040516020818303038152906040528051906020012046876040516020016115bb9594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001611639907f7374724f4342756c6b566f74652875696e743235365b5d2070726f704964732c81527f626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6020820152616e2960f01b604082015260420190565b6040516020818303038152906040528051906020012088604051602001611660919061237e565b604051602081830303815290604052805190602001208888604051602001610ed291906121a3565b60008060405160200161169a90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b5833981519152926116e692016121a3565b6040516020818303038152906040528051906020012046876040516020016117129594939291906121bf565b60405160208183030381529060405280519060200120905060006040516020016117ab907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016117d391906121a3565b604051602081830303815290604052805190602001208a6040516020016117fa91906121a3565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e001604051602081830303815290604052805190602001209050600082826040516020016118779291906121eb565b60405160208183030381529060405280519060200120905061189981866105b5565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611922576119226118e4565b604052919050565b60006001600160401b03821115611943576119436118e4565b50601f01601f191660200190565b600082601f83011261196257600080fd5b81356119756119708261192a565b6118fa565b81815284602083860101111561198a57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146119bc57600080fd5b50565b80356119ca816119a7565b919050565b60008060008060008060c087890312156119e857600080fd5b86359550602087013594506040870135935060608701356001600160401b0380821115611a1457600080fd5b611a208a838b01611951565b945060808901359150611a32826119a7565b90925060a08801359080821115611a4857600080fd5b50611a5589828a01611951565b9150509295509295509295565b600080600080600060a08688031215611a7a57600080fd5b8535611a85816119a7565b945060208601356001600160401b0380821115611aa157600080fd5b611aad89838a01611951565b95506040880135945060608801359150611ac6826119a7565b90925060808701359080821115611adc57600080fd5b50611ae988828901611951565b9150509295509295909350565b60008060408385031215611b0957600080fd5b8235915060208301356001600160401b03811115611b2657600080fd5b611b3285828601611951565b9150509250929050565b60008060008060808587031215611b5257600080fd5b84356001600160401b0380821115611b6957600080fd5b611b7588838901611951565b95506020870135915080821115611b8b57600080fd5b611b9788838901611951565b945060408701359150611ba9826119a7565b90925060608601359080821115611bbf57600080fd5b50611bcc87828801611951565b91505092959194509250565b60008060408385031215611beb57600080fd5b8235611bf6816119a7565b91506020830135611c06816119a7565b809150509250929050565b60005b83811015611c2c578181015183820152602001611c14565b83811115611c3b576000848401525b50505050565b60008151808452611c59816020860160208601611c11565b601f01601f19169290920160200192915050565b608081526000611c806080830187611c41565b60208301959095525091151560408301521515606090910152919050565b600060208284031215611cb057600080fd5b8135611cbb816119a7565b9392505050565b6000610120808352611cd68184018d611c41565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b80151581146119bc57600080fd5b80356119ca81611d16565b600080600080600060a08688031215611d4757600080fd5b853594506020860135611d5981611d16565b935060408601356001600160401b0380821115611d7557600080fd5b611d8189838a01611951565b945060608801359150611ac6826119a7565b60008060008060008060008060008060006101608c8e031215611db557600080fd5b6001600160401b03808d351115611dcb57600080fd5b611dd88e8e358f01611951565b9b50611de660208e01611d24565b9a50611df460408e01611d24565b995060608d0135985060808d0135975060a08d0135965060c08d01359550611e1e60e08e016119bf565b9450611e2d6101008e016119bf565b9350611e3c6101208e016119bf565b9250806101408e01351115611e5057600080fd5b50611e628d6101408e01358e01611951565b90509295989b509295989b9093969950565b600080600060608486031215611e8957600080fd5b8335611e9481611d16565b92506020840135611ea4816119a7565b915060408401356001600160401b03811115611ebf57600080fd5b611ecb86828701611951565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f6b57888303603f19018552815180516001600160a01b031684528781015160a089860181905290611f3582870182611c41565b838a0151878b01526060808501511515908801526080938401511515939096019290925250509386019390860190600101611efc565b509098975050505050505050565b600080600080600060a08688031215611f9157600080fd5b85356001600160401b0380821115611fa857600080fd5b818801915088601f830112611fbc57600080fd5b8135602082821115611fd057611fd06118e4565b8160051b611fdf8282016118fa565b928352848101820192828101908d851115611ff957600080fd5b958301955b8487101561201757863582529583019590830190611ffe565b9a506120279150508a8201611d24565b97505050604088013591508082111561203f57600080fd5b61204b89838a01611951565b9450612059606089016119bf565b93506080880135915080821115611adc57600080fd5b600080600080600080600060e0888a03121561208a57600080fd5b8735612095816119a7565b965060208801356001600160401b03808211156120b157600080fd5b6120bd8b838c01611951565b975060408a01359150808211156120d357600080fd5b6120df8b838c01611951565b965060608a013591506120f182611d16565b81955060808a0135945061210760a08b016119bf565b935060c08a013591508082111561211d57600080fd5b5061212a8a828b01611951565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b600082516121b5818460208701611c11565b9190910192915050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b61190160f01b81526002810192909252602282015260420190565b60006020828403121561221857600080fd5b5051919050565b600082601f83011261223057600080fd5b815161223e6119708261192a565b81815284602083860101111561225357600080fd5b612264826020830160208701611c11565b949350505050565b600080600080600060a0868803121561228457600080fd5b855161228f816119a7565b60208701519095506001600160401b038111156122ab57600080fd5b6122b78882890161221f565b9450506040860151925060608601516122cf81611d16565b60808701519092506122e081611d16565b809150509295509295909350565b60006020828403121561230057600080fd5b81516001600160401b0381111561231657600080fd5b6122648482850161221f565b60006020828403121561233457600080fd5b8151611cbb81611d16565b634e487b7160e01b600052603260045260246000fd5b600060001982141561237757634e487b7160e01b600052601160045260246000fd5b5060010190565b815160009082906020808601845b838110156123a85781518552938201939082019060010161238c565b5092969550505050505056fe01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a26469706673582212209530762479707f441beebad2aa5eb8b00c4e33ade9a62e9731b6b53984b7b97264736f6c634300080c0033",
  "bytecodeSha1": "c49c35d94db0b47cfc3ca63af2f248b36f34d315",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouseApi",
  "coverageMap": {
    "branches": {
      "46": {
        "CLHouseApi.GetHouseUserList": {
          "21": [
            3251,
            3275,
            false
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "19": [
            1891,
            1899,
            true
          ],
          "20": [
            2164,
            2188,
            true
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "18": [
            617,
            640,
            true
          ]
        }
      },
      "48": {},
      "64": {}
    },
    "statements": {
      "46": {
        "CLHouseApi.GetHouseProperties": {
          "9": [
            4569,
            4920
          ]
        },
        "CLHouseApi.GetHouseUserList": {
          "12": [
            3043,
            3232
          ],
          "13": [
            3295,
            3325
          ],
          "14": [
            3343,
            3350
          ],
          "15": [
            2982,
            2987
          ],
          "16": [
            3384,
            3400
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "5": [
            1882,
            1925
          ],
          "6": [
            1971,
            2144
          ],
          "7": [
            2155,
            2209
          ],
          "8": [
            2220,
            2359
          ]
        },
        "CLHouseApi.SignerOCDelUser": {
          "1": [
            9524,
            9566
          ]
        },
        "CLHouseApi.SignerOCInvit": {
          "11": [
            5647,
            5689
          ]
        },
        "CLHouseApi.SignerOCNewCLH": {
          "10": [
            11827,
            11869
          ]
        },
        "CLHouseApi.SignerOCNewLock": {
          "0": [
            12833,
            12875
          ]
        },
        "CLHouseApi.SignerOCNewUser": {
          "17": [
            8593,
            8635
          ]
        },
        "CLHouseApi.SignerOCRequest": {
          "4": [
            10426,
            10468
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "2": [
            608,
            666
          ],
          "3": [
            1088,
            1137
          ]
        }
      },
      "48": {},
      "64": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806389ab062a1161007157806389ab062a1461016d5780638b4bccca146101805780639f6fd7ab14610193578063b698be8d146101a6578063f0b00c9f146101c6578063f240c7e9146101d957600080fd5b80630daff036146100b9578063349dc296146100e9578063622eca77146100fc5780637b3bb1561461010f57806386abd826146101225780638750bc3e14610145575b600080fd5b6100cc6100c73660046119cf565b6101ec565b6040516001600160a01b0390911681526020015b60405180910390f35b6100cc6100f7366004611a62565b6103dd565b6100cc61010a366004611af6565b6105b5565b6100cc61011d366004611b3c565b610679565b610135610130366004611bd8565b61083e565b6040516100e09493929190611c6d565b610158610153366004611c9e565b610a03565b6040516100e099989796959493929190611cc2565b6100cc61017b366004611d2f565b610dac565b6100cc61018e366004611d93565b610f0e565b6100cc6101a1366004611e74565b6111b4565b6101b96101b4366004611c9e565b611305565b6040516100e09190611ed5565b6100cc6101d4366004611f79565b611531565b6100cc6101e736600461206f565b611688565b6000806040516020016101fe90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261024a92016121a3565b6040516020818303038152906040528051906020012046876040516020016102769594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001610319907f7374724f434e65774c6f636b2875696e743235362065787069726174696f6e4481527f75726174696f6e2c75696e74323536206b657950726963652c75696e7432353660208201527f206d61784e756d6265724f664b6579732c737472696e67206c6f636b4e616d656040820152602960f81b606082015260610190565b604051602081830303815290604052805190602001208989898960405160200161034391906121a3565b60408051601f198184030181528282528051602091820120908301969096528101939093526060830191909152608082015260a081019190915260c001604051602081830303815290604052805190602001209050600082826040516020016103ad9291906121eb565b6040516020818303038152906040528051906020012090506103cf81866105b5565b9a9950505050505050505050565b6000806040516020016103ef90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261043b92016121a3565b6040516020818303038152906040528051906020012046876040516020016104679594939291906121bf565b60405160208183030381529060405280519060200120905060006040516020016104e8907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b60405160208183030381529060405280519060200120888860405160200161051091906121a3565b604051602081830303815290604052805190602001208860405160200161055994939291909384526001600160a01b039290921660208401526040830152606082015260800190565b604051602081830303815290604052805190602001209050600082826040516020016105869291906121eb565b6040516020818303038152906040528051906020012090506105a881866105b5565b9998505050505050505050565b600081516041146106045760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610664573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161068b90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b5833981519152926106d792016121a3565b6040516020818303038152906040528051906020012046876040516020016107039594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001610765907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b604051602081830303815290604052805190602001208760405160200161078c91906121a3565b60405160208183030381529060405280519060200120876040516020016107b391906121a3565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001209050600082826040516020016108109291906121eb565b60405160208183030381529060405280519060200120905061083281866105b5565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190612206565b9050806108fb5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016105fb565b6109036118a8565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa158015610948573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610970919081019061226c565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146109dc5760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016105fb565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7c91908101906122ee565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190612206565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190612322565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190612322565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c049190612206565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c669190612206565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc89190612206565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190612206565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8c9190612206565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610dbe90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b583398151915292610e0a92016121a3565b604051602081830303815290604052805190602001204687604051602001610e369594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001610ea9907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610ed291906121a3565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a001610559565b600080604051602001610f2090612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b583398151915292610f6c92016121a3565b604051602081830303815290604052805190602001204687604051602001610f989594939291906121bf565b60405160208183030381529060405280519060200120905060006040516020016110bc907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c6973744e46542c61646472657373207760a08201526f686974654c69737457616c6c6574732960801b60c082015260d00190565b604051602081830303815290604052805190602001208e6040516020016110e391906121a3565b60408051601f198184030181528282528051602091820120908301939093528101919091528d151560608201528c1515608082015260a081018c905260c081018b905260e081018a905261010081018990526001600160a01b038089166101208301528716610140820152610160016040516020818303038152906040528051906020012090506000828260405160200161117f9291906121eb565b6040516020818303038152906040528051906020012090506111a181866105b5565b9f9e505050505050505050505050505050565b6000806040516020016111c690612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261121292016121a3565b60405160208183030381529060405280519060200120468760405160200161123e9594939291906121bf565b604051602081830303815290604052805190602001209050600060405160200161128b907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f190181528282528051602091820120818401528815158383015281518084038301815260608401909252815191012091506000906112d890849084906080016121eb565b6040516020818303038152906040528051906020012090506112fa81866105b5565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa15801561134c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113709190612206565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190612206565b90506000826001600160401b038111156113f2576113f26118e4565b60405190808252806020026020018201604052801561142b57816020015b6114186118a8565b8152602001906001900390816114105790505b509050600060015b83811015611525576114436118a8565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015611488573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b0919081019061226c565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561151257808484815181106114f8576114f861233f565b6020026020010181905250828061150e90612355565b9350505b508061151d81612355565b915050611433565b50909695505050505050565b60008060405160200161154390612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b58339815191529261158f92016121a3565b6040516020818303038152906040528051906020012046876040516020016115bb9594939291906121bf565b6040516020818303038152906040528051906020012090506000604051602001611639907f7374724f4342756c6b566f74652875696e743235365b5d2070726f704964732c81527f626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6020820152616e2960f01b604082015260420190565b6040516020818303038152906040528051906020012088604051602001611660919061237e565b604051602081830303815290604052805190602001208888604051602001610ed291906121a3565b60008060405160200161169a90612139565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206123b5833981519152926116e692016121a3565b6040516020818303038152906040528051906020012046876040516020016117129594939291906121bf565b60405160208183030381529060405280519060200120905060006040516020016117ab907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016117d391906121a3565b604051602081830303815290604052805190602001208a6040516020016117fa91906121a3565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e001604051602081830303815290604052805190602001209050600082826040516020016118779291906121eb565b60405160208183030381529060405280519060200120905061189981866105b5565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611922576119226118e4565b604052919050565b60006001600160401b03821115611943576119436118e4565b50601f01601f191660200190565b600082601f83011261196257600080fd5b81356119756119708261192a565b6118fa565b81815284602083860101111561198a57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146119bc57600080fd5b50565b80356119ca816119a7565b919050565b60008060008060008060c087890312156119e857600080fd5b86359550602087013594506040870135935060608701356001600160401b0380821115611a1457600080fd5b611a208a838b01611951565b945060808901359150611a32826119a7565b90925060a08801359080821115611a4857600080fd5b50611a5589828a01611951565b9150509295509295509295565b600080600080600060a08688031215611a7a57600080fd5b8535611a85816119a7565b945060208601356001600160401b0380821115611aa157600080fd5b611aad89838a01611951565b95506040880135945060608801359150611ac6826119a7565b90925060808701359080821115611adc57600080fd5b50611ae988828901611951565b9150509295509295909350565b60008060408385031215611b0957600080fd5b8235915060208301356001600160401b03811115611b2657600080fd5b611b3285828601611951565b9150509250929050565b60008060008060808587031215611b5257600080fd5b84356001600160401b0380821115611b6957600080fd5b611b7588838901611951565b95506020870135915080821115611b8b57600080fd5b611b9788838901611951565b945060408701359150611ba9826119a7565b90925060608601359080821115611bbf57600080fd5b50611bcc87828801611951565b91505092959194509250565b60008060408385031215611beb57600080fd5b8235611bf6816119a7565b91506020830135611c06816119a7565b809150509250929050565b60005b83811015611c2c578181015183820152602001611c14565b83811115611c3b576000848401525b50505050565b60008151808452611c59816020860160208601611c11565b601f01601f19169290920160200192915050565b608081526000611c806080830187611c41565b60208301959095525091151560408301521515606090910152919050565b600060208284031215611cb057600080fd5b8135611cbb816119a7565b9392505050565b6000610120808352611cd68184018d611c41565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b80151581146119bc57600080fd5b80356119ca81611d16565b600080600080600060a08688031215611d4757600080fd5b853594506020860135611d5981611d16565b935060408601356001600160401b0380821115611d7557600080fd5b611d8189838a01611951565b945060608801359150611ac6826119a7565b60008060008060008060008060008060006101608c8e031215611db557600080fd5b6001600160401b03808d351115611dcb57600080fd5b611dd88e8e358f01611951565b9b50611de660208e01611d24565b9a50611df460408e01611d24565b995060608d0135985060808d0135975060a08d0135965060c08d01359550611e1e60e08e016119bf565b9450611e2d6101008e016119bf565b9350611e3c6101208e016119bf565b9250806101408e01351115611e5057600080fd5b50611e628d6101408e01358e01611951565b90509295989b509295989b9093969950565b600080600060608486031215611e8957600080fd5b8335611e9481611d16565b92506020840135611ea4816119a7565b915060408401356001600160401b03811115611ebf57600080fd5b611ecb86828701611951565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f6b57888303603f19018552815180516001600160a01b031684528781015160a089860181905290611f3582870182611c41565b838a0151878b01526060808501511515908801526080938401511515939096019290925250509386019390860190600101611efc565b509098975050505050505050565b600080600080600060a08688031215611f9157600080fd5b85356001600160401b0380821115611fa857600080fd5b818801915088601f830112611fbc57600080fd5b8135602082821115611fd057611fd06118e4565b8160051b611fdf8282016118fa565b928352848101820192828101908d851115611ff957600080fd5b958301955b8487101561201757863582529583019590830190611ffe565b9a506120279150508a8201611d24565b97505050604088013591508082111561203f57600080fd5b61204b89838a01611951565b9450612059606089016119bf565b93506080880135915080821115611adc57600080fd5b600080600080600080600060e0888a03121561208a57600080fd5b8735612095816119a7565b965060208801356001600160401b03808211156120b157600080fd5b6120bd8b838c01611951565b975060408a01359150808211156120d357600080fd5b6120df8b838c01611951565b965060608a013591506120f182611d16565b81955060808a0135945061210760a08b016119bf565b935060c08a013591508082111561211d57600080fd5b5061212a8a828b01611951565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b600082516121b5818460208701611c11565b9190910192915050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b61190160f01b81526002810192909252602282015260420190565b60006020828403121561221857600080fd5b5051919050565b600082601f83011261223057600080fd5b815161223e6119708261192a565b81815284602083860101111561225357600080fd5b612264826020830160208701611c11565b949350505050565b600080600080600060a0868803121561228457600080fd5b855161228f816119a7565b60208701519095506001600160401b038111156122ab57600080fd5b6122b78882890161221f565b9450506040860151925060608601516122cf81611d16565b60808701519092506122e081611d16565b809150509295509295909350565b60006020828403121561230057600080fd5b81516001600160401b0381111561231657600080fd5b6122648482850161221f565b60006020828403121561233457600080fd5b8151611cbb81611d16565b634e487b7160e01b600052603260045260246000fd5b600060001982141561237757634e487b7160e01b600052601160045260246000fd5b5060010190565b815160009082906020808601845b838110156123a85781518552938201939082019060010161238c565b5092969550505050505056fe01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a26469706673582212209530762479707f441beebad2aa5eb8b00c4e33ade9a62e9731b6b53984b7b97264736f6c634300080c0033",
  "deployedSourceMap": "223:12661:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11882:1000;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2415:32:66;;;2397:51;;2385:2;2370:18;11882:1000:46;;;;;;;;8649:924;;;;;;:::i;:::-;;:::i;452:692::-;;;;;;:::i;:::-;;:::i;9580:895::-;;;;;;:::i;:::-;;:::i;1501:865::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4060:867::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;5703:904::-;;;;;;:::i;:::-;;:::i;10482:1394::-;;;;;;:::i;:::-;;:::i;4934:762::-;;;;;;:::i;:::-;;:::i;2513:894::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6614:959::-;;;;;;:::i;:::-;;:::i;7580:1062::-;;;;;;:::i;:::-;;:::i;11882:1000::-;12145:7;12169:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;12373:13:46;12404:10;12219:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12196:242;;;;;;12169:269;;12449:15;2252:131:48;;;;;;15430:34:66;15418:47;;15495:34;15490:2;15481:12;;15474:56;15560:34;15555:2;15546:12;;15539:56;-1:-1:-1;;;15620:2:66;15611:12;;15604:25;15654:2;15645:12;;15216:447;2252:131:48;;;;;;;;;;;;;2237:148;;;;;;12558:19:46;12595:9;12622:16;12685:9;12667:29;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12667:29:46;;;;;;;;;12656:42;;12667:29;12656:42;;;;12490:222;;;15927:25:66;;;;15968:18;;15961:34;;;;16011:18;;;16004:34;;;;16054:18;;;16047:34;16097:19;;;16090:35;;;;15899:19;;12490:222:46;;;;;;;;;;;;12467:255;;;;;;12449:273;;12733:16;12793;12811:7;12763:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12752:70;;;;;;12733:89;;12840:35;12853:8;12863:10;12840:11;:35::i;:::-;12833:42;11882:1000;-1:-1:-1;;;;;;;;;;11882:1000:46:o;8649:924::-;8874:7;8898:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;9102:13:46;9133:10;8948:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8925:242;;;;;;8898:269;;9178:15;1647:103:48;;;;;;16747:34:66;16735:47;;16812:34;16807:2;16798:12;;16791:56;-1:-1:-1;;;16872:2:66;16863:12;;16856:29;16910:2;16901:12;;16533:386;1647:103:48;;;;;;;;;;;;;1632:120;;;;;;9287:11:46;9345:12;9327:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;9316:45;;;;;;9379:10;9219:184;;;;;;;;;;17155:25:66;;;-1:-1:-1;;;;;17216:32:66;;;;17211:2;17196:18;;17189:60;17280:2;17265:18;;17258:34;17323:2;17308:18;;17301:34;17142:3;17127:19;;16924:417;9219:184:46;;;;;;;;;;;;;9196:217;;;;;;9178:235;;9424:16;9484;9502:7;9454:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9443:70;;;;;;9424:89;;9531:35;9544:8;9554:10;9531:11;:35::i;:::-;9524:42;8649:924;-1:-1:-1;;;;;;;;;8649:924:46:o;452:692::-;584:7;617:10;:17;638:2;617:23;608:58;;;;-1:-1:-1;;;608:58:46;;17548:2:66;608:58:46;;;17530:21:66;17587:2;17567:18;;;17560:30;-1:-1:-1;;;17606:18:66;;;17599:50;17666:18;;608:58:46;;;;;;;;;856:2;839:21;;;832:30;939:2;922:21;;;915:30;1060:2;1043:21;;;1036:30;1095:42;;677:13;1095:42;;;;;;;;;17922:25:66;;;1027:41:46;;17963:18:66;;;17956:45;;;18017:18;;18010:34;;;18060:18;;;18053:34;;;832:30:46;;1095:42;;17894:19:66;;1095:42:46;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1095:42:46;;-1:-1:-1;;1095:42:46;;;452:692;-1:-1:-1;;;;;;;452:692:46:o;9580:895::-;9777:7;9801:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;10005:13:46;10036:10;9851:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9828:242;;;;;;9801:269;;10081:15;1811:78:48;;;;;;18312:34:66;18300:47;;-1:-1:-1;;;18372:2:66;18363:12;;18356:36;18417:2;18408:12;;18098:328;1811:78:48;;;;;;;;;;;;;1796:95;;;;;;10219:5:46;10201:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;10190:38;;;;;;10275:12;10257:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10257:32:46;;;;;;;;;10246:45;;10257:32;10246:45;;;;10122:183;;;18633:25:66;;;;18674:18;;18667:34;;;;18717:18;;;18710:34;;;;18606:18;;10122:183:46;;;;;;;;;;;;10099:216;;;;;;10081:234;;10326:16;10386;10404:7;10356:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10345:70;;;;;;10326:89;;10433:35;10446:8;10456:10;10433:11;:35::i;:::-;10426:42;9580:895;-1:-1:-1;;;;;;;;9580:895:46:o;1501:865::-;1840:31;;-1:-1:-1;;;1840:31:46;;-1:-1:-1;;;;;2415:32:66;;;1840:31:46;;;2397:51:66;1653:18:46;;1685:12;;;;;;1803:10;;1685:12;;1840:16;;;;;2370:18:66;;1840:31:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1826:45;-1:-1:-1;1891:8:46;1882:43;;;;-1:-1:-1;;;1882:43:46;;19146:2:66;1882:43:46;;;19128:21:66;19185:2;19165:18;;;19158:30;-1:-1:-1;;;19204:18:66;;;19197:49;19263:18;;1882:43:46;18944:343:66;1882:43:46;1936:24;;:::i;:::-;2122:22;;-1:-1:-1;;;2122:22:46;;;;;19438:25:66;;;-1:-1:-1;;;;;2122:15:46;;;;;19411:18:66;;2122:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2122:22:46;;;;;;;;;;;;:::i;:::-;1971:173;;2098:19;;;1971:173;;;2068:16;;;1971:173;;;2037:17;;;1971:173;;;;2009:14;;;1971:173;;;;-1:-1:-1;;;;;1971:173:46;;;;;2164:4;:24;2155:54;;;;-1:-1:-1;;;2155:54:46;;20900:2:66;2155:54:46;;;20882:21:66;20939:2;20919:18;;;20912:30;-1:-1:-1;;;20958:18:66;;;20951:43;21011:18;;2155:54:46;20698:337:66;2155:54:46;2241:14;;;;2269:17;;;;2300:16;;;;2330:19;;;;;2241:14;;2269:17;;-1:-1:-1;2300:16:46;;-1:-1:-1;2330:19:46;-1:-1:-1;1501:865:46;-1:-1:-1;;;;;1501:865:46:o;4060:867::-;4181:24;4219:30;4263:17;4294:14;4322:16;4352:19;4385:31;4430:23;4467:26;4518:15;4546:10;4518:40;;4589:6;-1:-1:-1;;;;;4589:17:46;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4589:19:46;;;;;;;;;;;;:::i;:::-;4622:6;-1:-1:-1;;;;;4622:29:46;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4667:6;-1:-1:-1;;;;;4667:19:46;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4702:6;-1:-1:-1;;;;;4702:16:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4734:6;-1:-1:-1;;;;;4734:15:46;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4765:6;-1:-1:-1;;;;;4765:18:46;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4799:6;-1:-1:-1;;;;;4799:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4845:6;-1:-1:-1;;;;;4845:22:46;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4883:6;-1:-1:-1;;;;;4883:25:46;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:351;;;;;;;;;;;;;;;;;;;4060:867;;;;;;;;;;;:::o;5703:904::-;5915:7;5939:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;6143:13:46;6174:10;5989:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5966:242;;;;;;5939:269;;6219:15;1140:93:48;;;;;;22035:34:66;22023:47;;22100:29;22095:2;22086:12;;22079:51;22155:2;22146:12;;21821:343;1140:93:48;;;;;;;;;;;;;1125:110;;;;;;6325:7:46;6350:8;6405:14;6387:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:34:46;;;;;;;;;6376:47;;6387:34;6376:47;;;;6260:177;;;22394:25:66;;;;22435:18;;22428:34;;;;22505:14;22498:22;22478:18;;;22471:50;22537:18;;;22530:34;;;;22366:19;;6260:177:46;22169:401:66;10482:1394:46;10904:7;10928:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;11132:13:46;11163:8;10978:207;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10955:240;;;;;;10928:267;;11206:15;1949:242:48;;;;;;22789:34:66;22777:47;;22854:34;22849:2;22840:12;;22833:56;22919:34;22914:2;22905:12;;22898:56;22984:34;22979:2;22970:12;;22963:56;23050:34;23044:3;23035:13;;23028:57;23116:34;23110:3;23101:13;;23094:57;-1:-1:-1;;;23176:3:66;23167:13;;23160:41;23226:3;23217:13;;22575:661;1949:242:48;;;;;;;;;;;;;1934:259;;;;;;11343:10:46;11325:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11325:30:46;;;;;;;;;11314:43;;11325:30;11314:43;;;;11247:459;;;23628:25:66;;;;23669:18;;23662:34;;;;23739:14;;23732:22;23712:18;;;23705:50;23798:14;;23791:22;23771:18;;;23764:50;23830:19;;;23823:35;;;23874:19;;;23867:35;;;23918:19;;;23911:35;;;23962:19;;;23955:35;;;-1:-1:-1;;;;;24065:15:66;;;24044:19;;;24037:44;24118:15;;24097:19;;;24090:44;23600:19;;11247:459:46;;;;;;;;;;;;11224:492;;;;;;11206:510;;11727:16;11787;11805:7;11757:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11746:70;;;;;;11727:89;;11834:35;11847:8;11857:10;11834:11;:35::i;:::-;11827:42;10482:1394;-1:-1:-1;;;;;;;;;;;;;;;10482:1394:46:o;4934:762::-;5090:7;5114:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;5318:13:46;5349:10;5164:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5141:242;;;;;;5114:269;;5394:15;1021:61:48;;;;;;24359:29:66;24347:42;;24414:2;24405:12;;24145:278;1021:61:48;;;;;;;-1:-1:-1;;1021:61:48;;;;;;1006:78;;1021:61;1006:78;;;;5435:91:46;;;24596:25:66;24664:14;;24657:22;24637:18;;;24630:50;5435:91:46;;;;;;;;;24569:18:66;;;5435:91:46;;;5412:124;;;;;;-1:-1:-1;;;5577:57:46;;5607:16;;5412:124;;5577:57;;;:::i;:::-;;;;;;;;;;;;;5566:70;;;;;;5547:89;;5654:35;5667:8;5677:10;5654:11;:35::i;:::-;5647:42;4934:762;-1:-1:-1;;;;;;;4934:762:46:o;2513:894::-;2632:25;2682:15;2710:10;2682:40;;2733:16;2752:6;-1:-1:-1;;;;;2752:15:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:37;;2780:22;2805:6;-1:-1:-1;;;;;2805:24:46;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2780:51;;2841:26;2886:8;-1:-1:-1;;;;;2870:26:46;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2841:55:46;-1:-1:-1;2907:13:46;2955:1;2936:439;2965:14;2959:3;:20;2936:439;;;3004:24;;:::i;:::-;3210:22;;-1:-1:-1;;;3210:22:46;;;;;19438:25:66;;;-1:-1:-1;;;;;3210:15:46;;;;;19411:18:66;;3210:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3210:22:46;;;;;;;;;;;;:::i;:::-;3043:189;;3186:19;;;3043:189;;;3152:16;;;3043:189;;;3117:17;;;3043:189;;;;3085:14;;;3043:189;;;;-1:-1:-1;;;;;3043:189:46;;;;;3251:4;:24;3247:118;;;3316:9;3295;3306:5;3295:18;;;;;;;;:::i;:::-;;;;;;:30;;;;3343:7;;;;;:::i;:::-;;;;3247:118;-1:-1:-1;2982:5:46;;;;:::i;:::-;;;;2936:439;;;-1:-1:-1;3391:9:46;;2513:894;-1:-1:-1;;;;;;2513:894:46:o;6614:959::-;6843:7;6867:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;7071:13:46;7102:10;6917:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6894:242;;;;;;6867:269;;7147:15;1295:100:48;;;;;;25274:34:66;25262:47;;25339:34;25334:2;25325:12;;25318:56;-1:-1:-1;;;25399:2:66;25390:12;;25383:26;25434:2;25425:12;;25060:383;1295:100:48;;;;;;;;;;;;;1280:117;;;;;;7286:8:46;7268:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;7257:41;;;;;;7316:8;7371:14;7353:34;;;;;;;;:::i;7580:1062::-;7859:7;7883:24;846:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;846:116:48;;;;;;;;;831:133;;846:116;831:133;;;;761:19;;;;;;;;-1:-1:-1;;;761:19:48;;;;743:39;;831:133;;-1:-1:-1;;;;;;;;;;;661:20:48;743:39;;;;:::i;:::-;;;;;;;;;;;;;728:56;;;;;;8087:13:46;8118:10;7933:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7910:242;;;;;;7883:269;;8163:15;1456:130:48;;;;;;26616:34:66;26604:47;;26681:34;26676:2;26667:12;;26660:56;26746:34;26741:2;26732:12;;26725:56;26806:2;26797:12;;26402:413;1456:130:48;;;;;;;;;;;;;1441:147;;;;;;8272:11:46;8330:5;8312:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;8301:38;;;;;;8386:12;8368:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8368:32:46;;;;;;;;;8357:45;;8368:32;8357:45;;;;8204:268;;;27101:25:66;;;;-1:-1:-1;;;;;27162:32:66;;;27142:18;;;27135:60;;;;27211:18;;;27204:34;27254:18;;;27247:34;;;;27325:14;;27318:22;27297:19;;;27290:51;27357:19;;;27350:35;;;27073:19;;8204:268:46;;;;;;;;;;;;8181:301;;;;;;8163:319;;8493:16;8553;8571:7;8523:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8512:70;;;;;;8493:89;;8600:35;8613:8;8623:10;8600:11;:35::i;:::-;8593:42;7580:1062;-1:-1:-1;;;;;;;;;;;7580:1062:46:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:66:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:66;247:40;;-1:-1:-1;;;;;302:34:66;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:66:o;426:187::-;475:4;-1:-1:-1;;;;;500:6:66;497:30;494:56;;;530:18;;:::i;:::-;-1:-1:-1;596:2:66;575:15;-1:-1:-1;;571:29:66;602:4;567:40;;426:187::o;618:464::-;661:5;714:3;707:4;699:6;695:17;691:27;681:55;;732:1;729;722:12;681:55;768:6;755:20;799:49;815:32;844:2;815:32;:::i;:::-;799:49;:::i;:::-;873:2;864:7;857:19;919:3;912:4;907:2;899:6;895:15;891:26;888:35;885:55;;;936:1;933;926:12;885:55;1001:2;994:4;986:6;982:17;975:4;966:7;962:18;949:55;1049:1;1024:16;;;1042:4;1020:27;1013:38;;;;1028:7;618:464;-1:-1:-1;;;618:464:66:o;1087:131::-;-1:-1:-1;;;;;1162:31:66;;1152:42;;1142:70;;1208:1;1205;1198:12;1142:70;1087:131;:::o;1223:134::-;1291:20;;1320:31;1291:20;1320:31;:::i;:::-;1223:134;;;:::o;1362:884::-;1485:6;1493;1501;1509;1517;1525;1578:3;1566:9;1557:7;1553:23;1549:33;1546:53;;;1595:1;1592;1585:12;1546:53;1631:9;1618:23;1608:33;;1688:2;1677:9;1673:18;1660:32;1650:42;;1739:2;1728:9;1724:18;1711:32;1701:42;;1794:2;1783:9;1779:18;1766:32;-1:-1:-1;;;;;1858:2:66;1850:6;1847:14;1844:34;;;1874:1;1871;1864:12;1844:34;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1997:3;1986:9;1982:19;1969:33;1956:46;;2011:31;2036:5;2011:31;:::i;:::-;2061:5;;-1:-1:-1;2119:3:66;2104:19;;2091:33;;2136:16;;;2133:36;;;2165:1;2162;2155:12;2133:36;;2188:52;2232:7;2221:8;2210:9;2206:24;2188:52;:::i;:::-;2178:62;;;1362:884;;;;;;;;:::o;2459:888::-;2573:6;2581;2589;2597;2605;2658:3;2646:9;2637:7;2633:23;2629:33;2626:53;;;2675:1;2672;2665:12;2626:53;2714:9;2701:23;2733:31;2758:5;2733:31;:::i;:::-;2783:5;-1:-1:-1;2839:2:66;2824:18;;2811:32;-1:-1:-1;;;;;2892:14:66;;;2889:34;;;2919:1;2916;2909:12;2889:34;2942:50;2984:7;2975:6;2964:9;2960:22;2942:50;:::i;:::-;2932:60;;3039:2;3028:9;3024:18;3011:32;3001:42;;3095:2;3084:9;3080:18;3067:32;3052:47;;3108:33;3133:7;3108:33;:::i;:::-;3160:7;;-1:-1:-1;3220:3:66;3205:19;;3192:33;;3237:16;;;3234:36;;;3266:1;3263;3256:12;3234:36;;3289:52;3333:7;3322:8;3311:9;3307:24;3289:52;:::i;:::-;3279:62;;;2459:888;;;;;;;;:::o;3352:389::-;3429:6;3437;3490:2;3478:9;3469:7;3465:23;3461:32;3458:52;;;3506:1;3503;3496:12;3458:52;3542:9;3529:23;3519:33;;3603:2;3592:9;3588:18;3575:32;-1:-1:-1;;;;;3622:6:66;3619:30;3616:50;;;3662:1;3659;3652:12;3616:50;3685;3727:7;3718:6;3707:9;3703:22;3685:50;:::i;:::-;3675:60;;;3352:389;;;;;:::o;3746:878::-;3861:6;3869;3877;3885;3938:3;3926:9;3917:7;3913:23;3909:33;3906:53;;;3955:1;3952;3945:12;3906:53;3995:9;3982:23;-1:-1:-1;;;;;4065:2:66;4057:6;4054:14;4051:34;;;4081:1;4078;4071:12;4051:34;4104:50;4146:7;4137:6;4126:9;4122:22;4104:50;:::i;:::-;4094:60;;4207:2;4196:9;4192:18;4179:32;4163:48;;4236:2;4226:8;4223:16;4220:36;;;4252:1;4249;4242:12;4220:36;4275:52;4319:7;4308:8;4297:9;4293:24;4275:52;:::i;:::-;4265:62;;4377:2;4366:9;4362:18;4349:32;4336:45;;4390:31;4415:5;4390:31;:::i;:::-;4440:5;;-1:-1:-1;4498:2:66;4483:18;;4470:32;;4514:16;;;4511:36;;;4543:1;4540;4533:12;4511:36;;4566:52;4610:7;4599:8;4588:9;4584:24;4566:52;:::i;:::-;4556:62;;;3746:878;;;;;;;:::o;4629:388::-;4697:6;4705;4758:2;4746:9;4737:7;4733:23;4729:32;4726:52;;;4774:1;4771;4764:12;4726:52;4813:9;4800:23;4832:31;4857:5;4832:31;:::i;:::-;4882:5;-1:-1:-1;4939:2:66;4924:18;;4911:32;4952:33;4911:32;4952:33;:::i;:::-;5004:7;4994:17;;;4629:388;;;;;:::o;5022:258::-;5094:1;5104:113;5118:6;5115:1;5112:13;5104:113;;;5194:11;;;5188:18;5175:11;;;5168:39;5140:2;5133:10;5104:113;;;5235:6;5232:1;5229:13;5226:48;;;5270:1;5261:6;5256:3;5252:16;5245:27;5226:48;;5022:258;;;:::o;5285:::-;5327:3;5365:5;5359:12;5392:6;5387:3;5380:19;5408:63;5464:6;5457:4;5452:3;5448:14;5441:4;5434:5;5430:16;5408:63;:::i;:::-;5525:2;5504:15;-1:-1:-1;;5500:29:66;5491:39;;;;5532:4;5487:50;;5285:258;-1:-1:-1;;5285:258:66:o;5548:455::-;5769:3;5758:9;5751:22;5732:4;5790:46;5831:3;5820:9;5816:19;5808:6;5790:46;:::i;:::-;5867:2;5852:18;;5845:34;;;;-1:-1:-1;5922:14:66;;5915:22;5910:2;5895:18;;5888:50;5981:14;5974:22;5969:2;5954:18;;;5947:50;5782:54;5548:455;-1:-1:-1;5548:455:66:o;6008:247::-;6067:6;6120:2;6108:9;6099:7;6095:23;6091:32;6088:52;;;6136:1;6133;6126:12;6088:52;6175:9;6162:23;6194:31;6219:5;6194:31;:::i;:::-;6244:5;6008:247;-1:-1:-1;;;6008:247:66:o;6260:835::-;6584:4;6613:3;6643:2;6632:9;6625:21;6663:45;6704:2;6693:9;6689:18;6681:6;6663:45;:::i;:::-;6739:2;6724:18;;6717:34;;;;-1:-1:-1;;6794:14:66;;6787:22;6782:2;6767:18;;6760:50;6853:14;;6846:22;6841:2;6826:18;;6819:50;6900:3;6885:19;;6878:35;;;;6944:3;6929:19;;6922:35;;;;6988:3;6973:19;;6966:35;7032:3;7017:19;;7010:35;7076:3;7061:19;;;7054:35;6655:53;6260:835;-1:-1:-1;6260:835:66:o;7100:118::-;7186:5;7179:13;7172:21;7165:5;7162:32;7152:60;;7208:1;7205;7198:12;7223:128;7288:20;;7317:28;7288:20;7317:28;:::i;7356:882::-;7467:6;7475;7483;7491;7499;7552:3;7540:9;7531:7;7527:23;7523:33;7520:53;;;7569:1;7566;7559:12;7520:53;7605:9;7592:23;7582:33;;7665:2;7654:9;7650:18;7637:32;7678:28;7700:5;7678:28;:::i;:::-;7725:5;-1:-1:-1;7781:2:66;7766:18;;7753:32;-1:-1:-1;;;;;7834:14:66;;;7831:34;;;7861:1;7858;7851:12;7831:34;7884:50;7926:7;7917:6;7906:9;7902:22;7884:50;:::i;:::-;7874:60;;7986:2;7975:9;7971:18;7958:32;7943:47;;7999:33;8024:7;7999:33;:::i;8243:1162::-;8405:6;8413;8421;8429;8437;8445;8453;8461;8469;8477;8485:7;8539:3;8527:9;8518:7;8514:23;8510:33;8507:53;;;8556:1;8553;8546:12;8507:53;-1:-1:-1;;;;;8637:2:66;8625:9;8612:23;8609:31;8606:51;;;8653:1;8650;8643:12;8606:51;8676:67;8735:7;8722:9;8709:23;8698:9;8694:39;8676:67;:::i;:::-;8666:77;;8762:35;8793:2;8782:9;8778:18;8762:35;:::i;:::-;8752:45;;8816:35;8847:2;8836:9;8832:18;8816:35;:::i;:::-;8806:45;;8898:2;8887:9;8883:18;8870:32;8860:42;;8949:3;8938:9;8934:19;8921:33;8911:43;;9001:3;8990:9;8986:19;8973:33;8963:43;;9053:3;9042:9;9038:19;9025:33;9015:43;;9077:39;9111:3;9100:9;9096:19;9077:39;:::i;:::-;9067:49;;9135:39;9169:3;9158:9;9154:19;9135:39;:::i;:::-;9125:49;;9193:39;9227:3;9216:9;9212:19;9193:39;:::i;:::-;9183:49;;9282:2;9275:3;9264:9;9260:19;9247:33;9244:41;9241:61;;;9298:1;9295;9288:12;9241:61;;9322:77;9391:7;9383:3;9372:9;9368:19;9355:33;9344:9;9340:49;9322:77;:::i;:::-;9311:88;;8243:1162;;;;;;;;;;;;;;:::o;9410:591::-;9493:6;9501;9509;9562:2;9550:9;9541:7;9537:23;9533:32;9530:52;;;9578:1;9575;9568:12;9530:52;9617:9;9604:23;9636:28;9658:5;9636:28;:::i;:::-;9683:5;-1:-1:-1;9740:2:66;9725:18;;9712:32;9753:33;9712:32;9753:33;:::i;:::-;9805:7;-1:-1:-1;9863:2:66;9848:18;;9835:32;-1:-1:-1;;;;;9879:30:66;;9876:50;;;9922:1;9919;9912:12;9876:50;9945;9987:7;9978:6;9967:9;9963:22;9945:50;:::i;:::-;9935:60;;;9410:591;;;;;:::o;10006:1367::-;10198:4;10227:2;10267;10256:9;10252:18;10297:2;10286:9;10279:21;10320:6;10355;10349:13;10386:6;10378;10371:22;10412:2;10402:12;;10445:2;10434:9;10430:18;10423:25;;10507:2;10497:6;10494:1;10490:14;10479:9;10475:30;10471:39;10545:2;10537:6;10533:15;10566:1;10576:768;10590:6;10587:1;10584:13;10576:768;;;10655:22;;;-1:-1:-1;;10651:36:66;10639:49;;10711:13;;10783:9;;-1:-1:-1;;;;;10779:35:66;10764:51;;10854:11;;;10848:18;10747:4;10886:15;;;10879:27;;;10747:4;10933:48;10965:15;;;10848:18;10933:48;:::i;:::-;11024:11;;;11018:18;11001:15;;;10994:43;11060:4;11121:11;;;11115:18;11108:26;11101:34;11084:15;;;11077:59;11159:4;11220:11;;;11214:18;11207:26;11200:34;11183:15;;;;11176:59;;;;-1:-1:-1;;11322:12:66;;;;11287:15;;;;10612:1;10605:9;10576:768;;;-1:-1:-1;11361:6:66;;10006:1367;-1:-1:-1;;;;;;;;10006:1367:66:o;11378:1491::-;11514:6;11522;11530;11538;11546;11599:3;11587:9;11578:7;11574:23;11570:33;11567:53;;;11616:1;11613;11606:12;11567:53;11656:9;11643:23;-1:-1:-1;;;;;11726:2:66;11718:6;11715:14;11712:34;;;11742:1;11739;11732:12;11712:34;11780:6;11769:9;11765:22;11755:32;;11825:7;11818:4;11814:2;11810:13;11806:27;11796:55;;11847:1;11844;11837:12;11796:55;11883:2;11870:16;11905:4;11928:2;11924;11921:10;11918:36;;;11934:18;;:::i;:::-;11980:2;11977:1;11973:10;12003:28;12027:2;12023;12019:11;12003:28;:::i;:::-;12065:15;;;12135:11;;;12131:20;;;12096:12;;;;12163:19;;;12160:39;;;12195:1;12192;12185:12;12160:39;12219:11;;;;12239:142;12255:6;12250:3;12247:15;12239:142;;;12321:17;;12309:30;;12272:12;;;;12359;;;;12239:142;;;12400:5;-1:-1:-1;12424:35:66;;-1:-1:-1;;12440:18:66;;;12424:35;:::i;:::-;12414:45;;;;12512:2;12501:9;12497:18;12484:32;12468:48;;12541:2;12531:8;12528:16;12525:36;;;12557:1;12554;12547:12;12525:36;12580:52;12624:7;12613:8;12602:9;12598:24;12580:52;:::i;:::-;12570:62;;12651:38;12685:2;12674:9;12670:18;12651:38;:::i;:::-;12641:48;;12742:3;12731:9;12727:19;12714:33;12698:49;;12772:2;12762:8;12759:16;12756:36;;;12788:1;12785;12778:12;12874:1158;13013:6;13021;13029;13037;13045;13053;13061;13114:3;13102:9;13093:7;13089:23;13085:33;13082:53;;;13131:1;13128;13121:12;13082:53;13170:9;13157:23;13189:31;13214:5;13189:31;:::i;:::-;13239:5;-1:-1:-1;13295:2:66;13280:18;;13267:32;-1:-1:-1;;;;;13348:14:66;;;13345:34;;;13375:1;13372;13365:12;13345:34;13398:50;13440:7;13431:6;13420:9;13416:22;13398:50;:::i;:::-;13388:60;;13501:2;13490:9;13486:18;13473:32;13457:48;;13530:2;13520:8;13517:16;13514:36;;;13546:1;13543;13536:12;13514:36;13569:52;13613:7;13602:8;13591:9;13587:24;13569:52;:::i;:::-;13559:62;;13673:2;13662:9;13658:18;13645:32;13630:47;;13686:30;13708:7;13686:30;:::i;:::-;13735:7;13725:17;;13789:3;13778:9;13774:19;13761:33;13751:43;;13813:39;13847:3;13836:9;13832:19;13813:39;:::i;:::-;13803:49;;13905:3;13894:9;13890:19;13877:33;13861:49;;13935:2;13925:8;13922:16;13919:36;;;13951:1;13948;13941:12;13919:36;;13974:52;14018:7;14007:8;13996:9;13992:24;13974:52;:::i;:::-;13964:62;;;12874:1158;;;;;;;;;;:::o;14037:399::-;14251:34;14239:47;;14316:34;14311:2;14302:12;;14295:56;-1:-1:-1;;;14376:2:66;14367:12;;14360:42;14427:2;14418:12;;14037:399::o;14441:276::-;14572:3;14610:6;14604:13;14626:53;14672:6;14667:3;14660:4;14652:6;14648:17;14626:53;:::i;:::-;14695:16;;;;;14441:276;-1:-1:-1;;14441:276:66:o;14722:489::-;14981:25;;;15037:2;15022:18;;15015:34;;;;15080:2;15065:18;;15058:34;;;;15123:2;15108:18;;15101:34;-1:-1:-1;;;;;15172:32:66;15166:3;15151:19;;15144:61;14968:3;14953:19;;14722:489::o;16136:392::-;-1:-1:-1;;;16394:27:66;;16446:1;16437:11;;16430:27;;;;16482:2;16473:12;;16466:28;16519:2;16510:12;;16136:392::o;18755:184::-;18825:6;18878:2;18866:9;18857:7;18853:23;18849:32;18846:52;;;18894:1;18891;18884:12;18846:52;-1:-1:-1;18917:16:66;;18755:184;-1:-1:-1;18755:184:66:o;19474:430::-;19528:5;19581:3;19574:4;19566:6;19562:17;19558:27;19548:55;;19599:1;19596;19589:12;19548:55;19628:6;19622:13;19659:49;19675:32;19704:2;19675:32;:::i;19659:49::-;19733:2;19724:7;19717:19;19779:3;19772:4;19767:2;19759:6;19755:15;19751:26;19748:35;19745:55;;;19796:1;19793;19786:12;19745:55;19809:64;19870:2;19863:4;19854:7;19850:18;19843:4;19835:6;19831:17;19809:64;:::i;:::-;19891:7;19474:430;-1:-1:-1;;;;19474:430:66:o;19909:784::-;20019:6;20027;20035;20043;20051;20104:3;20092:9;20083:7;20079:23;20075:33;20072:53;;;20121:1;20118;20111:12;20072:53;20153:9;20147:16;20172:31;20197:5;20172:31;:::i;:::-;20271:2;20256:18;;20250:25;20222:5;;-1:-1:-1;;;;;;20287:30:66;;20284:50;;;20330:1;20327;20320:12;20284:50;20353:61;20406:7;20397:6;20386:9;20382:22;20353:61;:::i;:::-;20343:71;;;20454:2;20443:9;20439:18;20433:25;20423:35;;20503:2;20492:9;20488:18;20482:25;20516:30;20538:7;20516:30;:::i;:::-;20617:3;20602:19;;20596:26;20565:7;;-1:-1:-1;20631:30:66;20596:26;20631:30;:::i;:::-;20680:7;20670:17;;;19909:784;;;;;;;;:::o;21040:337::-;21120:6;21173:2;21161:9;21152:7;21148:23;21144:32;21141:52;;;21189:1;21186;21179:12;21141:52;21222:9;21216:16;-1:-1:-1;;;;;21247:6:66;21244:30;21241:50;;;21287:1;21284;21277:12;21241:50;21310:61;21363:7;21354:6;21343:9;21339:22;21310:61;:::i;21571:245::-;21638:6;21691:2;21679:9;21670:7;21666:23;21662:32;21659:52;;;21707:1;21704;21697:12;21659:52;21739:9;21733:16;21758:28;21780:5;21758:28;:::i;24691:127::-;24752:10;24747:3;24743:20;24740:1;24733:31;24783:4;24780:1;24773:15;24807:4;24804:1;24797:15;24823:232;24862:3;-1:-1:-1;;24883:17:66;;24880:140;;;24942:10;24937:3;24933:20;24930:1;24923:31;24977:4;24974:1;24967:15;25005:4;25002:1;24995:15;24880:140;-1:-1:-1;25047:1:66;25036:13;;24823:232::o;25448:543::-;25666:13;;25609:3;;25640;;25719:4;25746:15;;;25609:3;25789:175;25803:6;25800:1;25797:13;25789:175;;;25866:13;;25852:28;;25902:14;;;;25939:15;;;;25825:1;25818:9;25789:175;;;-1:-1:-1;25980:5:66;;25448:543;-1:-1:-1;;;;;;25448:543:66:o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagers`",
          "govRuleMaxManagers": "Max of managers that CLH can accept (only for COMMITTEE )",
          "govRuleMaxUsers": "Max of all users (including managers)",
          "houseOpen": "True if is Open",
          "housePrivate": "True if is private",
          "numManagers": "Current managers of a CLH",
          "numUsers": "Current users of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all users address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrUsers": "array with list of users"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isUser": "true if is User",
          "name": "Nickname ot other user identificaction"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    223,
    12884
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AB062A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x8B4BCCCA EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x9F6FD7AB EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xF0B00C9F EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF240C7E9 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDAFF036 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x349DC296 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x7B3BB156 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0x145 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH2 0xCC PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD8 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xCC PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1531 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x206F JUMP JUMPDEST PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FE SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x24A SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x276 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x319 SWAP1 PUSH32 0x7374724F434E65774C6F636B2875696E743235362065787069726174696F6E44 DUP2 MSTORE PUSH32 0x75726174696F6E2C75696E74323536206B657950726963652C75696E74323536 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x206D61784E756D6265724F664B6579732C737472696E67206C6F636B4E616D65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x61 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AD SWAP3 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x3CF DUP2 DUP7 PUSH2 0x5B5 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3EF SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x43B SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x467 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E8 SWAP1 PUSH32 0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179 PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0x54696D6529 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x559 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x586 SWAP3 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x5A8 DUP2 DUP7 PUSH2 0x5B5 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68B SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x6D7 SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x703 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x765 SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x810 SWAP3 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x832 DUP2 DUP7 PUSH2 0x5B5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3FE463 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70FF918C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x892 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x8FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x903 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x970 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x226C JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B9903737BA1030903AB9B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA7C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x22EE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADE SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F2E1339 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x2322 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC04 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE68777D7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1343E9A5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE810A58E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8C SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBE SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xE0A SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE36 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEA9 SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF20 SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xF6C SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF98 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10BC SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x652C616464726573732077686974654C6973744E46542C616464726573732077 PUSH1 0xA0 DUP3 ADD MSTORE PUSH16 0x686974654C69737457616C6C65747329 PUSH1 0x80 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP14 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP13 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH2 0x120 DUP4 ADD MSTORE DUP8 AND PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x117F SWAP3 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x11A1 DUP2 DUP7 PUSH2 0x5B5 JUMP JUMPDEST SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C6 SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x1212 SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x123E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x128B SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000 DUP2 MSTORE PUSH1 0x1B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE DUP9 ISZERO ISZERO DUP4 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x12D8 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x12FA DUP2 DUP7 PUSH2 0x5B5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA693649A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13F2 JUMPI PUSH2 0x13F2 PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x142B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1418 PUSH2 0x18A8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1410 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1525 JUMPI PUSH2 0x1443 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1488 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x226C JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0x1512 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x14F8 JUMPI PUSH2 0x14F8 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x150E SWAP1 PUSH2 0x2355 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x151D DUP2 PUSH2 0x2355 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1433 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1543 SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x158F SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15BB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1639 SWAP1 PUSH32 0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C DUP2 MSTORE PUSH32 0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x6E29 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1660 SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x169A SWAP1 PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x16E6 SWAP3 ADD PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1712 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17AB SWAP1 PUSH32 0x7374724F434E65775573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17D3 SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1877 SWAP3 SWAP2 SWAP1 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1899 DUP2 DUP7 PUSH2 0x5B5 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1922 PUSH2 0x18E4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1943 PUSH2 0x18E4 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1975 PUSH2 0x1970 DUP3 PUSH2 0x192A JUMP JUMPDEST PUSH2 0x18FA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x198A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x19CA DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x19E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A20 DUP11 DUP4 DUP12 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1A32 DUP3 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1A48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A55 DUP10 DUP3 DUP11 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1A85 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AAD DUP10 DUP4 DUP11 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1AC6 DUP3 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE9 DUP9 DUP3 DUP10 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B32 DUP6 DUP3 DUP7 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B75 DUP9 DUP4 DUP10 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B97 DUP9 DUP4 DUP10 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1BA9 DUP3 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1BBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BCC DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1BF6 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C06 DUP2 PUSH2 0x19A7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C2C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C14 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C3B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C59 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C80 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CBB DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x1CD6 DUP2 DUP5 ADD DUP14 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP SWAP7 ISZERO ISZERO PUSH1 0x40 DUP9 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x19CA DUP2 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1D59 DUP2 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D81 DUP10 DUP4 DUP11 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1AC6 DUP3 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP14 CALLDATALOAD GT ISZERO PUSH2 0x1DCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DD8 DUP15 DUP15 CALLDATALOAD DUP16 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP12 POP PUSH2 0x1DE6 PUSH1 0x20 DUP15 ADD PUSH2 0x1D24 JUMP JUMPDEST SWAP11 POP PUSH2 0x1DF4 PUSH1 0x40 DUP15 ADD PUSH2 0x1D24 JUMP JUMPDEST SWAP10 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP9 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP6 POP PUSH2 0x1E1E PUSH1 0xE0 DUP15 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP5 POP PUSH2 0x1E2D PUSH2 0x100 DUP15 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP4 POP PUSH2 0x1E3C PUSH2 0x120 DUP15 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x140 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x1E50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E62 DUP14 PUSH2 0x140 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E94 DUP2 PUSH2 0x1D16 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1EA4 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ECB DUP7 DUP3 DUP8 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F6B JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1F35 DUP3 DUP8 ADD DUP3 PUSH2 0x1C41 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1EFC JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1FA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FD0 PUSH2 0x18E4 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1FDF DUP3 DUP3 ADD PUSH2 0x18FA JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP14 DUP6 GT ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 DUP4 ADD SWAP6 JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x2017 JUMPI DUP7 CALLDATALOAD DUP3 MSTORE SWAP6 DUP4 ADD SWAP6 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1FFE JUMP JUMPDEST SWAP11 POP PUSH2 0x2027 SWAP2 POP POP DUP11 DUP3 ADD PUSH2 0x1D24 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x203F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204B DUP10 DUP4 DUP11 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP5 POP PUSH2 0x2059 PUSH1 0x60 DUP10 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x208A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2095 DUP2 PUSH2 0x19A7 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x20B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20BD DUP12 DUP4 DUP13 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20DF DUP12 DUP4 DUP13 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x20F1 DUP3 PUSH2 0x1D16 JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x2107 PUSH1 0xA0 DUP12 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x211D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212A DUP11 DUP3 DUP12 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x21B5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1C11 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x223E PUSH2 0x1970 DUP3 PUSH2 0x192A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2264 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1C11 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x228F DUP2 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x22AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B7 DUP9 DUP3 DUP10 ADD PUSH2 0x221F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x22CF DUP2 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x22E0 DUP2 PUSH2 0x1D16 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2264 DUP5 DUP3 DUP6 ADD PUSH2 0x221F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1CBB DUP2 PUSH2 0x1D16 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2377 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23A8 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x238C JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C875A2646970667358221220 SWAP6 ADDRESS PUSH23 0x2479707F441BEEBAD2AA5EB8B00C4E33ADE9A62E9731B6 0xB5 CODECOPY DUP5 0xB7 0xB9 PUSH19 0x64736F6C634300080C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "6": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "REVERT",
      "path": "46"
    },
    "16": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "17": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "POP",
      "path": "46"
    },
    "18": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "21": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "LT",
      "path": "46"
    },
    "22": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "26": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "29": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "SHR",
      "path": "46"
    },
    "32": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "33": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "38": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "GT",
      "path": "46"
    },
    "39": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "43": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "44": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "49": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "50": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16D"
    },
    "53": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "54": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "55": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x8B4BCCCA"
    },
    "60": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "61": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x180"
    },
    "64": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "65": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "66": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9F6FD7AB"
    },
    "71": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "72": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x193"
    },
    "75": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "76": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "77": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB698BE8D"
    },
    "82": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "83": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A6"
    },
    "86": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "87": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "88": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF0B00C9F"
    },
    "93": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "94": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C6"
    },
    "97": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "98": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "99": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF240C7E9"
    },
    "104": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "105": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D9"
    },
    "108": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "109": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "112": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "REVERT",
      "path": "46"
    },
    "113": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "114": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "115": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xDAFF036"
    },
    "120": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "121": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "125": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "126": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x349DC296"
    },
    "131": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "132": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE9"
    },
    "135": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "136": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "137": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x622ECA77"
    },
    "142": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "143": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFC"
    },
    "146": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "147": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "148": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7B3BB156"
    },
    "153": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "154": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10F"
    },
    "157": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "158": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "159": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x86ABD826"
    },
    "164": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "165": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x122"
    },
    "168": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "169": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "170": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x8750BC3E"
    },
    "175": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "EQ",
      "path": "46"
    },
    "176": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x145"
    },
    "179": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "180": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "181": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "DUP1",
      "path": "46"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        223,
        12884
      ],
      "op": "REVERT",
      "path": "46"
    },
    "185": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "186": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "189": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC7"
    },
    "192": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "193": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "195": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19CF"
    },
    "198": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMP",
      "path": "46"
    },
    "199": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "200": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1EC"
    },
    "203": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMP",
      "path": "46"
    },
    "204": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "205": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "207": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "op": "SUB"
    },
    "216": {
      "op": "SWAP1"
    },
    "217": {
      "op": "SWAP2"
    },
    "218": {
      "op": "AND"
    },
    "219": {
      "op": "DUP2"
    },
    "220": {
      "op": "MSTORE"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "223": {
      "op": "ADD"
    },
    "224": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "225": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "227": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "228": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "DUP1",
      "path": "46"
    },
    "229": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "230": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "SUB",
      "path": "46"
    },
    "231": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "232": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "RETURN",
      "path": "46"
    },
    "233": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "234": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "237": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF7"
    },
    "240": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "241": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "243": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A62"
    },
    "246": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "247": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "248": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3DD"
    },
    "251": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "252": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "253": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "256": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10A"
    },
    "259": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "260": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "262": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1AF6"
    },
    "265": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "266": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "267": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "270": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "271": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "272": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "275": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11D"
    },
    "278": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "279": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "281": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B3C"
    },
    "284": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "285": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "286": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x679"
    },
    "289": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "290": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "291": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x135"
    },
    "294": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x130"
    },
    "297": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "298": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "300": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BD8"
    },
    "303": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "304": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "305": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x83E"
    },
    "308": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "309": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "310": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "312": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "313": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE0"
    },
    "316": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "317": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "318": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "319": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "320": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "321": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C6D"
    },
    "324": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x158"
    },
    "329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x153"
    },
    "332": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "333": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "335": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C9E"
    },
    "338": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "339": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "340": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA03"
    },
    "343": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "344": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "345": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "347": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "348": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE0"
    },
    "351": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "352": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "353": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "354": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "355": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "356": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "357": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "358": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "359": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "360": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "361": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CC2"
    },
    "364": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "365": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "366": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "369": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17B"
    },
    "372": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "373": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "375": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D2F"
    },
    "378": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "379": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "380": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xDAC"
    },
    "383": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "384": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "385": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "388": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18E"
    },
    "391": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "392": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "394": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D93"
    },
    "397": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMP",
      "path": "46"
    },
    "398": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "399": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF0E"
    },
    "402": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMP",
      "path": "46"
    },
    "403": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "404": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "407": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A1"
    },
    "410": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "411": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "413": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1E74"
    },
    "416": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "417": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "418": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11B4"
    },
    "421": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "422": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "423": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B9"
    },
    "426": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B4"
    },
    "429": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "430": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "432": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C9E"
    },
    "435": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "436": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "437": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1305"
    },
    "440": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "441": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "442": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "444": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "445": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE0"
    },
    "448": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "449": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "450": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1ED5"
    },
    "453": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "454": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "455": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "458": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D4"
    },
    "461": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "462": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "464": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F79"
    },
    "467": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "468": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "469": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1531"
    },
    "472": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "473": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "474": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC"
    },
    "477": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1E7"
    },
    "480": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "481": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "483": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x206F"
    },
    "486": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "487": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "488": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1688"
    },
    "491": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "492": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "493": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12145,
        12152
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "495": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12169,
        12193
      ],
      "op": "DUP1",
      "path": "46"
    },
    "496": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "498": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "499": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "501": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "502": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1FE"
    },
    "505": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "506": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "509": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "510": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "511": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "513": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "514": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "517": {
      "op": "NOT"
    },
    "518": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "519": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "520": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "521": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "522": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "523": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "524": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "525": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "526": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "527": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "528": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "529": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "531": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "532": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "533": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "534": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "535": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "536": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "537": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "538": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "539": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "540": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "542": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "543": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "544": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "550": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "552": {
      "op": "SHL"
    },
    "553": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "554": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "555": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "556": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "557": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "558": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "559": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "560": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "563": {
      "op": "DUP1"
    },
    "564": {
      "op": "MLOAD"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "567": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "570": {
      "op": "DUP4"
    },
    "571": {
      "op": "CODECOPY"
    },
    "572": {
      "op": "DUP2"
    },
    "573": {
      "op": "MLOAD"
    },
    "574": {
      "op": "SWAP2"
    },
    "575": {
      "op": "MSTORE"
    },
    "576": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "577": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x24A"
    },
    "580": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "581": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "582": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "585": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "586": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "587": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "589": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "590": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "592": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "593": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "594": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "595": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "596": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "597": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "598": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "599": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "601": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "602": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "603": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "604": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "605": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "607": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "608": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "609": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12373,
        12386
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "610": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12404,
        12414
      ],
      "op": "DUP8",
      "path": "46"
    },
    "611": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "613": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "614": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "616": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "ADD",
      "path": "46"
    },
    "617": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x276"
    },
    "620": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "621": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "622": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "623": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "624": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "625": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "626": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "629": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12219,
        12428
      ],
      "op": "JUMP",
      "path": "46"
    },
    "630": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "631": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "633": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "634": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "636": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "DUP2",
      "path": "46"
    },
    "637": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "DUP4",
      "path": "46"
    },
    "638": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SUB",
      "path": "46"
    },
    "639": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SUB",
      "path": "46"
    },
    "640": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "DUP2",
      "path": "46"
    },
    "641": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "642": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "643": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "645": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12219,
        12428
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "646": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12196,
        12438
      ],
      "op": "DUP1",
      "path": "46"
    },
    "647": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12196,
        12438
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "648": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12196,
        12438
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "649": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12196,
        12438
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "651": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12196,
        12438
      ],
      "op": "ADD",
      "path": "46"
    },
    "652": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12196,
        12438
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "653": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12169,
        12438
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "654": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12169,
        12438
      ],
      "op": "POP",
      "path": "46"
    },
    "655": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12449,
        12464
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "657": {
      "offset": [
        2252,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "659": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "660": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "662": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "ADD",
      "path": "48"
    },
    "663": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x319"
    },
    "666": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "667": {
      "op": "PUSH32",
      "value": "0x7374724F434E65774C6F636B2875696E743235362065787069726174696F6E44"
    },
    "700": {
      "op": "DUP2"
    },
    "701": {
      "op": "MSTORE"
    },
    "702": {
      "op": "PUSH32",
      "value": "0x75726174696F6E2C75696E74323536206B657950726963652C75696E74323536"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "737": {
      "op": "DUP3"
    },
    "738": {
      "op": "ADD"
    },
    "739": {
      "op": "MSTORE"
    },
    "740": {
      "op": "PUSH32",
      "value": "0x206D61784E756D6265724F664B6579732C737472696E67206C6F636B4E616D65"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "775": {
      "op": "DUP3"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "op": "MSTORE"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "785": {
      "op": "DUP3"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "op": "MSTORE"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "790": {
      "op": "ADD"
    },
    "791": {
      "op": "SWAP1"
    },
    "792": {
      "op": "JUMP"
    },
    "793": {
      "offset": [
        2252,
        2383
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "794": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "796": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "797": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "799": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "DUP2",
      "path": "48"
    },
    "800": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "DUP4",
      "path": "48"
    },
    "801": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "SUB",
      "path": "48"
    },
    "802": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "SUB",
      "path": "48"
    },
    "803": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "DUP2",
      "path": "48"
    },
    "804": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "805": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "806": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "808": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2252,
        2383
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "809": {
      "offset": [
        2237,
        2385
      ],
      "op": "DUP1",
      "path": "48"
    },
    "810": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2237,
        2385
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "811": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2237,
        2385
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "812": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2237,
        2385
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "814": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2237,
        2385
      ],
      "op": "ADD",
      "path": "48"
    },
    "815": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2237,
        2385
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "816": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12558,
        12577
      ],
      "op": "DUP10",
      "path": "46"
    },
    "817": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12595,
        12604
      ],
      "op": "DUP10",
      "path": "46"
    },
    "818": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12622,
        12638
      ],
      "op": "DUP10",
      "path": "46"
    },
    "819": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12685,
        12694
      ],
      "op": "DUP10",
      "path": "46"
    },
    "820": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "822": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "823": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "825": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "ADD",
      "path": "46"
    },
    "826": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x343"
    },
    "829": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "830": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "831": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "834": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12667,
        12696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "835": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "836": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "838": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "DUP1",
      "path": "46"
    },
    "839": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "842": {
      "op": "NOT"
    },
    "843": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "DUP2",
      "path": "46"
    },
    "844": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "DUP5",
      "path": "46"
    },
    "845": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "SUB",
      "path": "46"
    },
    "846": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "ADD",
      "path": "46"
    },
    "847": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "DUP2",
      "path": "46"
    },
    "848": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "849": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "DUP3",
      "path": "46"
    },
    "850": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "DUP3",
      "path": "46"
    },
    "851": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "852": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12656,
        12698
      ],
      "op": "DUP1",
      "path": "46"
    },
    "853": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12656,
        12698
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "854": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12667,
        12696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "856": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12656,
        12698
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "857": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12656,
        12698
      ],
      "op": "DUP3",
      "path": "46"
    },
    "858": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12656,
        12698
      ],
      "op": "ADD",
      "path": "46"
    },
    "859": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12656,
        12698
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "860": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "861": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "DUP4",
      "path": "46"
    },
    "862": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "ADD",
      "path": "46"
    },
    "863": {
      "op": "SWAP7"
    },
    "864": {
      "op": "SWAP1"
    },
    "865": {
      "op": "SWAP7"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "DUP2"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "SWAP4"
    },
    "870": {
      "op": "SWAP1"
    },
    "871": {
      "op": "SWAP4"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "875": {
      "op": "DUP4"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "SWAP2"
    },
    "878": {
      "op": "SWAP1"
    },
    "879": {
      "op": "SWAP2"
    },
    "880": {
      "op": "MSTORE"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "883": {
      "op": "DUP3"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "op": "MSTORE"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "888": {
      "op": "DUP2"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "SWAP2"
    },
    "891": {
      "op": "SWAP1"
    },
    "892": {
      "op": "SWAP2"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "899": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "900": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "902": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "DUP2",
      "path": "46"
    },
    "903": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "DUP4",
      "path": "46"
    },
    "904": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "SUB",
      "path": "46"
    },
    "905": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "SUB",
      "path": "46"
    },
    "906": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "DUP2",
      "path": "46"
    },
    "907": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "908": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "909": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "911": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12490,
        12712
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "912": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12467,
        12722
      ],
      "op": "DUP1",
      "path": "46"
    },
    "913": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12467,
        12722
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "914": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12467,
        12722
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "915": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12467,
        12722
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "917": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12467,
        12722
      ],
      "op": "ADD",
      "path": "46"
    },
    "918": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12467,
        12722
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "919": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12449,
        12722
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "920": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12449,
        12722
      ],
      "op": "POP",
      "path": "46"
    },
    "921": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12733,
        12749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "923": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12793,
        12809
      ],
      "op": "DUP3",
      "path": "46"
    },
    "924": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12811,
        12818
      ],
      "op": "DUP3",
      "path": "46"
    },
    "925": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "927": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "928": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "930": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "ADD",
      "path": "46"
    },
    "931": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3AD"
    },
    "934": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "935": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "936": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "937": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21EB"
    },
    "940": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12763,
        12820
      ],
      "op": "JUMP",
      "path": "46"
    },
    "941": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "942": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "944": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "945": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "947": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "DUP2",
      "path": "46"
    },
    "948": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "DUP4",
      "path": "46"
    },
    "949": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "SUB",
      "path": "46"
    },
    "950": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "SUB",
      "path": "46"
    },
    "951": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "DUP2",
      "path": "46"
    },
    "952": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "953": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "954": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "956": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12763,
        12820
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "957": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12752,
        12822
      ],
      "op": "DUP1",
      "path": "46"
    },
    "958": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12752,
        12822
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "959": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12752,
        12822
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "960": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12752,
        12822
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "962": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12752,
        12822
      ],
      "op": "ADD",
      "path": "46"
    },
    "963": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12752,
        12822
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "964": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12733,
        12822
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "965": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12733,
        12822
      ],
      "op": "POP",
      "path": "46"
    },
    "966": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12840,
        12875
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 0,
      "value": "0x3CF"
    },
    "969": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12853,
        12861
      ],
      "op": "DUP2",
      "path": "46"
    },
    "970": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12863,
        12873
      ],
      "op": "DUP7",
      "path": "46"
    },
    "971": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12840,
        12851
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "974": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12840,
        12875
      ],
      "op": "JUMP",
      "path": "46"
    },
    "975": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12840,
        12875
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "976": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12833,
        12875
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "977": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        11882,
        12882
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "op": "POP"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "op": "POP"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "o",
      "offset": [
        11882,
        12882
      ],
      "op": "JUMP",
      "path": "46"
    },
    "989": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "990": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8874,
        8881
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "992": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        8922
      ],
      "op": "DUP1",
      "path": "46"
    },
    "993": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "995": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "996": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "998": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "999": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x3EF"
    },
    "1002": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1003": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "1006": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1007": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1008": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1010": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1011": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1014": {
      "op": "NOT"
    },
    "1015": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1016": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1017": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "1018": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "1019": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1020": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1021": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1022": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1023": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1024": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1025": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1026": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1028": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1029": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1030": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "1031": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1032": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1033": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1034": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "1035": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1036": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1037": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "1039": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1040": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1041": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1051": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1052": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "1053": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1054": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1055": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1056": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1057": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1060": {
      "op": "DUP1"
    },
    "1061": {
      "op": "MLOAD"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1064": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "1067": {
      "op": "DUP4"
    },
    "1068": {
      "op": "CODECOPY"
    },
    "1069": {
      "op": "DUP2"
    },
    "1070": {
      "op": "MLOAD"
    },
    "1071": {
      "op": "SWAP2"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1074": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x43B"
    },
    "1077": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1078": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "1079": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "1082": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1083": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1084": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1086": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1087": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1089": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1090": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1091": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "1092": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "1093": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1094": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1095": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1096": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1098": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1099": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1100": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1101": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1102": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1104": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "1105": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1106": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9102,
        9115
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "1107": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9133,
        9143
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1108": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1110": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1111": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1113": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "ADD",
      "path": "46"
    },
    "1114": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x467"
    },
    "1117": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1118": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1119": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1120": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1121": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1122": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1123": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "1126": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8948,
        9157
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1127": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1128": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1130": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1131": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1133": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1134": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1135": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SUB",
      "path": "46"
    },
    "1136": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SUB",
      "path": "46"
    },
    "1137": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1138": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1139": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1140": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1142": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1143": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1144": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1145": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1146": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1148": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "ADD",
      "path": "46"
    },
    "1149": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1150": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        9167
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1151": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        9167
      ],
      "op": "POP",
      "path": "46"
    },
    "1152": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9193
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1154": {
      "offset": [
        1647,
        1750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1156": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1157": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1159": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "ADD",
      "path": "48"
    },
    "1160": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4E8"
    },
    "1163": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1164": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH32",
      "value": "0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "PUSH5",
      "value": "0x54696D6529"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1248": {
      "op": "DUP3"
    },
    "1249": {
      "op": "ADD"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "1253": {
      "op": "ADD"
    },
    "1254": {
      "op": "SWAP1"
    },
    "1255": {
      "op": "JUMP"
    },
    "1256": {
      "offset": [
        1647,
        1750
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1257": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1259": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1260": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1262": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1263": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1264": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "SUB",
      "path": "48"
    },
    "1265": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "SUB",
      "path": "48"
    },
    "1266": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1267": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1268": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1269": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1271": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1647,
        1750
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1272": {
      "offset": [
        1632,
        1752
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1273": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1632,
        1752
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1274": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1632,
        1752
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1275": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1632,
        1752
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1277": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1632,
        1752
      ],
      "op": "ADD",
      "path": "48"
    },
    "1278": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1632,
        1752
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1279": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9287,
        9298
      ],
      "op": "DUP9",
      "path": "46"
    },
    "1280": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9345,
        9357
      ],
      "op": "DUP9",
      "path": "46"
    },
    "1281": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1283": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1284": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1286": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "ADD",
      "path": "46"
    },
    "1287": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x510"
    },
    "1290": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1291": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1292": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "1295": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9327,
        9359
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1296": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1297": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1299": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1300": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1302": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1303": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1304": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SUB",
      "path": "46"
    },
    "1305": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SUB",
      "path": "46"
    },
    "1306": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1307": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1308": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1309": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1311": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1312": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1313": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1314": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1315": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1317": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "ADD",
      "path": "46"
    },
    "1318": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1319": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9379,
        9389
      ],
      "op": "DUP9",
      "path": "46"
    },
    "1320": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1322": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1323": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1325": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "ADD",
      "path": "46"
    },
    "1326": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x559"
    },
    "1329": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1330": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1331": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1332": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1333": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1334": {
      "op": "SWAP4"
    },
    "1335": {
      "op": "DUP5"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "op": "SWAP3"
    },
    "1346": {
      "op": "SWAP1"
    },
    "1347": {
      "op": "SWAP3"
    },
    "1348": {
      "op": "AND"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1351": {
      "op": "DUP5"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1356": {
      "op": "DUP4"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1361": {
      "op": "DUP3"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "op": "SWAP1"
    },
    "1368": {
      "op": "JUMP"
    },
    "1369": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1370": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1372": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1373": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1375": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1376": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1377": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SUB",
      "path": "46"
    },
    "1378": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SUB",
      "path": "46"
    },
    "1379": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1380": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1381": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1382": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1384": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1385": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1386": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1387": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1388": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1390": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "ADD",
      "path": "46"
    },
    "1391": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1392": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1393": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9413
      ],
      "op": "POP",
      "path": "46"
    },
    "1394": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9440
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1396": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9484,
        9500
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1397": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9502,
        9509
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1398": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1400": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1401": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1403": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "ADD",
      "path": "46"
    },
    "1404": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x586"
    },
    "1407": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1408": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1409": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1410": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21EB"
    },
    "1413": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9454,
        9511
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1414": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1415": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1417": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1418": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1420": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1421": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1422": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SUB",
      "path": "46"
    },
    "1423": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SUB",
      "path": "46"
    },
    "1424": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1425": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1426": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1427": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1429": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1430": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1431": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1432": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1433": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1435": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "ADD",
      "path": "46"
    },
    "1436": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1437": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9513
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1438": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9513
      ],
      "op": "POP",
      "path": "46"
    },
    "1439": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9566
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 1,
      "value": "0x5A8"
    },
    "1442": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9544,
        9552
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1443": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9554,
        9564
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1444": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9542
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "1447": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9531,
        9566
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1448": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9566
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1449": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9524,
        9566
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "1450": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "POP"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "o",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1461": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1462": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        584,
        591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1464": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        627
      ],
      "op": "DUP2",
      "path": "46",
      "statement": 2
    },
    "1465": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1466": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        638,
        640
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x41"
    },
    "1468": {
      "branch": 18,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        640
      ],
      "op": "EQ",
      "path": "46"
    },
    "1469": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x604"
    },
    "1472": {
      "branch": 18,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1473": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1475": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1484": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1487": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1489": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1490": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "ADD",
      "path": "46"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1496": {
      "op": "DUP3"
    },
    "1497": {
      "op": "ADD"
    },
    "1498": {
      "op": "MSTORE"
    },
    "1499": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1530": {
      "op": "ADD"
    },
    "1531": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1532": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1534": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1535": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1536": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1537": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SUB",
      "path": "46"
    },
    "1538": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1539": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "46"
    },
    "1540": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1541": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        856,
        858
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1543": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1544": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1545": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "ADD",
      "path": "46"
    },
    "1546": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1547": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        939,
        941
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1549": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1550": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1551": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "ADD",
      "path": "46"
    },
    "1552": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        915,
        945
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1553": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1060,
        1062
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1555": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1556": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1557": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "ADD",
      "path": "46"
    },
    "1558": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1036,
        1066
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1559": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP4",
      "path": "46",
      "statement": 3
    },
    "1560": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1561": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        677,
        690
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1563": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1564": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1565": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1566": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1567": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1568": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "1569": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1570": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1571": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1572": {
      "op": "DUP11"
    },
    "1573": {
      "op": "SWAP1"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1576": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "BYTE",
      "path": "46"
    },
    "1577": {
      "op": "SWAP3"
    },
    "1578": {
      "op": "DUP6"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "DUP4"
    },
    "1581": {
      "op": "SWAP1"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "op": "DUP5"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "DUP4"
    },
    "1586": {
      "op": "SWAP1"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1590": {
      "op": "DUP5"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "SWAP1"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1596": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1597": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "1599": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1602": {
      "op": "ADD"
    },
    "1603": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1605": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1607": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1608": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1610": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1611": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1612": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1613": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1614": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1615": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1616": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1617": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1618": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "GAS",
      "path": "46"
    },
    "1619": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1620": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1621": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1622": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1623": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x664"
    },
    "1626": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1627": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1628": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1630": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1631": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1632": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1633": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1635": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1636": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1637": {
      "op": "POP"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1641": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1644": {
      "op": "NOT"
    },
    "1645": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "1646": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1647": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1648": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "op": "POP"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "o",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1657": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1658": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9777,
        9784
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1660": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        9825
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1661": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1663": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1664": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1666": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "1667": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x68B"
    },
    "1670": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1671": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "1674": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1675": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1676": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1678": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1679": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1682": {
      "op": "NOT"
    },
    "1683": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1684": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1685": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "1686": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "1687": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1688": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1689": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1690": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1691": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1692": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1693": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1694": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1696": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1697": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1698": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "1699": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1700": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1701": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1702": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "1703": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1704": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1705": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "1707": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1708": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1709": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1719": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1720": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "1721": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1722": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1723": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1724": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1725": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1728": {
      "op": "DUP1"
    },
    "1729": {
      "op": "MLOAD"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1732": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "1735": {
      "op": "DUP4"
    },
    "1736": {
      "op": "CODECOPY"
    },
    "1737": {
      "op": "DUP2"
    },
    "1738": {
      "op": "MLOAD"
    },
    "1739": {
      "op": "SWAP2"
    },
    "1740": {
      "op": "MSTORE"
    },
    "1741": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1742": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x6D7"
    },
    "1745": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1746": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "1747": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "1750": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1751": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1752": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1754": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1755": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1757": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1758": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1759": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "1760": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "1761": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1762": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1763": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1764": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1766": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1767": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1768": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1769": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1770": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1772": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "1773": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1774": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10005,
        10018
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "1775": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10036,
        10046
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1776": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1778": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1779": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1781": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "ADD",
      "path": "46"
    },
    "1782": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x703"
    },
    "1785": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1786": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1787": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1788": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1789": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1790": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1791": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "1794": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9851,
        10060
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1795": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1796": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1798": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1799": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1801": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1802": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1803": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SUB",
      "path": "46"
    },
    "1804": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SUB",
      "path": "46"
    },
    "1805": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1806": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1807": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1808": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1810": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1811": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1812": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1813": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1814": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1816": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "ADD",
      "path": "46"
    },
    "1817": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1818": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        10070
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1819": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        10070
      ],
      "op": "POP",
      "path": "46"
    },
    "1820": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10096
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1822": {
      "offset": [
        1811,
        1889
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1824": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1825": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1827": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "ADD",
      "path": "48"
    },
    "1828": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x765"
    },
    "1831": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1832": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "MSTORE"
    },
    "1867": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1885": {
      "op": "DUP3"
    },
    "1886": {
      "op": "ADD"
    },
    "1887": {
      "op": "MSTORE"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1890": {
      "op": "ADD"
    },
    "1891": {
      "op": "SWAP1"
    },
    "1892": {
      "op": "JUMP"
    },
    "1893": {
      "offset": [
        1811,
        1889
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1894": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1896": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1897": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1899": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1900": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1901": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "SUB",
      "path": "48"
    },
    "1902": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "SUB",
      "path": "48"
    },
    "1903": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1904": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1905": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1906": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1908": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1811,
        1889
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1909": {
      "offset": [
        1796,
        1891
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1910": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1796,
        1891
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1911": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1796,
        1891
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1912": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1796,
        1891
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1914": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1796,
        1891
      ],
      "op": "ADD",
      "path": "48"
    },
    "1915": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1796,
        1891
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1916": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10219,
        10224
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1917": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1919": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1920": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1922": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "ADD",
      "path": "46"
    },
    "1923": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x78C"
    },
    "1926": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1927": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1928": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "1931": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10201,
        10226
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1932": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1933": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1935": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1936": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1938": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1939": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1940": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SUB",
      "path": "46"
    },
    "1941": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SUB",
      "path": "46"
    },
    "1942": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1943": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1944": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1945": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1947": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1948": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1949": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1950": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1951": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1953": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "ADD",
      "path": "46"
    },
    "1954": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1955": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10275,
        10287
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1956": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1958": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1959": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1961": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "ADD",
      "path": "46"
    },
    "1962": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7B3"
    },
    "1965": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1966": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1967": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "1970": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10257,
        10289
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1971": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1972": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1974": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1975": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1978": {
      "op": "NOT"
    },
    "1979": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1980": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1981": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SUB",
      "path": "46"
    },
    "1982": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "ADD",
      "path": "46"
    },
    "1983": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1984": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1985": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1986": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1987": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1988": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1989": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1990": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1992": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1993": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1994": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "ADD",
      "path": "46"
    },
    "1995": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1996": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1997": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1998": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "ADD",
      "path": "46"
    },
    "1999": {
      "op": "SWAP5"
    },
    "2000": {
      "op": "SWAP1"
    },
    "2001": {
      "op": "SWAP5"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "DUP2"
    },
    "2004": {
      "op": "ADD"
    },
    "2005": {
      "op": "SWAP2"
    },
    "2006": {
      "op": "SWAP1"
    },
    "2007": {
      "op": "SWAP2"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2011": {
      "op": "DUP2"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "SWAP2"
    },
    "2014": {
      "op": "SWAP1"
    },
    "2015": {
      "op": "SWAP2"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2022": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2023": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2025": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2026": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2027": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SUB",
      "path": "46"
    },
    "2028": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SUB",
      "path": "46"
    },
    "2029": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2030": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2031": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2032": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2034": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2035": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2036": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2037": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2038": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2040": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "ADD",
      "path": "46"
    },
    "2041": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "2042": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10315
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2043": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10315
      ],
      "op": "POP",
      "path": "46"
    },
    "2044": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10342
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2046": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10386,
        10402
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2047": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10404,
        10411
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2048": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2050": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2051": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2053": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "ADD",
      "path": "46"
    },
    "2054": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x810"
    },
    "2057": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2058": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2059": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2060": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21EB"
    },
    "2063": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10356,
        10413
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2064": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2065": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2067": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2068": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2070": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2071": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2072": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SUB",
      "path": "46"
    },
    "2073": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SUB",
      "path": "46"
    },
    "2074": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2075": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2076": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2077": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2079": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2080": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2081": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2082": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2083": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2085": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "ADD",
      "path": "46"
    },
    "2086": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "2087": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10415
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2088": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10415
      ],
      "op": "POP",
      "path": "46"
    },
    "2089": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10468
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 4,
      "value": "0x832"
    },
    "2092": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10446,
        10454
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2093": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10456,
        10466
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2094": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10444
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "2097": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10433,
        10468
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2098": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10468
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2099": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10426,
        10468
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "2100": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "op": "POP"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "op": "POP"
    },
    "2108": {
      "op": "POP"
    },
    "2109": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "o",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2110": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2111": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2113": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2114": {
      "op": "PUSH4",
      "value": "0x1C3FE463"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2123": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "DUP2"
    },
    "2134": {
      "op": "AND"
    },
    "2135": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2137": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2138": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "2139": {
      "op": "MSTORE"
    },
    "2140": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "2142": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2143": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2145": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2146": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2147": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2148": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2149": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2150": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2151": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2152": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2153": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2154": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2155": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "AND",
      "path": "46"
    },
    "2156": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2157": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70FF918C"
    },
    "2162": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2168": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2170": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2171": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2172": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2173": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SUB",
      "path": "46"
    },
    "2174": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2175": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2176": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "GAS",
      "path": "46"
    },
    "2177": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2178": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2179": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2180": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2181": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x892"
    },
    "2184": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2185": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2186": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2188": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2189": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2190": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2191": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2193": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2194": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2195": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "2196": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "2197": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "2198": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "2199": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2201": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2202": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2203": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2205": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "NOT",
      "path": "46"
    },
    "2206": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2208": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2209": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "2210": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "AND",
      "path": "46"
    },
    "2211": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2212": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "2213": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2214": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2216": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2217": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "2218": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2219": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "2220": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2221": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8B6"
    },
    "2224": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2225": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2226": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "2229": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2230": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2231": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1826,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1891,
        1899
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 5
    },
    "2234": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8FB"
    },
    "2237": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2238": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2240": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2249": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2252": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2254": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2255": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "ADD",
      "path": "46"
    },
    "2256": {
      "op": "MSTORE"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2261": {
      "op": "DUP3"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2286": {
      "op": "SHL"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2289": {
      "op": "DUP3"
    },
    "2290": {
      "op": "ADD"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5FB"
    },
    "2298": {
      "op": "JUMP"
    },
    "2299": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2300": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x903"
    },
    "2303": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18A8"
    },
    "2306": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2307": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2308": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 6,
      "value": "0x40"
    },
    "2310": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2311": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2318": {
      "op": "SHL"
    },
    "2319": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2320": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2321": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2323": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2324": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "2325": {
      "op": "DUP4"
    },
    "2326": {
      "op": "SWAP1"
    },
    "2327": {
      "op": "MSTORE"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2337": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "AND",
      "path": "46"
    },
    "2338": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2339": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "2344": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2350": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2352": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2353": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2354": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2355": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SUB",
      "path": "46"
    },
    "2356": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2357": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2358": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "GAS",
      "path": "46"
    },
    "2359": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2360": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2361": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2362": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2363": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x948"
    },
    "2366": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2367": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2368": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2370": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2371": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2372": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2373": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2375": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2376": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2377": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "2378": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "2379": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "2380": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "2381": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2383": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2384": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2385": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2387": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2388": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2389": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2391": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2392": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2393": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2394": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2397": {
      "op": "NOT"
    },
    "2398": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "2399": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2400": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "2401": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2403": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2404": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x970"
    },
    "2407": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2408": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2409": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2410": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "2411": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2412": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x226C"
    },
    "2415": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2416": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2417": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2418": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2419": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2421": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2422": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "ADD",
      "path": "46"
    },
    "2423": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2424": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2425": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2426": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "2428": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2429": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "ADD",
      "path": "46"
    },
    "2430": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2431": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2432": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2433": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2435": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2436": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "ADD",
      "path": "46"
    },
    "2437": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2438": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2439": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2440": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2441": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2443": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2444": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "ADD",
      "path": "46"
    },
    "2445": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2446": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2447": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2448": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "op": "SUB"
    },
    "2457": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2458": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2459": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "2460": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2461": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2462": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2168
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 7,
      "value": "0x1"
    },
    "2464": {
      "branch": 20,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2188
      ],
      "op": "EQ",
      "path": "46"
    },
    "2465": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9DC"
    },
    "2468": {
      "branch": 20,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2469": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2471": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2480": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2483": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2485": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2486": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "ADD",
      "path": "46"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2492": {
      "op": "DUP3"
    },
    "2493": {
      "op": "ADD"
    },
    "2494": {
      "op": "MSTORE"
    },
    "2495": {
      "op": "PUSH13",
      "value": "0x24B9903737BA1030903AB9B2B9"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2511": {
      "op": "SHL"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2514": {
      "op": "DUP3"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5FB"
    },
    "2523": {
      "op": "JUMP"
    },
    "2524": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2525": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 8,
      "value": "0x20"
    },
    "2527": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2528": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "ADD",
      "path": "46"
    },
    "2529": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2530": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2532": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2533": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "ADD",
      "path": "46"
    },
    "2534": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2535": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "2537": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2538": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "ADD",
      "path": "46"
    },
    "2539": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2540": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2542": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2543": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2544": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "ADD",
      "path": "46"
    },
    "2545": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2546": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2547": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "2548": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2549": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2552": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "2555": {
      "op": "POP"
    },
    "2556": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2557": {
      "op": "POP"
    },
    "2558": {
      "op": "POP"
    },
    "2559": {
      "op": "POP"
    },
    "2560": {
      "op": "POP"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2563": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2564": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4181,
        4205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "2566": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4219,
        4249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2568": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4263,
        4280
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2569": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4294,
        4308
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2571": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4322,
        4338
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2572": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2574": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4385,
        4416
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2575": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4430,
        4453
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2577": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4467,
        4493
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2578": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4533
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2580": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4546,
        4556
      ],
      "op": "DUP11",
      "path": "46"
    },
    "2581": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2582": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "POP",
      "path": "46"
    },
    "2583": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4595
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 9
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "op": "SUB"
    },
    "2592": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "AND",
      "path": "46"
    },
    "2593": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x59CA2D03"
    },
    "2598": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2600": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2601": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2602": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2607": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "2608": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2610": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SHL",
      "path": "46"
    },
    "2611": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2612": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2613": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2615": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2616": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2618": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2620": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2621": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2622": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2623": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SUB",
      "path": "46"
    },
    "2624": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2625": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2626": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "GAS",
      "path": "46"
    },
    "2627": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2628": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2629": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2630": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2631": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA54"
    },
    "2634": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2635": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2636": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2638": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2639": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2640": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2641": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2643": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2644": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2645": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2646": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2647": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2648": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2649": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2651": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2652": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2653": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2655": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2656": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2657": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2659": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2660": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2661": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2662": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2665": {
      "op": "NOT"
    },
    "2666": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "2667": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2668": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2669": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2671": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2672": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA7C"
    },
    "2675": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2676": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2677": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2678": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2679": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2680": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x22EE"
    },
    "2683": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2684": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2685": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4628
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "AND",
      "path": "46"
    },
    "2695": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1D5FD3CA"
    },
    "2700": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2702": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2703": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2704": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2709": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2710": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2712": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SHL",
      "path": "46"
    },
    "2713": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2714": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2715": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2717": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2718": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2720": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2722": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2723": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2724": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2725": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SUB",
      "path": "46"
    },
    "2726": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2727": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2728": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "GAS",
      "path": "46"
    },
    "2729": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2730": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2731": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2732": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2733": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xABA"
    },
    "2736": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2737": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2738": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2740": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2741": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2742": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2743": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2745": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2746": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2747": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2748": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2749": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2750": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2751": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2753": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2754": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2755": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2757": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "NOT",
      "path": "46"
    },
    "2758": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2760": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2761": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2762": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2763": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2764": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2765": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2766": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2768": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2769": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2770": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2771": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2772": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2773": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xADE"
    },
    "2776": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2777": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2778": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "2781": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2782": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2783": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4673
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2790": {
      "op": "SHL"
    },
    "2791": {
      "op": "SUB"
    },
    "2792": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "AND",
      "path": "46"
    },
    "2793": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF00D6274"
    },
    "2798": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2800": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2801": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2802": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2807": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2808": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2810": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SHL",
      "path": "46"
    },
    "2811": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2812": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2813": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2815": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2816": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2818": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2820": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2821": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2822": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2823": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SUB",
      "path": "46"
    },
    "2824": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2825": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2826": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "GAS",
      "path": "46"
    },
    "2827": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2828": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2829": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2830": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2831": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB1C"
    },
    "2834": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2835": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2836": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2838": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2839": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2840": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2841": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2843": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2844": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2845": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2846": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2847": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2848": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2849": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2851": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2852": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2853": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2855": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "NOT",
      "path": "46"
    },
    "2856": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2858": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2859": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2860": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2861": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2862": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2863": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2864": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2866": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2867": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2868": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2869": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2870": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2871": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB40"
    },
    "2874": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2875": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2876": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2322"
    },
    "2879": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2880": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2881": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4708
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "op": "SUB"
    },
    "2890": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "AND",
      "path": "46"
    },
    "2891": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1F2E1339"
    },
    "2896": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2898": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2899": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2900": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2905": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2906": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2908": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SHL",
      "path": "46"
    },
    "2909": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2910": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2911": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2913": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2914": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2916": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2918": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2919": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2920": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2921": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SUB",
      "path": "46"
    },
    "2922": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2923": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2924": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "GAS",
      "path": "46"
    },
    "2925": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2926": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2927": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2928": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2929": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB7E"
    },
    "2932": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2933": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2934": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2936": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2937": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2938": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2939": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2941": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2942": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2943": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2944": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2945": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2946": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2947": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2949": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2950": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2951": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2953": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "NOT",
      "path": "46"
    },
    "2954": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2956": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2957": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2958": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2959": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2960": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2961": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2962": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2964": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2965": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2966": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2967": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2968": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2969": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xBA2"
    },
    "2972": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2973": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2974": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2322"
    },
    "2977": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2978": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2979": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4740
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2986": {
      "op": "SHL"
    },
    "2987": {
      "op": "SUB"
    },
    "2988": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "AND",
      "path": "46"
    },
    "2989": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "2994": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2996": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2997": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2998": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3003": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "3004": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3006": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SHL",
      "path": "46"
    },
    "3007": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3008": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3009": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3011": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "3012": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3014": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3016": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3017": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3018": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3019": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SUB",
      "path": "46"
    },
    "3020": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3021": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3022": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "GAS",
      "path": "46"
    },
    "3023": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3024": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3025": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3026": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3027": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xBE0"
    },
    "3030": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3031": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3032": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3034": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3035": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3036": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3037": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3039": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3040": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3041": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "3042": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "3043": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "3044": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "3045": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3047": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3048": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3049": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3051": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "NOT",
      "path": "46"
    },
    "3052": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3054": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3055": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "3056": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "3057": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3058": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "3059": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3060": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3062": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3063": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "3064": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3065": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "3066": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3067": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC04"
    },
    "3070": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3071": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3072": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "3075": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3076": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3077": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4771
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "op": "SUB"
    },
    "3086": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "AND",
      "path": "46"
    },
    "3087": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE68777D7"
    },
    "3092": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3094": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3095": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3096": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3101": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "3102": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3104": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SHL",
      "path": "46"
    },
    "3105": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3106": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3107": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3109": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "3110": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3112": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3114": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3115": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3116": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3117": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SUB",
      "path": "46"
    },
    "3118": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3119": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3120": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "GAS",
      "path": "46"
    },
    "3121": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3122": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3123": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3124": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3125": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC42"
    },
    "3128": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3129": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3130": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3132": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3133": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3134": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3135": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3137": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3138": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3139": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "3140": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "3141": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "3142": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "3143": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3145": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3146": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3147": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3149": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "NOT",
      "path": "46"
    },
    "3150": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3152": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3153": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "3154": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "3155": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3156": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "3157": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3158": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3160": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3161": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "3162": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3163": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "3164": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3165": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC66"
    },
    "3168": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3169": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3170": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "3173": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3174": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3175": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4805
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "op": "SUB"
    },
    "3184": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "AND",
      "path": "46"
    },
    "3185": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9C630A88"
    },
    "3190": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3192": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3193": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3194": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3199": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "3200": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3202": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SHL",
      "path": "46"
    },
    "3203": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3204": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3205": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3207": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3208": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3210": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3212": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3213": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3214": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3215": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SUB",
      "path": "46"
    },
    "3216": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3217": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3218": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "GAS",
      "path": "46"
    },
    "3219": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3220": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3221": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3222": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3223": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCA4"
    },
    "3226": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3227": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3228": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3230": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3231": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3232": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3233": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3235": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3236": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3237": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "3238": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "3239": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "3240": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "3241": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3243": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3244": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3245": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3247": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "NOT",
      "path": "46"
    },
    "3248": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3250": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3251": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3252": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "3253": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3254": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3255": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3256": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3258": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3259": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "3260": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3261": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3262": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3263": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC8"
    },
    "3266": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3267": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3268": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "3271": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3272": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3273": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4851
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3280": {
      "op": "SHL"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "AND",
      "path": "46"
    },
    "3283": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1343E9A5"
    },
    "3288": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3290": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3291": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3292": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3297": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "3298": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3300": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SHL",
      "path": "46"
    },
    "3301": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3305": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "3306": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3311": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3312": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SUB",
      "path": "46"
    },
    "3314": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3315": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3316": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "GAS",
      "path": "46"
    },
    "3317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3319": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3320": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3321": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD06"
    },
    "3324": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3328": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3330": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3331": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3333": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3334": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3335": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "3336": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "3337": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "3338": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "3339": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3341": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3342": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3343": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3345": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "NOT",
      "path": "46"
    },
    "3346": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3348": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3349": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "3350": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "3351": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3352": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "3353": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3354": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3356": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3357": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "3358": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3359": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "3360": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3361": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD2A"
    },
    "3364": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3365": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3366": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "3369": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3370": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3371": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4889
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3378": {
      "op": "SHL"
    },
    "3379": {
      "op": "SUB"
    },
    "3380": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "AND",
      "path": "46"
    },
    "3381": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE810A58E"
    },
    "3386": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3388": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3389": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3390": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3395": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "3396": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3398": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SHL",
      "path": "46"
    },
    "3399": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3400": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3401": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3403": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "3404": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3406": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3408": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3409": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3410": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3411": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SUB",
      "path": "46"
    },
    "3412": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3413": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3414": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "GAS",
      "path": "46"
    },
    "3415": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3416": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3417": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3418": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3419": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD68"
    },
    "3422": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3423": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3424": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3426": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3427": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3428": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3429": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3431": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3432": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3433": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "3434": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "3435": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "3436": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "3437": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3439": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3440": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3441": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3443": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "NOT",
      "path": "46"
    },
    "3444": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3446": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3447": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "3448": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "3449": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3450": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "3451": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3452": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3454": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3455": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "3456": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3457": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "3458": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3459": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD8C"
    },
    "3462": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3463": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3464": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "3467": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3468": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3469": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3470": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3471": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3472": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3473": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3474": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3475": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3476": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3477": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3478": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3479": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3480": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3481": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3482": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3483": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3484": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3485": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3486": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3487": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "3488": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3489": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3490": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3491": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "3492": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "3493": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3494": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3495": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3496": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "3497": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "3498": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "POP",
      "path": "46"
    },
    "3499": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "o",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3500": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3501": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5915,
        5922
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3503": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        5963
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3504": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3506": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3507": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3509": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "3510": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xDBE"
    },
    "3513": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3514": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "3517": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3518": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3519": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3521": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3522": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3525": {
      "op": "NOT"
    },
    "3526": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3527": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3528": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "3529": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "3530": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3531": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3532": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3533": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3534": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3535": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3536": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3537": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3539": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3540": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3541": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "3542": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3543": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3544": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3545": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "3546": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3547": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3548": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "3550": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3551": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3552": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3562": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3563": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "3564": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3565": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3566": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3567": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3568": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3571": {
      "op": "DUP1"
    },
    "3572": {
      "op": "MLOAD"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3575": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "3578": {
      "op": "DUP4"
    },
    "3579": {
      "op": "CODECOPY"
    },
    "3580": {
      "op": "DUP2"
    },
    "3581": {
      "op": "MLOAD"
    },
    "3582": {
      "op": "SWAP2"
    },
    "3583": {
      "op": "MSTORE"
    },
    "3584": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3585": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xE0A"
    },
    "3588": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3589": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "3590": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "3593": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3594": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3595": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3597": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3598": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3600": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3601": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3602": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "3603": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "3604": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3605": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3606": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3607": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3609": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3610": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3611": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3612": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3613": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3615": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "3616": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3617": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6143,
        6156
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "3618": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6174,
        6184
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3619": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3621": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3622": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3624": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3625": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE36"
    },
    "3628": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3629": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3630": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3631": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3632": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3633": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3634": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "3637": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3638": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3639": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3641": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3642": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3644": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3645": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3646": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "3647": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "3648": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3649": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3650": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3651": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3653": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3654": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3655": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3656": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3657": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3659": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "ADD",
      "path": "46"
    },
    "3660": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3661": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3662": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "POP",
      "path": "46"
    },
    "3663": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6219,
        6234
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3665": {
      "offset": [
        1140,
        1233
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3667": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3668": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3670": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "ADD",
      "path": "48"
    },
    "3671": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEA9"
    },
    "3674": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3675": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3708": {
      "op": "DUP2"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3745": {
      "op": "DUP3"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3750": {
      "op": "ADD"
    },
    "3751": {
      "op": "SWAP1"
    },
    "3752": {
      "op": "JUMP"
    },
    "3753": {
      "offset": [
        1140,
        1233
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3754": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3756": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3757": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3759": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3760": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3761": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "SUB",
      "path": "48"
    },
    "3762": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "SUB",
      "path": "48"
    },
    "3763": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3764": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3765": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3766": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3768": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1140,
        1233
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3769": {
      "offset": [
        1125,
        1235
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3770": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1125,
        1235
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3771": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1125,
        1235
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3772": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1125,
        1235
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3774": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1125,
        1235
      ],
      "op": "ADD",
      "path": "48"
    },
    "3775": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1125,
        1235
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3776": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6325,
        6332
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3777": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6350,
        6358
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3778": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6405,
        6419
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3779": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3781": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3782": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3784": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3785": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xED2"
    },
    "3788": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3789": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3790": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "3793": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3794": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3795": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3797": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3798": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3801": {
      "op": "NOT"
    },
    "3802": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3803": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3804": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SUB",
      "path": "46"
    },
    "3805": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3806": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3807": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3808": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3809": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3810": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3811": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3812": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3813": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3815": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3816": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3817": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "ADD",
      "path": "46"
    },
    "3818": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3819": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3820": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3821": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "ADD",
      "path": "46"
    },
    "3822": {
      "op": "SWAP6"
    },
    "3823": {
      "op": "SWAP1"
    },
    "3824": {
      "op": "SWAP6"
    },
    "3825": {
      "op": "MSTORE"
    },
    "3826": {
      "op": "DUP2"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "op": "SWAP3"
    },
    "3829": {
      "op": "SWAP1"
    },
    "3830": {
      "op": "SWAP3"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "ISZERO"
    },
    "3833": {
      "op": "ISZERO"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3836": {
      "op": "DUP3"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3841": {
      "op": "DUP2"
    },
    "3842": {
      "op": "ADD"
    },
    "3843": {
      "op": "SWAP2"
    },
    "3844": {
      "op": "SWAP1"
    },
    "3845": {
      "op": "SWAP2"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3849": {
      "op": "ADD"
    },
    "3850": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x559"
    },
    "3853": {
      "op": "JUMP"
    },
    "3854": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3855": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10904,
        10911
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3857": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10928,
        10952
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3858": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3860": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3861": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3863": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "3864": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xF20"
    },
    "3867": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3868": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "3871": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3872": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3873": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3875": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3876": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3879": {
      "op": "NOT"
    },
    "3880": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3881": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3882": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "3883": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "3884": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3885": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3886": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3887": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3888": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3889": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3890": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3891": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3893": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3894": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3895": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "3896": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3897": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3898": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3899": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "3900": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3901": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3902": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "3904": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3905": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3906": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3914": {
      "op": "SHL"
    },
    "3915": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3916": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3917": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "3918": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3919": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3920": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3921": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3922": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3925": {
      "op": "DUP1"
    },
    "3926": {
      "op": "MLOAD"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3929": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "3932": {
      "op": "DUP4"
    },
    "3933": {
      "op": "CODECOPY"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "MLOAD"
    },
    "3936": {
      "op": "SWAP2"
    },
    "3937": {
      "op": "MSTORE"
    },
    "3938": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3939": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xF6C"
    },
    "3942": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3943": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "3944": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "3947": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3948": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3949": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3951": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3952": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3954": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3955": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3956": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "3957": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "3958": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3959": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3960": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3961": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3963": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3964": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3965": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3966": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3967": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3969": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "3970": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3971": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11132,
        11145
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "3972": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11163,
        11171
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3973": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3975": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3976": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3978": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "ADD",
      "path": "46"
    },
    "3979": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF98"
    },
    "3982": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3983": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3984": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3985": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3986": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3987": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3988": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "3991": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10978,
        11185
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3992": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3993": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3995": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3996": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3998": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3999": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4000": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SUB",
      "path": "46"
    },
    "4001": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SUB",
      "path": "46"
    },
    "4002": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4003": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4004": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4005": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4007": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4008": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4009": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4010": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4011": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4013": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "ADD",
      "path": "46"
    },
    "4014": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4015": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10928,
        11195
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4016": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10928,
        11195
      ],
      "op": "POP",
      "path": "46"
    },
    "4017": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11206,
        11221
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4019": {
      "offset": [
        1949,
        2191
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4021": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4022": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4024": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "ADD",
      "path": "48"
    },
    "4025": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x10BC"
    },
    "4028": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4029": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "4062": {
      "op": "DUP2"
    },
    "4063": {
      "op": "MSTORE"
    },
    "4064": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4099": {
      "op": "DUP3"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH32",
      "value": "0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4137": {
      "op": "DUP3"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "MSTORE"
    },
    "4140": {
      "op": "PUSH32",
      "value": "0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4175": {
      "op": "DUP3"
    },
    "4176": {
      "op": "ADD"
    },
    "4177": {
      "op": "MSTORE"
    },
    "4178": {
      "op": "PUSH32",
      "value": "0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4213": {
      "op": "DUP3"
    },
    "4214": {
      "op": "ADD"
    },
    "4215": {
      "op": "MSTORE"
    },
    "4216": {
      "op": "PUSH32",
      "value": "0x652C616464726573732077686974654C6973744E46542C616464726573732077"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4251": {
      "op": "DUP3"
    },
    "4252": {
      "op": "ADD"
    },
    "4253": {
      "op": "MSTORE"
    },
    "4254": {
      "op": "PUSH16",
      "value": "0x686974654C69737457616C6C65747329"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4273": {
      "op": "SHL"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4276": {
      "op": "DUP3"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "MSTORE"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "op": "SWAP1"
    },
    "4283": {
      "op": "JUMP"
    },
    "4284": {
      "offset": [
        1949,
        2191
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4285": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4287": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4288": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4290": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4291": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4292": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "SUB",
      "path": "48"
    },
    "4293": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "SUB",
      "path": "48"
    },
    "4294": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4295": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4296": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4297": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4299": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1949,
        2191
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4300": {
      "offset": [
        1934,
        2193
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4301": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1934,
        2193
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4302": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1934,
        2193
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4303": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1934,
        2193
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4305": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1934,
        2193
      ],
      "op": "ADD",
      "path": "48"
    },
    "4306": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1934,
        2193
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4307": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11343,
        11353
      ],
      "op": "DUP15",
      "path": "46"
    },
    "4308": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4310": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4311": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4313": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "ADD",
      "path": "46"
    },
    "4314": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10E3"
    },
    "4317": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4318": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4319": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "4322": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11325,
        11355
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4323": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4324": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4326": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4327": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4330": {
      "op": "NOT"
    },
    "4331": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4332": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4333": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "SUB",
      "path": "46"
    },
    "4334": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "ADD",
      "path": "46"
    },
    "4335": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4336": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4337": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4338": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4339": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4340": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4341": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4342": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4344": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4345": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4346": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "ADD",
      "path": "46"
    },
    "4347": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4348": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4349": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4350": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "ADD",
      "path": "46"
    },
    "4351": {
      "op": "SWAP4"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "op": "SWAP4"
    },
    "4354": {
      "op": "MSTORE"
    },
    "4355": {
      "op": "DUP2"
    },
    "4356": {
      "op": "ADD"
    },
    "4357": {
      "op": "SWAP2"
    },
    "4358": {
      "op": "SWAP1"
    },
    "4359": {
      "op": "SWAP2"
    },
    "4360": {
      "op": "MSTORE"
    },
    "4361": {
      "op": "DUP14"
    },
    "4362": {
      "op": "ISZERO"
    },
    "4363": {
      "op": "ISZERO"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4366": {
      "op": "DUP3"
    },
    "4367": {
      "op": "ADD"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "op": "DUP13"
    },
    "4370": {
      "op": "ISZERO"
    },
    "4371": {
      "op": "ISZERO"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4374": {
      "op": "DUP3"
    },
    "4375": {
      "op": "ADD"
    },
    "4376": {
      "op": "MSTORE"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4379": {
      "op": "DUP2"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "DUP13"
    },
    "4382": {
      "op": "SWAP1"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4386": {
      "op": "DUP2"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "DUP12"
    },
    "4389": {
      "op": "SWAP1"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4393": {
      "op": "DUP2"
    },
    "4394": {
      "op": "ADD"
    },
    "4395": {
      "op": "DUP11"
    },
    "4396": {
      "op": "SWAP1"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4401": {
      "op": "DUP2"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "DUP10"
    },
    "4404": {
      "op": "SWAP1"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "op": "SUB"
    },
    "4414": {
      "op": "DUP1"
    },
    "4415": {
      "op": "DUP10"
    },
    "4416": {
      "op": "AND"
    },
    "4417": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4420": {
      "op": "DUP4"
    },
    "4421": {
      "op": "ADD"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "op": "DUP8"
    },
    "4424": {
      "op": "AND"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4428": {
      "op": "DUP3"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "MSTORE"
    },
    "4431": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4437": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4438": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4440": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4441": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4442": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SUB",
      "path": "46"
    },
    "4443": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SUB",
      "path": "46"
    },
    "4444": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4445": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4446": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4447": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4449": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4450": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4451": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4452": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4453": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4455": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "ADD",
      "path": "46"
    },
    "4456": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4457": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11206,
        11716
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4458": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11206,
        11716
      ],
      "op": "POP",
      "path": "46"
    },
    "4459": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11727,
        11743
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4461": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11787,
        11803
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4462": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11805,
        11812
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4463": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4465": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4466": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4468": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "ADD",
      "path": "46"
    },
    "4469": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x117F"
    },
    "4472": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4473": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4474": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4475": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21EB"
    },
    "4478": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11757,
        11814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4479": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4480": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4482": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4483": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4485": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4486": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4487": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SUB",
      "path": "46"
    },
    "4488": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SUB",
      "path": "46"
    },
    "4489": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4490": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4491": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4492": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4494": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4495": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4496": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4497": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4498": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4500": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "ADD",
      "path": "46"
    },
    "4501": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4502": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11727,
        11816
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4503": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11727,
        11816
      ],
      "op": "POP",
      "path": "46"
    },
    "4504": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11834,
        11869
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 10,
      "value": "0x11A1"
    },
    "4507": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11847,
        11855
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4508": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11857,
        11867
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4509": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11834,
        11845
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "4512": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11834,
        11869
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4513": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11834,
        11869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4514": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11827,
        11869
      ],
      "op": "SWAP16",
      "path": "46"
    },
    "4515": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "SWAP15",
      "path": "46"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "op": "POP"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "op": "POP"
    },
    "4522": {
      "op": "POP"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "op": "POP"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "op": "POP"
    },
    "4527": {
      "op": "POP"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4532": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4533": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5090,
        5097
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4535": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5138
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4536": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4538": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4539": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4541": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "4542": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x11C6"
    },
    "4545": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4546": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "4549": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4550": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4551": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4553": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4554": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4557": {
      "op": "NOT"
    },
    "4558": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4559": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4560": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "4561": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "4562": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4563": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4564": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4565": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4566": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4567": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4568": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4569": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4571": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4572": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4573": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "4574": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4575": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4576": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4577": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "4578": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4579": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4580": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4582": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4583": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4584": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4592": {
      "op": "SHL"
    },
    "4593": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4594": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4595": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "4596": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4597": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4598": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4599": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4600": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4603": {
      "op": "DUP1"
    },
    "4604": {
      "op": "MLOAD"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "4610": {
      "op": "DUP4"
    },
    "4611": {
      "op": "CODECOPY"
    },
    "4612": {
      "op": "DUP2"
    },
    "4613": {
      "op": "MLOAD"
    },
    "4614": {
      "op": "SWAP2"
    },
    "4615": {
      "op": "MSTORE"
    },
    "4616": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4617": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1212"
    },
    "4620": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4621": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "4622": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "4625": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4626": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4627": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4629": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4630": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4632": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4633": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4634": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "4635": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "4636": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4637": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4638": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4639": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4641": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4642": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4643": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4644": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4645": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4647": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "4648": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4649": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5318,
        5331
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "4650": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5349,
        5359
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4651": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4653": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4654": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4656": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "ADD",
      "path": "46"
    },
    "4657": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x123E"
    },
    "4660": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4661": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4662": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4663": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4664": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4665": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4666": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "4669": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4670": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4671": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4673": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4674": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4676": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4677": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4678": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "4679": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "4680": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4681": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4682": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4683": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4685": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4686": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4687": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4688": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4689": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4691": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "ADD",
      "path": "46"
    },
    "4692": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4693": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4694": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "POP",
      "path": "46"
    },
    "4695": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5394,
        5409
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4697": {
      "offset": [
        1021,
        1082
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4699": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4700": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4702": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "ADD",
      "path": "48"
    },
    "4703": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x128B"
    },
    "4706": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4707": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000"
    },
    "4740": {
      "op": "DUP2"
    },
    "4741": {
      "op": "MSTORE"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4744": {
      "op": "ADD"
    },
    "4745": {
      "op": "SWAP1"
    },
    "4746": {
      "op": "JUMP"
    },
    "4747": {
      "offset": [
        1021,
        1082
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4748": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4750": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4751": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4752": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4753": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4754": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "SUB",
      "path": "48"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4757": {
      "op": "NOT"
    },
    "4758": {
      "offset": [
        1021,
        1082
      ],
      "op": "ADD",
      "path": "48"
    },
    "4759": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4760": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4761": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4762": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4763": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1021,
        1082
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4764": {
      "offset": [
        1006,
        1084
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4765": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1006,
        1084
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4766": {
      "offset": [
        1021,
        1082
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4768": {
      "offset": [
        1006,
        1084
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4769": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1006,
        1084
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4770": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1006,
        1084
      ],
      "op": "ADD",
      "path": "48"
    },
    "4771": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        1006,
        1084
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4772": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4773": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4774": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "4775": {
      "op": "MSTORE"
    },
    "4776": {
      "op": "DUP9"
    },
    "4777": {
      "op": "ISZERO"
    },
    "4778": {
      "op": "ISZERO"
    },
    "4779": {
      "op": "DUP4"
    },
    "4780": {
      "op": "DUP4"
    },
    "4781": {
      "op": "ADD"
    },
    "4782": {
      "op": "MSTORE"
    },
    "4783": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4784": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4785": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4786": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4787": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SUB",
      "path": "46"
    },
    "4788": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4789": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "4790": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4791": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4794": {
      "op": "DUP5"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4797": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4798": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4799": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4800": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4801": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4802": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "ADD",
      "path": "46"
    },
    "4803": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4804": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4808": {
      "op": "SWAP1"
    },
    "4809": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12D8"
    },
    "4812": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4813": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4814": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4815": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4816": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4817": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "4819": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "ADD",
      "path": "46"
    },
    "4820": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21EB"
    },
    "4823": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4824": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4825": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4827": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4828": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4830": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4831": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4832": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "4833": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "4834": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4835": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4836": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4837": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4839": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4840": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4841": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4842": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4843": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4845": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "ADD",
      "path": "46"
    },
    "4846": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4847": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4848": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "POP",
      "path": "46"
    },
    "4849": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 11,
      "value": "0x12FA"
    },
    "4852": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5667,
        5675
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4853": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5677,
        5687
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4854": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "4857": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4858": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4859": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5647,
        5689
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "4860": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "4861": {
      "op": "POP"
    },
    "4862": {
      "op": "POP"
    },
    "4863": {
      "op": "POP"
    },
    "4864": {
      "op": "POP"
    },
    "4865": {
      "op": "POP"
    },
    "4866": {
      "op": "POP"
    },
    "4867": {
      "op": "POP"
    },
    "4868": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "o",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4869": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4870": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2632,
        2657
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "4872": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4874": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2710,
        2720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4875": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4876": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "POP",
      "path": "46"
    },
    "4877": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4879": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2758
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4886": {
      "op": "SHL"
    },
    "4887": {
      "op": "SUB"
    },
    "4888": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "AND",
      "path": "46"
    },
    "4889": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "4894": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4896": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4897": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4898": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4903": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "4904": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "4906": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SHL",
      "path": "46"
    },
    "4907": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4908": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4909": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4911": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4912": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4914": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4916": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4917": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4918": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4919": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SUB",
      "path": "46"
    },
    "4920": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4921": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4922": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "GAS",
      "path": "46"
    },
    "4923": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4924": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4925": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4926": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4927": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x134C"
    },
    "4930": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4931": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4932": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4934": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4935": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "4936": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4937": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4939": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "REVERT",
      "path": "46"
    },
    "4940": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4941": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4942": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4943": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4944": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4945": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4947": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4948": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4949": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4951": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "NOT",
      "path": "46"
    },
    "4952": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4954": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4955": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4956": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "4957": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4958": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4959": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4960": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4962": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4963": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4964": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4965": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4966": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4967": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1370"
    },
    "4970": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4971": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4972": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "4975": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4976": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4977": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4978": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4979": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2802
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4981": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2811
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4988": {
      "op": "SHL"
    },
    "4989": {
      "op": "SUB"
    },
    "4990": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "AND",
      "path": "46"
    },
    "4991": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA693649A"
    },
    "4996": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4998": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4999": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5000": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "5005": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "5006": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "5008": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SHL",
      "path": "46"
    },
    "5009": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5010": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5011": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5013": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "5014": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5016": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5018": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5019": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5020": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5021": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SUB",
      "path": "46"
    },
    "5022": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5023": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5024": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "GAS",
      "path": "46"
    },
    "5025": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "5026": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5027": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5028": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5029": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13B2"
    },
    "5032": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5033": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5034": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5036": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5037": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "5038": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5039": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5041": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "5042": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5043": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "5044": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "5045": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "5046": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "5047": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5049": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5050": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5051": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "5053": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "NOT",
      "path": "46"
    },
    "5054": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "5056": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5057": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "5058": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "5059": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5060": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "5061": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5062": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5064": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5065": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "5066": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5067": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "5068": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5069": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13D6"
    },
    "5072": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5073": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5074": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2206"
    },
    "5077": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5078": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5079": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5080": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "5081": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2867
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5083": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2886,
        2894
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5090": {
      "op": "SHL"
    },
    "5091": {
      "op": "SUB"
    },
    "5092": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5093": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "GT",
      "path": "46"
    },
    "5094": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5095": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13F2"
    },
    "5098": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5099": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13F2"
    },
    "5102": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18E4"
    },
    "5105": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5106": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5107": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5109": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5110": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5111": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5112": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5113": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5114": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5115": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5117": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MUL",
      "path": "46"
    },
    "5118": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5120": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "5121": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5122": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "5123": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5125": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5126": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5127": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5128": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x142B"
    },
    "5131": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5132": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5133": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5135": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "5136": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5137": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1418"
    },
    "5140": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18A8"
    },
    "5143": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5144": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5145": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5146": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5147": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5149": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "5150": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5151": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "5153": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5154": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SUB",
      "path": "46"
    },
    "5155": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5156": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5157": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1410"
    },
    "5160": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5161": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5162": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "POP",
      "path": "46"
    },
    "5163": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5164": {
      "op": "POP"
    },
    "5165": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5166": {
      "op": "POP"
    },
    "5167": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2907,
        2920
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5169": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2955,
        2956
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "5171": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5172": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2965,
        2979
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5173": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2962
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5174": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2979
      ],
      "op": "LT",
      "path": "46"
    },
    "5175": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5176": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1525"
    },
    "5179": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5180": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1443"
    },
    "5183": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18A8"
    },
    "5186": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5187": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5188": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 12,
      "value": "0x40"
    },
    "5190": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5191": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5198": {
      "op": "SHL"
    },
    "5199": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5200": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5201": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "5203": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5204": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "5205": {
      "op": "DUP4"
    },
    "5206": {
      "op": "SWAP1"
    },
    "5207": {
      "op": "MSTORE"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "op": "SUB"
    },
    "5216": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5217": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "AND",
      "path": "46"
    },
    "5218": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5219": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "5224": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5227": {
      "op": "ADD"
    },
    "5228": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5230": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5232": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5233": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5234": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5235": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SUB",
      "path": "46"
    },
    "5236": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5237": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5238": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "GAS",
      "path": "46"
    },
    "5239": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "5240": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5241": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5242": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5243": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1488"
    },
    "5246": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5247": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5248": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5250": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5251": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "5252": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5253": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5255": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "REVERT",
      "path": "46"
    },
    "5256": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5257": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "5258": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "5259": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "5260": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "5261": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5263": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5264": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5265": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5267": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5268": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "5269": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "5271": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "5272": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5273": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5274": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5277": {
      "op": "NOT"
    },
    "5278": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "5279": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5280": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "5281": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5283": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5284": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14B0"
    },
    "5287": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5288": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5289": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5290": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "5291": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5292": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x226C"
    },
    "5295": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5296": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5297": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5298": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5299": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "5301": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5302": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "ADD",
      "path": "46"
    },
    "5303": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5304": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5305": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5306": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "5308": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "DUP6",
      "path": "46"
    },
    "5309": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "ADD",
      "path": "46"
    },
    "5310": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5311": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5312": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5313": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5315": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "DUP6",
      "path": "46"
    },
    "5316": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "ADD",
      "path": "46"
    },
    "5317": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5318": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5319": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5320": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5321": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5323": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5324": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "ADD",
      "path": "46"
    },
    "5325": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5326": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5327": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5328": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5335": {
      "op": "SHL"
    },
    "5336": {
      "op": "SUB"
    },
    "5337": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5338": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5339": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "5340": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5341": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5342": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3255
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "5344": {
      "branch": 21,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3275
      ],
      "op": "EQ",
      "path": "46"
    },
    "5345": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "5346": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1512"
    },
    "5349": {
      "branch": 21,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5350": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3316,
        3325
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 13
    },
    "5351": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5352": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3306,
        3311
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5353": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5354": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5355": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5356": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "LT",
      "path": "46"
    },
    "5357": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14F8"
    },
    "5360": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "5361": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14F8"
    },
    "5364": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x233F"
    },
    "5367": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5368": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5369": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5371": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MUL",
      "path": "46"
    },
    "5372": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5374": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "5375": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "5376": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5377": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5378": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5379": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "POP",
      "path": "46"
    },
    "5380": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP3",
      "path": "46",
      "statement": 14
    },
    "5381": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5382": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x150E"
    },
    "5385": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5386": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2355"
    },
    "5389": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5390": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5391": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5392": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "5393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "5394": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 15
    },
    "5397": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x151D"
    },
    "5400": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5401": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2355"
    },
    "5404": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5405": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5406": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5407": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "5408": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "5409": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1433"
    },
    "5412": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5413": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5414": {
      "op": "POP"
    },
    "5415": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 16
    },
    "5416": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "5417": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "POP"
    },
    "5420": {
      "op": "POP"
    },
    "5421": {
      "op": "POP"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "o",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5425": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5426": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5428": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        6891
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5429": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5431": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5432": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5434": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "5435": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1543"
    },
    "5438": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5439": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "5442": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5443": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5444": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5446": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5447": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5450": {
      "op": "NOT"
    },
    "5451": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5452": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5453": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "5454": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "5455": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5456": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5457": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5458": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5459": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5460": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5461": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5462": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5464": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5465": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5466": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "5467": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5468": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5469": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5470": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "5471": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5472": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5473": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5475": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5476": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5477": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5487": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5488": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "5489": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5490": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5491": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5492": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5493": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5496": {
      "op": "DUP1"
    },
    "5497": {
      "op": "MLOAD"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5500": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "5503": {
      "op": "DUP4"
    },
    "5504": {
      "op": "CODECOPY"
    },
    "5505": {
      "op": "DUP2"
    },
    "5506": {
      "op": "MLOAD"
    },
    "5507": {
      "op": "SWAP2"
    },
    "5508": {
      "op": "MSTORE"
    },
    "5509": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5510": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x158F"
    },
    "5513": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5514": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "5515": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "5518": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5519": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5520": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5522": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5523": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5525": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5526": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5527": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "5528": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "5529": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5530": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5531": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5532": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5534": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5535": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5536": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5537": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5538": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5540": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "5541": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5542": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7071,
        7084
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "5543": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7102,
        7112
      ],
      "op": "DUP8",
      "path": "46"
    },
    "5544": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5546": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5547": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5549": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "ADD",
      "path": "46"
    },
    "5550": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15BB"
    },
    "5553": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "5554": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5555": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5556": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5557": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5558": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5559": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "5562": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6917,
        7126
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5563": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5564": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5566": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5567": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5569": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5570": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5571": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SUB",
      "path": "46"
    },
    "5572": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SUB",
      "path": "46"
    },
    "5573": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5574": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5575": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5576": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5578": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5579": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5580": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5581": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5582": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5584": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "ADD",
      "path": "46"
    },
    "5585": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5586": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        7136
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5587": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        7136
      ],
      "op": "POP",
      "path": "46"
    },
    "5588": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7147,
        7162
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5590": {
      "offset": [
        1295,
        1395
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5592": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5593": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5595": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "ADD",
      "path": "48"
    },
    "5596": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1639"
    },
    "5599": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5600": {
      "op": "PUSH32",
      "value": "0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C"
    },
    "5633": {
      "op": "DUP2"
    },
    "5634": {
      "op": "MSTORE"
    },
    "5635": {
      "op": "PUSH32",
      "value": "0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5670": {
      "op": "DUP3"
    },
    "5671": {
      "op": "ADD"
    },
    "5672": {
      "op": "MSTORE"
    },
    "5673": {
      "op": "PUSH2",
      "value": "0x6E29"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5678": {
      "op": "SHL"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5681": {
      "op": "DUP3"
    },
    "5682": {
      "op": "ADD"
    },
    "5683": {
      "op": "MSTORE"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "5686": {
      "op": "ADD"
    },
    "5687": {
      "op": "SWAP1"
    },
    "5688": {
      "op": "JUMP"
    },
    "5689": {
      "offset": [
        1295,
        1395
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5690": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5692": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5693": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5695": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5696": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5697": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "SUB",
      "path": "48"
    },
    "5698": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "SUB",
      "path": "48"
    },
    "5699": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5700": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5701": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5702": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5704": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1295,
        1395
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5705": {
      "offset": [
        1280,
        1397
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5706": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1280,
        1397
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5707": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1280,
        1397
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5708": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1280,
        1397
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5710": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1280,
        1397
      ],
      "op": "ADD",
      "path": "48"
    },
    "5711": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1280,
        1397
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5712": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7286,
        7294
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5713": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5715": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5716": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5718": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "ADD",
      "path": "46"
    },
    "5719": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1660"
    },
    "5722": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5723": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5724": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x237E"
    },
    "5727": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        7268,
        7296
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5728": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5729": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5731": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5732": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5734": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5735": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5736": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SUB",
      "path": "46"
    },
    "5737": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SUB",
      "path": "46"
    },
    "5738": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5739": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5740": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5741": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5743": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5744": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5745": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5746": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5747": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5749": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "ADD",
      "path": "46"
    },
    "5750": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5751": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7316,
        7324
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5752": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7371,
        7385
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5753": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5755": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5756": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5758": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "ADD",
      "path": "46"
    },
    "5759": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xED2"
    },
    "5762": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5763": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5764": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "5767": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        7353,
        7387
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5768": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5769": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7859,
        7866
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5771": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        7907
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5772": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5774": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5775": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5777": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "5778": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x169A"
    },
    "5781": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5782": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2139"
    },
    "5785": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        846,
        962
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5786": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5787": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5789": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5790": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5793": {
      "op": "NOT"
    },
    "5794": {
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5795": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5796": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "SUB",
      "path": "48"
    },
    "5797": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "ADD",
      "path": "48"
    },
    "5798": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5799": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5800": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5801": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5802": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        846,
        962
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5803": {
      "offset": [
        831,
        964
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5804": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        831,
        964
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5805": {
      "offset": [
        846,
        962
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5807": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5808": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        831,
        964
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5809": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        831,
        964
      ],
      "op": "ADD",
      "path": "48"
    },
    "5810": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        831,
        964
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5811": {
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5812": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5813": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "5814": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5815": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5816": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5818": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5819": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5820": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5828": {
      "op": "SHL"
    },
    "5829": {
      "offset": [
        761,
        780
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5830": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5831": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "ADD",
      "path": "48"
    },
    "5832": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        761,
        780
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5833": {
      "offset": [
        743,
        782
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5834": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5835": {
      "offset": [
        831,
        964
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5836": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        831,
        964
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5839": {
      "op": "DUP1"
    },
    "5840": {
      "op": "MLOAD"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5843": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "5846": {
      "op": "DUP4"
    },
    "5847": {
      "op": "CODECOPY"
    },
    "5848": {
      "op": "DUP2"
    },
    "5849": {
      "op": "MLOAD"
    },
    "5850": {
      "op": "SWAP2"
    },
    "5851": {
      "op": "MSTORE"
    },
    "5852": {
      "offset": [
        661,
        681
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5853": {
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x16E6"
    },
    "5856": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5857": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "ADD",
      "path": "48"
    },
    "5858": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x21A3"
    },
    "5861": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        743,
        782
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5862": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5863": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5865": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5866": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5868": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5869": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5870": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "5871": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "SUB",
      "path": "48"
    },
    "5872": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5873": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5874": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5875": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5877": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        743,
        782
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5878": {
      "offset": [
        728,
        784
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5879": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        728,
        784
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5880": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        728,
        784
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5881": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        728,
        784
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5883": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        728,
        784
      ],
      "op": "ADD",
      "path": "48"
    },
    "5884": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        728,
        784
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5885": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8087,
        8100
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "5886": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8118,
        8128
      ],
      "op": "DUP8",
      "path": "46"
    },
    "5887": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5889": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5890": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5892": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "ADD",
      "path": "46"
    },
    "5893": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1712"
    },
    "5896": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "5897": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5898": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5899": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5900": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5901": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5902": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21BF"
    },
    "5905": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7933,
        8142
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5906": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5907": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5909": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5910": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5912": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5913": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5914": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SUB",
      "path": "46"
    },
    "5915": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SUB",
      "path": "46"
    },
    "5916": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5917": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5918": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5919": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5921": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5922": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5923": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5924": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5925": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5927": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "ADD",
      "path": "46"
    },
    "5928": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5929": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        8152
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5930": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        8152
      ],
      "op": "POP",
      "path": "46"
    },
    "5931": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5933": {
      "offset": [
        1456,
        1586
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5935": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5936": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5938": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "ADD",
      "path": "48"
    },
    "5939": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x17AB"
    },
    "5942": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5943": {
      "op": "PUSH32",
      "value": "0x7374724F434E65775573657228616464726573732077616C6C6574416464722C"
    },
    "5976": {
      "op": "DUP2"
    },
    "5977": {
      "op": "MSTORE"
    },
    "5978": {
      "op": "PUSH32",
      "value": "0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6013": {
      "op": "DUP3"
    },
    "6014": {
      "op": "ADD"
    },
    "6015": {
      "op": "MSTORE"
    },
    "6016": {
      "op": "PUSH32",
      "value": "0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6051": {
      "op": "DUP3"
    },
    "6052": {
      "op": "ADD"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6056": {
      "op": "ADD"
    },
    "6057": {
      "op": "SWAP1"
    },
    "6058": {
      "op": "JUMP"
    },
    "6059": {
      "offset": [
        1456,
        1586
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "6060": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "6062": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "6063": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "6065": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "DUP2",
      "path": "48"
    },
    "6066": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "DUP4",
      "path": "48"
    },
    "6067": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "SUB",
      "path": "48"
    },
    "6068": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "SUB",
      "path": "48"
    },
    "6069": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "DUP2",
      "path": "48"
    },
    "6070": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "6071": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "6072": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "6074": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1456,
        1586
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "6075": {
      "offset": [
        1441,
        1588
      ],
      "op": "DUP1",
      "path": "48"
    },
    "6076": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1441,
        1588
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "6077": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1441,
        1588
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "6078": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1441,
        1588
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "6080": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1441,
        1588
      ],
      "op": "ADD",
      "path": "48"
    },
    "6081": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1441,
        1588
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "6082": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8272,
        8283
      ],
      "op": "DUP11",
      "path": "46"
    },
    "6083": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8330,
        8335
      ],
      "op": "DUP11",
      "path": "46"
    },
    "6084": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6086": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6087": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6089": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "ADD",
      "path": "46"
    },
    "6090": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17D3"
    },
    "6093": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6094": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6095": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "6098": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8312,
        8337
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6099": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6100": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6102": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6103": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6105": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6106": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6107": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SUB",
      "path": "46"
    },
    "6108": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SUB",
      "path": "46"
    },
    "6109": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6110": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6111": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6112": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6114": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6115": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6116": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6117": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6118": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6120": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "ADD",
      "path": "46"
    },
    "6121": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "6122": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8386,
        8398
      ],
      "op": "DUP11",
      "path": "46"
    },
    "6123": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6125": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6126": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6128": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "ADD",
      "path": "46"
    },
    "6129": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17FA"
    },
    "6132": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6133": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6134": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21A3"
    },
    "6137": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8368,
        8400
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6138": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6139": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6141": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6142": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6145": {
      "op": "NOT"
    },
    "6146": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6147": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6148": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SUB",
      "path": "46"
    },
    "6149": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "ADD",
      "path": "46"
    },
    "6150": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6151": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6152": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6153": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6154": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6155": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6156": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6157": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6159": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6160": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6161": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "ADD",
      "path": "46"
    },
    "6162": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "6163": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6164": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6165": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "ADD",
      "path": "46"
    },
    "6166": {
      "op": "SWAP6"
    },
    "6167": {
      "op": "SWAP1"
    },
    "6168": {
      "op": "SWAP6"
    },
    "6169": {
      "op": "MSTORE"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6176": {
      "op": "SHL"
    },
    "6177": {
      "op": "SUB"
    },
    "6178": {
      "op": "SWAP1"
    },
    "6179": {
      "op": "SWAP4"
    },
    "6180": {
      "op": "AND"
    },
    "6181": {
      "op": "SWAP3"
    },
    "6182": {
      "op": "DUP2"
    },
    "6183": {
      "op": "ADD"
    },
    "6184": {
      "op": "SWAP3"
    },
    "6185": {
      "op": "SWAP1"
    },
    "6186": {
      "op": "SWAP3"
    },
    "6187": {
      "op": "MSTORE"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6190": {
      "op": "DUP3"
    },
    "6191": {
      "op": "ADD"
    },
    "6192": {
      "op": "MSTORE"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6195": {
      "op": "DUP2"
    },
    "6196": {
      "op": "ADD"
    },
    "6197": {
      "op": "SWAP2"
    },
    "6198": {
      "op": "SWAP1"
    },
    "6199": {
      "op": "SWAP2"
    },
    "6200": {
      "op": "MSTORE"
    },
    "6201": {
      "op": "DUP8"
    },
    "6202": {
      "op": "ISZERO"
    },
    "6203": {
      "op": "ISZERO"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6206": {
      "op": "DUP3"
    },
    "6207": {
      "op": "ADD"
    },
    "6208": {
      "op": "MSTORE"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6211": {
      "op": "DUP2"
    },
    "6212": {
      "op": "ADD"
    },
    "6213": {
      "op": "DUP8"
    },
    "6214": {
      "op": "SWAP1"
    },
    "6215": {
      "op": "MSTORE"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6218": {
      "op": "ADD"
    },
    "6219": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6221": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6222": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6224": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6225": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6226": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SUB",
      "path": "46"
    },
    "6227": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SUB",
      "path": "46"
    },
    "6228": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6229": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6230": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6231": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6233": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6234": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6235": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6236": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6237": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6239": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "ADD",
      "path": "46"
    },
    "6240": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "6241": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8482
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6242": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8482
      ],
      "op": "POP",
      "path": "46"
    },
    "6243": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8509
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6245": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8553,
        8569
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6246": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8571,
        8578
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6247": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6249": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6250": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6252": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "ADD",
      "path": "46"
    },
    "6253": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1877"
    },
    "6256": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6257": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6258": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6259": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x21EB"
    },
    "6262": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8523,
        8580
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6263": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6264": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6266": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6267": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6269": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6270": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6271": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SUB",
      "path": "46"
    },
    "6272": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SUB",
      "path": "46"
    },
    "6273": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6274": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6275": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6276": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6278": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6279": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6280": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6281": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6282": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6284": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "ADD",
      "path": "46"
    },
    "6285": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "6286": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8582
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6287": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8582
      ],
      "op": "POP",
      "path": "46"
    },
    "6288": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8635
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 17,
      "value": "0x1899"
    },
    "6291": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8613,
        8621
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6292": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8623,
        8633
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6293": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8611
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "6296": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8600,
        8635
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6297": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8635
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6298": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8593,
        8635
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "6299": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "6300": {
      "op": "POP"
    },
    "6301": {
      "op": "POP"
    },
    "6302": {
      "op": "POP"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "POP"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "op": "POP"
    },
    "6307": {
      "op": "POP"
    },
    "6308": {
      "op": "POP"
    },
    "6309": {
      "op": "POP"
    },
    "6310": {
      "op": "POP"
    },
    "6311": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "o",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6312": {
      "op": "JUMPDEST"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6315": {
      "op": "MLOAD"
    },
    "6316": {
      "op": "DUP1"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6319": {
      "op": "ADD"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6322": {
      "op": "MSTORE"
    },
    "6323": {
      "op": "DUP1"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6332": {
      "op": "SHL"
    },
    "6333": {
      "op": "SUB"
    },
    "6334": {
      "op": "AND"
    },
    "6335": {
      "op": "DUP2"
    },
    "6336": {
      "op": "MSTORE"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6339": {
      "op": "ADD"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6342": {
      "op": "DUP2"
    },
    "6343": {
      "op": "MSTORE"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6346": {
      "op": "ADD"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6349": {
      "op": "DUP2"
    },
    "6350": {
      "op": "MSTORE"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6353": {
      "op": "ADD"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6356": {
      "op": "ISZERO"
    },
    "6357": {
      "op": "ISZERO"
    },
    "6358": {
      "op": "DUP2"
    },
    "6359": {
      "op": "MSTORE"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6365": {
      "op": "ISZERO"
    },
    "6366": {
      "op": "ISZERO"
    },
    "6367": {
      "op": "DUP2"
    },
    "6368": {
      "op": "MSTORE"
    },
    "6369": {
      "op": "POP"
    },
    "6370": {
      "op": "SWAP1"
    },
    "6371": {
      "jump": "o",
      "op": "JUMP"
    },
    "6372": {
      "op": "JUMPDEST"
    },
    "6373": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6380": {
      "op": "SHL"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6383": {
      "op": "MSTORE"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6388": {
      "op": "MSTORE"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6393": {
      "op": "REVERT"
    },
    "6394": {
      "op": "JUMPDEST"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6397": {
      "op": "MLOAD"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6400": {
      "op": "DUP3"
    },
    "6401": {
      "op": "ADD"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6404": {
      "op": "NOT"
    },
    "6405": {
      "op": "AND"
    },
    "6406": {
      "op": "DUP2"
    },
    "6407": {
      "op": "ADD"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "op": "SUB"
    },
    "6416": {
      "op": "DUP2"
    },
    "6417": {
      "op": "GT"
    },
    "6418": {
      "op": "DUP3"
    },
    "6419": {
      "op": "DUP3"
    },
    "6420": {
      "op": "LT"
    },
    "6421": {
      "op": "OR"
    },
    "6422": {
      "op": "ISZERO"
    },
    "6423": {
      "op": "PUSH2",
      "value": "0x1922"
    },
    "6426": {
      "op": "JUMPI"
    },
    "6427": {
      "op": "PUSH2",
      "value": "0x1922"
    },
    "6430": {
      "op": "PUSH2",
      "value": "0x18E4"
    },
    "6433": {
      "jump": "i",
      "op": "JUMP"
    },
    "6434": {
      "op": "JUMPDEST"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6437": {
      "op": "MSTORE"
    },
    "6438": {
      "op": "SWAP2"
    },
    "6439": {
      "op": "SWAP1"
    },
    "6440": {
      "op": "POP"
    },
    "6441": {
      "jump": "o",
      "op": "JUMP"
    },
    "6442": {
      "op": "JUMPDEST"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6451": {
      "op": "SHL"
    },
    "6452": {
      "op": "SUB"
    },
    "6453": {
      "op": "DUP3"
    },
    "6454": {
      "op": "GT"
    },
    "6455": {
      "op": "ISZERO"
    },
    "6456": {
      "op": "PUSH2",
      "value": "0x1943"
    },
    "6459": {
      "op": "JUMPI"
    },
    "6460": {
      "op": "PUSH2",
      "value": "0x1943"
    },
    "6463": {
      "op": "PUSH2",
      "value": "0x18E4"
    },
    "6466": {
      "jump": "i",
      "op": "JUMP"
    },
    "6467": {
      "op": "JUMPDEST"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6471": {
      "op": "ADD"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6474": {
      "op": "NOT"
    },
    "6475": {
      "op": "AND"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6478": {
      "op": "ADD"
    },
    "6479": {
      "op": "SWAP1"
    },
    "6480": {
      "jump": "o",
      "op": "JUMP"
    },
    "6481": {
      "op": "JUMPDEST"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6484": {
      "op": "DUP3"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6487": {
      "op": "DUP4"
    },
    "6488": {
      "op": "ADD"
    },
    "6489": {
      "op": "SLT"
    },
    "6490": {
      "op": "PUSH2",
      "value": "0x1962"
    },
    "6493": {
      "op": "JUMPI"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6496": {
      "op": "DUP1"
    },
    "6497": {
      "op": "REVERT"
    },
    "6498": {
      "op": "JUMPDEST"
    },
    "6499": {
      "op": "DUP2"
    },
    "6500": {
      "op": "CALLDATALOAD"
    },
    "6501": {
      "op": "PUSH2",
      "value": "0x1975"
    },
    "6504": {
      "op": "PUSH2",
      "value": "0x1970"
    },
    "6507": {
      "op": "DUP3"
    },
    "6508": {
      "op": "PUSH2",
      "value": "0x192A"
    },
    "6511": {
      "jump": "i",
      "op": "JUMP"
    },
    "6512": {
      "op": "JUMPDEST"
    },
    "6513": {
      "op": "PUSH2",
      "value": "0x18FA"
    },
    "6516": {
      "jump": "i",
      "op": "JUMP"
    },
    "6517": {
      "op": "JUMPDEST"
    },
    "6518": {
      "op": "DUP2"
    },
    "6519": {
      "op": "DUP2"
    },
    "6520": {
      "op": "MSTORE"
    },
    "6521": {
      "op": "DUP5"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6524": {
      "op": "DUP4"
    },
    "6525": {
      "op": "DUP7"
    },
    "6526": {
      "op": "ADD"
    },
    "6527": {
      "op": "ADD"
    },
    "6528": {
      "op": "GT"
    },
    "6529": {
      "op": "ISZERO"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "6533": {
      "op": "JUMPI"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6536": {
      "op": "DUP1"
    },
    "6537": {
      "op": "REVERT"
    },
    "6538": {
      "op": "JUMPDEST"
    },
    "6539": {
      "op": "DUP2"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6542": {
      "op": "DUP6"
    },
    "6543": {
      "op": "ADD"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6546": {
      "op": "DUP4"
    },
    "6547": {
      "op": "ADD"
    },
    "6548": {
      "op": "CALLDATACOPY"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6551": {
      "op": "SWAP2"
    },
    "6552": {
      "op": "DUP2"
    },
    "6553": {
      "op": "ADD"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6556": {
      "op": "ADD"
    },
    "6557": {
      "op": "SWAP2"
    },
    "6558": {
      "op": "SWAP1"
    },
    "6559": {
      "op": "SWAP2"
    },
    "6560": {
      "op": "MSTORE"
    },
    "6561": {
      "op": "SWAP4"
    },
    "6562": {
      "op": "SWAP3"
    },
    "6563": {
      "op": "POP"
    },
    "6564": {
      "op": "POP"
    },
    "6565": {
      "op": "POP"
    },
    "6566": {
      "jump": "o",
      "op": "JUMP"
    },
    "6567": {
      "op": "JUMPDEST"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6574": {
      "op": "SHL"
    },
    "6575": {
      "op": "SUB"
    },
    "6576": {
      "op": "DUP2"
    },
    "6577": {
      "op": "AND"
    },
    "6578": {
      "op": "DUP2"
    },
    "6579": {
      "op": "EQ"
    },
    "6580": {
      "op": "PUSH2",
      "value": "0x19BC"
    },
    "6583": {
      "op": "JUMPI"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6586": {
      "op": "DUP1"
    },
    "6587": {
      "op": "REVERT"
    },
    "6588": {
      "op": "JUMPDEST"
    },
    "6589": {
      "op": "POP"
    },
    "6590": {
      "jump": "o",
      "op": "JUMP"
    },
    "6591": {
      "op": "JUMPDEST"
    },
    "6592": {
      "op": "DUP1"
    },
    "6593": {
      "op": "CALLDATALOAD"
    },
    "6594": {
      "op": "PUSH2",
      "value": "0x19CA"
    },
    "6597": {
      "op": "DUP2"
    },
    "6598": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "6601": {
      "jump": "i",
      "op": "JUMP"
    },
    "6602": {
      "op": "JUMPDEST"
    },
    "6603": {
      "op": "SWAP2"
    },
    "6604": {
      "op": "SWAP1"
    },
    "6605": {
      "op": "POP"
    },
    "6606": {
      "jump": "o",
      "op": "JUMP"
    },
    "6607": {
      "op": "JUMPDEST"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6610": {
      "op": "DUP1"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6613": {
      "op": "DUP1"
    },
    "6614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6616": {
      "op": "DUP1"
    },
    "6617": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6619": {
      "op": "DUP8"
    },
    "6620": {
      "op": "DUP10"
    },
    "6621": {
      "op": "SUB"
    },
    "6622": {
      "op": "SLT"
    },
    "6623": {
      "op": "ISZERO"
    },
    "6624": {
      "op": "PUSH2",
      "value": "0x19E8"
    },
    "6627": {
      "op": "JUMPI"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6630": {
      "op": "DUP1"
    },
    "6631": {
      "op": "REVERT"
    },
    "6632": {
      "op": "JUMPDEST"
    },
    "6633": {
      "op": "DUP7"
    },
    "6634": {
      "op": "CALLDATALOAD"
    },
    "6635": {
      "op": "SWAP6"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6639": {
      "op": "DUP8"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "op": "CALLDATALOAD"
    },
    "6642": {
      "op": "SWAP5"
    },
    "6643": {
      "op": "POP"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6646": {
      "op": "DUP8"
    },
    "6647": {
      "op": "ADD"
    },
    "6648": {
      "op": "CALLDATALOAD"
    },
    "6649": {
      "op": "SWAP4"
    },
    "6650": {
      "op": "POP"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6653": {
      "op": "DUP8"
    },
    "6654": {
      "op": "ADD"
    },
    "6655": {
      "op": "CALLDATALOAD"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6662": {
      "op": "SHL"
    },
    "6663": {
      "op": "SUB"
    },
    "6664": {
      "op": "DUP1"
    },
    "6665": {
      "op": "DUP3"
    },
    "6666": {
      "op": "GT"
    },
    "6667": {
      "op": "ISZERO"
    },
    "6668": {
      "op": "PUSH2",
      "value": "0x1A14"
    },
    "6671": {
      "op": "JUMPI"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6674": {
      "op": "DUP1"
    },
    "6675": {
      "op": "REVERT"
    },
    "6676": {
      "op": "JUMPDEST"
    },
    "6677": {
      "op": "PUSH2",
      "value": "0x1A20"
    },
    "6680": {
      "op": "DUP11"
    },
    "6681": {
      "op": "DUP4"
    },
    "6682": {
      "op": "DUP12"
    },
    "6683": {
      "op": "ADD"
    },
    "6684": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6687": {
      "jump": "i",
      "op": "JUMP"
    },
    "6688": {
      "op": "JUMPDEST"
    },
    "6689": {
      "op": "SWAP5"
    },
    "6690": {
      "op": "POP"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6693": {
      "op": "DUP10"
    },
    "6694": {
      "op": "ADD"
    },
    "6695": {
      "op": "CALLDATALOAD"
    },
    "6696": {
      "op": "SWAP2"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "op": "PUSH2",
      "value": "0x1A32"
    },
    "6701": {
      "op": "DUP3"
    },
    "6702": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "6705": {
      "jump": "i",
      "op": "JUMP"
    },
    "6706": {
      "op": "JUMPDEST"
    },
    "6707": {
      "op": "SWAP1"
    },
    "6708": {
      "op": "SWAP3"
    },
    "6709": {
      "op": "POP"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6712": {
      "op": "DUP9"
    },
    "6713": {
      "op": "ADD"
    },
    "6714": {
      "op": "CALLDATALOAD"
    },
    "6715": {
      "op": "SWAP1"
    },
    "6716": {
      "op": "DUP1"
    },
    "6717": {
      "op": "DUP3"
    },
    "6718": {
      "op": "GT"
    },
    "6719": {
      "op": "ISZERO"
    },
    "6720": {
      "op": "PUSH2",
      "value": "0x1A48"
    },
    "6723": {
      "op": "JUMPI"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6726": {
      "op": "DUP1"
    },
    "6727": {
      "op": "REVERT"
    },
    "6728": {
      "op": "JUMPDEST"
    },
    "6729": {
      "op": "POP"
    },
    "6730": {
      "op": "PUSH2",
      "value": "0x1A55"
    },
    "6733": {
      "op": "DUP10"
    },
    "6734": {
      "op": "DUP3"
    },
    "6735": {
      "op": "DUP11"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6740": {
      "jump": "i",
      "op": "JUMP"
    },
    "6741": {
      "op": "JUMPDEST"
    },
    "6742": {
      "op": "SWAP2"
    },
    "6743": {
      "op": "POP"
    },
    "6744": {
      "op": "POP"
    },
    "6745": {
      "op": "SWAP3"
    },
    "6746": {
      "op": "SWAP6"
    },
    "6747": {
      "op": "POP"
    },
    "6748": {
      "op": "SWAP3"
    },
    "6749": {
      "op": "SWAP6"
    },
    "6750": {
      "op": "POP"
    },
    "6751": {
      "op": "SWAP3"
    },
    "6752": {
      "op": "SWAP6"
    },
    "6753": {
      "jump": "o",
      "op": "JUMP"
    },
    "6754": {
      "op": "JUMPDEST"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6757": {
      "op": "DUP1"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6760": {
      "op": "DUP1"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6765": {
      "op": "DUP7"
    },
    "6766": {
      "op": "DUP9"
    },
    "6767": {
      "op": "SUB"
    },
    "6768": {
      "op": "SLT"
    },
    "6769": {
      "op": "ISZERO"
    },
    "6770": {
      "op": "PUSH2",
      "value": "0x1A7A"
    },
    "6773": {
      "op": "JUMPI"
    },
    "6774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6776": {
      "op": "DUP1"
    },
    "6777": {
      "op": "REVERT"
    },
    "6778": {
      "op": "JUMPDEST"
    },
    "6779": {
      "op": "DUP6"
    },
    "6780": {
      "op": "CALLDATALOAD"
    },
    "6781": {
      "op": "PUSH2",
      "value": "0x1A85"
    },
    "6784": {
      "op": "DUP2"
    },
    "6785": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "6788": {
      "jump": "i",
      "op": "JUMP"
    },
    "6789": {
      "op": "JUMPDEST"
    },
    "6790": {
      "op": "SWAP5"
    },
    "6791": {
      "op": "POP"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6794": {
      "op": "DUP7"
    },
    "6795": {
      "op": "ADD"
    },
    "6796": {
      "op": "CALLDATALOAD"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6803": {
      "op": "SHL"
    },
    "6804": {
      "op": "SUB"
    },
    "6805": {
      "op": "DUP1"
    },
    "6806": {
      "op": "DUP3"
    },
    "6807": {
      "op": "GT"
    },
    "6808": {
      "op": "ISZERO"
    },
    "6809": {
      "op": "PUSH2",
      "value": "0x1AA1"
    },
    "6812": {
      "op": "JUMPI"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6815": {
      "op": "DUP1"
    },
    "6816": {
      "op": "REVERT"
    },
    "6817": {
      "op": "JUMPDEST"
    },
    "6818": {
      "op": "PUSH2",
      "value": "0x1AAD"
    },
    "6821": {
      "op": "DUP10"
    },
    "6822": {
      "op": "DUP4"
    },
    "6823": {
      "op": "DUP11"
    },
    "6824": {
      "op": "ADD"
    },
    "6825": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6828": {
      "jump": "i",
      "op": "JUMP"
    },
    "6829": {
      "op": "JUMPDEST"
    },
    "6830": {
      "op": "SWAP6"
    },
    "6831": {
      "op": "POP"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6834": {
      "op": "DUP9"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "CALLDATALOAD"
    },
    "6837": {
      "op": "SWAP5"
    },
    "6838": {
      "op": "POP"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6841": {
      "op": "DUP9"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "CALLDATALOAD"
    },
    "6844": {
      "op": "SWAP2"
    },
    "6845": {
      "op": "POP"
    },
    "6846": {
      "op": "PUSH2",
      "value": "0x1AC6"
    },
    "6849": {
      "op": "DUP3"
    },
    "6850": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "6853": {
      "jump": "i",
      "op": "JUMP"
    },
    "6854": {
      "op": "JUMPDEST"
    },
    "6855": {
      "op": "SWAP1"
    },
    "6856": {
      "op": "SWAP3"
    },
    "6857": {
      "op": "POP"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6860": {
      "op": "DUP8"
    },
    "6861": {
      "op": "ADD"
    },
    "6862": {
      "op": "CALLDATALOAD"
    },
    "6863": {
      "op": "SWAP1"
    },
    "6864": {
      "op": "DUP1"
    },
    "6865": {
      "op": "DUP3"
    },
    "6866": {
      "op": "GT"
    },
    "6867": {
      "op": "ISZERO"
    },
    "6868": {
      "op": "PUSH2",
      "value": "0x1ADC"
    },
    "6871": {
      "op": "JUMPI"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6874": {
      "op": "DUP1"
    },
    "6875": {
      "op": "REVERT"
    },
    "6876": {
      "op": "JUMPDEST"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "op": "PUSH2",
      "value": "0x1AE9"
    },
    "6881": {
      "op": "DUP9"
    },
    "6882": {
      "op": "DUP3"
    },
    "6883": {
      "op": "DUP10"
    },
    "6884": {
      "op": "ADD"
    },
    "6885": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6888": {
      "jump": "i",
      "op": "JUMP"
    },
    "6889": {
      "op": "JUMPDEST"
    },
    "6890": {
      "op": "SWAP2"
    },
    "6891": {
      "op": "POP"
    },
    "6892": {
      "op": "POP"
    },
    "6893": {
      "op": "SWAP3"
    },
    "6894": {
      "op": "SWAP6"
    },
    "6895": {
      "op": "POP"
    },
    "6896": {
      "op": "SWAP3"
    },
    "6897": {
      "op": "SWAP6"
    },
    "6898": {
      "op": "SWAP1"
    },
    "6899": {
      "op": "SWAP4"
    },
    "6900": {
      "op": "POP"
    },
    "6901": {
      "jump": "o",
      "op": "JUMP"
    },
    "6902": {
      "op": "JUMPDEST"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6905": {
      "op": "DUP1"
    },
    "6906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6908": {
      "op": "DUP4"
    },
    "6909": {
      "op": "DUP6"
    },
    "6910": {
      "op": "SUB"
    },
    "6911": {
      "op": "SLT"
    },
    "6912": {
      "op": "ISZERO"
    },
    "6913": {
      "op": "PUSH2",
      "value": "0x1B09"
    },
    "6916": {
      "op": "JUMPI"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6919": {
      "op": "DUP1"
    },
    "6920": {
      "op": "REVERT"
    },
    "6921": {
      "op": "JUMPDEST"
    },
    "6922": {
      "op": "DUP3"
    },
    "6923": {
      "op": "CALLDATALOAD"
    },
    "6924": {
      "op": "SWAP2"
    },
    "6925": {
      "op": "POP"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6928": {
      "op": "DUP4"
    },
    "6929": {
      "op": "ADD"
    },
    "6930": {
      "op": "CALLDATALOAD"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6937": {
      "op": "SHL"
    },
    "6938": {
      "op": "SUB"
    },
    "6939": {
      "op": "DUP2"
    },
    "6940": {
      "op": "GT"
    },
    "6941": {
      "op": "ISZERO"
    },
    "6942": {
      "op": "PUSH2",
      "value": "0x1B26"
    },
    "6945": {
      "op": "JUMPI"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6948": {
      "op": "DUP1"
    },
    "6949": {
      "op": "REVERT"
    },
    "6950": {
      "op": "JUMPDEST"
    },
    "6951": {
      "op": "PUSH2",
      "value": "0x1B32"
    },
    "6954": {
      "op": "DUP6"
    },
    "6955": {
      "op": "DUP3"
    },
    "6956": {
      "op": "DUP7"
    },
    "6957": {
      "op": "ADD"
    },
    "6958": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "6961": {
      "jump": "i",
      "op": "JUMP"
    },
    "6962": {
      "op": "JUMPDEST"
    },
    "6963": {
      "op": "SWAP2"
    },
    "6964": {
      "op": "POP"
    },
    "6965": {
      "op": "POP"
    },
    "6966": {
      "op": "SWAP3"
    },
    "6967": {
      "op": "POP"
    },
    "6968": {
      "op": "SWAP3"
    },
    "6969": {
      "op": "SWAP1"
    },
    "6970": {
      "op": "POP"
    },
    "6971": {
      "jump": "o",
      "op": "JUMP"
    },
    "6972": {
      "op": "JUMPDEST"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6975": {
      "op": "DUP1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6978": {
      "op": "DUP1"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6981": {
      "op": "DUP6"
    },
    "6982": {
      "op": "DUP8"
    },
    "6983": {
      "op": "SUB"
    },
    "6984": {
      "op": "SLT"
    },
    "6985": {
      "op": "ISZERO"
    },
    "6986": {
      "op": "PUSH2",
      "value": "0x1B52"
    },
    "6989": {
      "op": "JUMPI"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6992": {
      "op": "DUP1"
    },
    "6993": {
      "op": "REVERT"
    },
    "6994": {
      "op": "JUMPDEST"
    },
    "6995": {
      "op": "DUP5"
    },
    "6996": {
      "op": "CALLDATALOAD"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7003": {
      "op": "SHL"
    },
    "7004": {
      "op": "SUB"
    },
    "7005": {
      "op": "DUP1"
    },
    "7006": {
      "op": "DUP3"
    },
    "7007": {
      "op": "GT"
    },
    "7008": {
      "op": "ISZERO"
    },
    "7009": {
      "op": "PUSH2",
      "value": "0x1B69"
    },
    "7012": {
      "op": "JUMPI"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7015": {
      "op": "DUP1"
    },
    "7016": {
      "op": "REVERT"
    },
    "7017": {
      "op": "JUMPDEST"
    },
    "7018": {
      "op": "PUSH2",
      "value": "0x1B75"
    },
    "7021": {
      "op": "DUP9"
    },
    "7022": {
      "op": "DUP4"
    },
    "7023": {
      "op": "DUP10"
    },
    "7024": {
      "op": "ADD"
    },
    "7025": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7028": {
      "jump": "i",
      "op": "JUMP"
    },
    "7029": {
      "op": "JUMPDEST"
    },
    "7030": {
      "op": "SWAP6"
    },
    "7031": {
      "op": "POP"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7034": {
      "op": "DUP8"
    },
    "7035": {
      "op": "ADD"
    },
    "7036": {
      "op": "CALLDATALOAD"
    },
    "7037": {
      "op": "SWAP2"
    },
    "7038": {
      "op": "POP"
    },
    "7039": {
      "op": "DUP1"
    },
    "7040": {
      "op": "DUP3"
    },
    "7041": {
      "op": "GT"
    },
    "7042": {
      "op": "ISZERO"
    },
    "7043": {
      "op": "PUSH2",
      "value": "0x1B8B"
    },
    "7046": {
      "op": "JUMPI"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7049": {
      "op": "DUP1"
    },
    "7050": {
      "op": "REVERT"
    },
    "7051": {
      "op": "JUMPDEST"
    },
    "7052": {
      "op": "PUSH2",
      "value": "0x1B97"
    },
    "7055": {
      "op": "DUP9"
    },
    "7056": {
      "op": "DUP4"
    },
    "7057": {
      "op": "DUP10"
    },
    "7058": {
      "op": "ADD"
    },
    "7059": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7062": {
      "jump": "i",
      "op": "JUMP"
    },
    "7063": {
      "op": "JUMPDEST"
    },
    "7064": {
      "op": "SWAP5"
    },
    "7065": {
      "op": "POP"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7068": {
      "op": "DUP8"
    },
    "7069": {
      "op": "ADD"
    },
    "7070": {
      "op": "CALLDATALOAD"
    },
    "7071": {
      "op": "SWAP2"
    },
    "7072": {
      "op": "POP"
    },
    "7073": {
      "op": "PUSH2",
      "value": "0x1BA9"
    },
    "7076": {
      "op": "DUP3"
    },
    "7077": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "7080": {
      "jump": "i",
      "op": "JUMP"
    },
    "7081": {
      "op": "JUMPDEST"
    },
    "7082": {
      "op": "SWAP1"
    },
    "7083": {
      "op": "SWAP3"
    },
    "7084": {
      "op": "POP"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7087": {
      "op": "DUP7"
    },
    "7088": {
      "op": "ADD"
    },
    "7089": {
      "op": "CALLDATALOAD"
    },
    "7090": {
      "op": "SWAP1"
    },
    "7091": {
      "op": "DUP1"
    },
    "7092": {
      "op": "DUP3"
    },
    "7093": {
      "op": "GT"
    },
    "7094": {
      "op": "ISZERO"
    },
    "7095": {
      "op": "PUSH2",
      "value": "0x1BBF"
    },
    "7098": {
      "op": "JUMPI"
    },
    "7099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7101": {
      "op": "DUP1"
    },
    "7102": {
      "op": "REVERT"
    },
    "7103": {
      "op": "JUMPDEST"
    },
    "7104": {
      "op": "POP"
    },
    "7105": {
      "op": "PUSH2",
      "value": "0x1BCC"
    },
    "7108": {
      "op": "DUP8"
    },
    "7109": {
      "op": "DUP3"
    },
    "7110": {
      "op": "DUP9"
    },
    "7111": {
      "op": "ADD"
    },
    "7112": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7115": {
      "jump": "i",
      "op": "JUMP"
    },
    "7116": {
      "op": "JUMPDEST"
    },
    "7117": {
      "op": "SWAP2"
    },
    "7118": {
      "op": "POP"
    },
    "7119": {
      "op": "POP"
    },
    "7120": {
      "op": "SWAP3"
    },
    "7121": {
      "op": "SWAP6"
    },
    "7122": {
      "op": "SWAP2"
    },
    "7123": {
      "op": "SWAP5"
    },
    "7124": {
      "op": "POP"
    },
    "7125": {
      "op": "SWAP3"
    },
    "7126": {
      "op": "POP"
    },
    "7127": {
      "jump": "o",
      "op": "JUMP"
    },
    "7128": {
      "op": "JUMPDEST"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7131": {
      "op": "DUP1"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7134": {
      "op": "DUP4"
    },
    "7135": {
      "op": "DUP6"
    },
    "7136": {
      "op": "SUB"
    },
    "7137": {
      "op": "SLT"
    },
    "7138": {
      "op": "ISZERO"
    },
    "7139": {
      "op": "PUSH2",
      "value": "0x1BEB"
    },
    "7142": {
      "op": "JUMPI"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7145": {
      "op": "DUP1"
    },
    "7146": {
      "op": "REVERT"
    },
    "7147": {
      "op": "JUMPDEST"
    },
    "7148": {
      "op": "DUP3"
    },
    "7149": {
      "op": "CALLDATALOAD"
    },
    "7150": {
      "op": "PUSH2",
      "value": "0x1BF6"
    },
    "7153": {
      "op": "DUP2"
    },
    "7154": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "7157": {
      "jump": "i",
      "op": "JUMP"
    },
    "7158": {
      "op": "JUMPDEST"
    },
    "7159": {
      "op": "SWAP2"
    },
    "7160": {
      "op": "POP"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7163": {
      "op": "DUP4"
    },
    "7164": {
      "op": "ADD"
    },
    "7165": {
      "op": "CALLDATALOAD"
    },
    "7166": {
      "op": "PUSH2",
      "value": "0x1C06"
    },
    "7169": {
      "op": "DUP2"
    },
    "7170": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "7173": {
      "jump": "i",
      "op": "JUMP"
    },
    "7174": {
      "op": "JUMPDEST"
    },
    "7175": {
      "op": "DUP1"
    },
    "7176": {
      "op": "SWAP2"
    },
    "7177": {
      "op": "POP"
    },
    "7178": {
      "op": "POP"
    },
    "7179": {
      "op": "SWAP3"
    },
    "7180": {
      "op": "POP"
    },
    "7181": {
      "op": "SWAP3"
    },
    "7182": {
      "op": "SWAP1"
    },
    "7183": {
      "op": "POP"
    },
    "7184": {
      "jump": "o",
      "op": "JUMP"
    },
    "7185": {
      "op": "JUMPDEST"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7188": {
      "op": "JUMPDEST"
    },
    "7189": {
      "op": "DUP4"
    },
    "7190": {
      "op": "DUP2"
    },
    "7191": {
      "op": "LT"
    },
    "7192": {
      "op": "ISZERO"
    },
    "7193": {
      "op": "PUSH2",
      "value": "0x1C2C"
    },
    "7196": {
      "op": "JUMPI"
    },
    "7197": {
      "op": "DUP2"
    },
    "7198": {
      "op": "DUP2"
    },
    "7199": {
      "op": "ADD"
    },
    "7200": {
      "op": "MLOAD"
    },
    "7201": {
      "op": "DUP4"
    },
    "7202": {
      "op": "DUP3"
    },
    "7203": {
      "op": "ADD"
    },
    "7204": {
      "op": "MSTORE"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7207": {
      "op": "ADD"
    },
    "7208": {
      "op": "PUSH2",
      "value": "0x1C14"
    },
    "7211": {
      "op": "JUMP"
    },
    "7212": {
      "op": "JUMPDEST"
    },
    "7213": {
      "op": "DUP4"
    },
    "7214": {
      "op": "DUP2"
    },
    "7215": {
      "op": "GT"
    },
    "7216": {
      "op": "ISZERO"
    },
    "7217": {
      "op": "PUSH2",
      "value": "0x1C3B"
    },
    "7220": {
      "op": "JUMPI"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7223": {
      "op": "DUP5"
    },
    "7224": {
      "op": "DUP5"
    },
    "7225": {
      "op": "ADD"
    },
    "7226": {
      "op": "MSTORE"
    },
    "7227": {
      "op": "JUMPDEST"
    },
    "7228": {
      "op": "POP"
    },
    "7229": {
      "op": "POP"
    },
    "7230": {
      "op": "POP"
    },
    "7231": {
      "op": "POP"
    },
    "7232": {
      "jump": "o",
      "op": "JUMP"
    },
    "7233": {
      "op": "JUMPDEST"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7236": {
      "op": "DUP2"
    },
    "7237": {
      "op": "MLOAD"
    },
    "7238": {
      "op": "DUP1"
    },
    "7239": {
      "op": "DUP5"
    },
    "7240": {
      "op": "MSTORE"
    },
    "7241": {
      "op": "PUSH2",
      "value": "0x1C59"
    },
    "7244": {
      "op": "DUP2"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7247": {
      "op": "DUP7"
    },
    "7248": {
      "op": "ADD"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7251": {
      "op": "DUP7"
    },
    "7252": {
      "op": "ADD"
    },
    "7253": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "7256": {
      "jump": "i",
      "op": "JUMP"
    },
    "7257": {
      "op": "JUMPDEST"
    },
    "7258": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7260": {
      "op": "ADD"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7263": {
      "op": "NOT"
    },
    "7264": {
      "op": "AND"
    },
    "7265": {
      "op": "SWAP3"
    },
    "7266": {
      "op": "SWAP1"
    },
    "7267": {
      "op": "SWAP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7271": {
      "op": "ADD"
    },
    "7272": {
      "op": "SWAP3"
    },
    "7273": {
      "op": "SWAP2"
    },
    "7274": {
      "op": "POP"
    },
    "7275": {
      "op": "POP"
    },
    "7276": {
      "jump": "o",
      "op": "JUMP"
    },
    "7277": {
      "op": "JUMPDEST"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7280": {
      "op": "DUP2"
    },
    "7281": {
      "op": "MSTORE"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7284": {
      "op": "PUSH2",
      "value": "0x1C80"
    },
    "7287": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7289": {
      "op": "DUP4"
    },
    "7290": {
      "op": "ADD"
    },
    "7291": {
      "op": "DUP8"
    },
    "7292": {
      "op": "PUSH2",
      "value": "0x1C41"
    },
    "7295": {
      "jump": "i",
      "op": "JUMP"
    },
    "7296": {
      "op": "JUMPDEST"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7299": {
      "op": "DUP4"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "SWAP6"
    },
    "7302": {
      "op": "SWAP1"
    },
    "7303": {
      "op": "SWAP6"
    },
    "7304": {
      "op": "MSTORE"
    },
    "7305": {
      "op": "POP"
    },
    "7306": {
      "op": "SWAP2"
    },
    "7307": {
      "op": "ISZERO"
    },
    "7308": {
      "op": "ISZERO"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7311": {
      "op": "DUP4"
    },
    "7312": {
      "op": "ADD"
    },
    "7313": {
      "op": "MSTORE"
    },
    "7314": {
      "op": "ISZERO"
    },
    "7315": {
      "op": "ISZERO"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7318": {
      "op": "SWAP1"
    },
    "7319": {
      "op": "SWAP2"
    },
    "7320": {
      "op": "ADD"
    },
    "7321": {
      "op": "MSTORE"
    },
    "7322": {
      "op": "SWAP2"
    },
    "7323": {
      "op": "SWAP1"
    },
    "7324": {
      "op": "POP"
    },
    "7325": {
      "jump": "o",
      "op": "JUMP"
    },
    "7326": {
      "op": "JUMPDEST"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7331": {
      "op": "DUP3"
    },
    "7332": {
      "op": "DUP5"
    },
    "7333": {
      "op": "SUB"
    },
    "7334": {
      "op": "SLT"
    },
    "7335": {
      "op": "ISZERO"
    },
    "7336": {
      "op": "PUSH2",
      "value": "0x1CB0"
    },
    "7339": {
      "op": "JUMPI"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7342": {
      "op": "DUP1"
    },
    "7343": {
      "op": "REVERT"
    },
    "7344": {
      "op": "JUMPDEST"
    },
    "7345": {
      "op": "DUP2"
    },
    "7346": {
      "op": "CALLDATALOAD"
    },
    "7347": {
      "op": "PUSH2",
      "value": "0x1CBB"
    },
    "7350": {
      "op": "DUP2"
    },
    "7351": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "7354": {
      "jump": "i",
      "op": "JUMP"
    },
    "7355": {
      "op": "JUMPDEST"
    },
    "7356": {
      "op": "SWAP4"
    },
    "7357": {
      "op": "SWAP3"
    },
    "7358": {
      "op": "POP"
    },
    "7359": {
      "op": "POP"
    },
    "7360": {
      "op": "POP"
    },
    "7361": {
      "jump": "o",
      "op": "JUMP"
    },
    "7362": {
      "op": "JUMPDEST"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7365": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7368": {
      "op": "DUP1"
    },
    "7369": {
      "op": "DUP4"
    },
    "7370": {
      "op": "MSTORE"
    },
    "7371": {
      "op": "PUSH2",
      "value": "0x1CD6"
    },
    "7374": {
      "op": "DUP2"
    },
    "7375": {
      "op": "DUP5"
    },
    "7376": {
      "op": "ADD"
    },
    "7377": {
      "op": "DUP14"
    },
    "7378": {
      "op": "PUSH2",
      "value": "0x1C41"
    },
    "7381": {
      "jump": "i",
      "op": "JUMP"
    },
    "7382": {
      "op": "JUMPDEST"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7385": {
      "op": "DUP5"
    },
    "7386": {
      "op": "ADD"
    },
    "7387": {
      "op": "SWAP12"
    },
    "7388": {
      "op": "SWAP1"
    },
    "7389": {
      "op": "SWAP12"
    },
    "7390": {
      "op": "MSTORE"
    },
    "7391": {
      "op": "POP"
    },
    "7392": {
      "op": "POP"
    },
    "7393": {
      "op": "SWAP7"
    },
    "7394": {
      "op": "ISZERO"
    },
    "7395": {
      "op": "ISZERO"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7398": {
      "op": "DUP9"
    },
    "7399": {
      "op": "ADD"
    },
    "7400": {
      "op": "MSTORE"
    },
    "7401": {
      "op": "SWAP5"
    },
    "7402": {
      "op": "ISZERO"
    },
    "7403": {
      "op": "ISZERO"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7406": {
      "op": "DUP8"
    },
    "7407": {
      "op": "ADD"
    },
    "7408": {
      "op": "MSTORE"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7411": {
      "op": "DUP7"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "op": "SWAP4"
    },
    "7414": {
      "op": "SWAP1"
    },
    "7415": {
      "op": "SWAP4"
    },
    "7416": {
      "op": "MSTORE"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7419": {
      "op": "DUP6"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "op": "SWAP2"
    },
    "7422": {
      "op": "SWAP1"
    },
    "7423": {
      "op": "SWAP2"
    },
    "7424": {
      "op": "MSTORE"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7427": {
      "op": "DUP5"
    },
    "7428": {
      "op": "ADD"
    },
    "7429": {
      "op": "MSTORE"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7432": {
      "op": "DUP4"
    },
    "7433": {
      "op": "ADD"
    },
    "7434": {
      "op": "MSTORE"
    },
    "7435": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7438": {
      "op": "SWAP1"
    },
    "7439": {
      "op": "SWAP2"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "op": "MSTORE"
    },
    "7442": {
      "op": "SWAP2"
    },
    "7443": {
      "op": "SWAP1"
    },
    "7444": {
      "op": "POP"
    },
    "7445": {
      "jump": "o",
      "op": "JUMP"
    },
    "7446": {
      "op": "JUMPDEST"
    },
    "7447": {
      "op": "DUP1"
    },
    "7448": {
      "op": "ISZERO"
    },
    "7449": {
      "op": "ISZERO"
    },
    "7450": {
      "op": "DUP2"
    },
    "7451": {
      "op": "EQ"
    },
    "7452": {
      "op": "PUSH2",
      "value": "0x19BC"
    },
    "7455": {
      "op": "JUMPI"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7458": {
      "op": "DUP1"
    },
    "7459": {
      "op": "REVERT"
    },
    "7460": {
      "op": "JUMPDEST"
    },
    "7461": {
      "op": "DUP1"
    },
    "7462": {
      "op": "CALLDATALOAD"
    },
    "7463": {
      "op": "PUSH2",
      "value": "0x19CA"
    },
    "7466": {
      "op": "DUP2"
    },
    "7467": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "7470": {
      "jump": "i",
      "op": "JUMP"
    },
    "7471": {
      "op": "JUMPDEST"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7474": {
      "op": "DUP1"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7477": {
      "op": "DUP1"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7482": {
      "op": "DUP7"
    },
    "7483": {
      "op": "DUP9"
    },
    "7484": {
      "op": "SUB"
    },
    "7485": {
      "op": "SLT"
    },
    "7486": {
      "op": "ISZERO"
    },
    "7487": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7490": {
      "op": "JUMPI"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7493": {
      "op": "DUP1"
    },
    "7494": {
      "op": "REVERT"
    },
    "7495": {
      "op": "JUMPDEST"
    },
    "7496": {
      "op": "DUP6"
    },
    "7497": {
      "op": "CALLDATALOAD"
    },
    "7498": {
      "op": "SWAP5"
    },
    "7499": {
      "op": "POP"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7502": {
      "op": "DUP7"
    },
    "7503": {
      "op": "ADD"
    },
    "7504": {
      "op": "CALLDATALOAD"
    },
    "7505": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7508": {
      "op": "DUP2"
    },
    "7509": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "7512": {
      "jump": "i",
      "op": "JUMP"
    },
    "7513": {
      "op": "JUMPDEST"
    },
    "7514": {
      "op": "SWAP4"
    },
    "7515": {
      "op": "POP"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7518": {
      "op": "DUP7"
    },
    "7519": {
      "op": "ADD"
    },
    "7520": {
      "op": "CALLDATALOAD"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7527": {
      "op": "SHL"
    },
    "7528": {
      "op": "SUB"
    },
    "7529": {
      "op": "DUP1"
    },
    "7530": {
      "op": "DUP3"
    },
    "7531": {
      "op": "GT"
    },
    "7532": {
      "op": "ISZERO"
    },
    "7533": {
      "op": "PUSH2",
      "value": "0x1D75"
    },
    "7536": {
      "op": "JUMPI"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7539": {
      "op": "DUP1"
    },
    "7540": {
      "op": "REVERT"
    },
    "7541": {
      "op": "JUMPDEST"
    },
    "7542": {
      "op": "PUSH2",
      "value": "0x1D81"
    },
    "7545": {
      "op": "DUP10"
    },
    "7546": {
      "op": "DUP4"
    },
    "7547": {
      "op": "DUP11"
    },
    "7548": {
      "op": "ADD"
    },
    "7549": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7552": {
      "jump": "i",
      "op": "JUMP"
    },
    "7553": {
      "op": "JUMPDEST"
    },
    "7554": {
      "op": "SWAP5"
    },
    "7555": {
      "op": "POP"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7558": {
      "op": "DUP9"
    },
    "7559": {
      "op": "ADD"
    },
    "7560": {
      "op": "CALLDATALOAD"
    },
    "7561": {
      "op": "SWAP2"
    },
    "7562": {
      "op": "POP"
    },
    "7563": {
      "op": "PUSH2",
      "value": "0x1AC6"
    },
    "7566": {
      "op": "DUP3"
    },
    "7567": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "7570": {
      "jump": "i",
      "op": "JUMP"
    },
    "7571": {
      "op": "JUMPDEST"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7574": {
      "op": "DUP1"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7577": {
      "op": "DUP1"
    },
    "7578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7580": {
      "op": "DUP1"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7583": {
      "op": "DUP1"
    },
    "7584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7586": {
      "op": "DUP1"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7589": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "7592": {
      "op": "DUP13"
    },
    "7593": {
      "op": "DUP15"
    },
    "7594": {
      "op": "SUB"
    },
    "7595": {
      "op": "SLT"
    },
    "7596": {
      "op": "ISZERO"
    },
    "7597": {
      "op": "PUSH2",
      "value": "0x1DB5"
    },
    "7600": {
      "op": "JUMPI"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7603": {
      "op": "DUP1"
    },
    "7604": {
      "op": "REVERT"
    },
    "7605": {
      "op": "JUMPDEST"
    },
    "7606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7612": {
      "op": "SHL"
    },
    "7613": {
      "op": "SUB"
    },
    "7614": {
      "op": "DUP1"
    },
    "7615": {
      "op": "DUP14"
    },
    "7616": {
      "op": "CALLDATALOAD"
    },
    "7617": {
      "op": "GT"
    },
    "7618": {
      "op": "ISZERO"
    },
    "7619": {
      "op": "PUSH2",
      "value": "0x1DCB"
    },
    "7622": {
      "op": "JUMPI"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7625": {
      "op": "DUP1"
    },
    "7626": {
      "op": "REVERT"
    },
    "7627": {
      "op": "JUMPDEST"
    },
    "7628": {
      "op": "PUSH2",
      "value": "0x1DD8"
    },
    "7631": {
      "op": "DUP15"
    },
    "7632": {
      "op": "DUP15"
    },
    "7633": {
      "op": "CALLDATALOAD"
    },
    "7634": {
      "op": "DUP16"
    },
    "7635": {
      "op": "ADD"
    },
    "7636": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7639": {
      "jump": "i",
      "op": "JUMP"
    },
    "7640": {
      "op": "JUMPDEST"
    },
    "7641": {
      "op": "SWAP12"
    },
    "7642": {
      "op": "POP"
    },
    "7643": {
      "op": "PUSH2",
      "value": "0x1DE6"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7648": {
      "op": "DUP15"
    },
    "7649": {
      "op": "ADD"
    },
    "7650": {
      "op": "PUSH2",
      "value": "0x1D24"
    },
    "7653": {
      "jump": "i",
      "op": "JUMP"
    },
    "7654": {
      "op": "JUMPDEST"
    },
    "7655": {
      "op": "SWAP11"
    },
    "7656": {
      "op": "POP"
    },
    "7657": {
      "op": "PUSH2",
      "value": "0x1DF4"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7662": {
      "op": "DUP15"
    },
    "7663": {
      "op": "ADD"
    },
    "7664": {
      "op": "PUSH2",
      "value": "0x1D24"
    },
    "7667": {
      "jump": "i",
      "op": "JUMP"
    },
    "7668": {
      "op": "JUMPDEST"
    },
    "7669": {
      "op": "SWAP10"
    },
    "7670": {
      "op": "POP"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7673": {
      "op": "DUP14"
    },
    "7674": {
      "op": "ADD"
    },
    "7675": {
      "op": "CALLDATALOAD"
    },
    "7676": {
      "op": "SWAP9"
    },
    "7677": {
      "op": "POP"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7680": {
      "op": "DUP14"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "op": "CALLDATALOAD"
    },
    "7683": {
      "op": "SWAP8"
    },
    "7684": {
      "op": "POP"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7687": {
      "op": "DUP14"
    },
    "7688": {
      "op": "ADD"
    },
    "7689": {
      "op": "CALLDATALOAD"
    },
    "7690": {
      "op": "SWAP7"
    },
    "7691": {
      "op": "POP"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7694": {
      "op": "DUP14"
    },
    "7695": {
      "op": "ADD"
    },
    "7696": {
      "op": "CALLDATALOAD"
    },
    "7697": {
      "op": "SWAP6"
    },
    "7698": {
      "op": "POP"
    },
    "7699": {
      "op": "PUSH2",
      "value": "0x1E1E"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7704": {
      "op": "DUP15"
    },
    "7705": {
      "op": "ADD"
    },
    "7706": {
      "op": "PUSH2",
      "value": "0x19BF"
    },
    "7709": {
      "jump": "i",
      "op": "JUMP"
    },
    "7710": {
      "op": "JUMPDEST"
    },
    "7711": {
      "op": "SWAP5"
    },
    "7712": {
      "op": "POP"
    },
    "7713": {
      "op": "PUSH2",
      "value": "0x1E2D"
    },
    "7716": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7719": {
      "op": "DUP15"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x19BF"
    },
    "7724": {
      "jump": "i",
      "op": "JUMP"
    },
    "7725": {
      "op": "JUMPDEST"
    },
    "7726": {
      "op": "SWAP4"
    },
    "7727": {
      "op": "POP"
    },
    "7728": {
      "op": "PUSH2",
      "value": "0x1E3C"
    },
    "7731": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7734": {
      "op": "DUP15"
    },
    "7735": {
      "op": "ADD"
    },
    "7736": {
      "op": "PUSH2",
      "value": "0x19BF"
    },
    "7739": {
      "jump": "i",
      "op": "JUMP"
    },
    "7740": {
      "op": "JUMPDEST"
    },
    "7741": {
      "op": "SWAP3"
    },
    "7742": {
      "op": "POP"
    },
    "7743": {
      "op": "DUP1"
    },
    "7744": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "7747": {
      "op": "DUP15"
    },
    "7748": {
      "op": "ADD"
    },
    "7749": {
      "op": "CALLDATALOAD"
    },
    "7750": {
      "op": "GT"
    },
    "7751": {
      "op": "ISZERO"
    },
    "7752": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "7755": {
      "op": "JUMPI"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7758": {
      "op": "DUP1"
    },
    "7759": {
      "op": "REVERT"
    },
    "7760": {
      "op": "JUMPDEST"
    },
    "7761": {
      "op": "POP"
    },
    "7762": {
      "op": "PUSH2",
      "value": "0x1E62"
    },
    "7765": {
      "op": "DUP14"
    },
    "7766": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "7769": {
      "op": "DUP15"
    },
    "7770": {
      "op": "ADD"
    },
    "7771": {
      "op": "CALLDATALOAD"
    },
    "7772": {
      "op": "DUP15"
    },
    "7773": {
      "op": "ADD"
    },
    "7774": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7777": {
      "jump": "i",
      "op": "JUMP"
    },
    "7778": {
      "op": "JUMPDEST"
    },
    "7779": {
      "op": "SWAP1"
    },
    "7780": {
      "op": "POP"
    },
    "7781": {
      "op": "SWAP3"
    },
    "7782": {
      "op": "SWAP6"
    },
    "7783": {
      "op": "SWAP9"
    },
    "7784": {
      "op": "SWAP12"
    },
    "7785": {
      "op": "POP"
    },
    "7786": {
      "op": "SWAP3"
    },
    "7787": {
      "op": "SWAP6"
    },
    "7788": {
      "op": "SWAP9"
    },
    "7789": {
      "op": "SWAP12"
    },
    "7790": {
      "op": "SWAP1"
    },
    "7791": {
      "op": "SWAP4"
    },
    "7792": {
      "op": "SWAP7"
    },
    "7793": {
      "op": "SWAP10"
    },
    "7794": {
      "op": "POP"
    },
    "7795": {
      "jump": "o",
      "op": "JUMP"
    },
    "7796": {
      "op": "JUMPDEST"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7799": {
      "op": "DUP1"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7804": {
      "op": "DUP5"
    },
    "7805": {
      "op": "DUP7"
    },
    "7806": {
      "op": "SUB"
    },
    "7807": {
      "op": "SLT"
    },
    "7808": {
      "op": "ISZERO"
    },
    "7809": {
      "op": "PUSH2",
      "value": "0x1E89"
    },
    "7812": {
      "op": "JUMPI"
    },
    "7813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7815": {
      "op": "DUP1"
    },
    "7816": {
      "op": "REVERT"
    },
    "7817": {
      "op": "JUMPDEST"
    },
    "7818": {
      "op": "DUP4"
    },
    "7819": {
      "op": "CALLDATALOAD"
    },
    "7820": {
      "op": "PUSH2",
      "value": "0x1E94"
    },
    "7823": {
      "op": "DUP2"
    },
    "7824": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "7827": {
      "jump": "i",
      "op": "JUMP"
    },
    "7828": {
      "op": "JUMPDEST"
    },
    "7829": {
      "op": "SWAP3"
    },
    "7830": {
      "op": "POP"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7833": {
      "op": "DUP5"
    },
    "7834": {
      "op": "ADD"
    },
    "7835": {
      "op": "CALLDATALOAD"
    },
    "7836": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "7839": {
      "op": "DUP2"
    },
    "7840": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "7843": {
      "jump": "i",
      "op": "JUMP"
    },
    "7844": {
      "op": "JUMPDEST"
    },
    "7845": {
      "op": "SWAP2"
    },
    "7846": {
      "op": "POP"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7849": {
      "op": "DUP5"
    },
    "7850": {
      "op": "ADD"
    },
    "7851": {
      "op": "CALLDATALOAD"
    },
    "7852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7858": {
      "op": "SHL"
    },
    "7859": {
      "op": "SUB"
    },
    "7860": {
      "op": "DUP2"
    },
    "7861": {
      "op": "GT"
    },
    "7862": {
      "op": "ISZERO"
    },
    "7863": {
      "op": "PUSH2",
      "value": "0x1EBF"
    },
    "7866": {
      "op": "JUMPI"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7869": {
      "op": "DUP1"
    },
    "7870": {
      "op": "REVERT"
    },
    "7871": {
      "op": "JUMPDEST"
    },
    "7872": {
      "op": "PUSH2",
      "value": "0x1ECB"
    },
    "7875": {
      "op": "DUP7"
    },
    "7876": {
      "op": "DUP3"
    },
    "7877": {
      "op": "DUP8"
    },
    "7878": {
      "op": "ADD"
    },
    "7879": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "7882": {
      "jump": "i",
      "op": "JUMP"
    },
    "7883": {
      "op": "JUMPDEST"
    },
    "7884": {
      "op": "SWAP2"
    },
    "7885": {
      "op": "POP"
    },
    "7886": {
      "op": "POP"
    },
    "7887": {
      "op": "SWAP3"
    },
    "7888": {
      "op": "POP"
    },
    "7889": {
      "op": "SWAP3"
    },
    "7890": {
      "op": "POP"
    },
    "7891": {
      "op": "SWAP3"
    },
    "7892": {
      "jump": "o",
      "op": "JUMP"
    },
    "7893": {
      "op": "JUMPDEST"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7898": {
      "op": "DUP1"
    },
    "7899": {
      "op": "DUP4"
    },
    "7900": {
      "op": "ADD"
    },
    "7901": {
      "op": "DUP2"
    },
    "7902": {
      "op": "DUP5"
    },
    "7903": {
      "op": "MSTORE"
    },
    "7904": {
      "op": "DUP1"
    },
    "7905": {
      "op": "DUP6"
    },
    "7906": {
      "op": "MLOAD"
    },
    "7907": {
      "op": "DUP1"
    },
    "7908": {
      "op": "DUP4"
    },
    "7909": {
      "op": "MSTORE"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7912": {
      "op": "SWAP3"
    },
    "7913": {
      "op": "POP"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "DUP7"
    },
    "7916": {
      "op": "ADD"
    },
    "7917": {
      "op": "SWAP2"
    },
    "7918": {
      "op": "POP"
    },
    "7919": {
      "op": "DUP3"
    },
    "7920": {
      "op": "DUP2"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7923": {
      "op": "SHL"
    },
    "7924": {
      "op": "DUP8"
    },
    "7925": {
      "op": "ADD"
    },
    "7926": {
      "op": "ADD"
    },
    "7927": {
      "op": "DUP5"
    },
    "7928": {
      "op": "DUP9"
    },
    "7929": {
      "op": "ADD"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7932": {
      "op": "JUMPDEST"
    },
    "7933": {
      "op": "DUP4"
    },
    "7934": {
      "op": "DUP2"
    },
    "7935": {
      "op": "LT"
    },
    "7936": {
      "op": "ISZERO"
    },
    "7937": {
      "op": "PUSH2",
      "value": "0x1F6B"
    },
    "7940": {
      "op": "JUMPI"
    },
    "7941": {
      "op": "DUP9"
    },
    "7942": {
      "op": "DUP4"
    },
    "7943": {
      "op": "SUB"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7946": {
      "op": "NOT"
    },
    "7947": {
      "op": "ADD"
    },
    "7948": {
      "op": "DUP6"
    },
    "7949": {
      "op": "MSTORE"
    },
    "7950": {
      "op": "DUP2"
    },
    "7951": {
      "op": "MLOAD"
    },
    "7952": {
      "op": "DUP1"
    },
    "7953": {
      "op": "MLOAD"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7960": {
      "op": "SHL"
    },
    "7961": {
      "op": "SUB"
    },
    "7962": {
      "op": "AND"
    },
    "7963": {
      "op": "DUP5"
    },
    "7964": {
      "op": "MSTORE"
    },
    "7965": {
      "op": "DUP8"
    },
    "7966": {
      "op": "DUP2"
    },
    "7967": {
      "op": "ADD"
    },
    "7968": {
      "op": "MLOAD"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7971": {
      "op": "DUP10"
    },
    "7972": {
      "op": "DUP7"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "DUP2"
    },
    "7975": {
      "op": "SWAP1"
    },
    "7976": {
      "op": "MSTORE"
    },
    "7977": {
      "op": "SWAP1"
    },
    "7978": {
      "op": "PUSH2",
      "value": "0x1F35"
    },
    "7981": {
      "op": "DUP3"
    },
    "7982": {
      "op": "DUP8"
    },
    "7983": {
      "op": "ADD"
    },
    "7984": {
      "op": "DUP3"
    },
    "7985": {
      "op": "PUSH2",
      "value": "0x1C41"
    },
    "7988": {
      "jump": "i",
      "op": "JUMP"
    },
    "7989": {
      "op": "JUMPDEST"
    },
    "7990": {
      "op": "DUP4"
    },
    "7991": {
      "op": "DUP11"
    },
    "7992": {
      "op": "ADD"
    },
    "7993": {
      "op": "MLOAD"
    },
    "7994": {
      "op": "DUP8"
    },
    "7995": {
      "op": "DUP12"
    },
    "7996": {
      "op": "ADD"
    },
    "7997": {
      "op": "MSTORE"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8000": {
      "op": "DUP1"
    },
    "8001": {
      "op": "DUP6"
    },
    "8002": {
      "op": "ADD"
    },
    "8003": {
      "op": "MLOAD"
    },
    "8004": {
      "op": "ISZERO"
    },
    "8005": {
      "op": "ISZERO"
    },
    "8006": {
      "op": "SWAP1"
    },
    "8007": {
      "op": "DUP9"
    },
    "8008": {
      "op": "ADD"
    },
    "8009": {
      "op": "MSTORE"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8012": {
      "op": "SWAP4"
    },
    "8013": {
      "op": "DUP5"
    },
    "8014": {
      "op": "ADD"
    },
    "8015": {
      "op": "MLOAD"
    },
    "8016": {
      "op": "ISZERO"
    },
    "8017": {
      "op": "ISZERO"
    },
    "8018": {
      "op": "SWAP4"
    },
    "8019": {
      "op": "SWAP1"
    },
    "8020": {
      "op": "SWAP7"
    },
    "8021": {
      "op": "ADD"
    },
    "8022": {
      "op": "SWAP3"
    },
    "8023": {
      "op": "SWAP1"
    },
    "8024": {
      "op": "SWAP3"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "op": "POP"
    },
    "8027": {
      "op": "POP"
    },
    "8028": {
      "op": "SWAP4"
    },
    "8029": {
      "op": "DUP7"
    },
    "8030": {
      "op": "ADD"
    },
    "8031": {
      "op": "SWAP4"
    },
    "8032": {
      "op": "SWAP1"
    },
    "8033": {
      "op": "DUP7"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "op": "SWAP1"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "PUSH2",
      "value": "0x1EFC"
    },
    "8042": {
      "op": "JUMP"
    },
    "8043": {
      "op": "JUMPDEST"
    },
    "8044": {
      "op": "POP"
    },
    "8045": {
      "op": "SWAP1"
    },
    "8046": {
      "op": "SWAP9"
    },
    "8047": {
      "op": "SWAP8"
    },
    "8048": {
      "op": "POP"
    },
    "8049": {
      "op": "POP"
    },
    "8050": {
      "op": "POP"
    },
    "8051": {
      "op": "POP"
    },
    "8052": {
      "op": "POP"
    },
    "8053": {
      "op": "POP"
    },
    "8054": {
      "op": "POP"
    },
    "8055": {
      "op": "POP"
    },
    "8056": {
      "jump": "o",
      "op": "JUMP"
    },
    "8057": {
      "op": "JUMPDEST"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8060": {
      "op": "DUP1"
    },
    "8061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8063": {
      "op": "DUP1"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8068": {
      "op": "DUP7"
    },
    "8069": {
      "op": "DUP9"
    },
    "8070": {
      "op": "SUB"
    },
    "8071": {
      "op": "SLT"
    },
    "8072": {
      "op": "ISZERO"
    },
    "8073": {
      "op": "PUSH2",
      "value": "0x1F91"
    },
    "8076": {
      "op": "JUMPI"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8079": {
      "op": "DUP1"
    },
    "8080": {
      "op": "REVERT"
    },
    "8081": {
      "op": "JUMPDEST"
    },
    "8082": {
      "op": "DUP6"
    },
    "8083": {
      "op": "CALLDATALOAD"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8090": {
      "op": "SHL"
    },
    "8091": {
      "op": "SUB"
    },
    "8092": {
      "op": "DUP1"
    },
    "8093": {
      "op": "DUP3"
    },
    "8094": {
      "op": "GT"
    },
    "8095": {
      "op": "ISZERO"
    },
    "8096": {
      "op": "PUSH2",
      "value": "0x1FA8"
    },
    "8099": {
      "op": "JUMPI"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8102": {
      "op": "DUP1"
    },
    "8103": {
      "op": "REVERT"
    },
    "8104": {
      "op": "JUMPDEST"
    },
    "8105": {
      "op": "DUP2"
    },
    "8106": {
      "op": "DUP9"
    },
    "8107": {
      "op": "ADD"
    },
    "8108": {
      "op": "SWAP2"
    },
    "8109": {
      "op": "POP"
    },
    "8110": {
      "op": "DUP9"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8113": {
      "op": "DUP4"
    },
    "8114": {
      "op": "ADD"
    },
    "8115": {
      "op": "SLT"
    },
    "8116": {
      "op": "PUSH2",
      "value": "0x1FBC"
    },
    "8119": {
      "op": "JUMPI"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8122": {
      "op": "DUP1"
    },
    "8123": {
      "op": "REVERT"
    },
    "8124": {
      "op": "JUMPDEST"
    },
    "8125": {
      "op": "DUP2"
    },
    "8126": {
      "op": "CALLDATALOAD"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8129": {
      "op": "DUP3"
    },
    "8130": {
      "op": "DUP3"
    },
    "8131": {
      "op": "GT"
    },
    "8132": {
      "op": "ISZERO"
    },
    "8133": {
      "op": "PUSH2",
      "value": "0x1FD0"
    },
    "8136": {
      "op": "JUMPI"
    },
    "8137": {
      "op": "PUSH2",
      "value": "0x1FD0"
    },
    "8140": {
      "op": "PUSH2",
      "value": "0x18E4"
    },
    "8143": {
      "jump": "i",
      "op": "JUMP"
    },
    "8144": {
      "op": "JUMPDEST"
    },
    "8145": {
      "op": "DUP2"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8148": {
      "op": "SHL"
    },
    "8149": {
      "op": "PUSH2",
      "value": "0x1FDF"
    },
    "8152": {
      "op": "DUP3"
    },
    "8153": {
      "op": "DUP3"
    },
    "8154": {
      "op": "ADD"
    },
    "8155": {
      "op": "PUSH2",
      "value": "0x18FA"
    },
    "8158": {
      "jump": "i",
      "op": "JUMP"
    },
    "8159": {
      "op": "JUMPDEST"
    },
    "8160": {
      "op": "SWAP3"
    },
    "8161": {
      "op": "DUP4"
    },
    "8162": {
      "op": "MSTORE"
    },
    "8163": {
      "op": "DUP5"
    },
    "8164": {
      "op": "DUP2"
    },
    "8165": {
      "op": "ADD"
    },
    "8166": {
      "op": "DUP3"
    },
    "8167": {
      "op": "ADD"
    },
    "8168": {
      "op": "SWAP3"
    },
    "8169": {
      "op": "DUP3"
    },
    "8170": {
      "op": "DUP2"
    },
    "8171": {
      "op": "ADD"
    },
    "8172": {
      "op": "SWAP1"
    },
    "8173": {
      "op": "DUP14"
    },
    "8174": {
      "op": "DUP6"
    },
    "8175": {
      "op": "GT"
    },
    "8176": {
      "op": "ISZERO"
    },
    "8177": {
      "op": "PUSH2",
      "value": "0x1FF9"
    },
    "8180": {
      "op": "JUMPI"
    },
    "8181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8183": {
      "op": "DUP1"
    },
    "8184": {
      "op": "REVERT"
    },
    "8185": {
      "op": "JUMPDEST"
    },
    "8186": {
      "op": "SWAP6"
    },
    "8187": {
      "op": "DUP4"
    },
    "8188": {
      "op": "ADD"
    },
    "8189": {
      "op": "SWAP6"
    },
    "8190": {
      "op": "JUMPDEST"
    },
    "8191": {
      "op": "DUP5"
    },
    "8192": {
      "op": "DUP8"
    },
    "8193": {
      "op": "LT"
    },
    "8194": {
      "op": "ISZERO"
    },
    "8195": {
      "op": "PUSH2",
      "value": "0x2017"
    },
    "8198": {
      "op": "JUMPI"
    },
    "8199": {
      "op": "DUP7"
    },
    "8200": {
      "op": "CALLDATALOAD"
    },
    "8201": {
      "op": "DUP3"
    },
    "8202": {
      "op": "MSTORE"
    },
    "8203": {
      "op": "SWAP6"
    },
    "8204": {
      "op": "DUP4"
    },
    "8205": {
      "op": "ADD"
    },
    "8206": {
      "op": "SWAP6"
    },
    "8207": {
      "op": "SWAP1"
    },
    "8208": {
      "op": "DUP4"
    },
    "8209": {
      "op": "ADD"
    },
    "8210": {
      "op": "SWAP1"
    },
    "8211": {
      "op": "PUSH2",
      "value": "0x1FFE"
    },
    "8214": {
      "op": "JUMP"
    },
    "8215": {
      "op": "JUMPDEST"
    },
    "8216": {
      "op": "SWAP11"
    },
    "8217": {
      "op": "POP"
    },
    "8218": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8221": {
      "op": "SWAP2"
    },
    "8222": {
      "op": "POP"
    },
    "8223": {
      "op": "POP"
    },
    "8224": {
      "op": "DUP11"
    },
    "8225": {
      "op": "DUP3"
    },
    "8226": {
      "op": "ADD"
    },
    "8227": {
      "op": "PUSH2",
      "value": "0x1D24"
    },
    "8230": {
      "jump": "i",
      "op": "JUMP"
    },
    "8231": {
      "op": "JUMPDEST"
    },
    "8232": {
      "op": "SWAP8"
    },
    "8233": {
      "op": "POP"
    },
    "8234": {
      "op": "POP"
    },
    "8235": {
      "op": "POP"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8238": {
      "op": "DUP9"
    },
    "8239": {
      "op": "ADD"
    },
    "8240": {
      "op": "CALLDATALOAD"
    },
    "8241": {
      "op": "SWAP2"
    },
    "8242": {
      "op": "POP"
    },
    "8243": {
      "op": "DUP1"
    },
    "8244": {
      "op": "DUP3"
    },
    "8245": {
      "op": "GT"
    },
    "8246": {
      "op": "ISZERO"
    },
    "8247": {
      "op": "PUSH2",
      "value": "0x203F"
    },
    "8250": {
      "op": "JUMPI"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8253": {
      "op": "DUP1"
    },
    "8254": {
      "op": "REVERT"
    },
    "8255": {
      "op": "JUMPDEST"
    },
    "8256": {
      "op": "PUSH2",
      "value": "0x204B"
    },
    "8259": {
      "op": "DUP10"
    },
    "8260": {
      "op": "DUP4"
    },
    "8261": {
      "op": "DUP11"
    },
    "8262": {
      "op": "ADD"
    },
    "8263": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "8266": {
      "jump": "i",
      "op": "JUMP"
    },
    "8267": {
      "op": "JUMPDEST"
    },
    "8268": {
      "op": "SWAP5"
    },
    "8269": {
      "op": "POP"
    },
    "8270": {
      "op": "PUSH2",
      "value": "0x2059"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8275": {
      "op": "DUP10"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "PUSH2",
      "value": "0x19BF"
    },
    "8280": {
      "jump": "i",
      "op": "JUMP"
    },
    "8281": {
      "op": "JUMPDEST"
    },
    "8282": {
      "op": "SWAP4"
    },
    "8283": {
      "op": "POP"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8286": {
      "op": "DUP9"
    },
    "8287": {
      "op": "ADD"
    },
    "8288": {
      "op": "CALLDATALOAD"
    },
    "8289": {
      "op": "SWAP2"
    },
    "8290": {
      "op": "POP"
    },
    "8291": {
      "op": "DUP1"
    },
    "8292": {
      "op": "DUP3"
    },
    "8293": {
      "op": "GT"
    },
    "8294": {
      "op": "ISZERO"
    },
    "8295": {
      "op": "PUSH2",
      "value": "0x1ADC"
    },
    "8298": {
      "op": "JUMPI"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8301": {
      "op": "DUP1"
    },
    "8302": {
      "op": "REVERT"
    },
    "8303": {
      "op": "JUMPDEST"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8306": {
      "op": "DUP1"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8309": {
      "op": "DUP1"
    },
    "8310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8312": {
      "op": "DUP1"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8317": {
      "op": "DUP9"
    },
    "8318": {
      "op": "DUP11"
    },
    "8319": {
      "op": "SUB"
    },
    "8320": {
      "op": "SLT"
    },
    "8321": {
      "op": "ISZERO"
    },
    "8322": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "8325": {
      "op": "JUMPI"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8328": {
      "op": "DUP1"
    },
    "8329": {
      "op": "REVERT"
    },
    "8330": {
      "op": "JUMPDEST"
    },
    "8331": {
      "op": "DUP8"
    },
    "8332": {
      "op": "CALLDATALOAD"
    },
    "8333": {
      "op": "PUSH2",
      "value": "0x2095"
    },
    "8336": {
      "op": "DUP2"
    },
    "8337": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "8340": {
      "jump": "i",
      "op": "JUMP"
    },
    "8341": {
      "op": "JUMPDEST"
    },
    "8342": {
      "op": "SWAP7"
    },
    "8343": {
      "op": "POP"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8346": {
      "op": "DUP9"
    },
    "8347": {
      "op": "ADD"
    },
    "8348": {
      "op": "CALLDATALOAD"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8355": {
      "op": "SHL"
    },
    "8356": {
      "op": "SUB"
    },
    "8357": {
      "op": "DUP1"
    },
    "8358": {
      "op": "DUP3"
    },
    "8359": {
      "op": "GT"
    },
    "8360": {
      "op": "ISZERO"
    },
    "8361": {
      "op": "PUSH2",
      "value": "0x20B1"
    },
    "8364": {
      "op": "JUMPI"
    },
    "8365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8367": {
      "op": "DUP1"
    },
    "8368": {
      "op": "REVERT"
    },
    "8369": {
      "op": "JUMPDEST"
    },
    "8370": {
      "op": "PUSH2",
      "value": "0x20BD"
    },
    "8373": {
      "op": "DUP12"
    },
    "8374": {
      "op": "DUP4"
    },
    "8375": {
      "op": "DUP13"
    },
    "8376": {
      "op": "ADD"
    },
    "8377": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "8380": {
      "jump": "i",
      "op": "JUMP"
    },
    "8381": {
      "op": "JUMPDEST"
    },
    "8382": {
      "op": "SWAP8"
    },
    "8383": {
      "op": "POP"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8386": {
      "op": "DUP11"
    },
    "8387": {
      "op": "ADD"
    },
    "8388": {
      "op": "CALLDATALOAD"
    },
    "8389": {
      "op": "SWAP2"
    },
    "8390": {
      "op": "POP"
    },
    "8391": {
      "op": "DUP1"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "GT"
    },
    "8394": {
      "op": "ISZERO"
    },
    "8395": {
      "op": "PUSH2",
      "value": "0x20D3"
    },
    "8398": {
      "op": "JUMPI"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8401": {
      "op": "DUP1"
    },
    "8402": {
      "op": "REVERT"
    },
    "8403": {
      "op": "JUMPDEST"
    },
    "8404": {
      "op": "PUSH2",
      "value": "0x20DF"
    },
    "8407": {
      "op": "DUP12"
    },
    "8408": {
      "op": "DUP4"
    },
    "8409": {
      "op": "DUP13"
    },
    "8410": {
      "op": "ADD"
    },
    "8411": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "8414": {
      "jump": "i",
      "op": "JUMP"
    },
    "8415": {
      "op": "JUMPDEST"
    },
    "8416": {
      "op": "SWAP7"
    },
    "8417": {
      "op": "POP"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8420": {
      "op": "DUP11"
    },
    "8421": {
      "op": "ADD"
    },
    "8422": {
      "op": "CALLDATALOAD"
    },
    "8423": {
      "op": "SWAP2"
    },
    "8424": {
      "op": "POP"
    },
    "8425": {
      "op": "PUSH2",
      "value": "0x20F1"
    },
    "8428": {
      "op": "DUP3"
    },
    "8429": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "8432": {
      "jump": "i",
      "op": "JUMP"
    },
    "8433": {
      "op": "JUMPDEST"
    },
    "8434": {
      "op": "DUP2"
    },
    "8435": {
      "op": "SWAP6"
    },
    "8436": {
      "op": "POP"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8439": {
      "op": "DUP11"
    },
    "8440": {
      "op": "ADD"
    },
    "8441": {
      "op": "CALLDATALOAD"
    },
    "8442": {
      "op": "SWAP5"
    },
    "8443": {
      "op": "POP"
    },
    "8444": {
      "op": "PUSH2",
      "value": "0x2107"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8449": {
      "op": "DUP12"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "PUSH2",
      "value": "0x19BF"
    },
    "8454": {
      "jump": "i",
      "op": "JUMP"
    },
    "8455": {
      "op": "JUMPDEST"
    },
    "8456": {
      "op": "SWAP4"
    },
    "8457": {
      "op": "POP"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8460": {
      "op": "DUP11"
    },
    "8461": {
      "op": "ADD"
    },
    "8462": {
      "op": "CALLDATALOAD"
    },
    "8463": {
      "op": "SWAP2"
    },
    "8464": {
      "op": "POP"
    },
    "8465": {
      "op": "DUP1"
    },
    "8466": {
      "op": "DUP3"
    },
    "8467": {
      "op": "GT"
    },
    "8468": {
      "op": "ISZERO"
    },
    "8469": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "8472": {
      "op": "JUMPI"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8475": {
      "op": "DUP1"
    },
    "8476": {
      "op": "REVERT"
    },
    "8477": {
      "op": "JUMPDEST"
    },
    "8478": {
      "op": "POP"
    },
    "8479": {
      "op": "PUSH2",
      "value": "0x212A"
    },
    "8482": {
      "op": "DUP11"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "DUP12"
    },
    "8485": {
      "op": "ADD"
    },
    "8486": {
      "op": "PUSH2",
      "value": "0x1951"
    },
    "8489": {
      "jump": "i",
      "op": "JUMP"
    },
    "8490": {
      "op": "JUMPDEST"
    },
    "8491": {
      "op": "SWAP2"
    },
    "8492": {
      "op": "POP"
    },
    "8493": {
      "op": "POP"
    },
    "8494": {
      "op": "SWAP3"
    },
    "8495": {
      "op": "SWAP6"
    },
    "8496": {
      "op": "SWAP9"
    },
    "8497": {
      "op": "SWAP2"
    },
    "8498": {
      "op": "SWAP5"
    },
    "8499": {
      "op": "SWAP8"
    },
    "8500": {
      "op": "POP"
    },
    "8501": {
      "op": "SWAP3"
    },
    "8502": {
      "op": "SWAP6"
    },
    "8503": {
      "op": "POP"
    },
    "8504": {
      "jump": "o",
      "op": "JUMP"
    },
    "8505": {
      "op": "JUMPDEST"
    },
    "8506": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "8539": {
      "op": "DUP2"
    },
    "8540": {
      "op": "MSTORE"
    },
    "8541": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8576": {
      "op": "DUP3"
    },
    "8577": {
      "op": "ADD"
    },
    "8578": {
      "op": "MSTORE"
    },
    "8579": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8600": {
      "op": "SHL"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8603": {
      "op": "DUP3"
    },
    "8604": {
      "op": "ADD"
    },
    "8605": {
      "op": "MSTORE"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "8608": {
      "op": "ADD"
    },
    "8609": {
      "op": "SWAP1"
    },
    "8610": {
      "jump": "o",
      "op": "JUMP"
    },
    "8611": {
      "op": "JUMPDEST"
    },
    "8612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8614": {
      "op": "DUP3"
    },
    "8615": {
      "op": "MLOAD"
    },
    "8616": {
      "op": "PUSH2",
      "value": "0x21B5"
    },
    "8619": {
      "op": "DUP2"
    },
    "8620": {
      "op": "DUP5"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8623": {
      "op": "DUP8"
    },
    "8624": {
      "op": "ADD"
    },
    "8625": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "8628": {
      "jump": "i",
      "op": "JUMP"
    },
    "8629": {
      "op": "JUMPDEST"
    },
    "8630": {
      "op": "SWAP2"
    },
    "8631": {
      "op": "SWAP1"
    },
    "8632": {
      "op": "SWAP2"
    },
    "8633": {
      "op": "ADD"
    },
    "8634": {
      "op": "SWAP3"
    },
    "8635": {
      "op": "SWAP2"
    },
    "8636": {
      "op": "POP"
    },
    "8637": {
      "op": "POP"
    },
    "8638": {
      "jump": "o",
      "op": "JUMP"
    },
    "8639": {
      "op": "JUMPDEST"
    },
    "8640": {
      "op": "SWAP5"
    },
    "8641": {
      "op": "DUP6"
    },
    "8642": {
      "op": "MSTORE"
    },
    "8643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8645": {
      "op": "DUP6"
    },
    "8646": {
      "op": "ADD"
    },
    "8647": {
      "op": "SWAP4"
    },
    "8648": {
      "op": "SWAP1"
    },
    "8649": {
      "op": "SWAP4"
    },
    "8650": {
      "op": "MSTORE"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8653": {
      "op": "DUP5"
    },
    "8654": {
      "op": "ADD"
    },
    "8655": {
      "op": "SWAP2"
    },
    "8656": {
      "op": "SWAP1"
    },
    "8657": {
      "op": "SWAP2"
    },
    "8658": {
      "op": "MSTORE"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8661": {
      "op": "DUP4"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "MSTORE"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8670": {
      "op": "SHL"
    },
    "8671": {
      "op": "SUB"
    },
    "8672": {
      "op": "AND"
    },
    "8673": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8675": {
      "op": "DUP3"
    },
    "8676": {
      "op": "ADD"
    },
    "8677": {
      "op": "MSTORE"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8680": {
      "op": "ADD"
    },
    "8681": {
      "op": "SWAP1"
    },
    "8682": {
      "jump": "o",
      "op": "JUMP"
    },
    "8683": {
      "op": "JUMPDEST"
    },
    "8684": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8689": {
      "op": "SHL"
    },
    "8690": {
      "op": "DUP2"
    },
    "8691": {
      "op": "MSTORE"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8694": {
      "op": "DUP2"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "op": "SWAP3"
    },
    "8697": {
      "op": "SWAP1"
    },
    "8698": {
      "op": "SWAP3"
    },
    "8699": {
      "op": "MSTORE"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8702": {
      "op": "DUP3"
    },
    "8703": {
      "op": "ADD"
    },
    "8704": {
      "op": "MSTORE"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "8707": {
      "op": "ADD"
    },
    "8708": {
      "op": "SWAP1"
    },
    "8709": {
      "jump": "o",
      "op": "JUMP"
    },
    "8710": {
      "op": "JUMPDEST"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8715": {
      "op": "DUP3"
    },
    "8716": {
      "op": "DUP5"
    },
    "8717": {
      "op": "SUB"
    },
    "8718": {
      "op": "SLT"
    },
    "8719": {
      "op": "ISZERO"
    },
    "8720": {
      "op": "PUSH2",
      "value": "0x2218"
    },
    "8723": {
      "op": "JUMPI"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8726": {
      "op": "DUP1"
    },
    "8727": {
      "op": "REVERT"
    },
    "8728": {
      "op": "JUMPDEST"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "op": "MLOAD"
    },
    "8731": {
      "op": "SWAP2"
    },
    "8732": {
      "op": "SWAP1"
    },
    "8733": {
      "op": "POP"
    },
    "8734": {
      "jump": "o",
      "op": "JUMP"
    },
    "8735": {
      "op": "JUMPDEST"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8738": {
      "op": "DUP3"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8741": {
      "op": "DUP4"
    },
    "8742": {
      "op": "ADD"
    },
    "8743": {
      "op": "SLT"
    },
    "8744": {
      "op": "PUSH2",
      "value": "0x2230"
    },
    "8747": {
      "op": "JUMPI"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8750": {
      "op": "DUP1"
    },
    "8751": {
      "op": "REVERT"
    },
    "8752": {
      "op": "JUMPDEST"
    },
    "8753": {
      "op": "DUP2"
    },
    "8754": {
      "op": "MLOAD"
    },
    "8755": {
      "op": "PUSH2",
      "value": "0x223E"
    },
    "8758": {
      "op": "PUSH2",
      "value": "0x1970"
    },
    "8761": {
      "op": "DUP3"
    },
    "8762": {
      "op": "PUSH2",
      "value": "0x192A"
    },
    "8765": {
      "jump": "i",
      "op": "JUMP"
    },
    "8766": {
      "op": "JUMPDEST"
    },
    "8767": {
      "op": "DUP2"
    },
    "8768": {
      "op": "DUP2"
    },
    "8769": {
      "op": "MSTORE"
    },
    "8770": {
      "op": "DUP5"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8773": {
      "op": "DUP4"
    },
    "8774": {
      "op": "DUP7"
    },
    "8775": {
      "op": "ADD"
    },
    "8776": {
      "op": "ADD"
    },
    "8777": {
      "op": "GT"
    },
    "8778": {
      "op": "ISZERO"
    },
    "8779": {
      "op": "PUSH2",
      "value": "0x2253"
    },
    "8782": {
      "op": "JUMPI"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8785": {
      "op": "DUP1"
    },
    "8786": {
      "op": "REVERT"
    },
    "8787": {
      "op": "JUMPDEST"
    },
    "8788": {
      "op": "PUSH2",
      "value": "0x2264"
    },
    "8791": {
      "op": "DUP3"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8794": {
      "op": "DUP4"
    },
    "8795": {
      "op": "ADD"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8798": {
      "op": "DUP8"
    },
    "8799": {
      "op": "ADD"
    },
    "8800": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "8803": {
      "jump": "i",
      "op": "JUMP"
    },
    "8804": {
      "op": "JUMPDEST"
    },
    "8805": {
      "op": "SWAP5"
    },
    "8806": {
      "op": "SWAP4"
    },
    "8807": {
      "op": "POP"
    },
    "8808": {
      "op": "POP"
    },
    "8809": {
      "op": "POP"
    },
    "8810": {
      "op": "POP"
    },
    "8811": {
      "jump": "o",
      "op": "JUMP"
    },
    "8812": {
      "op": "JUMPDEST"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8815": {
      "op": "DUP1"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8818": {
      "op": "DUP1"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8823": {
      "op": "DUP7"
    },
    "8824": {
      "op": "DUP9"
    },
    "8825": {
      "op": "SUB"
    },
    "8826": {
      "op": "SLT"
    },
    "8827": {
      "op": "ISZERO"
    },
    "8828": {
      "op": "PUSH2",
      "value": "0x2284"
    },
    "8831": {
      "op": "JUMPI"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8834": {
      "op": "DUP1"
    },
    "8835": {
      "op": "REVERT"
    },
    "8836": {
      "op": "JUMPDEST"
    },
    "8837": {
      "op": "DUP6"
    },
    "8838": {
      "op": "MLOAD"
    },
    "8839": {
      "op": "PUSH2",
      "value": "0x228F"
    },
    "8842": {
      "op": "DUP2"
    },
    "8843": {
      "op": "PUSH2",
      "value": "0x19A7"
    },
    "8846": {
      "jump": "i",
      "op": "JUMP"
    },
    "8847": {
      "op": "JUMPDEST"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8850": {
      "op": "DUP8"
    },
    "8851": {
      "op": "ADD"
    },
    "8852": {
      "op": "MLOAD"
    },
    "8853": {
      "op": "SWAP1"
    },
    "8854": {
      "op": "SWAP6"
    },
    "8855": {
      "op": "POP"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8862": {
      "op": "SHL"
    },
    "8863": {
      "op": "SUB"
    },
    "8864": {
      "op": "DUP2"
    },
    "8865": {
      "op": "GT"
    },
    "8866": {
      "op": "ISZERO"
    },
    "8867": {
      "op": "PUSH2",
      "value": "0x22AB"
    },
    "8870": {
      "op": "JUMPI"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8873": {
      "op": "DUP1"
    },
    "8874": {
      "op": "REVERT"
    },
    "8875": {
      "op": "JUMPDEST"
    },
    "8876": {
      "op": "PUSH2",
      "value": "0x22B7"
    },
    "8879": {
      "op": "DUP9"
    },
    "8880": {
      "op": "DUP3"
    },
    "8881": {
      "op": "DUP10"
    },
    "8882": {
      "op": "ADD"
    },
    "8883": {
      "op": "PUSH2",
      "value": "0x221F"
    },
    "8886": {
      "jump": "i",
      "op": "JUMP"
    },
    "8887": {
      "op": "JUMPDEST"
    },
    "8888": {
      "op": "SWAP5"
    },
    "8889": {
      "op": "POP"
    },
    "8890": {
      "op": "POP"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8893": {
      "op": "DUP7"
    },
    "8894": {
      "op": "ADD"
    },
    "8895": {
      "op": "MLOAD"
    },
    "8896": {
      "op": "SWAP3"
    },
    "8897": {
      "op": "POP"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8900": {
      "op": "DUP7"
    },
    "8901": {
      "op": "ADD"
    },
    "8902": {
      "op": "MLOAD"
    },
    "8903": {
      "op": "PUSH2",
      "value": "0x22CF"
    },
    "8906": {
      "op": "DUP2"
    },
    "8907": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "8910": {
      "jump": "i",
      "op": "JUMP"
    },
    "8911": {
      "op": "JUMPDEST"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8914": {
      "op": "DUP8"
    },
    "8915": {
      "op": "ADD"
    },
    "8916": {
      "op": "MLOAD"
    },
    "8917": {
      "op": "SWAP1"
    },
    "8918": {
      "op": "SWAP3"
    },
    "8919": {
      "op": "POP"
    },
    "8920": {
      "op": "PUSH2",
      "value": "0x22E0"
    },
    "8923": {
      "op": "DUP2"
    },
    "8924": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "8927": {
      "jump": "i",
      "op": "JUMP"
    },
    "8928": {
      "op": "JUMPDEST"
    },
    "8929": {
      "op": "DUP1"
    },
    "8930": {
      "op": "SWAP2"
    },
    "8931": {
      "op": "POP"
    },
    "8932": {
      "op": "POP"
    },
    "8933": {
      "op": "SWAP3"
    },
    "8934": {
      "op": "SWAP6"
    },
    "8935": {
      "op": "POP"
    },
    "8936": {
      "op": "SWAP3"
    },
    "8937": {
      "op": "SWAP6"
    },
    "8938": {
      "op": "SWAP1"
    },
    "8939": {
      "op": "SWAP4"
    },
    "8940": {
      "op": "POP"
    },
    "8941": {
      "jump": "o",
      "op": "JUMP"
    },
    "8942": {
      "op": "JUMPDEST"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8947": {
      "op": "DUP3"
    },
    "8948": {
      "op": "DUP5"
    },
    "8949": {
      "op": "SUB"
    },
    "8950": {
      "op": "SLT"
    },
    "8951": {
      "op": "ISZERO"
    },
    "8952": {
      "op": "PUSH2",
      "value": "0x2300"
    },
    "8955": {
      "op": "JUMPI"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8958": {
      "op": "DUP1"
    },
    "8959": {
      "op": "REVERT"
    },
    "8960": {
      "op": "JUMPDEST"
    },
    "8961": {
      "op": "DUP2"
    },
    "8962": {
      "op": "MLOAD"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8969": {
      "op": "SHL"
    },
    "8970": {
      "op": "SUB"
    },
    "8971": {
      "op": "DUP2"
    },
    "8972": {
      "op": "GT"
    },
    "8973": {
      "op": "ISZERO"
    },
    "8974": {
      "op": "PUSH2",
      "value": "0x2316"
    },
    "8977": {
      "op": "JUMPI"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8980": {
      "op": "DUP1"
    },
    "8981": {
      "op": "REVERT"
    },
    "8982": {
      "op": "JUMPDEST"
    },
    "8983": {
      "op": "PUSH2",
      "value": "0x2264"
    },
    "8986": {
      "op": "DUP5"
    },
    "8987": {
      "op": "DUP3"
    },
    "8988": {
      "op": "DUP6"
    },
    "8989": {
      "op": "ADD"
    },
    "8990": {
      "op": "PUSH2",
      "value": "0x221F"
    },
    "8993": {
      "jump": "i",
      "op": "JUMP"
    },
    "8994": {
      "op": "JUMPDEST"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8999": {
      "op": "DUP3"
    },
    "9000": {
      "op": "DUP5"
    },
    "9001": {
      "op": "SUB"
    },
    "9002": {
      "op": "SLT"
    },
    "9003": {
      "op": "ISZERO"
    },
    "9004": {
      "op": "PUSH2",
      "value": "0x2334"
    },
    "9007": {
      "op": "JUMPI"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9010": {
      "op": "DUP1"
    },
    "9011": {
      "op": "REVERT"
    },
    "9012": {
      "op": "JUMPDEST"
    },
    "9013": {
      "op": "DUP2"
    },
    "9014": {
      "op": "MLOAD"
    },
    "9015": {
      "op": "PUSH2",
      "value": "0x1CBB"
    },
    "9018": {
      "op": "DUP2"
    },
    "9019": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "9022": {
      "jump": "i",
      "op": "JUMP"
    },
    "9023": {
      "op": "JUMPDEST"
    },
    "9024": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9031": {
      "op": "SHL"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9034": {
      "op": "MSTORE"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9039": {
      "op": "MSTORE"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9044": {
      "op": "REVERT"
    },
    "9045": {
      "op": "JUMPDEST"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9050": {
      "op": "NOT"
    },
    "9051": {
      "op": "DUP3"
    },
    "9052": {
      "op": "EQ"
    },
    "9053": {
      "op": "ISZERO"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x2377"
    },
    "9057": {
      "op": "JUMPI"
    },
    "9058": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9063": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9065": {
      "op": "SHL"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9068": {
      "op": "MSTORE"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9073": {
      "op": "MSTORE"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9078": {
      "op": "REVERT"
    },
    "9079": {
      "op": "JUMPDEST"
    },
    "9080": {
      "op": "POP"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9083": {
      "op": "ADD"
    },
    "9084": {
      "op": "SWAP1"
    },
    "9085": {
      "jump": "o",
      "op": "JUMP"
    },
    "9086": {
      "op": "JUMPDEST"
    },
    "9087": {
      "op": "DUP2"
    },
    "9088": {
      "op": "MLOAD"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9091": {
      "op": "SWAP1"
    },
    "9092": {
      "op": "DUP3"
    },
    "9093": {
      "op": "SWAP1"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9096": {
      "op": "DUP1"
    },
    "9097": {
      "op": "DUP7"
    },
    "9098": {
      "op": "ADD"
    },
    "9099": {
      "op": "DUP5"
    },
    "9100": {
      "op": "JUMPDEST"
    },
    "9101": {
      "op": "DUP4"
    },
    "9102": {
      "op": "DUP2"
    },
    "9103": {
      "op": "LT"
    },
    "9104": {
      "op": "ISZERO"
    },
    "9105": {
      "op": "PUSH2",
      "value": "0x23A8"
    },
    "9108": {
      "op": "JUMPI"
    },
    "9109": {
      "op": "DUP2"
    },
    "9110": {
      "op": "MLOAD"
    },
    "9111": {
      "op": "DUP6"
    },
    "9112": {
      "op": "MSTORE"
    },
    "9113": {
      "op": "SWAP4"
    },
    "9114": {
      "op": "DUP3"
    },
    "9115": {
      "op": "ADD"
    },
    "9116": {
      "op": "SWAP4"
    },
    "9117": {
      "op": "SWAP1"
    },
    "9118": {
      "op": "DUP3"
    },
    "9119": {
      "op": "ADD"
    },
    "9120": {
      "op": "SWAP1"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "ADD"
    },
    "9124": {
      "op": "PUSH2",
      "value": "0x238C"
    },
    "9127": {
      "op": "JUMP"
    },
    "9128": {
      "op": "JUMPDEST"
    },
    "9129": {
      "op": "POP"
    },
    "9130": {
      "op": "SWAP3"
    },
    "9131": {
      "op": "SWAP7"
    },
    "9132": {
      "op": "SWAP6"
    },
    "9133": {
      "op": "POP"
    },
    "9134": {
      "op": "POP"
    },
    "9135": {
      "op": "POP"
    },
    "9136": {
      "op": "POP"
    },
    "9137": {
      "op": "POP"
    },
    "9138": {
      "op": "POP"
    },
    "9139": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "29f4f06280f5a1746568088442ed89a7a27c1c2f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"../../interfaces/ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract CLHouseApi {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            signR := mload( add( _signature, 32 ) )\n            // second 32 bytes\n            signS := mload( add( _signature, 64 ) )\n            // final byte (first byte of the next 32 bytes)\n            signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isUser true if is User\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isUser,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdUser( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strUser memory houseUser;\n\n        (   houseUser.walletAddr,\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n        require( true == houseUser.isUser  , \"Is not a user\" );\n\n        return (\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager\n        );\n    }\n\n    /// @notice The list of all users address\n    /// @param _houseAddr address of the CLH\n    /// @return arrUsers array with list of users\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strUser[] memory arrUsers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 numUsers = daoCLH.numUsers( );\n        uint256 arrUsersLength = daoCLH.GetArrUsersLength();\n        strUser[] memory _arrUsers = new strUser[] ( numUsers );\n\n        uint256 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrUsersLength ; uid++ ) {\n            strUser memory houseUser;\n\n            (   houseUser.walletAddr,\n                houseUser.name,\n                houseUser.balance,\n                houseUser.isUser,\n                houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n            if( true == houseUser.isUser ){\n                _arrUsers[ index ] = houseUser;\n                index++;\n            }\n        }\n        return _arrUsers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return houseOpen True if is Open\n    /// @return numUsers Current users of a CLH\n    /// @return numManagers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n    /// @return govRuleMaxUsers Max of all users (including managers)\n    /// @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            bool houseOpen,\n            uint256 numUsers,\n            uint256 numManagers,\n            uint256 govRuleApprovPercentage,\n            uint256 govRuleMaxUsers,\n            uint256 govRuleMaxManagers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.houseOpen(),\n            daoCLH.numUsers(),\n            daoCLH.numManagers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxUsers(),\n            daoCLH.govRuleMaxManagers()\n        );\n    }\n\n\n    function SignerOCInvit(\n        bool _acceptance,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCBulkVote(\n        uint256[] memory _propIds,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCBULKVOTE_HASH__,\n                keccak256( abi.encodePacked( _propIds ) ),\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCDelUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCDELUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCRequest(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256 _govRuleMaxUsers,\n        uint256 _govRuleMaxManagers,\n        uint256 _govRuleApprovPercentage,\n        address _whiteListNFT,\n        address _whiteListWallets,\n        address _addrCLF,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _addrCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRuleMaxUsers,\n                _govRuleMaxManagers,\n                _govRuleApprovPercentage,\n                _whiteListNFT,\n                _whiteListWallets\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n    function SignerOCNewLock(\n        uint256 _expirationDuration,\n        uint256 _keyPrice,\n        uint256 _maxNumberOfKeys,\n        string memory _lockName,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWLOCK_HASH__,\n                _expirationDuration,\n                _keyPrice,\n                _maxNumberOfKeys,\n                keccak256( abi.encodePacked( _lockName ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "223:12661:46:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/APICLH/CLHouseApi.sol",
  "type": "contract"
}