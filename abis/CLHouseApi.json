{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "houseOpen",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxManagers",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUser",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strUser[]",
          "name": "arrUsers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCDelUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whiteListWallets",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addrCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "46": "contracts/APICLH/CLHouseApi.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "61": "interfaces/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/APICLH/CLHouseApi.sol",
    "exportedSymbols": {
      "CLHouseApi": [
        898
      ],
      "DebugDLGTCLL": [
        9344
      ],
      "ICLHouse": [
        5863
      ],
      "InvalidGovernanceType": [
        9338
      ],
      "__CONTRACT_NAME_HASH__": [
        9370
      ],
      "__CONTRACT_VERSION_HASH__": [
        9375
      ],
      "__GOV_COMMITTEE__": [
        9360
      ],
      "__GOV_DICTATORSHIP__": [
        9355
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9365
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9383
      ],
      "__STR_OCDELUSER_HASH__": [
        9415
      ],
      "__STR_OCINVIT_HASH__": [
        9391
      ],
      "__STR_OCNEWCLH_HASH__": [
        9431
      ],
      "__STR_OCNEWUSER_HASH__": [
        9407
      ],
      "__STR_OCREQUEST_HASH__": [
        9423
      ],
      "__STR_OCVOTE_HASH__": [
        9399
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9350
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9347
      ],
      "assetsEvent": [
        9445
      ],
      "eCLC": [
        9468
      ],
      "gRule": [
        9463
      ],
      "proposalEvent": [
        9449
      ],
      "proposalType": [
        9459
      ],
      "strDataGovRules": [
        9525
      ],
      "strDataTxAssets": [
        9522
      ],
      "strDataUser": [
        9513
      ],
      "strProposal": [
        9499
      ],
      "strUser": [
        9479
      ],
      "strVote": [
        9506
      ],
      "userEvent": [
        9438
      ]
    },
    "id": 899,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:46"
      },
      {
        "absolutePath": "interfaces/ICLHouse.sol",
        "file": "../../interfaces/ICLHouse.sol",
        "id": 229,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 899,
        "sourceUnit": 5864,
        "src": "58:39:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CLHouseApi",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 230,
          "nodeType": "StructuredDocumentation",
          "src": "99:124:46",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 898,
        "linearizedBaseContracts": [
          898
        ],
        "name": "CLHouseApi",
        "nameLocation": "232:10:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "598:546:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 241,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "617:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "617:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "638:2:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "617:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "642:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "608:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "608:58:46"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "685:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "677:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "677:13:46"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "708:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "700:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:13:46"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "729:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "723:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "723:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "723:11:46"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "754:324:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "823:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "856:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "839:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "839:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "832:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "823:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "906:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "927:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "939:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "922:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "922:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "915:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "906:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1018:50:46",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1048:10:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1060:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1043:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1043:21:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1036:5:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1036:30:46"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1027:4:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1027:41:46"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "1018:5:46"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1048:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "844:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "927:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 249,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "823:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 252,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "906:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 255,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1018:5:46",
                      "valueSize": 1
                    }
                  ],
                  "id": 257,
                  "nodeType": "InlineAssembly",
                  "src": "745:333:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 259,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1106:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 260,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "1116:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 261,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1123:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 262,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "1130:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 258,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1095:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "1088:49:46"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "250:197:46",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "461:11:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "491:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "482:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "522:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "509:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:66:46"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "584:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:11:46"
            },
            "scope": 898,
            "src": "452:692:46",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "1765:601:46",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1784:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1775:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5863",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 282,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5863,
                          "src": "1775:8:46"
                        },
                        "referencedDeclaration": 5863,
                        "src": "1775:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5863",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "1803:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5863,
                      "src": "1793:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5863_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5863",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1775:40:46"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1834:3:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1826:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1826:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 293,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "1858:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 291,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1840:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5863",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5748,
                      "src": "1840:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:45:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1891:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 298,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "1896:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1891:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1902:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1882:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:43:46"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "houseUser",
                      "nameLocation": "1951:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1936:24:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                        "typeString": "struct strUser"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "strUser",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9479,
                          "src": "1936:7:46"
                        },
                        "referencedDeclaration": 9479,
                        "src": "1936:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strUser_$9479_storage_ptr",
                          "typeString": "struct strUser"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1936:24:46"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 307,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1975:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9470,
                          "src": "1975:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 310,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2009:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9472,
                          "src": "2009:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 312,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2037:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9474,
                          "src": "2037:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 314,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2068:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9476,
                          "src": "2068:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 316,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2098:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9478,
                          "src": "2098:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 318,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1971:148:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 321,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "2139:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 319,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "2122:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$5863",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5690,
                        "src": "2122:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2122:22:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1971:173:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:173:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2164:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 327,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2172:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9476,
                          "src": "2172:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2164:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4973206e6f7420612075736572",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        },
                        "value": "Is not a user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2155:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:54:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:54:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 333,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2241:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9472,
                        "src": "2241:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 335,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2269:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9474,
                        "src": "2269:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 337,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2300:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9476,
                        "src": "2300:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 339,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2330:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9478,
                        "src": "2330:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 341,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2227:132:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 281,
                  "id": 342,
                  "nodeType": "Return",
                  "src": "2220:139:46"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "1150:346:46",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isUser true if is User\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1510:20:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1548:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1540:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1576:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1568:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:63:46"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1667:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1653:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1690:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1685:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "isUser",
                  "nameLocation": "1716:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1711:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1741:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1736:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:121:46"
            },
            "scope": 898,
            "src": "1501:865:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "2672:735:46",
              "statements": [
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2691:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2682:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5863",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5863,
                          "src": "2682:8:46"
                        },
                        "referencedDeclaration": 5863,
                        "src": "2682:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5863",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "2710:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 357,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5863,
                      "src": "2700:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5863_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5863",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2682:40:46"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "numUsers",
                      "nameLocation": "2741:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2733:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2733:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 363,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2752:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5863",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5655,
                      "src": "2752:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:18:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2733:37:46"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "arrUsersLength",
                      "nameLocation": "2788:14:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2780:22:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 369,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2805:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5863",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrUsersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5773,
                      "src": "2805:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:51:46"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "_arrUsers",
                      "nameLocation": "2858:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2841:26:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9479_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strUser[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 375,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 374,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9479,
                            "src": "2841:7:46"
                          },
                          "referencedDeclaration": 9479,
                          "src": "2841:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9479_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 376,
                        "nodeType": "ArrayTypeName",
                        "src": "2841:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9479_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "numUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2886:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2870:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strUser_$9479_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strUser memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 379,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 378,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9479,
                            "src": "2874:7:46"
                          },
                          "referencedDeclaration": 9479,
                          "src": "2874:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9479_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 380,
                        "nodeType": "ArrayTypeName",
                        "src": "2874:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9479_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9479_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2841:55:46"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2915:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2907:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2907:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2923:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2907:17:46"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "2990:385:46",
                    "statements": [
                      {
                        "assignments": [
                          401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 401,
                            "mutability": "mutable",
                            "name": "houseUser",
                            "nameLocation": "3019:9:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 436,
                            "src": "3004:24:46",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                              "typeString": "struct strUser"
                            },
                            "typeName": {
                              "id": 400,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 399,
                                "name": "strUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9479,
                                "src": "3004:7:46"
                              },
                              "referencedDeclaration": 9479,
                              "src": "3004:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9479_storage_ptr",
                                "typeString": "struct strUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 402,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3004:24:46"
                      },
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 403,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3047:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9470,
                                "src": "3047:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 406,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3085:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9472,
                                "src": "3085:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 408,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3117:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9474,
                                "src": "3117:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 410,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3152:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9476,
                                "src": "3152:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 412,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3186:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9478,
                                "src": "3186:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 414,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3043:164:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 417,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "3227:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 415,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3210:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$5863",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5690,
                              "src": "3210:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3210:22:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "3043:189:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "3043:189:46"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3251:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 422,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "3259:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                "typeString": "struct strUser memory"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9476,
                            "src": "3259:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3251:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 435,
                        "nodeType": "IfStatement",
                        "src": "3247:118:46",
                        "trueBody": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "3277:88:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 425,
                                    "name": "_arrUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "3295:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strUser_$9479_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strUser memory[] memory"
                                    }
                                  },
                                  "id": 427,
                                  "indexExpression": {
                                    "id": 426,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 386,
                                    "src": "3306:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3295:18:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 428,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3316:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "src": "3295:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strUser_$9479_memory_ptr",
                                  "typeString": "struct strUser memory"
                                }
                              },
                              "id": 430,
                              "nodeType": "ExpressionStatement",
                              "src": "3295:30:46"
                            },
                            {
                              "expression": {
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3343:7:46",
                                "subExpression": {
                                  "id": 431,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "3343:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "3343:7:46"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 393,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "2959:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 394,
                      "name": "arrUsersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2965:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2959:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "initializationExpression": {
                    "assignments": [
                      390
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2949:3:46",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "2941:11:46",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2941:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 392,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2955:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2941:15:46"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2982:5:46",
                      "subExpression": {
                        "id": 396,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "2982:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 398,
                    "nodeType": "ExpressionStatement",
                    "src": "2982:5:46"
                  },
                  "nodeType": "ForStatement",
                  "src": "2936:439:46"
                },
                {
                  "expression": {
                    "id": 438,
                    "name": "_arrUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 377,
                    "src": "3391:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9479_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "functionReturnParameters": 353,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "3384:16:46"
                }
              ]
            },
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "2372:136:46",
              "text": "@notice The list of all users address\n @param _houseAddr address of the CLH\n @return arrUsers array with list of users"
            },
            "functionSelector": "b698be8d",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2522:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2556:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2548:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:34:46"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "arrUsers",
                  "nameLocation": "2649:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2632:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strUser_$9479_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 350,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 349,
                        "name": "strUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9479,
                        "src": "2632:7:46"
                      },
                      "referencedDeclaration": 9479,
                      "src": "2632:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9479_storage_ptr",
                        "typeString": "struct strUser"
                      }
                    },
                    "id": 351,
                    "nodeType": "ArrayTypeName",
                    "src": "2632:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9479_storage_$dyn_storage_ptr",
                      "typeString": "struct strUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2618:49:46"
            },
            "scope": 898,
            "src": "2513:894:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "4508:419:46",
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4527:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4518:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5863",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 465,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5863,
                          "src": "4518:8:46"
                        },
                        "referencedDeclaration": 5863,
                        "src": "4518:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5863",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4546:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 468,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5863,
                      "src": "4536:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5863_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5863",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4518:40:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 472,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4589:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5645,
                          "src": "4589:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:19:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 475,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4622:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5650,
                          "src": "4622:29:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4622:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 478,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4667:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5635,
                          "src": "4667:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 481,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4702:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "houseOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5640,
                          "src": "4702:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4702:18:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 484,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4734:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5655,
                          "src": "4734:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4734:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 487,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4765:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5660,
                          "src": "4765:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4765:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 490,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4799:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5665,
                          "src": "4799:30:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4799:32:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 493,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4845:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5670,
                          "src": "4845:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4845:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 496,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4883:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5863",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5675,
                          "src": "4883:25:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4883:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 499,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4575:345:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string memory,bytes32,bool,bool,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "4569:351:46"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "3413:642:46",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return houseOpen True if is Open\n @return numUsers Current users of a CLH\n @return numManagers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n @return govRuleMaxUsers Max of all users (including managers)\n @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "4069:18:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4105:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4097:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4087:34:46"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "4195:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4181:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "4227:22:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4219:30:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4219:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "4268:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4263:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "houseOpen",
                  "nameLocation": "4299:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4294:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "numUsers",
                  "nameLocation": "4330:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4322:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "numManagers",
                  "nameLocation": "4360:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4352:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4393:23:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4385:31:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "govRuleMaxUsers",
                  "nameLocation": "4438:15:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4430:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagers",
                  "nameLocation": "4475:18:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4467:26:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:336:46"
            },
            "scope": 898,
            "src": "4060:867:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5104:592:46",
              "statements": [
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5122:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5114:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 513,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5114:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 518,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9383,
                            "src": "5192:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 519,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "5235:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 520,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "5275:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 521,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5318:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "5318:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 523,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "5349:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 516,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5164:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5164:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5164:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 515,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5141:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5114:269:46"
                },
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "5402:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5394:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5394:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9391,
                            "src": "5463:20:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 533,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5501:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 530,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5435:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5435:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5435:91:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 529,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5412:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:124:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5394:142:46"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5555:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5547:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5547:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5595:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 543,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "5607:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 544,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "5625:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 540,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5577:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5577:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5577:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 539,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5566:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5547:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 549,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "5667:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 550,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "5677:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 548,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5654:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 512,
                  "id": 552,
                  "nodeType": "Return",
                  "src": "5647:42:46"
                }
              ]
            },
            "functionSelector": "9f6fd7ab",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "4943:13:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "4971:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4966:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5000:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4992:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5033:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5020:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:93:46"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5090:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:11:46"
            },
            "scope": 898,
            "src": "4934:762:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "5929:678:46",
              "statements": [
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5947:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "5939:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5939:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 574,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9383,
                            "src": "6017:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 575,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "6060:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 576,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "6100:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 577,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6143:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6143:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 579,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "6174:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5989:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5989:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 571,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5966:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5939:269:46"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "6227:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6219:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6219:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 588,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9399,
                            "src": "6288:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 589,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "6325:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 590,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "6350:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 560,
                                    "src": "6405:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 592,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6387:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6387:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6387:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 591,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6376:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6376:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 586,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6260:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6260:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6260:177:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 585,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6237:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6237:210:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6219:228:46"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "6466:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6458:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6458:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6506:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 606,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "6518:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 607,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6536:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 603,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6488:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6488:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6488:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 602,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6477:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6477:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "6578:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 613,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "6588:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 611,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "6565:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 568,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "6558:42:46"
                }
              ]
            },
            "functionSelector": "89ab062a",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "5712:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "5739:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5734:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5734:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "5761:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5756:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "5793:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5779:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5779:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5825:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5817:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5858:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5845:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:150:46"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5915:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5913:11:46"
            },
            "scope": 898,
            "src": "5703:904:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 690,
              "nodeType": "Block",
              "src": "6907:769:46",
              "statements": [
                {
                  "assignments": [
                    637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 637,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "6925:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "6917:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 636,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6917:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 641,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9383,
                            "src": "6995:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 642,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "7038:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 643,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "7078:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 644,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7121:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "7121:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 646,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 629,
                            "src": "7152:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 639,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6967:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6967:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6967:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 638,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6944:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6944:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6917:269:46"
                },
                {
                  "assignments": [
                    651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7205:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "7197:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7197:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 655,
                            "name": "__STR_OCNEWUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9407,
                            "src": "7266:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 656,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "7306:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 660,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 621,
                                    "src": "7364:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 658,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7346:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7346:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7346:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 657,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7335:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7335:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 666,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 623,
                                    "src": "7420:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 664,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7402:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7402:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7402:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 663,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7391:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7391:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 669,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "7454:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 670,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "7482:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 653,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7238:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7238:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7238:268:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 652,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7215:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7215:301:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7197:319:46"
                },
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7535:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 690,
                      "src": "7527:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 674,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7527:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 684,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7575:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 680,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "7587:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 681,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "7605:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 677,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7557:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7557:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7557:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 676,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7546:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7546:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7527:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "7647:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 687,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "7657:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 685,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7634:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7634:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 635,
                  "id": 689,
                  "nodeType": "Return",
                  "src": "7627:42:46"
                }
              ]
            },
            "functionSelector": "f240c7e9",
            "id": 691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewUser",
            "nameLocation": "6623:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6656:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6648:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6648:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "6691:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6677:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6677:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6720:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6706:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "6747:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6742:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6742:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 627,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6775:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6767:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6767:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6803:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6795:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6795:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6836:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6823:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6823:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6638:214:46"
            },
            "returnParameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "6893:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6893:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6891:11:46"
            },
            "scope": 898,
            "src": "6614:1062:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 753,
              "nodeType": "Block",
              "src": "7922:685:46",
              "statements": [
                {
                  "assignments": [
                    707
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 707,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "7940:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "7932:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 706,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7932:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 719,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 711,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9383,
                            "src": "8010:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 712,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "8053:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 713,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "8093:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 714,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8136:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8136:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 716,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "8167:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 709,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7982:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7982:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7982:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 708,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7959:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7959:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7932:269:46"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8220:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8212:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 720,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8212:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 736,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 725,
                            "name": "__STR_OCDELUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9415,
                            "src": "8281:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 726,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "8321:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 730,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "8379:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 728,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8361:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8361:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8361:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 727,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8350:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8350:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 733,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "8413:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 723,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8253:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8253:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8253:184:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 722,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8230:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8230:217:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8212:235:46"
                },
                {
                  "assignments": [
                    738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 738,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8466:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 753,
                      "src": "8458:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 737,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8458:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8506:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 743,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "8518:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 744,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "8536:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 740,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8488:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8488:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8488:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 739,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8477:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8477:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8458:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 749,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "8578:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 750,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "8588:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 748,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8565:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8565:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 705,
                  "id": 752,
                  "nodeType": "Return",
                  "src": "8558:42:46"
                }
              ]
            },
            "functionSelector": "349dc296",
            "id": 754,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCDelUser",
            "nameLocation": "7692:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7725:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7717:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7717:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7760:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7746:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7746:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7790:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7782:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7782:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7818:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7810:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7810:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7851:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7838:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7838:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7707:160:46"
            },
            "returnParameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "7908:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7908:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7906:11:46"
            },
            "scope": 898,
            "src": "7683:924:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 818,
              "nodeType": "Block",
              "src": "8825:684:46",
              "statements": [
                {
                  "assignments": [
                    768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 768,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8843:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 818,
                      "src": "8835:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 767,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8835:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 780,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 772,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9383,
                            "src": "8913:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 773,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "8956:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 774,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "8996:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 775,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9039:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9039:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 777,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "9070:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 770,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8885:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8885:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8885:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 769,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8862:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8862:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8835:269:46"
                },
                {
                  "assignments": [
                    782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 782,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "9123:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 818,
                      "src": "9115:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 781,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9115:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 801,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 786,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9423,
                            "src": "9184:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 790,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 756,
                                    "src": "9253:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 788,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9235:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9235:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9235:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 787,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9224:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9224:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 796,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 758,
                                    "src": "9309:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 794,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9291:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9291:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9291:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 793,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9280:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9280:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 784,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9156:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9156:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9156:183:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 783,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9133:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9133:216:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9115:234:46"
                },
                {
                  "assignments": [
                    803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 803,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9368:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 818,
                      "src": "9360:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 802,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9360:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 812,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9408:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 808,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "9420:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 809,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "9438:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 805,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9390:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9390:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9390:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 804,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9379:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9360:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 814,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "9480:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 815,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "9490:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 813,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9467:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9467:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 766,
                  "id": 817,
                  "nodeType": "Return",
                  "src": "9460:42:46"
                }
              ]
            },
            "functionSelector": "7b3bb156",
            "id": 819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequest",
            "nameLocation": "8623:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8662:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "8648:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8648:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8691:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "8677:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8677:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "8721:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "8713:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8713:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8754:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "8741:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8741:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8638:132:46"
            },
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 819,
                  "src": "8811:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8811:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8809:11:46"
            },
            "scope": 898,
            "src": "8614:895:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 896,
              "nodeType": "Block",
              "src": "9921:927:46",
              "statements": [
                {
                  "assignments": [
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9939:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 896,
                      "src": "9931:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 844,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9931:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 857,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 849,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9383,
                            "src": "10009:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 850,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "10052:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 851,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9375,
                            "src": "10092:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 852,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10135:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "10135:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 854,
                            "name": "_addrCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "10166:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 847,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9981:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9981:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9981:207:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 846,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9958:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9958:240:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9931:267:46"
                },
                {
                  "assignments": [
                    859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 859,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "10217:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 896,
                      "src": "10209:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10209:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 879,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "10278:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 867,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 821,
                                    "src": "10346:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 865,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10328:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10328:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10328:30:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 864,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10317:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10317:43:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 870,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "10378:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 871,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "10409:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 872,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "10437:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 873,
                            "name": "_govRuleMaxUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "10464:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 874,
                            "name": "_govRuleMaxManagers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "10498:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 875,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "10535:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 876,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "10577:17:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 861,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10250:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10250:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10250:428:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 860,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10227:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10227:461:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10209:479:46"
                },
                {
                  "assignments": [
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 881,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "10707:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 896,
                      "src": "10699:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10699:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10747:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 886,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "10759:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 887,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 859,
                            "src": "10777:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 883,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10729:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10729:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10729:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 882,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10718:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10718:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10699:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 892,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "10819:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 893,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "10829:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 891,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "10806:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 843,
                  "id": 895,
                  "nodeType": "Return",
                  "src": "10799:42:46"
                }
              ]
            },
            "functionSelector": "e78fc36b",
            "id": 897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "9525:14:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "9563:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9549:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9549:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "9588:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9583:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9583:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "9616:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9611:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9611:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "9644:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9636:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9636:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "_govRuleMaxUsers",
                  "nameLocation": "9671:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9663:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9663:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagers",
                  "nameLocation": "9705:19:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9697:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9697:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "9742:24:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9734:32:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "9784:17:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9776:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_addrCLF",
                  "nameLocation": "9819:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9811:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9850:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9837:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9837:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9539:327:46"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "9907:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9907:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9905:11:46"
            },
            "scope": 898,
            "src": "9516:1332:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 899,
        "src": "223:10627:46",
        "usedErrors": []
      }
    ],
    "src": "32:10818:46"
  },
  "bytecode": "608060405234801561001057600080fd5b50611da9806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806389ab062a1161006657806389ab062a146101445780639f6fd7ab14610157578063b698be8d1461016a578063e78fc36b1461018a578063f240c7e91461019d57600080fd5b8063349dc296146100a3578063622eca77146100d35780637b3bb156146100e657806386abd826146100f95780638750bc3e1461011c575b600080fd5b6100b66100b1366004611517565b6101b0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e13660046115ac565b61035a565b6100b66100f43660046115f3565b61041e565b61010c610107366004611690565b6105b5565b6040516100ca9493929190611725565b61012f61012a366004611756565b61077a565b6040516100ca9998979695949392919061177a565b6100b66101523660046117e7565b610b23565b6100b661016536600461184c565b610c57565b61017d610178366004611756565b610d7a565b6040516100ca91906118ae565b6100b6610198366004611952565b610fa7565b6100b66101ab366004611a21565b6111fc565b6000806040516020016101c290611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d34833981519152468760405160200161020c959493929190611b56565b604051602081830303815290604052805190602001209050600060405160200161028d907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016102b59190611b82565b60405160208183030381529060405280519060200120886040516020016102fe94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040516020818303038152906040528051906020012090506000828260405160200161032b929190611b9e565b60405160208183030381529060405280519060200120905061034d818661035a565b9998505050505050505050565b600081516041146103a95760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610409573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161043090611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d34833981519152468760405160200161047a959493929190611b56565b60405160208183030381529060405280519060200120905060006040516020016104dc907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b60405160208183030381529060405280519060200120876040516020016105039190611b82565b604051602081830303815290604052805190602001208760405160200161052a9190611b82565b60408051601f19818403018152828252805160209182012090830194909452810191909152606081019190915260800160405160208183030381529060405280519060200120905060008282604051602001610587929190611b9e565b6040516020818303038152906040528051906020012090506105a9818661035a565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190611bb9565b9050806106725760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016103a0565b61067a6113ee565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e79190810190611c1f565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107535760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016103a0565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f39190810190611ca2565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108559190611bb9565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190611cd7565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611cd7565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611bb9565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190611bb9565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190611bb9565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190611bb9565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190611bb9565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610b3590611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001610b7f959493929190611b56565b6040516020818303038152906040528051906020012090506000604051602001610bf2907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610c1b9190611b82565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a0016102fe565b600080604051602001610c6990611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001610cb3959493929190611b56565b6040516020818303038152906040528051906020012090506000604051602001610d00907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610d4d9084908490608001611b9e565b604051602081830303815290604052805190602001209050610d6f818661035a565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de59190611bb9565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611bb9565b905060008267ffffffffffffffff811115610e6857610e68611452565b604051908082528060200260200182016040528015610ea157816020015b610e8e6113ee565b815260200190600190039081610e865790505b509050600060015b83811015610f9b57610eb96113ee565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015610efe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f269190810190611c1f565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011415610f885780848481518110610f6e57610f6e611cf4565b60200260200101819052508280610f8490611d0a565b9350505b5080610f9381611d0a565b915050610ea9565b50909695505050505050565b600080604051602001610fb990611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001611003959493929190611b56565b604051602081830303815290604052805190602001209050600060405160200161110e907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c69737457616c6c65747329000000000060a082015260bb0190565b604051602081830303815290604052805190602001208d6040516020016111359190611b82565b60408051601f198184030181528282528051602091820120908301939093528101919091528c151560608201528b1515608082015260a081018b905260c081018a905260e0810189905261010081018890526001600160a01b03871661012082015261014001604051602081830303815290604052805190602001209050600082826040516020016111c8929190611b9e565b6040516020818303038152906040528051906020012090506111ea818661035a565b9e9d5050505050505050505050505050565b60008060405160200161120e90611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001611258959493929190611b56565b60405160208183030381529060405280519060200120905060006040516020016112f1907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016113199190611b82565b604051602081830303815290604052805190602001208a6040516020016113409190611b82565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e001604051602081830303815290604052805190602001209050600082826040516020016113bd929190611b9e565b6040516020818303038152906040528051906020012090506113df818661035a565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b038116811461143f57600080fd5b50565b803561144d8161142a565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561149157611491611452565b604052919050565b600067ffffffffffffffff8211156114b3576114b3611452565b50601f01601f191660200190565b600082601f8301126114d257600080fd5b81356114e56114e082611499565b611468565b8181528460208386010111156114fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561152f57600080fd5b853561153a8161142a565b9450602086013567ffffffffffffffff8082111561155757600080fd5b61156389838a016114c1565b9550604088013594506060880135915061157c8261142a565b9092506080870135908082111561159257600080fd5b5061159f888289016114c1565b9150509295509295909350565b600080604083850312156115bf57600080fd5b82359150602083013567ffffffffffffffff8111156115dd57600080fd5b6115e9858286016114c1565b9150509250929050565b6000806000806080858703121561160957600080fd5b843567ffffffffffffffff8082111561162157600080fd5b61162d888389016114c1565b9550602087013591508082111561164357600080fd5b61164f888389016114c1565b9450604087013591506116618261142a565b9092506060860135908082111561167757600080fd5b50611684878288016114c1565b91505092959194509250565b600080604083850312156116a357600080fd5b82356116ae8161142a565b915060208301356116be8161142a565b809150509250929050565b60005b838110156116e45781810151838201526020016116cc565b838111156116f3576000848401525b50505050565b600081518084526117118160208601602086016116c9565b601f01601f19169290920160200192915050565b60808152600061173860808301876116f9565b60208301959095525091151560408301521515606090910152919050565b60006020828403121561176857600080fd5b81356117738161142a565b9392505050565b600061012080835261178e8184018d6116f9565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b801515811461143f57600080fd5b803561144d816117ce565b600080600080600060a086880312156117ff57600080fd5b853594506020860135611811816117ce565b9350604086013567ffffffffffffffff8082111561182e57600080fd5b61183a89838a016114c1565b94506060880135915061157c8261142a565b60008060006060848603121561186157600080fd5b833561186c816117ce565b9250602084013561187c8161142a565b9150604084013567ffffffffffffffff81111561189857600080fd5b6118a4868287016114c1565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561194457888303603f19018552815180516001600160a01b031684528781015160a08986018190529061190e828701826116f9565b838a0151878b015260608085015115159088015260809384015115159390960192909252505093860193908601906001016118d5565b509098975050505050505050565b6000806000806000806000806000806101408b8d03121561197257600080fd5b8a3567ffffffffffffffff8082111561198a57600080fd5b6119968e838f016114c1565b9b506119a460208e016117dc565b9a506119b260408e016117dc565b995060608d0135985060808d0135975060a08d0135965060c08d013595506119dc60e08e01611442565b94506119eb6101008e01611442565b93506101208d0135915080821115611a0257600080fd5b50611a0f8d828e016114c1565b9150509295989b9194979a5092959850565b600080600080600080600060e0888a031215611a3c57600080fd5b8735611a478161142a565b9650602088013567ffffffffffffffff80821115611a6457600080fd5b611a708b838c016114c1565b975060408a0135915080821115611a8657600080fd5b611a928b838c016114c1565b965060608a01359150611aa4826117ce565b81955060808a01359450611aba60a08b01611442565b935060c08a0135915080821115611ad057600080fd5b50611add8a828b016114c1565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611b948184602087016116c9565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611bcb57600080fd5b5051919050565b600082601f830112611be357600080fd5b8151611bf16114e082611499565b818152846020838601011115611c0657600080fd5b611c178260208301602087016116c9565b949350505050565b600080600080600060a08688031215611c3757600080fd5b8551611c428161142a565b602087015190955067ffffffffffffffff811115611c5f57600080fd5b611c6b88828901611bd2565b945050604086015192506060860151611c83816117ce565b6080870151909250611c94816117ce565b809150509295509295909350565b600060208284031215611cb457600080fd5b815167ffffffffffffffff811115611ccb57600080fd5b611c1784828501611bd2565b600060208284031215611ce957600080fd5b8151611773816117ce565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611d2c57634e487b7160e01b600052601160045260246000fd5b506001019056feaa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a26469706673582212207a4ef104a53a68d7f5417bc0854a78d65a6ba13f97befc99da173e61ffb577ce64736f6c634300080c0033",
  "bytecodeSha1": "21856a028f69152eb443b263ee9b59284856d133",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouseApi",
  "coverageMap": {
    "branches": {
      "46": {
        "CLHouseApi.GetHouseUserList": {
          "20": [
            3251,
            3275,
            false
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "18": [
            1891,
            1899,
            true
          ],
          "19": [
            2164,
            2188,
            true
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "17": [
            617,
            640,
            true
          ]
        }
      },
      "48": {},
      "61": {}
    },
    "statements": {
      "46": {
        "CLHouseApi.GetHouseProperties": {
          "8": [
            4569,
            4920
          ]
        },
        "CLHouseApi.GetHouseUserList": {
          "10": [
            3043,
            3232
          ],
          "11": [
            3295,
            3325
          ],
          "12": [
            3343,
            3350
          ],
          "13": [
            2982,
            2987
          ],
          "14": [
            3384,
            3400
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "4": [
            1882,
            1925
          ],
          "5": [
            1971,
            2144
          ],
          "6": [
            2155,
            2209
          ],
          "7": [
            2220,
            2359
          ]
        },
        "CLHouseApi.SignerOCDelUser": {
          "0": [
            8558,
            8600
          ]
        },
        "CLHouseApi.SignerOCInvit": {
          "9": [
            5647,
            5689
          ]
        },
        "CLHouseApi.SignerOCNewCLH": {
          "15": [
            10799,
            10841
          ]
        },
        "CLHouseApi.SignerOCNewUser": {
          "16": [
            7627,
            7669
          ]
        },
        "CLHouseApi.SignerOCRequest": {
          "3": [
            9460,
            9502
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "1": [
            608,
            666
          ],
          "2": [
            1088,
            1137
          ]
        }
      },
      "48": {},
      "61": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806389ab062a1161006657806389ab062a146101445780639f6fd7ab14610157578063b698be8d1461016a578063e78fc36b1461018a578063f240c7e91461019d57600080fd5b8063349dc296146100a3578063622eca77146100d35780637b3bb156146100e657806386abd826146100f95780638750bc3e1461011c575b600080fd5b6100b66100b1366004611517565b6101b0565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100e13660046115ac565b61035a565b6100b66100f43660046115f3565b61041e565b61010c610107366004611690565b6105b5565b6040516100ca9493929190611725565b61012f61012a366004611756565b61077a565b6040516100ca9998979695949392919061177a565b6100b66101523660046117e7565b610b23565b6100b661016536600461184c565b610c57565b61017d610178366004611756565b610d7a565b6040516100ca91906118ae565b6100b6610198366004611952565b610fa7565b6100b66101ab366004611a21565b6111fc565b6000806040516020016101c290611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d34833981519152468760405160200161020c959493929190611b56565b604051602081830303815290604052805190602001209050600060405160200161028d907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016102b59190611b82565b60405160208183030381529060405280519060200120886040516020016102fe94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040516020818303038152906040528051906020012090506000828260405160200161032b929190611b9e565b60405160208183030381529060405280519060200120905061034d818661035a565b9998505050505050505050565b600081516041146103a95760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610409573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161043090611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d34833981519152468760405160200161047a959493929190611b56565b60405160208183030381529060405280519060200120905060006040516020016104dc907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b60405160208183030381529060405280519060200120876040516020016105039190611b82565b604051602081830303815290604052805190602001208760405160200161052a9190611b82565b60408051601f19818403018152828252805160209182012090830194909452810191909152606081019190915260800160405160208183030381529060405280519060200120905060008282604051602001610587929190611b9e565b6040516020818303038152906040528051906020012090506105a9818661035a565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190611bb9565b9050806106725760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016103a0565b61067a6113ee565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e79190810190611c1f565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107535760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016103a0565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f39190810190611ca2565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108559190611bb9565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190611cd7565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611cd7565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611bb9565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190611bb9565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190611bb9565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190611bb9565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190611bb9565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610b3590611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001610b7f959493929190611b56565b6040516020818303038152906040528051906020012090506000604051602001610bf2907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610c1b9190611b82565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a0016102fe565b600080604051602001610c6990611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001610cb3959493929190611b56565b6040516020818303038152906040528051906020012090506000604051602001610d00907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610d4d9084908490608001611b9e565b604051602081830303815290604052805190602001209050610d6f818661035a565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de59190611bb9565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611bb9565b905060008267ffffffffffffffff811115610e6857610e68611452565b604051908082528060200260200182016040528015610ea157816020015b610e8e6113ee565b815260200190600190039081610e865790505b509050600060015b83811015610f9b57610eb96113ee565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015610efe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f269190810190611c1f565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011415610f885780848481518110610f6e57610f6e611cf4565b60200260200101819052508280610f8490611d0a565b9350505b5080610f9381611d0a565b915050610ea9565b50909695505050505050565b600080604051602001610fb990611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001611003959493929190611b56565b604051602081830303815290604052805190602001209050600060405160200161110e907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c69737457616c6c65747329000000000060a082015260bb0190565b604051602081830303815290604052805190602001208d6040516020016111359190611b82565b60408051601f198184030181528282528051602091820120908301939093528101919091528c151560608201528b1515608082015260a081018b905260c081018a905260e0810189905261010081018890526001600160a01b03871661012082015261014001604051602081830303815290604052805190602001209050600082826040516020016111c8929190611b9e565b6040516020818303038152906040528051906020012090506111ea818661035a565b9e9d5050505050505050505050505050565b60008060405160200161120e90611aec565b60405160208183030381529060405280519060200120600080516020611d54833981519152600080516020611d348339815191524687604051602001611258959493929190611b56565b60405160208183030381529060405280519060200120905060006040516020016112f1907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016113199190611b82565b604051602081830303815290604052805190602001208a6040516020016113409190611b82565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e001604051602081830303815290604052805190602001209050600082826040516020016113bd929190611b9e565b6040516020818303038152906040528051906020012090506113df818661035a565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b038116811461143f57600080fd5b50565b803561144d8161142a565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561149157611491611452565b604052919050565b600067ffffffffffffffff8211156114b3576114b3611452565b50601f01601f191660200190565b600082601f8301126114d257600080fd5b81356114e56114e082611499565b611468565b8181528460208386010111156114fa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561152f57600080fd5b853561153a8161142a565b9450602086013567ffffffffffffffff8082111561155757600080fd5b61156389838a016114c1565b9550604088013594506060880135915061157c8261142a565b9092506080870135908082111561159257600080fd5b5061159f888289016114c1565b9150509295509295909350565b600080604083850312156115bf57600080fd5b82359150602083013567ffffffffffffffff8111156115dd57600080fd5b6115e9858286016114c1565b9150509250929050565b6000806000806080858703121561160957600080fd5b843567ffffffffffffffff8082111561162157600080fd5b61162d888389016114c1565b9550602087013591508082111561164357600080fd5b61164f888389016114c1565b9450604087013591506116618261142a565b9092506060860135908082111561167757600080fd5b50611684878288016114c1565b91505092959194509250565b600080604083850312156116a357600080fd5b82356116ae8161142a565b915060208301356116be8161142a565b809150509250929050565b60005b838110156116e45781810151838201526020016116cc565b838111156116f3576000848401525b50505050565b600081518084526117118160208601602086016116c9565b601f01601f19169290920160200192915050565b60808152600061173860808301876116f9565b60208301959095525091151560408301521515606090910152919050565b60006020828403121561176857600080fd5b81356117738161142a565b9392505050565b600061012080835261178e8184018d6116f9565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b801515811461143f57600080fd5b803561144d816117ce565b600080600080600060a086880312156117ff57600080fd5b853594506020860135611811816117ce565b9350604086013567ffffffffffffffff8082111561182e57600080fd5b61183a89838a016114c1565b94506060880135915061157c8261142a565b60008060006060848603121561186157600080fd5b833561186c816117ce565b9250602084013561187c8161142a565b9150604084013567ffffffffffffffff81111561189857600080fd5b6118a4868287016114c1565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561194457888303603f19018552815180516001600160a01b031684528781015160a08986018190529061190e828701826116f9565b838a0151878b015260608085015115159088015260809384015115159390960192909252505093860193908601906001016118d5565b509098975050505050505050565b6000806000806000806000806000806101408b8d03121561197257600080fd5b8a3567ffffffffffffffff8082111561198a57600080fd5b6119968e838f016114c1565b9b506119a460208e016117dc565b9a506119b260408e016117dc565b995060608d0135985060808d0135975060a08d0135965060c08d013595506119dc60e08e01611442565b94506119eb6101008e01611442565b93506101208d0135915080821115611a0257600080fd5b50611a0f8d828e016114c1565b9150509295989b9194979a5092959850565b600080600080600080600060e0888a031215611a3c57600080fd5b8735611a478161142a565b9650602088013567ffffffffffffffff80821115611a6457600080fd5b611a708b838c016114c1565b975060408a0135915080821115611a8657600080fd5b611a928b838c016114c1565b965060608a01359150611aa4826117ce565b81955060808a01359450611aba60a08b01611442565b935060c08a0135915080821115611ad057600080fd5b50611add8a828b016114c1565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611b948184602087016116c9565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611bcb57600080fd5b5051919050565b600082601f830112611be357600080fd5b8151611bf16114e082611499565b818152846020838601011115611c0657600080fd5b611c178260208301602087016116c9565b949350505050565b600080600080600060a08688031215611c3757600080fd5b8551611c428161142a565b602087015190955067ffffffffffffffff811115611c5f57600080fd5b611c6b88828901611bd2565b945050604086015192506060860151611c83816117ce565b6080870151909250611c94816117ce565b809150509295509295909350565b600060208284031215611cb457600080fd5b815167ffffffffffffffff811115611ccb57600080fd5b611c1784828501611bd2565b600060208284031215611ce957600080fd5b8151611773816117ce565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611d2c57634e487b7160e01b600052601160045260246000fd5b506001019056feaa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a26469706673582212207a4ef104a53a68d7f5417bc0854a78d65a6ba13f97befc99da173e61ffb577ce64736f6c634300080c0033",
  "deployedSourceMap": "223:10627:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7683:924;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2419:32:62;;;2401:51;;2389:2;2374:18;7683:924:46;;;;;;;;452:692;;;;;;:::i;:::-;;:::i;8614:895::-;;;;;;:::i;:::-;;:::i;1501:865::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4060:867::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;5703:904::-;;;;;;:::i;:::-;;:::i;4934:762::-;;;;;;:::i;:::-;;:::i;2513:894::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9516:1332::-;;;;;;:::i;:::-;;:::i;6614:1062::-;;;;;;:::i;:::-;;:::i;7683:924::-;7908:7;7932:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8136:13:46;8167:10;7982:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7959:242;;;;;;7932:269;;8212:15;1352:103:48;;;;;;12707:34:62;12695:47;;12772:34;12767:2;12758:12;;12751:56;-1:-1:-1;;;12832:2:62;12823:12;;12816:29;12870:2;12861:12;;12493:386;1352:103:48;;;;;;;;;;;;;1337:120;;;;;;8321:11:46;8379:12;8361:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;8350:45;;;;;;8413:10;8253:184;;;;;;;;;;13396:25:62;;;-1:-1:-1;;;;;13457:32:62;;;;13452:2;13437:18;;13430:60;13521:2;13506:18;;13499:34;13564:2;13549:18;;13542:34;13383:3;13368:19;;13165:417;8253:184:46;;;;;;;;;;;;;8230:217;;;;;;8212:235;;8458:16;8518;8536:7;8488:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8477:70;;;;;;8458:89;;8565:35;8578:8;8588:10;8565:11;:35::i;:::-;8558:42;7683:924;-1:-1:-1;;;;;;;;;7683:924:46:o;452:692::-;584:7;617:10;:17;638:2;617:23;608:58;;;;-1:-1:-1;;;608:58:46;;14186:2:62;608:58:46;;;14168:21:62;14225:2;14205:18;;;14198:30;-1:-1:-1;;;14244:18:62;;;14237:50;14304:18;;608:58:46;;;;;;;;;856:2;839:21;;;832:30;939:2;922:21;;;915:30;1060:2;1043:21;;;1036:30;1095:42;;677:13;1095:42;;;;;;;;;14560:25:62;;;1027:41:46;;14601:18:62;;;14594:45;;;14655:18;;14648:34;;;14698:18;;;14691:34;;;832:30:46;;1095:42;;14532:19:62;;1095:42:46;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1095:42:46;;-1:-1:-1;;1095:42:46;;;452:692;-1:-1:-1;;;;;;;452:692:46:o;8614:895::-;8811:7;8835:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9039:13:46;9070:10;8885:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8862:242;;;;;;8835:269;;9115:15;1516:78:48;;;;;;14950:34:62;14938:47;;-1:-1:-1;;;15010:2:62;15001:12;;14994:36;15055:2;15046:12;;14736:328;1516:78:48;;;;;;;;;;;;;1501:95;;;;;;9253:5:46;9235:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9224:38;;;;;;9309:12;9291:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9291:32:46;;;;;;;;;9280:45;;9291:32;9280:45;;;;9156:183;;;15271:25:62;;;;15312:18;;15305:34;;;;15355:18;;;15348:34;;;;15244:18;;9156:183:46;;;;;;;;;;;;9133:216;;;;;;9115:234;;9360:16;9420;9438:7;9390:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9379:70;;;;;;9360:89;;9467:35;9480:8;9490:10;9467:11;:35::i;:::-;9460:42;8614:895;-1:-1:-1;;;;;;;;8614:895:46:o;1501:865::-;1840:31;;-1:-1:-1;;;1840:31:46;;-1:-1:-1;;;;;2419:32:62;;;1840:31:46;;;2401:51:62;1653:18:46;;1685:12;;;;;;1803:10;;1685:12;;1840:16;;;;;2374:18:62;;1840:31:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1826:45;-1:-1:-1;1891:8:46;1882:43;;;;-1:-1:-1;;;1882:43:46;;15784:2:62;1882:43:46;;;15766:21:62;15823:2;15803:18;;;15796:30;-1:-1:-1;;;15842:18:62;;;15835:49;15901:18;;1882:43:46;15582:343:62;1882:43:46;1936:24;;:::i;:::-;2122:22;;-1:-1:-1;;;2122:22:46;;;;;16076:25:62;;;-1:-1:-1;;;;;2122:15:46;;;;;16049:18:62;;2122:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2122:22:46;;;;;;;;;;;;:::i;:::-;1971:173;;2098:19;;;1971:173;;;2068:16;;;1971:173;;;2037:17;;;1971:173;;;;2009:14;;;1971:173;;;;-1:-1:-1;;;;;1971:173:46;;;;;2164:4;:24;2155:54;;;;-1:-1:-1;;;2155:54:46;;17538:2:62;2155:54:46;;;17520:21:62;17577:2;17557:18;;;17550:30;-1:-1:-1;;;17596:18:62;;;17589:43;17649:18;;2155:54:46;17336:337:62;2155:54:46;2241:14;;;;2269:17;;;;2300:16;;;;2330:19;;;;;2241:14;;2269:17;;-1:-1:-1;2300:16:46;;-1:-1:-1;2330:19:46;-1:-1:-1;1501:865:46;-1:-1:-1;;;;;1501:865:46:o;4060:867::-;4181:24;4219:30;4263:17;4294:14;4322:16;4352:19;4385:31;4430:23;4467:26;4518:15;4546:10;4518:40;;4589:6;-1:-1:-1;;;;;4589:17:46;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4589:19:46;;;;;;;;;;;;:::i;:::-;4622:6;-1:-1:-1;;;;;4622:29:46;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4667:6;-1:-1:-1;;;;;4667:19:46;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4702:6;-1:-1:-1;;;;;4702:16:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4734:6;-1:-1:-1;;;;;4734:15:46;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4765:6;-1:-1:-1;;;;;4765:18:46;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4799:6;-1:-1:-1;;;;;4799:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4845:6;-1:-1:-1;;;;;4845:22:46;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4883:6;-1:-1:-1;;;;;4883:25:46;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:351;;;;;;;;;;;;;;;;;;;4060:867;;;;;;;;;;;:::o;5703:904::-;5915:7;5939:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;6143:13:46;6174:10;5989:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5966:242;;;;;;5939:269;;6219:15;1007:93:48;;;;;;18673:34:62;18661:47;;18738:29;18733:2;18724:12;;18717:51;18793:2;18784:12;;18459:343;1007:93:48;;;;;;;;;;;;;992:110;;;;;;6325:7:46;6350:8;6405:14;6387:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:34:46;;;;;;;;;6376:47;;6387:34;6376:47;;;;6260:177;;;19032:25:62;;;;19073:18;;19066:34;;;;19143:14;19136:22;19116:18;;;19109:50;19175:18;;;19168:34;;;;19004:19;;6260:177:46;18807:401:62;4934:762:46;5090:7;5114:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;5318:13:46;5349:10;5164:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5141:242;;;;;;5114:269;;5394:15;888:61:48;;;;;;19427:29:62;19415:42;;19482:2;19473:12;;19213:278;888:61:48;;;;;;;-1:-1:-1;;888:61:48;;;;;;873:78;;888:61;873:78;;;;5435:91:46;;;19664:25:62;19732:14;;19725:22;19705:18;;;19698:50;5435:91:46;;;;;;;;;19637:18:62;;;5435:91:46;;;5412:124;;;;;;-1:-1:-1;;;5577:57:46;;5607:16;;5412:124;;5577:57;;;:::i;:::-;;;;;;;;;;;;;5566:70;;;;;;5547:89;;5654:35;5667:8;5677:10;5654:11;:35::i;:::-;5647:42;4934:762;-1:-1:-1;;;;;;;4934:762:46:o;2513:894::-;2632:25;2682:15;2710:10;2682:40;;2733:16;2752:6;-1:-1:-1;;;;;2752:15:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:37;;2780:22;2805:6;-1:-1:-1;;;;;2805:24:46;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2780:51;;2841:26;2886:8;2870:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2841:55:46;-1:-1:-1;2907:13:46;2955:1;2936:439;2965:14;2959:3;:20;2936:439;;;3004:24;;:::i;:::-;3210:22;;-1:-1:-1;;;3210:22:46;;;;;16076:25:62;;;-1:-1:-1;;;;;3210:15:46;;;;;16049:18:62;;3210:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3210:22:46;;;;;;;;;;;;:::i;:::-;3043:189;;3186:19;;;3043:189;;;3152:16;;;3043:189;;;3117:17;;;3043:189;;;;3085:14;;;3043:189;;;;-1:-1:-1;;;;;3043:189:46;;;;;3251:4;:24;3247:118;;;3316:9;3295;3306:5;3295:18;;;;;;;;:::i;:::-;;;;;;:30;;;;3343:7;;;;;:::i;:::-;;;;3247:118;-1:-1:-1;2982:5:46;;;;:::i;:::-;;;;2936:439;;;-1:-1:-1;3391:9:46;;2513:894;-1:-1:-1;;;;;;2513:894:46:o;9516:1332::-;9907:7;9931:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10135:13:46;10166:8;9981:207;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9958:240;;;;;;9931:267;;10209:15;1654:221:48;;;;;;20342:34:62;20330:47;;20407:34;20402:2;20393:12;;20386:56;20472:34;20467:2;20458:12;;20451:56;20537:34;20532:2;20523:12;;20516:56;20603:34;20597:3;20588:13;;20581:57;20669:29;20663:3;20654:13;;20647:52;20724:3;20715:13;;20128:606;1654:221:48;;;;;;;;;;;;;1639:238;;;;;;10346:10:46;10328:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10328:30:46;;;;;;;;;10317:43;;10328:30;10317:43;;;;10250:428;;;21098:25:62;;;;21139:18;;21132:34;;;;21209:14;;21202:22;21182:18;;;21175:50;21268:14;;21261:22;21241:18;;;21234:50;21300:19;;;21293:35;;;21344:19;;;21337:35;;;21388:19;;;21381:35;;;21432:19;;;21425:35;;;-1:-1:-1;;;;;21497:32:62;;21476:19;;;21469:61;21070:19;;10250:428:46;;;;;;;;;;;;10227:461;;;;;;10209:479;;10699:16;10759;10777:7;10729:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10718:70;;;;;;10699:89;;10806:35;10819:8;10829:10;10806:11;:35::i;:::-;10799:42;9516:1332;-1:-1:-1;;;;;;;;;;;;;;9516:1332:46:o;6614:1062::-;6893:7;6917:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7121:13:46;7152:10;6967:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6944:242;;;;;;6917:269;;7197:15;1161:130:48;;;;;;21755:34:62;21743:47;;21820:34;21815:2;21806:12;;21799:56;21885:34;21880:2;21871:12;;21864:56;21945:2;21936:12;;21541:413;1161:130:48;;;;;;;;;;;;;1146:147;;;;;;7306:11:46;7364:5;7346:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;7335:38;;;;;;7420:12;7402:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7402:32:46;;;;;;;;;7391:45;;7402:32;7391:45;;;;7238:268;;;22240:25:62;;;;-1:-1:-1;;;;;22301:32:62;;;22281:18;;;22274:60;;;;22350:18;;;22343:34;22393:18;;;22386:34;;;;22464:14;;22457:22;22436:19;;;22429:51;22496:19;;;22489:35;;;22212:19;;7238:268:46;;;;;;;;;;;;7215:301;;;;;;7197:319;;7527:16;7587;7605:7;7557:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7546:70;;;;;;7527:89;;7634:35;7647:8;7657:10;7634:11;:35::i;:::-;7627:42;6614:1062;-1:-1:-1;;;;;;;;;;;6614:1062:46:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:62:-;-1:-1:-1;;;;;89:31:62;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:275;492:2;486:9;557:2;538:13;;-1:-1:-1;;534:27:62;522:40;;592:18;577:34;;613:22;;;574:62;571:88;;;639:18;;:::i;:::-;675:2;668:22;421:275;;-1:-1:-1;421:275:62:o;701:187::-;750:4;783:18;775:6;772:30;769:56;;;805:18;;:::i;:::-;-1:-1:-1;871:2:62;850:15;-1:-1:-1;;846:29:62;877:4;842:40;;701:187::o;893:464::-;936:5;989:3;982:4;974:6;970:17;966:27;956:55;;1007:1;1004;997:12;956:55;1043:6;1030:20;1074:49;1090:32;1119:2;1090:32;:::i;:::-;1074:49;:::i;:::-;1148:2;1139:7;1132:19;1194:3;1187:4;1182:2;1174:6;1170:15;1166:26;1163:35;1160:55;;;1211:1;1208;1201:12;1160:55;1276:2;1269:4;1261:6;1257:17;1250:4;1241:7;1237:18;1224:55;1324:1;1299:16;;;1317:4;1295:27;1288:38;;;;1303:7;893:464;-1:-1:-1;;;893:464:62:o;1362:888::-;1476:6;1484;1492;1500;1508;1561:3;1549:9;1540:7;1536:23;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1617:9;1604:23;1636:31;1661:5;1636:31;:::i;:::-;1686:5;-1:-1:-1;1742:2:62;1727:18;;1714:32;1765:18;1795:14;;;1792:34;;;1822:1;1819;1812:12;1792:34;1845:50;1887:7;1878:6;1867:9;1863:22;1845:50;:::i;:::-;1835:60;;1942:2;1931:9;1927:18;1914:32;1904:42;;1998:2;1987:9;1983:18;1970:32;1955:47;;2011:33;2036:7;2011:33;:::i;:::-;2063:7;;-1:-1:-1;2123:3:62;2108:19;;2095:33;;2140:16;;;2137:36;;;2169:1;2166;2159:12;2137:36;;2192:52;2236:7;2225:8;2214:9;2210:24;2192:52;:::i;:::-;2182:62;;;1362:888;;;;;;;;:::o;2463:389::-;2540:6;2548;2601:2;2589:9;2580:7;2576:23;2572:32;2569:52;;;2617:1;2614;2607:12;2569:52;2653:9;2640:23;2630:33;;2714:2;2703:9;2699:18;2686:32;2741:18;2733:6;2730:30;2727:50;;;2773:1;2770;2763:12;2727:50;2796;2838:7;2829:6;2818:9;2814:22;2796:50;:::i;:::-;2786:60;;;2463:389;;;;;:::o;2857:878::-;2972:6;2980;2988;2996;3049:3;3037:9;3028:7;3024:23;3020:33;3017:53;;;3066:1;3063;3056:12;3017:53;3106:9;3093:23;3135:18;3176:2;3168:6;3165:14;3162:34;;;3192:1;3189;3182:12;3162:34;3215:50;3257:7;3248:6;3237:9;3233:22;3215:50;:::i;:::-;3205:60;;3318:2;3307:9;3303:18;3290:32;3274:48;;3347:2;3337:8;3334:16;3331:36;;;3363:1;3360;3353:12;3331:36;3386:52;3430:7;3419:8;3408:9;3404:24;3386:52;:::i;:::-;3376:62;;3488:2;3477:9;3473:18;3460:32;3447:45;;3501:31;3526:5;3501:31;:::i;:::-;3551:5;;-1:-1:-1;3609:2:62;3594:18;;3581:32;;3625:16;;;3622:36;;;3654:1;3651;3644:12;3622:36;;3677:52;3721:7;3710:8;3699:9;3695:24;3677:52;:::i;:::-;3667:62;;;2857:878;;;;;;;:::o;3740:388::-;3808:6;3816;3869:2;3857:9;3848:7;3844:23;3840:32;3837:52;;;3885:1;3882;3875:12;3837:52;3924:9;3911:23;3943:31;3968:5;3943:31;:::i;:::-;3993:5;-1:-1:-1;4050:2:62;4035:18;;4022:32;4063:33;4022:32;4063:33;:::i;:::-;4115:7;4105:17;;;3740:388;;;;;:::o;4133:258::-;4205:1;4215:113;4229:6;4226:1;4223:13;4215:113;;;4305:11;;;4299:18;4286:11;;;4279:39;4251:2;4244:10;4215:113;;;4346:6;4343:1;4340:13;4337:48;;;4381:1;4372:6;4367:3;4363:16;4356:27;4337:48;;4133:258;;;:::o;4396:::-;4438:3;4476:5;4470:12;4503:6;4498:3;4491:19;4519:63;4575:6;4568:4;4563:3;4559:14;4552:4;4545:5;4541:16;4519:63;:::i;:::-;4636:2;4615:15;-1:-1:-1;;4611:29:62;4602:39;;;;4643:4;4598:50;;4396:258;-1:-1:-1;;4396:258:62:o;4659:455::-;4880:3;4869:9;4862:22;4843:4;4901:46;4942:3;4931:9;4927:19;4919:6;4901:46;:::i;:::-;4978:2;4963:18;;4956:34;;;;-1:-1:-1;5033:14:62;;5026:22;5021:2;5006:18;;4999:50;5092:14;5085:22;5080:2;5065:18;;;5058:50;4893:54;4659:455;-1:-1:-1;4659:455:62:o;5119:247::-;5178:6;5231:2;5219:9;5210:7;5206:23;5202:32;5199:52;;;5247:1;5244;5237:12;5199:52;5286:9;5273:23;5305:31;5330:5;5305:31;:::i;:::-;5355:5;5119:247;-1:-1:-1;;;5119:247:62:o;5371:835::-;5695:4;5724:3;5754:2;5743:9;5736:21;5774:45;5815:2;5804:9;5800:18;5792:6;5774:45;:::i;:::-;5850:2;5835:18;;5828:34;;;;-1:-1:-1;;5905:14:62;;5898:22;5893:2;5878:18;;5871:50;5964:14;;5957:22;5952:2;5937:18;;5930:50;6011:3;5996:19;;5989:35;;;;6055:3;6040:19;;6033:35;;;;6099:3;6084:19;;6077:35;6143:3;6128:19;;6121:35;6187:3;6172:19;;;6165:35;5766:53;5371:835;-1:-1:-1;5371:835:62:o;6211:118::-;6297:5;6290:13;6283:21;6276:5;6273:32;6263:60;;6319:1;6316;6309:12;6334:128;6399:20;;6428:28;6399:20;6428:28;:::i;6467:882::-;6578:6;6586;6594;6602;6610;6663:3;6651:9;6642:7;6638:23;6634:33;6631:53;;;6680:1;6677;6670:12;6631:53;6716:9;6703:23;6693:33;;6776:2;6765:9;6761:18;6748:32;6789:28;6811:5;6789:28;:::i;:::-;6836:5;-1:-1:-1;6892:2:62;6877:18;;6864:32;6915:18;6945:14;;;6942:34;;;6972:1;6969;6962:12;6942:34;6995:50;7037:7;7028:6;7017:9;7013:22;6995:50;:::i;:::-;6985:60;;7097:2;7086:9;7082:18;7069:32;7054:47;;7110:33;7135:7;7110:33;:::i;7354:591::-;7437:6;7445;7453;7506:2;7494:9;7485:7;7481:23;7477:32;7474:52;;;7522:1;7519;7512:12;7474:52;7561:9;7548:23;7580:28;7602:5;7580:28;:::i;:::-;7627:5;-1:-1:-1;7684:2:62;7669:18;;7656:32;7697:33;7656:32;7697:33;:::i;:::-;7749:7;-1:-1:-1;7807:2:62;7792:18;;7779:32;7834:18;7823:30;;7820:50;;;7866:1;7863;7856:12;7820:50;7889;7931:7;7922:6;7911:9;7907:22;7889:50;:::i;:::-;7879:60;;;7354:591;;;;;:::o;7950:1367::-;8142:4;8171:2;8211;8200:9;8196:18;8241:2;8230:9;8223:21;8264:6;8299;8293:13;8330:6;8322;8315:22;8356:2;8346:12;;8389:2;8378:9;8374:18;8367:25;;8451:2;8441:6;8438:1;8434:14;8423:9;8419:30;8415:39;8489:2;8481:6;8477:15;8510:1;8520:768;8534:6;8531:1;8528:13;8520:768;;;8599:22;;;-1:-1:-1;;8595:36:62;8583:49;;8655:13;;8727:9;;-1:-1:-1;;;;;8723:35:62;8708:51;;8798:11;;;8792:18;8691:4;8830:15;;;8823:27;;;8691:4;8877:48;8909:15;;;8792:18;8877:48;:::i;:::-;8968:11;;;8962:18;8945:15;;;8938:43;9004:4;9065:11;;;9059:18;9052:26;9045:34;9028:15;;;9021:59;9103:4;9164:11;;;9158:18;9151:26;9144:34;9127:15;;;;9120:59;;;;-1:-1:-1;;9266:12:62;;;;9231:15;;;;8556:1;8549:9;8520:768;;;-1:-1:-1;9305:6:62;;7950:1367;-1:-1:-1;;;;;;;;7950:1367:62:o;9322:1105::-;9475:6;9483;9491;9499;9507;9515;9523;9531;9539;9547;9600:3;9588:9;9579:7;9575:23;9571:33;9568:53;;;9617:1;9614;9607:12;9568:53;9657:9;9644:23;9686:18;9727:2;9719:6;9716:14;9713:34;;;9743:1;9740;9733:12;9713:34;9766:50;9808:7;9799:6;9788:9;9784:22;9766:50;:::i;:::-;9756:60;;9835:35;9866:2;9855:9;9851:18;9835:35;:::i;:::-;9825:45;;9889:35;9920:2;9909:9;9905:18;9889:35;:::i;:::-;9879:45;;9971:2;9960:9;9956:18;9943:32;9933:42;;10022:3;10011:9;10007:19;9994:33;9984:43;;10074:3;10063:9;10059:19;10046:33;10036:43;;10126:3;10115:9;10111:19;10098:33;10088:43;;10150:39;10184:3;10173:9;10169:19;10150:39;:::i;:::-;10140:49;;10208:39;10242:3;10231:9;10227:19;10208:39;:::i;:::-;10198:49;;10300:3;10289:9;10285:19;10272:33;10256:49;;10330:2;10320:8;10317:16;10314:36;;;10346:1;10343;10336:12;10314:36;;10369:52;10413:7;10402:8;10391:9;10387:24;10369:52;:::i;:::-;10359:62;;;9322:1105;;;;;;;;;;;;;:::o;10432:1158::-;10571:6;10579;10587;10595;10603;10611;10619;10672:3;10660:9;10651:7;10647:23;10643:33;10640:53;;;10689:1;10686;10679:12;10640:53;10728:9;10715:23;10747:31;10772:5;10747:31;:::i;:::-;10797:5;-1:-1:-1;10853:2:62;10838:18;;10825:32;10876:18;10906:14;;;10903:34;;;10933:1;10930;10923:12;10903:34;10956:50;10998:7;10989:6;10978:9;10974:22;10956:50;:::i;:::-;10946:60;;11059:2;11048:9;11044:18;11031:32;11015:48;;11088:2;11078:8;11075:16;11072:36;;;11104:1;11101;11094:12;11072:36;11127:52;11171:7;11160:8;11149:9;11145:24;11127:52;:::i;:::-;11117:62;;11231:2;11220:9;11216:18;11203:32;11188:47;;11244:30;11266:7;11244:30;:::i;:::-;11293:7;11283:17;;11347:3;11336:9;11332:19;11319:33;11309:43;;11371:39;11405:3;11394:9;11390:19;11371:39;:::i;:::-;11361:49;;11463:3;11452:9;11448:19;11435:33;11419:49;;11493:2;11483:8;11480:16;11477:36;;;11509:1;11506;11499:12;11477:36;;11532:52;11576:7;11565:8;11554:9;11550:24;11532:52;:::i;:::-;11522:62;;;10432:1158;;;;;;;;;;:::o;11595:399::-;11809:34;11797:47;;11874:34;11869:2;11860:12;;11853:56;-1:-1:-1;;;11934:2:62;11925:12;;11918:42;11985:2;11976:12;;11595:399::o;11999:489::-;12258:25;;;12314:2;12299:18;;12292:34;;;;12357:2;12342:18;;12335:34;;;;12400:2;12385:18;;12378:34;-1:-1:-1;;;;;12449:32:62;12443:3;12428:19;;12421:61;12245:3;12230:19;;11999:489::o;12884:276::-;13015:3;13053:6;13047:13;13069:53;13115:6;13110:3;13103:4;13095:6;13091:17;13069:53;:::i;:::-;13138:16;;;;;12884:276;-1:-1:-1;;12884:276:62:o;13587:392::-;-1:-1:-1;;;13845:27:62;;13897:1;13888:11;;13881:27;;;;13933:2;13924:12;;13917:28;13970:2;13961:12;;13587:392::o;15393:184::-;15463:6;15516:2;15504:9;15495:7;15491:23;15487:32;15484:52;;;15532:1;15529;15522:12;15484:52;-1:-1:-1;15555:16:62;;15393:184;-1:-1:-1;15393:184:62:o;16112:430::-;16166:5;16219:3;16212:4;16204:6;16200:17;16196:27;16186:55;;16237:1;16234;16227:12;16186:55;16266:6;16260:13;16297:49;16313:32;16342:2;16313:32;:::i;16297:49::-;16371:2;16362:7;16355:19;16417:3;16410:4;16405:2;16397:6;16393:15;16389:26;16386:35;16383:55;;;16434:1;16431;16424:12;16383:55;16447:64;16508:2;16501:4;16492:7;16488:18;16481:4;16473:6;16469:17;16447:64;:::i;:::-;16529:7;16112:430;-1:-1:-1;;;;16112:430:62:o;16547:784::-;16657:6;16665;16673;16681;16689;16742:3;16730:9;16721:7;16717:23;16713:33;16710:53;;;16759:1;16756;16749:12;16710:53;16791:9;16785:16;16810:31;16835:5;16810:31;:::i;:::-;16909:2;16894:18;;16888:25;16860:5;;-1:-1:-1;16936:18:62;16925:30;;16922:50;;;16968:1;16965;16958:12;16922:50;16991:61;17044:7;17035:6;17024:9;17020:22;16991:61;:::i;:::-;16981:71;;;17092:2;17081:9;17077:18;17071:25;17061:35;;17141:2;17130:9;17126:18;17120:25;17154:30;17176:7;17154:30;:::i;:::-;17255:3;17240:19;;17234:26;17203:7;;-1:-1:-1;17269:30:62;17234:26;17269:30;:::i;:::-;17318:7;17308:17;;;16547:784;;;;;;;;:::o;17678:337::-;17758:6;17811:2;17799:9;17790:7;17786:23;17782:32;17779:52;;;17827:1;17824;17817:12;17779:52;17860:9;17854:16;17893:18;17885:6;17882:30;17879:50;;;17925:1;17922;17915:12;17879:50;17948:61;18001:7;17992:6;17981:9;17977:22;17948:61;:::i;18209:245::-;18276:6;18329:2;18317:9;18308:7;18304:23;18300:32;18297:52;;;18345:1;18342;18335:12;18297:52;18377:9;18371:16;18396:28;18418:5;18396:28;:::i;19759:127::-;19820:10;19815:3;19811:20;19808:1;19801:31;19851:4;19848:1;19841:15;19875:4;19872:1;19865:15;19891:232;19930:3;-1:-1:-1;;19951:17:62;;19948:140;;;20010:10;20005:3;20001:20;19998:1;19991:31;20045:4;20042:1;20035:15;20073:4;20070:1;20063:15;19948:140;-1:-1:-1;20115:1:62;20104:13;;19891:232::o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagers`",
          "govRuleMaxManagers": "Max of managers that CLH can accept (only for COMMITTEE )",
          "govRuleMaxUsers": "Max of all users (including managers)",
          "houseOpen": "True if is Open",
          "housePrivate": "True if is private",
          "numManagers": "Current managers of a CLH",
          "numUsers": "Current users of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all users address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrUsers": "array with list of users"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isUser": "true if is User",
          "name": "Nickname ot other user identificaction"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    223,
    10850
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AB062A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x9F6FD7AB EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xE78FC36B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xF240C7E9 EQ PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x349DC296 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7B3BB156 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH2 0xB6 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x1756 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x184C JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x1756 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C2 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D54 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28D SWAP1 PUSH32 0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179 PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0x54696D6529 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x32B SWAP3 SWAP2 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x34D DUP2 DUP7 PUSH2 0x35A JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x430 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D54 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x47A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4DC SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x5A9 DUP2 DUP7 PUSH2 0x35A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3FE463 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70FF918C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x609 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x67A PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6E7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C1F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B9903737BA1030903AB9B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7F3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F2E1339 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE68777D7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1343E9A5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE810A58E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB35 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D54 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB7F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBF2 SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC69 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D54 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCB3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD00 SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000 DUP2 MSTORE PUSH1 0x1B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE DUP9 ISZERO ISZERO DUP4 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD4D SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xD6F DUP2 DUP7 PUSH2 0x35A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE5 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA693649A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE68 JUMPI PUSH2 0xE68 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEA1 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE8E PUSH2 0x13EE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE86 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9B JUMPI PUSH2 0xEB9 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF26 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C1F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0xF88 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF6E JUMPI PUSH2 0xF6E PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0xF84 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0xF93 DUP2 PUSH2 0x1D0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFB9 SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D54 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1003 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x110E SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x652C616464726573732077686974654C69737457616C6C657473290000000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xBB ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP13 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP12 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP10 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x11EA DUP2 DUP7 PUSH2 0x35A JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x120E SWAP1 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D54 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D34 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1258 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12F1 SWAP1 PUSH32 0x7374724F434E65775573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13BD SWAP3 SWAP2 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x13DF DUP2 DUP7 PUSH2 0x35A JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x143F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x144D DUP2 PUSH2 0x142A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1491 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B3 PUSH2 0x1452 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14E5 PUSH2 0x14E0 DUP3 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0x1468 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x153A DUP2 PUSH2 0x142A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1563 DUP10 DUP4 DUP11 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x157C DUP3 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159F DUP9 DUP3 DUP10 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E9 DUP6 DUP3 DUP7 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x162D DUP9 DUP4 DUP10 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164F DUP9 DUP4 DUP10 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1661 DUP3 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1684 DUP8 DUP3 DUP9 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16AE DUP2 PUSH2 0x142A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16BE DUP2 PUSH2 0x142A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16CC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1711 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1738 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1773 DUP2 PUSH2 0x142A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x178E DUP2 DUP5 ADD DUP14 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP SWAP7 ISZERO ISZERO PUSH1 0x40 DUP9 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x143F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x144D DUP2 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1811 DUP2 PUSH2 0x17CE JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x183A DUP10 DUP4 DUP11 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x157C DUP3 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x186C DUP2 PUSH2 0x17CE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x187C DUP2 PUSH2 0x142A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A4 DUP7 DUP3 DUP8 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1944 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x190E DUP3 DUP8 ADD DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18D5 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x1972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x198A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1996 DUP15 DUP4 DUP16 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP12 POP PUSH2 0x19A4 PUSH1 0x20 DUP15 ADD PUSH2 0x17DC JUMP JUMPDEST SWAP11 POP PUSH2 0x19B2 PUSH1 0x40 DUP15 ADD PUSH2 0x17DC JUMP JUMPDEST SWAP10 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP9 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP6 POP PUSH2 0x19DC PUSH1 0xE0 DUP15 ADD PUSH2 0x1442 JUMP JUMPDEST SWAP5 POP PUSH2 0x19EB PUSH2 0x100 DUP15 ADD PUSH2 0x1442 JUMP JUMPDEST SWAP4 POP PUSH2 0x120 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0F DUP14 DUP3 DUP15 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A47 DUP2 PUSH2 0x142A JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A70 DUP12 DUP4 DUP13 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A92 DUP12 DUP4 DUP13 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1AA4 DUP3 PUSH2 0x17CE JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1ABA PUSH1 0xA0 DUP12 ADD PUSH2 0x1442 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ADD DUP11 DUP3 DUP12 ADD PUSH2 0x14C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B94 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16C9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BF1 PUSH2 0x14E0 DUP3 PUSH2 0x1499 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1C06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C17 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1C42 DUP2 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6B DUP9 DUP3 DUP10 ADD PUSH2 0x1BD2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1C83 DUP2 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1C94 DUP2 PUSH2 0x17CE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C17 DUP5 DUP3 DUP6 ADD PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1773 DUP2 PUSH2 0x17CE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D2C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xAA PUSH29 0xDBE2CCE2EC7B606B0E199DDD9B264A6E645E767FB8479A7917DCD1B869 EXTCODEHASH ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C875A2646970667358221220 PUSH27 0x4EF104A53A68D7F5417BC0854A78D65A6BA13F97BEFC99DA173E61 SELFDESTRUCT 0xB5 PUSH24 0xCE64736F6C634300080C0033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "6": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "REVERT",
      "path": "46"
    },
    "16": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "17": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "POP",
      "path": "46"
    },
    "18": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "21": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "LT",
      "path": "46"
    },
    "22": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "26": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "29": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "SHR",
      "path": "46"
    },
    "32": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "33": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "38": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "GT",
      "path": "46"
    },
    "39": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "43": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "44": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "49": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "50": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x144"
    },
    "53": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "54": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "55": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9F6FD7AB"
    },
    "60": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "61": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x157"
    },
    "64": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "65": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "66": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB698BE8D"
    },
    "71": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "72": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16A"
    },
    "75": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "76": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "77": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE78FC36B"
    },
    "82": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "83": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18A"
    },
    "86": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "87": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "88": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF240C7E9"
    },
    "93": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "94": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19D"
    },
    "97": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "98": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "101": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "REVERT",
      "path": "46"
    },
    "102": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "103": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "104": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x349DC296"
    },
    "109": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "110": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "114": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "115": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x622ECA77"
    },
    "120": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "121": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD3"
    },
    "124": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "125": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "126": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7B3BB156"
    },
    "131": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "132": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE6"
    },
    "135": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "136": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "137": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x86ABD826"
    },
    "142": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "143": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF9"
    },
    "146": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "147": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "148": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x8750BC3E"
    },
    "153": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "EQ",
      "path": "46"
    },
    "154": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11C"
    },
    "157": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "158": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "159": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "DUP1",
      "path": "46"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        223,
        10850
      ],
      "op": "REVERT",
      "path": "46"
    },
    "163": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "164": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "167": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB1"
    },
    "170": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "171": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "173": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1517"
    },
    "176": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "177": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "178": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B0"
    },
    "181": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "182": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "183": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "185": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "192": {
      "op": "SHL"
    },
    "193": {
      "op": "SUB"
    },
    "194": {
      "op": "SWAP1"
    },
    "195": {
      "op": "SWAP2"
    },
    "196": {
      "op": "AND"
    },
    "197": {
      "op": "DUP2"
    },
    "198": {
      "op": "MSTORE"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "201": {
      "op": "ADD"
    },
    "202": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "203": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "205": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "206": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "DUP1",
      "path": "46"
    },
    "207": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "208": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "SUB",
      "path": "46"
    },
    "209": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "210": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "RETURN",
      "path": "46"
    },
    "211": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "212": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "215": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE1"
    },
    "218": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "219": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "221": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15AC"
    },
    "224": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "225": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "226": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x35A"
    },
    "229": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "230": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "231": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "234": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF4"
    },
    "237": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "238": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "240": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15F3"
    },
    "243": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        8614,
        9509
      ],
      "op": "JUMP",
      "path": "46"
    },
    "244": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "245": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x41E"
    },
    "248": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        8614,
        9509
      ],
      "op": "JUMP",
      "path": "46"
    },
    "249": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "250": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10C"
    },
    "253": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x107"
    },
    "256": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "257": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "259": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1690"
    },
    "262": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "263": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "264": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5B5"
    },
    "267": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "268": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "269": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "271": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "272": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCA"
    },
    "275": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "276": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "277": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "278": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "279": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "280": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1725"
    },
    "283": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "284": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "285": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12F"
    },
    "288": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12A"
    },
    "291": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "292": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "294": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1756"
    },
    "297": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "298": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "299": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x77A"
    },
    "302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "304": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "306": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "307": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCA"
    },
    "310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "311": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "312": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "314": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "315": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "316": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "319": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "320": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x177A"
    },
    "323": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "324": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "325": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "328": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x152"
    },
    "331": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "332": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "334": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17E7"
    },
    "337": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "338": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "339": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB23"
    },
    "342": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "343": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "344": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "347": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x165"
    },
    "350": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "351": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "353": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x184C"
    },
    "356": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "357": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "358": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC57"
    },
    "361": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "362": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "363": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17D"
    },
    "366": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x178"
    },
    "369": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "370": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "372": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1756"
    },
    "375": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "376": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "377": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD7A"
    },
    "380": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "381": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "382": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "384": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "385": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCA"
    },
    "388": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "389": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "390": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18AE"
    },
    "393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "394": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "395": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "398": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x198"
    },
    "401": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "402": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "404": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1952"
    },
    "407": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        9516,
        10848
      ],
      "op": "JUMP",
      "path": "46"
    },
    "408": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "409": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFA7"
    },
    "412": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        9516,
        10848
      ],
      "op": "JUMP",
      "path": "46"
    },
    "413": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "414": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB6"
    },
    "417": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1AB"
    },
    "420": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "421": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "423": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A21"
    },
    "426": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        6614,
        7676
      ],
      "op": "JUMP",
      "path": "46"
    },
    "427": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "428": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11FC"
    },
    "431": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        6614,
        7676
      ],
      "op": "JUMP",
      "path": "46"
    },
    "432": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "433": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7908,
        7915
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "435": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7932,
        7956
      ],
      "op": "DUP1",
      "path": "46"
    },
    "436": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "438": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "439": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "441": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "442": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1C2"
    },
    "445": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "446": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1AEC"
    },
    "449": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "450": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "451": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "453": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "454": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "456": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "457": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "458": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "459": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "460": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "461": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "462": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "463": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "465": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "466": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "467": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "468": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "469": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "471": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "472": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "MLOAD"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "479": {
      "op": "PUSH2",
      "value": "0x1D54"
    },
    "482": {
      "op": "DUP4"
    },
    "483": {
      "op": "CODECOPY"
    },
    "484": {
      "op": "DUP2"
    },
    "485": {
      "op": "MLOAD"
    },
    "486": {
      "op": "SWAP2"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "op": "MLOAD"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "494": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "497": {
      "op": "DUP4"
    },
    "498": {
      "op": "CODECOPY"
    },
    "499": {
      "op": "DUP2"
    },
    "500": {
      "op": "MLOAD"
    },
    "501": {
      "op": "SWAP2"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8136,
        8149
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "504": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8167,
        8177
      ],
      "op": "DUP8",
      "path": "46"
    },
    "505": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "507": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "508": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "510": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "ADD",
      "path": "46"
    },
    "511": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20C"
    },
    "514": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "515": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "516": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "517": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "518": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "519": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "520": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B56"
    },
    "523": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        7982,
        8191
      ],
      "op": "JUMP",
      "path": "46"
    },
    "524": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "525": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "527": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "528": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "530": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "DUP2",
      "path": "46"
    },
    "531": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "DUP4",
      "path": "46"
    },
    "532": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SUB",
      "path": "46"
    },
    "533": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SUB",
      "path": "46"
    },
    "534": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "DUP2",
      "path": "46"
    },
    "535": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "536": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "537": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "539": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7982,
        8191
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "540": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7959,
        8201
      ],
      "op": "DUP1",
      "path": "46"
    },
    "541": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7959,
        8201
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "542": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7959,
        8201
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "543": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7959,
        8201
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "545": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7959,
        8201
      ],
      "op": "ADD",
      "path": "46"
    },
    "546": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7959,
        8201
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "547": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7932,
        8201
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "548": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7932,
        8201
      ],
      "op": "POP",
      "path": "46"
    },
    "549": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8212,
        8227
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "551": {
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "553": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "554": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "556": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "ADD",
      "path": "48"
    },
    "557": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x28D"
    },
    "560": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "561": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C"
    },
    "594": {
      "op": "DUP2"
    },
    "595": {
      "op": "MSTORE"
    },
    "596": {
      "op": "PUSH32",
      "value": "0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "631": {
      "op": "DUP3"
    },
    "632": {
      "op": "ADD"
    },
    "633": {
      "op": "MSTORE"
    },
    "634": {
      "op": "PUSH5",
      "value": "0x54696D6529"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "645": {
      "op": "DUP3"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "op": "MSTORE"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "SWAP1"
    },
    "652": {
      "op": "JUMP"
    },
    "653": {
      "offset": [
        1352,
        1455
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "654": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "656": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "657": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "659": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "DUP2",
      "path": "48"
    },
    "660": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "DUP4",
      "path": "48"
    },
    "661": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SUB",
      "path": "48"
    },
    "662": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SUB",
      "path": "48"
    },
    "663": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "DUP2",
      "path": "48"
    },
    "664": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "665": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "666": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "668": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1352,
        1455
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "669": {
      "offset": [
        1337,
        1457
      ],
      "op": "DUP1",
      "path": "48"
    },
    "670": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "671": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "672": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "674": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "ADD",
      "path": "48"
    },
    "675": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1337,
        1457
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "676": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8321,
        8332
      ],
      "op": "DUP9",
      "path": "46"
    },
    "677": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8379,
        8391
      ],
      "op": "DUP9",
      "path": "46"
    },
    "678": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "680": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "681": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "683": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "ADD",
      "path": "46"
    },
    "684": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2B5"
    },
    "687": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "688": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "689": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "692": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8361,
        8393
      ],
      "op": "JUMP",
      "path": "46"
    },
    "693": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "694": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "696": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "697": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "699": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "DUP2",
      "path": "46"
    },
    "700": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "DUP4",
      "path": "46"
    },
    "701": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "SUB",
      "path": "46"
    },
    "702": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "SUB",
      "path": "46"
    },
    "703": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "DUP2",
      "path": "46"
    },
    "704": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "705": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "706": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "708": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8361,
        8393
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "709": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8350,
        8395
      ],
      "op": "DUP1",
      "path": "46"
    },
    "710": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8350,
        8395
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "711": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8350,
        8395
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "712": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8350,
        8395
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "714": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8350,
        8395
      ],
      "op": "ADD",
      "path": "46"
    },
    "715": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8350,
        8395
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "716": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8413,
        8423
      ],
      "op": "DUP9",
      "path": "46"
    },
    "717": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "719": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "720": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "722": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "ADD",
      "path": "46"
    },
    "723": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2FE"
    },
    "726": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "727": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "728": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "729": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "730": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "731": {
      "op": "SWAP4"
    },
    "732": {
      "op": "DUP5"
    },
    "733": {
      "op": "MSTORE"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "op": "SWAP3"
    },
    "743": {
      "op": "SWAP1"
    },
    "744": {
      "op": "SWAP3"
    },
    "745": {
      "op": "AND"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "748": {
      "op": "DUP5"
    },
    "749": {
      "op": "ADD"
    },
    "750": {
      "op": "MSTORE"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "753": {
      "op": "DUP4"
    },
    "754": {
      "op": "ADD"
    },
    "755": {
      "op": "MSTORE"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "SWAP1"
    },
    "765": {
      "op": "JUMP"
    },
    "766": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "767": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "769": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "770": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "772": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "DUP2",
      "path": "46"
    },
    "773": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "DUP4",
      "path": "46"
    },
    "774": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SUB",
      "path": "46"
    },
    "775": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SUB",
      "path": "46"
    },
    "776": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "DUP2",
      "path": "46"
    },
    "777": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "778": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "779": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "781": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8253,
        8437
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "782": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8447
      ],
      "op": "DUP1",
      "path": "46"
    },
    "783": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8447
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "784": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8447
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "785": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8447
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "787": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8447
      ],
      "op": "ADD",
      "path": "46"
    },
    "788": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8230,
        8447
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "789": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8212,
        8447
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "790": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8212,
        8447
      ],
      "op": "POP",
      "path": "46"
    },
    "791": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8458,
        8474
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "793": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8518,
        8534
      ],
      "op": "DUP3",
      "path": "46"
    },
    "794": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8536,
        8543
      ],
      "op": "DUP3",
      "path": "46"
    },
    "795": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "797": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "798": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "800": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "ADD",
      "path": "46"
    },
    "801": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x32B"
    },
    "804": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "805": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "806": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "807": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B9E"
    },
    "810": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8488,
        8545
      ],
      "op": "JUMP",
      "path": "46"
    },
    "811": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "812": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "814": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "815": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "817": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "DUP2",
      "path": "46"
    },
    "818": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "DUP4",
      "path": "46"
    },
    "819": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "SUB",
      "path": "46"
    },
    "820": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "SUB",
      "path": "46"
    },
    "821": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "DUP2",
      "path": "46"
    },
    "822": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "823": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "824": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "826": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8488,
        8545
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "827": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8477,
        8547
      ],
      "op": "DUP1",
      "path": "46"
    },
    "828": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8477,
        8547
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "829": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8477,
        8547
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "830": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8477,
        8547
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "832": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8477,
        8547
      ],
      "op": "ADD",
      "path": "46"
    },
    "833": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8477,
        8547
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "834": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8458,
        8547
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "835": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8458,
        8547
      ],
      "op": "POP",
      "path": "46"
    },
    "836": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8565,
        8600
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 0,
      "value": "0x34D"
    },
    "839": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8578,
        8586
      ],
      "op": "DUP2",
      "path": "46"
    },
    "840": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8588,
        8598
      ],
      "op": "DUP7",
      "path": "46"
    },
    "841": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8565,
        8576
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x35A"
    },
    "844": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8565,
        8600
      ],
      "op": "JUMP",
      "path": "46"
    },
    "845": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8565,
        8600
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "846": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8558,
        8600
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "847": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        7683,
        8607
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "o",
      "offset": [
        7683,
        8607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "858": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "859": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        584,
        591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "861": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        627
      ],
      "op": "DUP2",
      "path": "46",
      "statement": 1
    },
    "862": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "863": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        638,
        640
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x41"
    },
    "865": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        640
      ],
      "op": "EQ",
      "path": "46"
    },
    "866": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A9"
    },
    "869": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "870": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "872": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP2",
      "path": "46"
    },
    "881": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "884": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "886": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP3",
      "path": "46"
    },
    "887": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "ADD",
      "path": "46"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "922": {
      "op": "DUP3"
    },
    "923": {
      "op": "ADD"
    },
    "924": {
      "op": "MSTORE"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "929": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "931": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "932": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP1",
      "path": "46"
    },
    "933": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "934": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SUB",
      "path": "46"
    },
    "935": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "936": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "46"
    },
    "937": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "938": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        856,
        858
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "940": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP3",
      "path": "46"
    },
    "941": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP2",
      "path": "46"
    },
    "942": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "ADD",
      "path": "46"
    },
    "943": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "944": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        939,
        941
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "946": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP1",
      "path": "46"
    },
    "947": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP6",
      "path": "46"
    },
    "948": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "ADD",
      "path": "46"
    },
    "949": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        915,
        945
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "950": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1060,
        1062
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "952": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP1",
      "path": "46"
    },
    "953": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP8",
      "path": "46"
    },
    "954": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "ADD",
      "path": "46"
    },
    "955": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1036,
        1066
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "956": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP4",
      "path": "46",
      "statement": 2
    },
    "957": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "958": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        677,
        690
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "960": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "961": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP3",
      "path": "46"
    },
    "962": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "963": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "964": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "965": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "966": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "967": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP7",
      "path": "46"
    },
    "968": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "969": {
      "op": "DUP11"
    },
    "970": {
      "op": "SWAP1"
    },
    "971": {
      "op": "MSTORE"
    },
    "972": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "973": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "BYTE",
      "path": "46"
    },
    "974": {
      "op": "SWAP3"
    },
    "975": {
      "op": "DUP6"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "DUP4"
    },
    "978": {
      "op": "SWAP1"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "DUP5"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "DUP4"
    },
    "983": {
      "op": "SWAP1"
    },
    "984": {
      "op": "MSTORE"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "987": {
      "op": "DUP5"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "SWAP1"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "993": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "994": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "996": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "ADD"
    },
    "1000": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1002": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1004": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1005": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1007": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1008": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1009": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1010": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1011": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1012": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1013": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1014": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1015": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "GAS",
      "path": "46"
    },
    "1016": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1017": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1018": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1019": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1020": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x409"
    },
    "1023": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1024": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1025": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1027": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1028": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1029": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1030": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1032": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1033": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1038": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1041": {
      "op": "NOT"
    },
    "1042": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "1043": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1044": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1045": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "op": "POP"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "op": "POP"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "op": "POP"
    },
    "1052": {
      "op": "POP"
    },
    "1053": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "o",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1054": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1055": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8811,
        8818
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1057": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8835,
        8859
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1058": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1060": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1061": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1063": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "1064": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x430"
    },
    "1067": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1068": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1AEC"
    },
    "1071": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1072": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1073": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1075": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1076": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1078": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1079": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1080": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "1081": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "1082": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1083": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1084": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1085": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1087": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1088": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1089": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1090": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1091": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1093": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "1094": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "op": "MLOAD"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "op": "PUSH2",
      "value": "0x1D54"
    },
    "1104": {
      "op": "DUP4"
    },
    "1105": {
      "op": "CODECOPY"
    },
    "1106": {
      "op": "DUP2"
    },
    "1107": {
      "op": "MLOAD"
    },
    "1108": {
      "op": "SWAP2"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1112": {
      "op": "DUP1"
    },
    "1113": {
      "op": "MLOAD"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1116": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "1119": {
      "op": "DUP4"
    },
    "1120": {
      "op": "CODECOPY"
    },
    "1121": {
      "op": "DUP2"
    },
    "1122": {
      "op": "MLOAD"
    },
    "1123": {
      "op": "SWAP2"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9039,
        9052
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "1126": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9070,
        9080
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1127": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1129": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1130": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1132": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "ADD",
      "path": "46"
    },
    "1133": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x47A"
    },
    "1136": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1137": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1138": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1139": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1140": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1141": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1142": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B56"
    },
    "1145": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        8885,
        9094
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1146": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1147": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1149": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1150": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1152": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1153": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1154": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SUB",
      "path": "46"
    },
    "1155": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SUB",
      "path": "46"
    },
    "1156": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1157": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1158": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1159": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1161": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8885,
        9094
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1162": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8862,
        9104
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1163": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8862,
        9104
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1164": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8862,
        9104
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1165": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8862,
        9104
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1167": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8862,
        9104
      ],
      "op": "ADD",
      "path": "46"
    },
    "1168": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8862,
        9104
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1169": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8835,
        9104
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1170": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8835,
        9104
      ],
      "op": "POP",
      "path": "46"
    },
    "1171": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9115,
        9130
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1173": {
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1175": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1176": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1178": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "ADD",
      "path": "48"
    },
    "1179": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4DC"
    },
    "1182": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1183": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "1216": {
      "op": "DUP2"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1233": {
      "op": "SHL"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1236": {
      "op": "DUP3"
    },
    "1237": {
      "op": "ADD"
    },
    "1238": {
      "op": "MSTORE"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1241": {
      "op": "ADD"
    },
    "1242": {
      "op": "SWAP1"
    },
    "1243": {
      "op": "JUMP"
    },
    "1244": {
      "offset": [
        1516,
        1594
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1245": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1247": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1248": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1250": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1251": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1252": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SUB",
      "path": "48"
    },
    "1253": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SUB",
      "path": "48"
    },
    "1254": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1255": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1256": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1257": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1259": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1516,
        1594
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1260": {
      "offset": [
        1501,
        1596
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1261": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1262": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1263": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1265": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "ADD",
      "path": "48"
    },
    "1266": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1501,
        1596
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1267": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9253,
        9258
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1268": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1270": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1271": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1273": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "ADD",
      "path": "46"
    },
    "1274": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x503"
    },
    "1277": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1278": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1279": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "1282": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9235,
        9260
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1283": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1284": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1286": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1287": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1289": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1290": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1291": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "SUB",
      "path": "46"
    },
    "1292": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "SUB",
      "path": "46"
    },
    "1293": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1294": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1295": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1296": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1298": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9235,
        9260
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1299": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9224,
        9262
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1300": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9224,
        9262
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1301": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9224,
        9262
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1302": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9224,
        9262
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1304": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9224,
        9262
      ],
      "op": "ADD",
      "path": "46"
    },
    "1305": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9224,
        9262
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1306": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9309,
        9321
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1307": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1309": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1310": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1312": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "ADD",
      "path": "46"
    },
    "1313": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x52A"
    },
    "1316": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1317": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1318": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "1321": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9291,
        9323
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1322": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1323": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1325": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1326": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1329": {
      "op": "NOT"
    },
    "1330": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1331": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1332": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "SUB",
      "path": "46"
    },
    "1333": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "ADD",
      "path": "46"
    },
    "1334": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1335": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1336": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1337": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1338": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1339": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9280,
        9325
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1340": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9280,
        9325
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1341": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9291,
        9323
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1343": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9280,
        9325
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1344": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9280,
        9325
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1345": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9280,
        9325
      ],
      "op": "ADD",
      "path": "46"
    },
    "1346": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9280,
        9325
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1347": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1348": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1349": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "ADD",
      "path": "46"
    },
    "1350": {
      "op": "SWAP5"
    },
    "1351": {
      "op": "SWAP1"
    },
    "1352": {
      "op": "SWAP5"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "ADD"
    },
    "1356": {
      "op": "SWAP2"
    },
    "1357": {
      "op": "SWAP1"
    },
    "1358": {
      "op": "SWAP2"
    },
    "1359": {
      "op": "MSTORE"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1362": {
      "op": "DUP2"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "SWAP2"
    },
    "1365": {
      "op": "SWAP1"
    },
    "1366": {
      "op": "SWAP2"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1373": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1374": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1376": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1377": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1378": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "SUB",
      "path": "46"
    },
    "1379": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "SUB",
      "path": "46"
    },
    "1380": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1381": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1382": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1383": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1385": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9156,
        9339
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1386": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9133,
        9349
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1387": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9133,
        9349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1388": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9133,
        9349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1389": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9133,
        9349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1391": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9133,
        9349
      ],
      "op": "ADD",
      "path": "46"
    },
    "1392": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9133,
        9349
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1393": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9115,
        9349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1394": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9115,
        9349
      ],
      "op": "POP",
      "path": "46"
    },
    "1395": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9360,
        9376
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1397": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9420,
        9436
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1398": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9438,
        9445
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1399": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1401": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1402": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1404": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "ADD",
      "path": "46"
    },
    "1405": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x587"
    },
    "1408": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1409": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1410": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1411": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B9E"
    },
    "1414": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9390,
        9447
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1415": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1416": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1418": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1419": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1421": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1422": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1423": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "SUB",
      "path": "46"
    },
    "1424": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "SUB",
      "path": "46"
    },
    "1425": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1426": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1427": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1428": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1430": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9390,
        9447
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1431": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9379,
        9449
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1432": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9379,
        9449
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1433": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9379,
        9449
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1434": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9379,
        9449
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1436": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9379,
        9449
      ],
      "op": "ADD",
      "path": "46"
    },
    "1437": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9379,
        9449
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1438": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9360,
        9449
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1439": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9360,
        9449
      ],
      "op": "POP",
      "path": "46"
    },
    "1440": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9467,
        9502
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 3,
      "value": "0x5A9"
    },
    "1443": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9480,
        9488
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1444": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9490,
        9500
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1445": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9467,
        9478
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x35A"
    },
    "1448": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9467,
        9502
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1449": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9467,
        9502
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1450": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9460,
        9502
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "1451": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        8614,
        9509
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "POP"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "o",
      "offset": [
        8614,
        9509
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1461": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1462": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1464": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1465": {
      "op": "PUSH4",
      "value": "0x1C3FE463"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1474": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "op": "DUP3"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "AND"
    },
    "1486": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1488": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1489": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1490": {
      "op": "MSTORE"
    },
    "1491": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1493": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1494": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1496": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1497": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1498": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1499": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1500": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1501": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1502": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1503": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1504": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1505": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1506": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "AND",
      "path": "46"
    },
    "1507": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1508": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70FF918C"
    },
    "1513": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1516": {
      "op": "ADD"
    },
    "1517": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1519": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1521": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1522": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1523": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1524": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SUB",
      "path": "46"
    },
    "1525": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1526": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1527": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "GAS",
      "path": "46"
    },
    "1528": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1529": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1530": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1531": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1532": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x609"
    },
    "1535": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1536": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1537": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1539": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1540": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1541": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1542": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1544": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1545": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1546": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1547": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1548": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1549": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1550": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1552": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1553": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1554": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1556": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "NOT",
      "path": "46"
    },
    "1557": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1559": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1560": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1561": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "AND",
      "path": "46"
    },
    "1562": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1563": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1564": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1565": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1567": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1568": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1569": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1570": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1571": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1572": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x62D"
    },
    "1575": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1576": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1577": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "1580": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1581": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1582": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1826,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1891,
        1899
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 4
    },
    "1585": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x672"
    },
    "1588": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1589": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1591": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1600": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1603": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1605": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1606": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "ADD",
      "path": "46"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1612": {
      "op": "DUP3"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "op": "MSTORE"
    },
    "1615": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1640": {
      "op": "DUP3"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A0"
    },
    "1649": {
      "op": "JUMP"
    },
    "1650": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1651": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x67A"
    },
    "1654": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13EE"
    },
    "1657": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1658": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1659": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 5,
      "value": "0x40"
    },
    "1661": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1662": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1671": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1672": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1674": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1675": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1676": {
      "op": "DUP4"
    },
    "1677": {
      "op": "SWAP1"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1685": {
      "op": "SHL"
    },
    "1686": {
      "op": "SUB"
    },
    "1687": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1688": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "AND",
      "path": "46"
    },
    "1689": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1690": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "1695": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1701": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1703": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1704": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1705": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1706": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SUB",
      "path": "46"
    },
    "1707": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1708": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1709": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "GAS",
      "path": "46"
    },
    "1710": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1711": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1712": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1713": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1714": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6BF"
    },
    "1717": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1718": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1719": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1721": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1722": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1723": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1724": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1726": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1727": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1728": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1729": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1730": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1731": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1732": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1734": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1735": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1736": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1738": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1739": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1740": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1742": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1743": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1744": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1745": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1748": {
      "op": "NOT"
    },
    "1749": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "1750": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1751": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1752": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1754": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1755": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6E7"
    },
    "1758": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1759": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1760": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1761": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1762": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1763": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C1F"
    },
    "1766": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1767": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1768": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1769": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1770": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "1772": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1773": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "ADD",
      "path": "46"
    },
    "1774": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1775": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1776": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1777": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1779": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1780": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "ADD",
      "path": "46"
    },
    "1781": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1782": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1783": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1784": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1786": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1787": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "ADD",
      "path": "46"
    },
    "1788": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1789": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1790": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1791": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1792": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1794": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1795": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "ADD",
      "path": "46"
    },
    "1796": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1797": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1798": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1799": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1806": {
      "op": "SHL"
    },
    "1807": {
      "op": "SUB"
    },
    "1808": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1809": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1810": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "1811": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1812": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1813": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2168
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 6,
      "value": "0x1"
    },
    "1815": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2188
      ],
      "op": "EQ",
      "path": "46"
    },
    "1816": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x753"
    },
    "1819": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1820": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1822": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1831": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1834": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1836": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1837": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "ADD",
      "path": "46"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "MSTORE"
    },
    "1846": {
      "op": "PUSH13",
      "value": "0x24B9903737BA1030903AB9B2B9"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1865": {
      "op": "DUP3"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A0"
    },
    "1874": {
      "op": "JUMP"
    },
    "1875": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1876": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 7,
      "value": "0x20"
    },
    "1878": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1879": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "ADD",
      "path": "46"
    },
    "1880": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1881": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1883": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1884": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "ADD",
      "path": "46"
    },
    "1885": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1886": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1888": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1889": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "ADD",
      "path": "46"
    },
    "1890": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1891": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "1893": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1894": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1895": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "ADD",
      "path": "46"
    },
    "1896": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1897": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1898": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "1899": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1900": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "1901": {
      "op": "POP"
    },
    "1902": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1903": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "1904": {
      "op": "POP"
    },
    "1905": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1908": {
      "op": "POP"
    },
    "1909": {
      "op": "POP"
    },
    "1910": {
      "op": "POP"
    },
    "1911": {
      "op": "POP"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1914": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1915": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4181,
        4205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1917": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4219,
        4249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1919": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4263,
        4280
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1920": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4294,
        4308
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1922": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4322,
        4338
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1923": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1925": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4385,
        4416
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1926": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4430,
        4453
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1928": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4467,
        4493
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1929": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4533
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1931": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4546,
        4556
      ],
      "op": "DUP11",
      "path": "46"
    },
    "1932": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1933": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "POP",
      "path": "46"
    },
    "1934": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4595
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 8
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "AND",
      "path": "46"
    },
    "1944": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x59CA2D03"
    },
    "1949": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1951": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1952": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1953": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "1958": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "1959": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "1961": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SHL",
      "path": "46"
    },
    "1962": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1963": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1964": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1966": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "1967": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1969": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1971": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1972": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1973": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1974": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SUB",
      "path": "46"
    },
    "1975": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1976": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1977": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "GAS",
      "path": "46"
    },
    "1978": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1979": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1980": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1981": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1982": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7CB"
    },
    "1985": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1986": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1987": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1989": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1990": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1991": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1992": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1994": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1995": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1996": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "1997": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "1998": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "1999": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2000": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2002": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2003": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2004": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2006": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2007": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2008": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2010": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2011": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2012": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2013": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2016": {
      "op": "NOT"
    },
    "2017": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "2018": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2019": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2020": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2022": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2023": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7F3"
    },
    "2026": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2027": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2028": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2029": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2030": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2031": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CA2"
    },
    "2034": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2035": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2036": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4628
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2043": {
      "op": "SHL"
    },
    "2044": {
      "op": "SUB"
    },
    "2045": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "AND",
      "path": "46"
    },
    "2046": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1D5FD3CA"
    },
    "2051": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2053": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2054": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2055": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2060": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2061": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2063": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SHL",
      "path": "46"
    },
    "2064": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2065": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2066": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2068": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2069": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2071": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2073": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2074": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2075": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2076": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SUB",
      "path": "46"
    },
    "2077": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2078": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2079": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "GAS",
      "path": "46"
    },
    "2080": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2081": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2082": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2083": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2084": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x831"
    },
    "2087": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2088": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2089": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2091": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2092": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2093": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2094": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2096": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2097": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2098": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2099": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2100": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2101": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2102": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2104": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2105": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2106": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2108": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "NOT",
      "path": "46"
    },
    "2109": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2111": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2112": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2113": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2114": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2115": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2116": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2117": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2119": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2120": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2121": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2122": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2123": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2124": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x855"
    },
    "2127": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2128": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2129": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "2132": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2133": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2134": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4673
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "SUB"
    },
    "2143": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "AND",
      "path": "46"
    },
    "2144": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF00D6274"
    },
    "2149": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2151": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2152": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2153": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2158": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2159": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2161": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SHL",
      "path": "46"
    },
    "2162": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2163": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2164": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2166": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2167": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2169": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2171": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2172": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2173": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2174": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SUB",
      "path": "46"
    },
    "2175": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2176": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2177": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "GAS",
      "path": "46"
    },
    "2178": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2179": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2180": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2181": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2182": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x893"
    },
    "2185": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2186": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2187": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2189": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2190": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2191": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2192": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2194": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2195": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2196": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2197": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2198": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2199": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2200": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2202": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2203": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2204": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2206": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "NOT",
      "path": "46"
    },
    "2207": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2209": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2210": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2211": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2212": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2213": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2214": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2215": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2217": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2218": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2219": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2220": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2221": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2222": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8B7"
    },
    "2225": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2226": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2227": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CD7"
    },
    "2230": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2231": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2232": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4708
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "AND",
      "path": "46"
    },
    "2242": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1F2E1339"
    },
    "2247": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2249": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2250": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2251": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2256": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2257": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2259": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SHL",
      "path": "46"
    },
    "2260": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2261": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2262": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2264": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2265": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2267": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2269": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2270": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2271": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2272": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SUB",
      "path": "46"
    },
    "2273": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2274": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2275": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "GAS",
      "path": "46"
    },
    "2276": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2277": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2278": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2279": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2280": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8F5"
    },
    "2283": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2284": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2285": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2287": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2288": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2289": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2290": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2292": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2293": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2294": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2295": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2296": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2297": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2298": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2300": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2301": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2304": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "NOT",
      "path": "46"
    },
    "2305": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2307": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2309": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2311": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2312": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2315": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2316": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2319": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2320": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x919"
    },
    "2323": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2324": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CD7"
    },
    "2328": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2330": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4740
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "op": "SUB"
    },
    "2339": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "AND",
      "path": "46"
    },
    "2340": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "2345": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2347": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2348": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2349": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2354": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "2355": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2357": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SHL",
      "path": "46"
    },
    "2358": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2359": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2360": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2362": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2363": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2365": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2367": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2368": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2369": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2370": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SUB",
      "path": "46"
    },
    "2371": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2372": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2373": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "GAS",
      "path": "46"
    },
    "2374": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2375": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2376": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2377": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2378": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x957"
    },
    "2381": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2382": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2383": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2385": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2386": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2387": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2388": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2390": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2391": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2392": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2393": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2394": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2395": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2396": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2398": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2399": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2400": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2402": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "NOT",
      "path": "46"
    },
    "2403": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2405": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2406": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2407": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "2408": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2409": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2410": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2411": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2413": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2414": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2415": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2416": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2417": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2418": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x97B"
    },
    "2421": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2422": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2423": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "2426": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2427": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2428": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4771
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2435": {
      "op": "SHL"
    },
    "2436": {
      "op": "SUB"
    },
    "2437": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "AND",
      "path": "46"
    },
    "2438": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE68777D7"
    },
    "2443": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2445": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2446": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2447": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2452": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "2453": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2455": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SHL",
      "path": "46"
    },
    "2456": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2457": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2458": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2460": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2461": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2463": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2465": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2466": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2467": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2468": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SUB",
      "path": "46"
    },
    "2469": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2470": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2471": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "GAS",
      "path": "46"
    },
    "2472": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2473": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2474": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2475": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2476": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9B9"
    },
    "2479": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2480": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2481": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2483": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2484": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2485": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2486": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2488": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2489": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2490": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2491": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2492": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2493": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2494": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2496": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2497": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2498": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2500": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "NOT",
      "path": "46"
    },
    "2501": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2503": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2504": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2505": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "2506": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2507": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2508": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2509": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2511": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2512": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2513": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2514": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2515": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2516": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9DD"
    },
    "2519": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2520": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2521": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "2524": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2525": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2526": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4805
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "op": "SUB"
    },
    "2535": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "AND",
      "path": "46"
    },
    "2536": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9C630A88"
    },
    "2541": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2543": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2544": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2545": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2550": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "2551": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2553": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SHL",
      "path": "46"
    },
    "2554": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2555": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2556": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2558": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2559": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2561": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2563": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2564": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2565": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2566": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SUB",
      "path": "46"
    },
    "2567": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2568": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2569": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "GAS",
      "path": "46"
    },
    "2570": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2571": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2572": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2573": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2574": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA1B"
    },
    "2577": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2578": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2579": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2581": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2582": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2583": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2584": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2586": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2587": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2588": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2589": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2590": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2591": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2592": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2594": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2595": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2596": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2598": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "NOT",
      "path": "46"
    },
    "2599": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2601": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2602": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2603": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "2604": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2605": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2606": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2607": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2609": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2610": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2611": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2612": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2613": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2614": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA3F"
    },
    "2617": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2618": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2619": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "2622": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2623": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2624": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4851
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "SUB"
    },
    "2633": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "AND",
      "path": "46"
    },
    "2634": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1343E9A5"
    },
    "2639": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2641": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2642": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2643": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2648": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "2649": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2651": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SHL",
      "path": "46"
    },
    "2652": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2653": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2654": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2656": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2657": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2659": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2661": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2662": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2663": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2664": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SUB",
      "path": "46"
    },
    "2665": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2666": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2667": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "GAS",
      "path": "46"
    },
    "2668": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2669": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2670": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2671": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2672": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA7D"
    },
    "2675": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2676": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2677": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2679": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2680": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2681": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2682": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2684": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2685": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2686": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2687": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2688": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2689": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2690": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2692": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2693": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2694": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2696": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "NOT",
      "path": "46"
    },
    "2697": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2699": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2700": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2701": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "2702": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2703": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2704": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2705": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2707": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2708": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2709": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2710": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2711": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2712": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAA1"
    },
    "2715": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2716": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2717": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "2720": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2721": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2722": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4889
      ],
      "op": "DUP9",
      "path": "46"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2729": {
      "op": "SHL"
    },
    "2730": {
      "op": "SUB"
    },
    "2731": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "AND",
      "path": "46"
    },
    "2732": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE810A58E"
    },
    "2737": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2739": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2740": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2741": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2746": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "2747": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2749": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SHL",
      "path": "46"
    },
    "2750": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2751": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2752": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2754": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2755": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2757": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2759": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2760": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2761": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2762": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SUB",
      "path": "46"
    },
    "2763": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2764": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2765": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "GAS",
      "path": "46"
    },
    "2766": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2767": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2768": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2769": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2770": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xADF"
    },
    "2773": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2774": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2775": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2777": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2778": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2779": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2780": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2782": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2783": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2784": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2785": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2786": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2787": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2788": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2790": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2791": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2792": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2794": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "NOT",
      "path": "46"
    },
    "2795": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2797": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2798": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2799": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "2800": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2801": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2802": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2803": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2805": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2806": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2807": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2808": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2809": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2810": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB03"
    },
    "2813": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2814": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2815": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "2818": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2819": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2820": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2821": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2822": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2823": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2824": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2825": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2826": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2827": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2828": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2829": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2830": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2831": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2832": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2833": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2834": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2835": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2836": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2837": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2838": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2839": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2840": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2841": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "2842": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "2843": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2844": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2845": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2846": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2847": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "2848": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "2849": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "POP",
      "path": "46"
    },
    "2850": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "o",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2851": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2852": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5915,
        5922
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2854": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        5963
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2855": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2857": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2858": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2860": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "2861": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xB35"
    },
    "2864": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2865": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1AEC"
    },
    "2868": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2869": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2870": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2872": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2873": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2875": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2876": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2877": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "2878": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "2879": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2880": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2881": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2882": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2884": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2885": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2886": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2887": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2888": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2890": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "2891": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2894": {
      "op": "DUP1"
    },
    "2895": {
      "op": "MLOAD"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2898": {
      "op": "PUSH2",
      "value": "0x1D54"
    },
    "2901": {
      "op": "DUP4"
    },
    "2902": {
      "op": "CODECOPY"
    },
    "2903": {
      "op": "DUP2"
    },
    "2904": {
      "op": "MLOAD"
    },
    "2905": {
      "op": "SWAP2"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2909": {
      "op": "DUP1"
    },
    "2910": {
      "op": "MLOAD"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2913": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "2916": {
      "op": "DUP4"
    },
    "2917": {
      "op": "CODECOPY"
    },
    "2918": {
      "op": "DUP2"
    },
    "2919": {
      "op": "MLOAD"
    },
    "2920": {
      "op": "SWAP2"
    },
    "2921": {
      "op": "MSTORE"
    },
    "2922": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6143,
        6156
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "2923": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6174,
        6184
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2924": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2926": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2927": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2929": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "ADD",
      "path": "46"
    },
    "2930": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB7F"
    },
    "2933": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "2934": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2935": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2936": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2937": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2938": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2939": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B56"
    },
    "2942": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2943": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2944": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2946": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2947": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2949": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2950": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2951": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "2952": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "2953": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2954": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2955": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2956": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2958": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2959": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2960": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2961": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2962": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2964": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "ADD",
      "path": "46"
    },
    "2965": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "2966": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2967": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "POP",
      "path": "46"
    },
    "2968": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6219,
        6234
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2970": {
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2972": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2973": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2975": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "ADD",
      "path": "48"
    },
    "2976": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xBF2"
    },
    "2979": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2980": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3013": {
      "op": "DUP2"
    },
    "3014": {
      "op": "MSTORE"
    },
    "3015": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3050": {
      "op": "DUP3"
    },
    "3051": {
      "op": "ADD"
    },
    "3052": {
      "op": "MSTORE"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3055": {
      "op": "ADD"
    },
    "3056": {
      "op": "SWAP1"
    },
    "3057": {
      "op": "JUMP"
    },
    "3058": {
      "offset": [
        1007,
        1100
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3059": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3061": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3062": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3064": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3065": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3066": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SUB",
      "path": "48"
    },
    "3067": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SUB",
      "path": "48"
    },
    "3068": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3069": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3070": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3071": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3073": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3074": {
      "offset": [
        992,
        1102
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3075": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3076": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3077": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3079": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "ADD",
      "path": "48"
    },
    "3080": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3081": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6325,
        6332
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3082": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6350,
        6358
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3083": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6405,
        6419
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3084": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3086": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3087": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3089": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3090": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1B"
    },
    "3093": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3094": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3095": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "3098": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3099": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3100": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3102": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3103": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3106": {
      "op": "NOT"
    },
    "3107": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3108": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3109": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SUB",
      "path": "46"
    },
    "3110": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3111": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3112": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3113": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3114": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3115": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3116": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3117": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3118": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3120": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3121": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3122": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "ADD",
      "path": "46"
    },
    "3123": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3124": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3125": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3126": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "ADD",
      "path": "46"
    },
    "3127": {
      "op": "SWAP6"
    },
    "3128": {
      "op": "SWAP1"
    },
    "3129": {
      "op": "SWAP6"
    },
    "3130": {
      "op": "MSTORE"
    },
    "3131": {
      "op": "DUP2"
    },
    "3132": {
      "op": "ADD"
    },
    "3133": {
      "op": "SWAP3"
    },
    "3134": {
      "op": "SWAP1"
    },
    "3135": {
      "op": "SWAP3"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "ISZERO"
    },
    "3138": {
      "op": "ISZERO"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3141": {
      "op": "DUP3"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "op": "MSTORE"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3146": {
      "op": "DUP2"
    },
    "3147": {
      "op": "ADD"
    },
    "3148": {
      "op": "SWAP2"
    },
    "3149": {
      "op": "SWAP1"
    },
    "3150": {
      "op": "SWAP2"
    },
    "3151": {
      "op": "MSTORE"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "ADD"
    },
    "3155": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2FE"
    },
    "3158": {
      "op": "JUMP"
    },
    "3159": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3160": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5090,
        5097
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3162": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5138
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3163": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3165": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3166": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3168": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "3169": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xC69"
    },
    "3172": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3173": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1AEC"
    },
    "3176": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3177": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3178": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3180": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3181": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3183": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3184": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3185": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "3186": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "3187": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3188": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3189": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3190": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3192": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3193": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3194": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3195": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3196": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3198": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "3199": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3202": {
      "op": "DUP1"
    },
    "3203": {
      "op": "MLOAD"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3206": {
      "op": "PUSH2",
      "value": "0x1D54"
    },
    "3209": {
      "op": "DUP4"
    },
    "3210": {
      "op": "CODECOPY"
    },
    "3211": {
      "op": "DUP2"
    },
    "3212": {
      "op": "MLOAD"
    },
    "3213": {
      "op": "SWAP2"
    },
    "3214": {
      "op": "MSTORE"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3217": {
      "op": "DUP1"
    },
    "3218": {
      "op": "MLOAD"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3221": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "3224": {
      "op": "DUP4"
    },
    "3225": {
      "op": "CODECOPY"
    },
    "3226": {
      "op": "DUP2"
    },
    "3227": {
      "op": "MLOAD"
    },
    "3228": {
      "op": "SWAP2"
    },
    "3229": {
      "op": "MSTORE"
    },
    "3230": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5318,
        5331
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "3231": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5349,
        5359
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3232": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3234": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3235": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3237": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "ADD",
      "path": "46"
    },
    "3238": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCB3"
    },
    "3241": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3242": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3243": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3244": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3245": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3246": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3247": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B56"
    },
    "3250": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3251": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3252": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3254": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3255": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3257": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3258": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3259": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "3260": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "3261": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3262": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3263": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3264": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3266": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3267": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3268": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3269": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3270": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3272": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "ADD",
      "path": "46"
    },
    "3273": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3274": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3275": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "POP",
      "path": "46"
    },
    "3276": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5394,
        5409
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3278": {
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3280": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3281": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3283": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "ADD",
      "path": "48"
    },
    "3284": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD00"
    },
    "3287": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3288": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000"
    },
    "3321": {
      "op": "DUP2"
    },
    "3322": {
      "op": "MSTORE"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "SWAP1"
    },
    "3327": {
      "op": "JUMP"
    },
    "3328": {
      "offset": [
        888,
        949
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3329": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3331": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3332": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3333": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3334": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3335": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "SUB",
      "path": "48"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3338": {
      "op": "NOT"
    },
    "3339": {
      "offset": [
        888,
        949
      ],
      "op": "ADD",
      "path": "48"
    },
    "3340": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3341": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3342": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3343": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3344": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3345": {
      "offset": [
        873,
        951
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3346": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3347": {
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3349": {
      "offset": [
        873,
        951
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3350": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3351": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "ADD",
      "path": "48"
    },
    "3352": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3353": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3354": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3355": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "3356": {
      "op": "MSTORE"
    },
    "3357": {
      "op": "DUP9"
    },
    "3358": {
      "op": "ISZERO"
    },
    "3359": {
      "op": "ISZERO"
    },
    "3360": {
      "op": "DUP4"
    },
    "3361": {
      "op": "DUP4"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "MSTORE"
    },
    "3364": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3365": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3366": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3367": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3368": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SUB",
      "path": "46"
    },
    "3369": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3370": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "3371": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3372": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3375": {
      "op": "DUP5"
    },
    "3376": {
      "op": "ADD"
    },
    "3377": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3378": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3379": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3380": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3381": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3382": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3383": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "ADD",
      "path": "46"
    },
    "3384": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3385": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3389": {
      "op": "SWAP1"
    },
    "3390": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD4D"
    },
    "3393": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3394": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3395": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3396": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3397": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3398": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "3400": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "ADD",
      "path": "46"
    },
    "3401": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B9E"
    },
    "3404": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3405": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3406": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3408": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3409": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3411": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3412": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3413": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "3414": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "3415": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3416": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3417": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3418": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3420": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3421": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3422": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3423": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3424": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3426": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "ADD",
      "path": "46"
    },
    "3427": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3428": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3429": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "POP",
      "path": "46"
    },
    "3430": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 9,
      "value": "0xD6F"
    },
    "3433": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5667,
        5675
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3434": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5677,
        5687
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3435": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x35A"
    },
    "3438": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3439": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3440": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5647,
        5689
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "3441": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "op": "POP"
    },
    "3444": {
      "op": "POP"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "o",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3450": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3451": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2632,
        2657
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "3453": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3455": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2710,
        2720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3456": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3457": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "POP",
      "path": "46"
    },
    "3458": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3460": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2758
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "AND",
      "path": "46"
    },
    "3470": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "3475": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3477": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3478": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3479": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3484": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "3485": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3487": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SHL",
      "path": "46"
    },
    "3488": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3489": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3490": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3492": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3493": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3495": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3497": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3498": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3499": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3500": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SUB",
      "path": "46"
    },
    "3501": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3502": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3503": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "GAS",
      "path": "46"
    },
    "3504": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3505": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3506": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3507": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3508": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xDC1"
    },
    "3511": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3512": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3513": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3515": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3516": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3517": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3518": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3520": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3521": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3522": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3523": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3524": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3525": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3526": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3528": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3529": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3530": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3532": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "NOT",
      "path": "46"
    },
    "3533": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3535": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3536": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3537": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "3538": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3539": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3540": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3541": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3543": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3544": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3545": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3546": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3547": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3548": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xDE5"
    },
    "3551": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3552": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3553": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "3556": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3557": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3558": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3559": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3560": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2802
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3562": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2811
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3569": {
      "op": "SHL"
    },
    "3570": {
      "op": "SUB"
    },
    "3571": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "AND",
      "path": "46"
    },
    "3572": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA693649A"
    },
    "3577": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3579": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3580": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3581": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3586": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "3587": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3589": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SHL",
      "path": "46"
    },
    "3590": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3591": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3592": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3594": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3595": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3597": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3599": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3600": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3601": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3602": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SUB",
      "path": "46"
    },
    "3603": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3604": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3605": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "GAS",
      "path": "46"
    },
    "3606": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3607": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3608": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3609": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3610": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE27"
    },
    "3613": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3614": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3615": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3617": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3618": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3619": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3620": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3622": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3623": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3624": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3625": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3626": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3627": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3628": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3630": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3631": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3632": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3634": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "NOT",
      "path": "46"
    },
    "3635": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3637": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3638": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3639": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "3640": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3641": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3642": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3643": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3645": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3646": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3647": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3648": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3649": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3650": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE4B"
    },
    "3653": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3654": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3655": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB9"
    },
    "3658": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3659": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3660": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3661": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3662": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2867
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3664": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2886,
        2894
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3665": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH8",
      "path": "46",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3674": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3675": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "GT",
      "path": "46"
    },
    "3676": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3677": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE68"
    },
    "3680": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3681": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE68"
    },
    "3684": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1452"
    },
    "3687": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3688": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3689": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3691": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3692": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3693": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3694": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3695": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3696": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3697": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3699": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MUL",
      "path": "46"
    },
    "3700": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3702": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3703": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3704": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3705": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3707": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3708": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3709": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3710": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA1"
    },
    "3713": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3714": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3715": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3717": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3718": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3719": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE8E"
    },
    "3722": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13EE"
    },
    "3725": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3726": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3727": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3728": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3729": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3731": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3732": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3733": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "3735": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3736": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SUB",
      "path": "46"
    },
    "3737": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3738": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3739": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE86"
    },
    "3742": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3743": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3744": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "POP",
      "path": "46"
    },
    "3745": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3748": {
      "op": "POP"
    },
    "3749": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2907,
        2920
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3751": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2955,
        2956
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "3753": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3754": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2965,
        2979
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3755": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2962
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3756": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2979
      ],
      "op": "LT",
      "path": "46"
    },
    "3757": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3758": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF9B"
    },
    "3761": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3762": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEB9"
    },
    "3765": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13EE"
    },
    "3768": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3769": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3770": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 10,
      "value": "0x40"
    },
    "3772": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3773": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3780": {
      "op": "SHL"
    },
    "3781": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3782": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3783": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3785": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3786": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3787": {
      "op": "DUP4"
    },
    "3788": {
      "op": "SWAP1"
    },
    "3789": {
      "op": "MSTORE"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "op": "SUB"
    },
    "3798": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3799": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "AND",
      "path": "46"
    },
    "3800": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3801": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "3806": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3812": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3814": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3815": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3816": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3817": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SUB",
      "path": "46"
    },
    "3818": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3819": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3820": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "GAS",
      "path": "46"
    },
    "3821": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3822": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3823": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3824": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3825": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEFE"
    },
    "3828": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3829": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3830": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3832": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3833": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3834": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3835": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3837": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3838": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3839": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3840": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3841": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3842": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3843": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3845": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3846": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3847": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3849": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3850": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3851": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3853": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3854": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3855": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3856": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3859": {
      "op": "NOT"
    },
    "3860": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "3861": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3862": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3863": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3865": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3866": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF26"
    },
    "3869": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3870": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3871": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3872": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3873": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3874": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C1F"
    },
    "3877": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3878": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3879": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3880": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3881": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "3883": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3884": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "ADD",
      "path": "46"
    },
    "3885": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3886": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3887": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3888": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "3890": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3891": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "ADD",
      "path": "46"
    },
    "3892": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3893": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3894": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3895": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3897": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3898": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "ADD",
      "path": "46"
    },
    "3899": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3900": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3901": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3902": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3903": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3905": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3906": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "ADD",
      "path": "46"
    },
    "3907": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3908": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3909": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3910": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3917": {
      "op": "SHL"
    },
    "3918": {
      "op": "SUB"
    },
    "3919": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3920": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3921": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "3922": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3923": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3924": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3255
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "3926": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3275
      ],
      "op": "EQ",
      "path": "46"
    },
    "3927": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3928": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF88"
    },
    "3931": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3932": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3316,
        3325
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 11
    },
    "3933": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3934": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3306,
        3311
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3935": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3936": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3937": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3938": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "LT",
      "path": "46"
    },
    "3939": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF6E"
    },
    "3942": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3943": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF6E"
    },
    "3946": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CF4"
    },
    "3949": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3950": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3951": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3953": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MUL",
      "path": "46"
    },
    "3954": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3956": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "3957": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "3958": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3959": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3960": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3961": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "POP",
      "path": "46"
    },
    "3962": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP3",
      "path": "46",
      "statement": 12
    },
    "3963": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3964": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF84"
    },
    "3967": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3968": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D0A"
    },
    "3971": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3972": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3973": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3974": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "3975": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "3976": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3977": {
      "op": "POP"
    },
    "3978": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 13
    },
    "3979": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF93"
    },
    "3982": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3983": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D0A"
    },
    "3986": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3987": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3988": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3989": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "3990": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "3991": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA9"
    },
    "3994": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3995": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 14
    },
    "3998": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "3999": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "op": "POP"
    },
    "4004": {
      "op": "POP"
    },
    "4005": {
      "op": "POP"
    },
    "4006": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "o",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4007": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4008": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9907,
        9914
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4010": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9931,
        9955
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4011": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4013": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4014": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4016": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "4017": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xFB9"
    },
    "4020": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4021": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1AEC"
    },
    "4024": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4025": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4026": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4028": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4029": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4031": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4032": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4033": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4034": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4035": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4036": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4037": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4038": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4040": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4041": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4042": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4043": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4044": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4046": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "4047": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "MLOAD"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0x1D54"
    },
    "4057": {
      "op": "DUP4"
    },
    "4058": {
      "op": "CODECOPY"
    },
    "4059": {
      "op": "DUP2"
    },
    "4060": {
      "op": "MLOAD"
    },
    "4061": {
      "op": "SWAP2"
    },
    "4062": {
      "op": "MSTORE"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4065": {
      "op": "DUP1"
    },
    "4066": {
      "op": "MLOAD"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "4072": {
      "op": "DUP4"
    },
    "4073": {
      "op": "CODECOPY"
    },
    "4074": {
      "op": "DUP2"
    },
    "4075": {
      "op": "MLOAD"
    },
    "4076": {
      "op": "SWAP2"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10135,
        10148
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "4079": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10166,
        10174
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4080": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4082": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4083": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4085": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "ADD",
      "path": "46"
    },
    "4086": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1003"
    },
    "4089": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4090": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4091": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4092": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4093": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4094": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4095": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B56"
    },
    "4098": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        9981,
        10188
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4099": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4100": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4102": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4103": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4105": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4106": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4107": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SUB",
      "path": "46"
    },
    "4108": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SUB",
      "path": "46"
    },
    "4109": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4110": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4111": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4112": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4114": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9981,
        10188
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4115": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9958,
        10198
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4116": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9958,
        10198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4117": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9958,
        10198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4118": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9958,
        10198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4120": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9958,
        10198
      ],
      "op": "ADD",
      "path": "46"
    },
    "4121": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9958,
        10198
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4122": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9931,
        10198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4123": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9931,
        10198
      ],
      "op": "POP",
      "path": "46"
    },
    "4124": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10209,
        10224
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4126": {
      "offset": [
        1654,
        1875
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4128": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4129": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4131": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "ADD",
      "path": "48"
    },
    "4132": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x110E"
    },
    "4135": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4136": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "4169": {
      "op": "DUP2"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "ADD"
    },
    "4208": {
      "op": "MSTORE"
    },
    "4209": {
      "op": "PUSH32",
      "value": "0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4244": {
      "op": "DUP3"
    },
    "4245": {
      "op": "ADD"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH32",
      "value": "0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4282": {
      "op": "DUP3"
    },
    "4283": {
      "op": "ADD"
    },
    "4284": {
      "op": "MSTORE"
    },
    "4285": {
      "op": "PUSH32",
      "value": "0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4320": {
      "op": "DUP3"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "MSTORE"
    },
    "4323": {
      "op": "PUSH32",
      "value": "0x652C616464726573732077686974654C69737457616C6C657473290000000000"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "MSTORE"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "4363": {
      "op": "ADD"
    },
    "4364": {
      "op": "SWAP1"
    },
    "4365": {
      "op": "JUMP"
    },
    "4366": {
      "offset": [
        1654,
        1875
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4367": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4369": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4370": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4372": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4373": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4374": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "SUB",
      "path": "48"
    },
    "4375": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "SUB",
      "path": "48"
    },
    "4376": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4377": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4378": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4379": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4381": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1654,
        1875
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4382": {
      "offset": [
        1639,
        1877
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4383": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1877
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4384": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1877
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4385": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1877
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4387": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1877
      ],
      "op": "ADD",
      "path": "48"
    },
    "4388": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1639,
        1877
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4389": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10346,
        10356
      ],
      "op": "DUP14",
      "path": "46"
    },
    "4390": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4392": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4393": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4395": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "ADD",
      "path": "46"
    },
    "4396": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1135"
    },
    "4399": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4400": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4401": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "4404": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10328,
        10358
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4405": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4406": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4408": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4409": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4412": {
      "op": "NOT"
    },
    "4413": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4414": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4415": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "SUB",
      "path": "46"
    },
    "4416": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "ADD",
      "path": "46"
    },
    "4417": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4418": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4419": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4420": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4421": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4422": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10317,
        10360
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4423": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10317,
        10360
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4424": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10328,
        10358
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4426": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10317,
        10360
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4427": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10317,
        10360
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4428": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10317,
        10360
      ],
      "op": "ADD",
      "path": "46"
    },
    "4429": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10317,
        10360
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4430": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4431": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4432": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "ADD",
      "path": "46"
    },
    "4433": {
      "op": "SWAP4"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "op": "SWAP4"
    },
    "4436": {
      "op": "MSTORE"
    },
    "4437": {
      "op": "DUP2"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "SWAP2"
    },
    "4440": {
      "op": "SWAP1"
    },
    "4441": {
      "op": "SWAP2"
    },
    "4442": {
      "op": "MSTORE"
    },
    "4443": {
      "op": "DUP13"
    },
    "4444": {
      "op": "ISZERO"
    },
    "4445": {
      "op": "ISZERO"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4448": {
      "op": "DUP3"
    },
    "4449": {
      "op": "ADD"
    },
    "4450": {
      "op": "MSTORE"
    },
    "4451": {
      "op": "DUP12"
    },
    "4452": {
      "op": "ISZERO"
    },
    "4453": {
      "op": "ISZERO"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4456": {
      "op": "DUP3"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "MSTORE"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "ADD"
    },
    "4463": {
      "op": "DUP12"
    },
    "4464": {
      "op": "SWAP1"
    },
    "4465": {
      "op": "MSTORE"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4468": {
      "op": "DUP2"
    },
    "4469": {
      "op": "ADD"
    },
    "4470": {
      "op": "DUP11"
    },
    "4471": {
      "op": "SWAP1"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4475": {
      "op": "DUP2"
    },
    "4476": {
      "op": "ADD"
    },
    "4477": {
      "op": "DUP10"
    },
    "4478": {
      "op": "SWAP1"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4483": {
      "op": "DUP2"
    },
    "4484": {
      "op": "ADD"
    },
    "4485": {
      "op": "DUP9"
    },
    "4486": {
      "op": "SWAP1"
    },
    "4487": {
      "op": "MSTORE"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4494": {
      "op": "SHL"
    },
    "4495": {
      "op": "SUB"
    },
    "4496": {
      "op": "DUP8"
    },
    "4497": {
      "op": "AND"
    },
    "4498": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4501": {
      "op": "DUP3"
    },
    "4502": {
      "op": "ADD"
    },
    "4503": {
      "op": "MSTORE"
    },
    "4504": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4507": {
      "op": "ADD"
    },
    "4508": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4510": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4511": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4513": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4514": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4515": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "SUB",
      "path": "46"
    },
    "4516": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "SUB",
      "path": "46"
    },
    "4517": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4518": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4519": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4520": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4522": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10250,
        10678
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4523": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10227,
        10688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4524": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10227,
        10688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4525": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10227,
        10688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4526": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10227,
        10688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4528": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10227,
        10688
      ],
      "op": "ADD",
      "path": "46"
    },
    "4529": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10227,
        10688
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4530": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10209,
        10688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4531": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10209,
        10688
      ],
      "op": "POP",
      "path": "46"
    },
    "4532": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10699,
        10715
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4534": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10759,
        10775
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4535": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10777,
        10784
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4536": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4538": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4539": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4541": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "ADD",
      "path": "46"
    },
    "4542": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11C8"
    },
    "4545": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4546": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4547": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4548": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B9E"
    },
    "4551": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10729,
        10786
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4552": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4553": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4555": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4556": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4558": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4559": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4560": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "SUB",
      "path": "46"
    },
    "4561": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "SUB",
      "path": "46"
    },
    "4562": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4563": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4564": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4565": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4567": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10729,
        10786
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4568": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10718,
        10788
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4569": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10718,
        10788
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4570": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10718,
        10788
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4571": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10718,
        10788
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4573": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10718,
        10788
      ],
      "op": "ADD",
      "path": "46"
    },
    "4574": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10718,
        10788
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4575": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10699,
        10788
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4576": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10699,
        10788
      ],
      "op": "POP",
      "path": "46"
    },
    "4577": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10806,
        10841
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 15,
      "value": "0x11EA"
    },
    "4580": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10819,
        10827
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4581": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10829,
        10839
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4582": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10806,
        10817
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x35A"
    },
    "4585": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10806,
        10841
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4586": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10806,
        10841
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4587": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10799,
        10841
      ],
      "op": "SWAP15",
      "path": "46"
    },
    "4588": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        9516,
        10848
      ],
      "op": "SWAP14",
      "path": "46"
    },
    "4589": {
      "op": "POP"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "op": "POP"
    },
    "4593": {
      "op": "POP"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "POP"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        9516,
        10848
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4604": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4605": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6893,
        6900
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4607": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6917,
        6941
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4608": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4610": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4611": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4613": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "4614": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x120E"
    },
    "4617": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4618": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1AEC"
    },
    "4621": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4622": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4623": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4625": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4626": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4628": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4629": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4630": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4631": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4632": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4633": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4634": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4635": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4637": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4638": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4639": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4640": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4641": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4643": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "4644": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4647": {
      "op": "DUP1"
    },
    "4648": {
      "op": "MLOAD"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4651": {
      "op": "PUSH2",
      "value": "0x1D54"
    },
    "4654": {
      "op": "DUP4"
    },
    "4655": {
      "op": "CODECOPY"
    },
    "4656": {
      "op": "DUP2"
    },
    "4657": {
      "op": "MLOAD"
    },
    "4658": {
      "op": "SWAP2"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4662": {
      "op": "DUP1"
    },
    "4663": {
      "op": "MLOAD"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1D34"
    },
    "4669": {
      "op": "DUP4"
    },
    "4670": {
      "op": "CODECOPY"
    },
    "4671": {
      "op": "DUP2"
    },
    "4672": {
      "op": "MLOAD"
    },
    "4673": {
      "op": "SWAP2"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7121,
        7134
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "4676": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7152,
        7162
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4677": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4679": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4680": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4682": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "ADD",
      "path": "46"
    },
    "4683": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1258"
    },
    "4686": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4687": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4688": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4689": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4690": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4691": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4692": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B56"
    },
    "4695": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        6967,
        7176
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4696": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4697": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4699": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4700": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4702": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4703": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4704": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SUB",
      "path": "46"
    },
    "4705": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SUB",
      "path": "46"
    },
    "4706": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4707": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4708": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4709": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4711": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6967,
        7176
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4712": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6944,
        7186
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4713": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6944,
        7186
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4714": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6944,
        7186
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4715": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6944,
        7186
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4717": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6944,
        7186
      ],
      "op": "ADD",
      "path": "46"
    },
    "4718": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6944,
        7186
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4719": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6917,
        7186
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4720": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6917,
        7186
      ],
      "op": "POP",
      "path": "46"
    },
    "4721": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7197,
        7212
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4723": {
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4725": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4726": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4728": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "ADD",
      "path": "48"
    },
    "4729": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12F1"
    },
    "4732": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4733": {
      "op": "PUSH32",
      "value": "0x7374724F434E65775573657228616464726573732077616C6C6574416464722C"
    },
    "4766": {
      "op": "DUP2"
    },
    "4767": {
      "op": "MSTORE"
    },
    "4768": {
      "op": "PUSH32",
      "value": "0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4803": {
      "op": "DUP3"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "op": "MSTORE"
    },
    "4806": {
      "op": "PUSH32",
      "value": "0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4841": {
      "op": "DUP3"
    },
    "4842": {
      "op": "ADD"
    },
    "4843": {
      "op": "MSTORE"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4846": {
      "op": "ADD"
    },
    "4847": {
      "op": "SWAP1"
    },
    "4848": {
      "op": "JUMP"
    },
    "4849": {
      "offset": [
        1161,
        1291
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4850": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4852": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4853": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4855": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4856": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4857": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SUB",
      "path": "48"
    },
    "4858": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SUB",
      "path": "48"
    },
    "4859": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4860": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4861": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4862": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4864": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1161,
        1291
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4865": {
      "offset": [
        1146,
        1293
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4866": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4867": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4868": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4870": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "ADD",
      "path": "48"
    },
    "4871": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1146,
        1293
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4872": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7306,
        7317
      ],
      "op": "DUP11",
      "path": "46"
    },
    "4873": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7364,
        7369
      ],
      "op": "DUP11",
      "path": "46"
    },
    "4874": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4876": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4877": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4879": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "ADD",
      "path": "46"
    },
    "4880": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1319"
    },
    "4883": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4884": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4885": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "4888": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7346,
        7371
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4889": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4890": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4892": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4893": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4895": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4896": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4897": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "SUB",
      "path": "46"
    },
    "4898": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "SUB",
      "path": "46"
    },
    "4899": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4900": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4901": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4902": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4904": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7346,
        7371
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4905": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7335,
        7373
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4906": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7335,
        7373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4907": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7335,
        7373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4908": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7335,
        7373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4910": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7335,
        7373
      ],
      "op": "ADD",
      "path": "46"
    },
    "4911": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7335,
        7373
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4912": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7420,
        7432
      ],
      "op": "DUP11",
      "path": "46"
    },
    "4913": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4915": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4916": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4918": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "ADD",
      "path": "46"
    },
    "4919": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1340"
    },
    "4922": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4923": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4924": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B82"
    },
    "4927": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7402,
        7434
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4928": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4929": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4931": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4932": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4935": {
      "op": "NOT"
    },
    "4936": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4937": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4938": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "SUB",
      "path": "46"
    },
    "4939": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "ADD",
      "path": "46"
    },
    "4940": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4941": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4942": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4943": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4944": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4945": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7391,
        7436
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4946": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7391,
        7436
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4947": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7402,
        7434
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4949": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7391,
        7436
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4950": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7391,
        7436
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4951": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7391,
        7436
      ],
      "op": "ADD",
      "path": "46"
    },
    "4952": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7391,
        7436
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4953": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4954": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4955": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "ADD",
      "path": "46"
    },
    "4956": {
      "op": "SWAP6"
    },
    "4957": {
      "op": "SWAP1"
    },
    "4958": {
      "op": "SWAP6"
    },
    "4959": {
      "op": "MSTORE"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4966": {
      "op": "SHL"
    },
    "4967": {
      "op": "SUB"
    },
    "4968": {
      "op": "SWAP1"
    },
    "4969": {
      "op": "SWAP4"
    },
    "4970": {
      "op": "AND"
    },
    "4971": {
      "op": "SWAP3"
    },
    "4972": {
      "op": "DUP2"
    },
    "4973": {
      "op": "ADD"
    },
    "4974": {
      "op": "SWAP3"
    },
    "4975": {
      "op": "SWAP1"
    },
    "4976": {
      "op": "SWAP3"
    },
    "4977": {
      "op": "MSTORE"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "ADD"
    },
    "4982": {
      "op": "MSTORE"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4985": {
      "op": "DUP2"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "SWAP2"
    },
    "4988": {
      "op": "SWAP1"
    },
    "4989": {
      "op": "SWAP2"
    },
    "4990": {
      "op": "MSTORE"
    },
    "4991": {
      "op": "DUP8"
    },
    "4992": {
      "op": "ISZERO"
    },
    "4993": {
      "op": "ISZERO"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4996": {
      "op": "DUP3"
    },
    "4997": {
      "op": "ADD"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5001": {
      "op": "DUP2"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "DUP8"
    },
    "5004": {
      "op": "SWAP1"
    },
    "5005": {
      "op": "MSTORE"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5008": {
      "op": "ADD"
    },
    "5009": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5011": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5012": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5014": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5015": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5016": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "SUB",
      "path": "46"
    },
    "5017": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "SUB",
      "path": "46"
    },
    "5018": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5019": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5020": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5021": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5023": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7238,
        7506
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5024": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7516
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5025": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7516
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5026": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7516
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5027": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7516
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5029": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7516
      ],
      "op": "ADD",
      "path": "46"
    },
    "5030": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7215,
        7516
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5031": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7197,
        7516
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5032": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7197,
        7516
      ],
      "op": "POP",
      "path": "46"
    },
    "5033": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7527,
        7543
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5035": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7587,
        7603
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5036": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7605,
        7612
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5037": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5039": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5040": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5042": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "ADD",
      "path": "46"
    },
    "5043": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13BD"
    },
    "5046": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5047": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5048": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5049": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B9E"
    },
    "5052": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7557,
        7614
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5053": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5054": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5056": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5057": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5059": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5060": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5061": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "SUB",
      "path": "46"
    },
    "5062": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "SUB",
      "path": "46"
    },
    "5063": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5064": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5065": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5066": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5068": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7557,
        7614
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5069": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7546,
        7616
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5070": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7546,
        7616
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5071": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7546,
        7616
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5072": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7546,
        7616
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5074": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7546,
        7616
      ],
      "op": "ADD",
      "path": "46"
    },
    "5075": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7546,
        7616
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5076": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7527,
        7616
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5077": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7527,
        7616
      ],
      "op": "POP",
      "path": "46"
    },
    "5078": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7634,
        7669
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 16,
      "value": "0x13DF"
    },
    "5081": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7647,
        7655
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5082": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7657,
        7667
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5083": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7634,
        7645
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x35A"
    },
    "5086": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7634,
        7669
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5087": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7634,
        7669
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5088": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7627,
        7669
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "5089": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        6614,
        7676
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "5090": {
      "op": "POP"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "POP"
    },
    "5094": {
      "op": "POP"
    },
    "5095": {
      "op": "POP"
    },
    "5096": {
      "op": "POP"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "op": "POP"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "o",
      "offset": [
        6614,
        7676
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5102": {
      "op": "JUMPDEST"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5105": {
      "op": "MLOAD"
    },
    "5106": {
      "op": "DUP1"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5112": {
      "op": "MSTORE"
    },
    "5113": {
      "op": "DUP1"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5122": {
      "op": "SHL"
    },
    "5123": {
      "op": "SUB"
    },
    "5124": {
      "op": "AND"
    },
    "5125": {
      "op": "DUP2"
    },
    "5126": {
      "op": "MSTORE"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5129": {
      "op": "ADD"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5132": {
      "op": "DUP2"
    },
    "5133": {
      "op": "MSTORE"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5139": {
      "op": "DUP2"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5143": {
      "op": "ADD"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5146": {
      "op": "ISZERO"
    },
    "5147": {
      "op": "ISZERO"
    },
    "5148": {
      "op": "DUP2"
    },
    "5149": {
      "op": "MSTORE"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5152": {
      "op": "ADD"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5155": {
      "op": "ISZERO"
    },
    "5156": {
      "op": "ISZERO"
    },
    "5157": {
      "op": "DUP2"
    },
    "5158": {
      "op": "MSTORE"
    },
    "5159": {
      "op": "POP"
    },
    "5160": {
      "op": "SWAP1"
    },
    "5161": {
      "jump": "o",
      "op": "JUMP"
    },
    "5162": {
      "op": "JUMPDEST"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5169": {
      "op": "SHL"
    },
    "5170": {
      "op": "SUB"
    },
    "5171": {
      "op": "DUP2"
    },
    "5172": {
      "op": "AND"
    },
    "5173": {
      "op": "DUP2"
    },
    "5174": {
      "op": "EQ"
    },
    "5175": {
      "op": "PUSH2",
      "value": "0x143F"
    },
    "5178": {
      "op": "JUMPI"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5181": {
      "op": "DUP1"
    },
    "5182": {
      "op": "REVERT"
    },
    "5183": {
      "op": "JUMPDEST"
    },
    "5184": {
      "op": "POP"
    },
    "5185": {
      "jump": "o",
      "op": "JUMP"
    },
    "5186": {
      "op": "JUMPDEST"
    },
    "5187": {
      "op": "DUP1"
    },
    "5188": {
      "op": "CALLDATALOAD"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "5192": {
      "op": "DUP2"
    },
    "5193": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5196": {
      "jump": "i",
      "op": "JUMP"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "SWAP2"
    },
    "5199": {
      "op": "SWAP1"
    },
    "5200": {
      "op": "POP"
    },
    "5201": {
      "jump": "o",
      "op": "JUMP"
    },
    "5202": {
      "op": "JUMPDEST"
    },
    "5203": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5210": {
      "op": "SHL"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5213": {
      "op": "MSTORE"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5218": {
      "op": "MSTORE"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5223": {
      "op": "REVERT"
    },
    "5224": {
      "op": "JUMPDEST"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5227": {
      "op": "MLOAD"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5230": {
      "op": "DUP3"
    },
    "5231": {
      "op": "ADD"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5234": {
      "op": "NOT"
    },
    "5235": {
      "op": "AND"
    },
    "5236": {
      "op": "DUP2"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "GT"
    },
    "5249": {
      "op": "DUP3"
    },
    "5250": {
      "op": "DUP3"
    },
    "5251": {
      "op": "LT"
    },
    "5252": {
      "op": "OR"
    },
    "5253": {
      "op": "ISZERO"
    },
    "5254": {
      "op": "PUSH2",
      "value": "0x1491"
    },
    "5257": {
      "op": "JUMPI"
    },
    "5258": {
      "op": "PUSH2",
      "value": "0x1491"
    },
    "5261": {
      "op": "PUSH2",
      "value": "0x1452"
    },
    "5264": {
      "jump": "i",
      "op": "JUMP"
    },
    "5265": {
      "op": "JUMPDEST"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5268": {
      "op": "MSTORE"
    },
    "5269": {
      "op": "SWAP2"
    },
    "5270": {
      "op": "SWAP1"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "jump": "o",
      "op": "JUMP"
    },
    "5273": {
      "op": "JUMPDEST"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5276": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5285": {
      "op": "DUP3"
    },
    "5286": {
      "op": "GT"
    },
    "5287": {
      "op": "ISZERO"
    },
    "5288": {
      "op": "PUSH2",
      "value": "0x14B3"
    },
    "5291": {
      "op": "JUMPI"
    },
    "5292": {
      "op": "PUSH2",
      "value": "0x14B3"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x1452"
    },
    "5298": {
      "jump": "i",
      "op": "JUMP"
    },
    "5299": {
      "op": "JUMPDEST"
    },
    "5300": {
      "op": "POP"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5306": {
      "op": "NOT"
    },
    "5307": {
      "op": "AND"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5310": {
      "op": "ADD"
    },
    "5311": {
      "op": "SWAP1"
    },
    "5312": {
      "jump": "o",
      "op": "JUMP"
    },
    "5313": {
      "op": "JUMPDEST"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5316": {
      "op": "DUP3"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5319": {
      "op": "DUP4"
    },
    "5320": {
      "op": "ADD"
    },
    "5321": {
      "op": "SLT"
    },
    "5322": {
      "op": "PUSH2",
      "value": "0x14D2"
    },
    "5325": {
      "op": "JUMPI"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5328": {
      "op": "DUP1"
    },
    "5329": {
      "op": "REVERT"
    },
    "5330": {
      "op": "JUMPDEST"
    },
    "5331": {
      "op": "DUP2"
    },
    "5332": {
      "op": "CALLDATALOAD"
    },
    "5333": {
      "op": "PUSH2",
      "value": "0x14E5"
    },
    "5336": {
      "op": "PUSH2",
      "value": "0x14E0"
    },
    "5339": {
      "op": "DUP3"
    },
    "5340": {
      "op": "PUSH2",
      "value": "0x1499"
    },
    "5343": {
      "jump": "i",
      "op": "JUMP"
    },
    "5344": {
      "op": "JUMPDEST"
    },
    "5345": {
      "op": "PUSH2",
      "value": "0x1468"
    },
    "5348": {
      "jump": "i",
      "op": "JUMP"
    },
    "5349": {
      "op": "JUMPDEST"
    },
    "5350": {
      "op": "DUP2"
    },
    "5351": {
      "op": "DUP2"
    },
    "5352": {
      "op": "MSTORE"
    },
    "5353": {
      "op": "DUP5"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5356": {
      "op": "DUP4"
    },
    "5357": {
      "op": "DUP7"
    },
    "5358": {
      "op": "ADD"
    },
    "5359": {
      "op": "ADD"
    },
    "5360": {
      "op": "GT"
    },
    "5361": {
      "op": "ISZERO"
    },
    "5362": {
      "op": "PUSH2",
      "value": "0x14FA"
    },
    "5365": {
      "op": "JUMPI"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5368": {
      "op": "DUP1"
    },
    "5369": {
      "op": "REVERT"
    },
    "5370": {
      "op": "JUMPDEST"
    },
    "5371": {
      "op": "DUP2"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5374": {
      "op": "DUP6"
    },
    "5375": {
      "op": "ADD"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5378": {
      "op": "DUP4"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "CALLDATACOPY"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5383": {
      "op": "SWAP2"
    },
    "5384": {
      "op": "DUP2"
    },
    "5385": {
      "op": "ADD"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5388": {
      "op": "ADD"
    },
    "5389": {
      "op": "SWAP2"
    },
    "5390": {
      "op": "SWAP1"
    },
    "5391": {
      "op": "SWAP2"
    },
    "5392": {
      "op": "MSTORE"
    },
    "5393": {
      "op": "SWAP4"
    },
    "5394": {
      "op": "SWAP3"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "jump": "o",
      "op": "JUMP"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5402": {
      "op": "DUP1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5405": {
      "op": "DUP1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5410": {
      "op": "DUP7"
    },
    "5411": {
      "op": "DUP9"
    },
    "5412": {
      "op": "SUB"
    },
    "5413": {
      "op": "SLT"
    },
    "5414": {
      "op": "ISZERO"
    },
    "5415": {
      "op": "PUSH2",
      "value": "0x152F"
    },
    "5418": {
      "op": "JUMPI"
    },
    "5419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5421": {
      "op": "DUP1"
    },
    "5422": {
      "op": "REVERT"
    },
    "5423": {
      "op": "JUMPDEST"
    },
    "5424": {
      "op": "DUP6"
    },
    "5425": {
      "op": "CALLDATALOAD"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x153A"
    },
    "5429": {
      "op": "DUP2"
    },
    "5430": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5433": {
      "jump": "i",
      "op": "JUMP"
    },
    "5434": {
      "op": "JUMPDEST"
    },
    "5435": {
      "op": "SWAP5"
    },
    "5436": {
      "op": "POP"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5439": {
      "op": "DUP7"
    },
    "5440": {
      "op": "ADD"
    },
    "5441": {
      "op": "CALLDATALOAD"
    },
    "5442": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5451": {
      "op": "DUP1"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "GT"
    },
    "5454": {
      "op": "ISZERO"
    },
    "5455": {
      "op": "PUSH2",
      "value": "0x1557"
    },
    "5458": {
      "op": "JUMPI"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5461": {
      "op": "DUP1"
    },
    "5462": {
      "op": "REVERT"
    },
    "5463": {
      "op": "JUMPDEST"
    },
    "5464": {
      "op": "PUSH2",
      "value": "0x1563"
    },
    "5467": {
      "op": "DUP10"
    },
    "5468": {
      "op": "DUP4"
    },
    "5469": {
      "op": "DUP11"
    },
    "5470": {
      "op": "ADD"
    },
    "5471": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5474": {
      "jump": "i",
      "op": "JUMP"
    },
    "5475": {
      "op": "JUMPDEST"
    },
    "5476": {
      "op": "SWAP6"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5480": {
      "op": "DUP9"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "op": "CALLDATALOAD"
    },
    "5483": {
      "op": "SWAP5"
    },
    "5484": {
      "op": "POP"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5487": {
      "op": "DUP9"
    },
    "5488": {
      "op": "ADD"
    },
    "5489": {
      "op": "CALLDATALOAD"
    },
    "5490": {
      "op": "SWAP2"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "op": "PUSH2",
      "value": "0x157C"
    },
    "5495": {
      "op": "DUP3"
    },
    "5496": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5499": {
      "jump": "i",
      "op": "JUMP"
    },
    "5500": {
      "op": "JUMPDEST"
    },
    "5501": {
      "op": "SWAP1"
    },
    "5502": {
      "op": "SWAP3"
    },
    "5503": {
      "op": "POP"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5506": {
      "op": "DUP8"
    },
    "5507": {
      "op": "ADD"
    },
    "5508": {
      "op": "CALLDATALOAD"
    },
    "5509": {
      "op": "SWAP1"
    },
    "5510": {
      "op": "DUP1"
    },
    "5511": {
      "op": "DUP3"
    },
    "5512": {
      "op": "GT"
    },
    "5513": {
      "op": "ISZERO"
    },
    "5514": {
      "op": "PUSH2",
      "value": "0x1592"
    },
    "5517": {
      "op": "JUMPI"
    },
    "5518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5520": {
      "op": "DUP1"
    },
    "5521": {
      "op": "REVERT"
    },
    "5522": {
      "op": "JUMPDEST"
    },
    "5523": {
      "op": "POP"
    },
    "5524": {
      "op": "PUSH2",
      "value": "0x159F"
    },
    "5527": {
      "op": "DUP9"
    },
    "5528": {
      "op": "DUP3"
    },
    "5529": {
      "op": "DUP10"
    },
    "5530": {
      "op": "ADD"
    },
    "5531": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5534": {
      "jump": "i",
      "op": "JUMP"
    },
    "5535": {
      "op": "JUMPDEST"
    },
    "5536": {
      "op": "SWAP2"
    },
    "5537": {
      "op": "POP"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "op": "SWAP3"
    },
    "5540": {
      "op": "SWAP6"
    },
    "5541": {
      "op": "POP"
    },
    "5542": {
      "op": "SWAP3"
    },
    "5543": {
      "op": "SWAP6"
    },
    "5544": {
      "op": "SWAP1"
    },
    "5545": {
      "op": "SWAP4"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "jump": "o",
      "op": "JUMP"
    },
    "5548": {
      "op": "JUMPDEST"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5551": {
      "op": "DUP1"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5554": {
      "op": "DUP4"
    },
    "5555": {
      "op": "DUP6"
    },
    "5556": {
      "op": "SUB"
    },
    "5557": {
      "op": "SLT"
    },
    "5558": {
      "op": "ISZERO"
    },
    "5559": {
      "op": "PUSH2",
      "value": "0x15BF"
    },
    "5562": {
      "op": "JUMPI"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5565": {
      "op": "DUP1"
    },
    "5566": {
      "op": "REVERT"
    },
    "5567": {
      "op": "JUMPDEST"
    },
    "5568": {
      "op": "DUP3"
    },
    "5569": {
      "op": "CALLDATALOAD"
    },
    "5570": {
      "op": "SWAP2"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5574": {
      "op": "DUP4"
    },
    "5575": {
      "op": "ADD"
    },
    "5576": {
      "op": "CALLDATALOAD"
    },
    "5577": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5586": {
      "op": "DUP2"
    },
    "5587": {
      "op": "GT"
    },
    "5588": {
      "op": "ISZERO"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x15DD"
    },
    "5592": {
      "op": "JUMPI"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5595": {
      "op": "DUP1"
    },
    "5596": {
      "op": "REVERT"
    },
    "5597": {
      "op": "JUMPDEST"
    },
    "5598": {
      "op": "PUSH2",
      "value": "0x15E9"
    },
    "5601": {
      "op": "DUP6"
    },
    "5602": {
      "op": "DUP3"
    },
    "5603": {
      "op": "DUP7"
    },
    "5604": {
      "op": "ADD"
    },
    "5605": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5608": {
      "jump": "i",
      "op": "JUMP"
    },
    "5609": {
      "op": "JUMPDEST"
    },
    "5610": {
      "op": "SWAP2"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "op": "POP"
    },
    "5613": {
      "op": "SWAP3"
    },
    "5614": {
      "op": "POP"
    },
    "5615": {
      "op": "SWAP3"
    },
    "5616": {
      "op": "SWAP1"
    },
    "5617": {
      "op": "POP"
    },
    "5618": {
      "jump": "o",
      "op": "JUMP"
    },
    "5619": {
      "op": "JUMPDEST"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5622": {
      "op": "DUP1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5625": {
      "op": "DUP1"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5628": {
      "op": "DUP6"
    },
    "5629": {
      "op": "DUP8"
    },
    "5630": {
      "op": "SUB"
    },
    "5631": {
      "op": "SLT"
    },
    "5632": {
      "op": "ISZERO"
    },
    "5633": {
      "op": "PUSH2",
      "value": "0x1609"
    },
    "5636": {
      "op": "JUMPI"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP1"
    },
    "5640": {
      "op": "REVERT"
    },
    "5641": {
      "op": "JUMPDEST"
    },
    "5642": {
      "op": "DUP5"
    },
    "5643": {
      "op": "CALLDATALOAD"
    },
    "5644": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5653": {
      "op": "DUP1"
    },
    "5654": {
      "op": "DUP3"
    },
    "5655": {
      "op": "GT"
    },
    "5656": {
      "op": "ISZERO"
    },
    "5657": {
      "op": "PUSH2",
      "value": "0x1621"
    },
    "5660": {
      "op": "JUMPI"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5663": {
      "op": "DUP1"
    },
    "5664": {
      "op": "REVERT"
    },
    "5665": {
      "op": "JUMPDEST"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x162D"
    },
    "5669": {
      "op": "DUP9"
    },
    "5670": {
      "op": "DUP4"
    },
    "5671": {
      "op": "DUP10"
    },
    "5672": {
      "op": "ADD"
    },
    "5673": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5676": {
      "jump": "i",
      "op": "JUMP"
    },
    "5677": {
      "op": "JUMPDEST"
    },
    "5678": {
      "op": "SWAP6"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5682": {
      "op": "DUP8"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "CALLDATALOAD"
    },
    "5685": {
      "op": "SWAP2"
    },
    "5686": {
      "op": "POP"
    },
    "5687": {
      "op": "DUP1"
    },
    "5688": {
      "op": "DUP3"
    },
    "5689": {
      "op": "GT"
    },
    "5690": {
      "op": "ISZERO"
    },
    "5691": {
      "op": "PUSH2",
      "value": "0x1643"
    },
    "5694": {
      "op": "JUMPI"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5697": {
      "op": "DUP1"
    },
    "5698": {
      "op": "REVERT"
    },
    "5699": {
      "op": "JUMPDEST"
    },
    "5700": {
      "op": "PUSH2",
      "value": "0x164F"
    },
    "5703": {
      "op": "DUP9"
    },
    "5704": {
      "op": "DUP4"
    },
    "5705": {
      "op": "DUP10"
    },
    "5706": {
      "op": "ADD"
    },
    "5707": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5710": {
      "jump": "i",
      "op": "JUMP"
    },
    "5711": {
      "op": "JUMPDEST"
    },
    "5712": {
      "op": "SWAP5"
    },
    "5713": {
      "op": "POP"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5716": {
      "op": "DUP8"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "CALLDATALOAD"
    },
    "5719": {
      "op": "SWAP2"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "op": "PUSH2",
      "value": "0x1661"
    },
    "5724": {
      "op": "DUP3"
    },
    "5725": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5728": {
      "jump": "i",
      "op": "JUMP"
    },
    "5729": {
      "op": "JUMPDEST"
    },
    "5730": {
      "op": "SWAP1"
    },
    "5731": {
      "op": "SWAP3"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5735": {
      "op": "DUP7"
    },
    "5736": {
      "op": "ADD"
    },
    "5737": {
      "op": "CALLDATALOAD"
    },
    "5738": {
      "op": "SWAP1"
    },
    "5739": {
      "op": "DUP1"
    },
    "5740": {
      "op": "DUP3"
    },
    "5741": {
      "op": "GT"
    },
    "5742": {
      "op": "ISZERO"
    },
    "5743": {
      "op": "PUSH2",
      "value": "0x1677"
    },
    "5746": {
      "op": "JUMPI"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5749": {
      "op": "DUP1"
    },
    "5750": {
      "op": "REVERT"
    },
    "5751": {
      "op": "JUMPDEST"
    },
    "5752": {
      "op": "POP"
    },
    "5753": {
      "op": "PUSH2",
      "value": "0x1684"
    },
    "5756": {
      "op": "DUP8"
    },
    "5757": {
      "op": "DUP3"
    },
    "5758": {
      "op": "DUP9"
    },
    "5759": {
      "op": "ADD"
    },
    "5760": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "5763": {
      "jump": "i",
      "op": "JUMP"
    },
    "5764": {
      "op": "JUMPDEST"
    },
    "5765": {
      "op": "SWAP2"
    },
    "5766": {
      "op": "POP"
    },
    "5767": {
      "op": "POP"
    },
    "5768": {
      "op": "SWAP3"
    },
    "5769": {
      "op": "SWAP6"
    },
    "5770": {
      "op": "SWAP2"
    },
    "5771": {
      "op": "SWAP5"
    },
    "5772": {
      "op": "POP"
    },
    "5773": {
      "op": "SWAP3"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "jump": "o",
      "op": "JUMP"
    },
    "5776": {
      "op": "JUMPDEST"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5779": {
      "op": "DUP1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5782": {
      "op": "DUP4"
    },
    "5783": {
      "op": "DUP6"
    },
    "5784": {
      "op": "SUB"
    },
    "5785": {
      "op": "SLT"
    },
    "5786": {
      "op": "ISZERO"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x16A3"
    },
    "5790": {
      "op": "JUMPI"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5793": {
      "op": "DUP1"
    },
    "5794": {
      "op": "REVERT"
    },
    "5795": {
      "op": "JUMPDEST"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "CALLDATALOAD"
    },
    "5798": {
      "op": "PUSH2",
      "value": "0x16AE"
    },
    "5801": {
      "op": "DUP2"
    },
    "5802": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5805": {
      "jump": "i",
      "op": "JUMP"
    },
    "5806": {
      "op": "JUMPDEST"
    },
    "5807": {
      "op": "SWAP2"
    },
    "5808": {
      "op": "POP"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5811": {
      "op": "DUP4"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "op": "CALLDATALOAD"
    },
    "5814": {
      "op": "PUSH2",
      "value": "0x16BE"
    },
    "5817": {
      "op": "DUP2"
    },
    "5818": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "5821": {
      "jump": "i",
      "op": "JUMP"
    },
    "5822": {
      "op": "JUMPDEST"
    },
    "5823": {
      "op": "DUP1"
    },
    "5824": {
      "op": "SWAP2"
    },
    "5825": {
      "op": "POP"
    },
    "5826": {
      "op": "POP"
    },
    "5827": {
      "op": "SWAP3"
    },
    "5828": {
      "op": "POP"
    },
    "5829": {
      "op": "SWAP3"
    },
    "5830": {
      "op": "SWAP1"
    },
    "5831": {
      "op": "POP"
    },
    "5832": {
      "jump": "o",
      "op": "JUMP"
    },
    "5833": {
      "op": "JUMPDEST"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5836": {
      "op": "JUMPDEST"
    },
    "5837": {
      "op": "DUP4"
    },
    "5838": {
      "op": "DUP2"
    },
    "5839": {
      "op": "LT"
    },
    "5840": {
      "op": "ISZERO"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x16E4"
    },
    "5844": {
      "op": "JUMPI"
    },
    "5845": {
      "op": "DUP2"
    },
    "5846": {
      "op": "DUP2"
    },
    "5847": {
      "op": "ADD"
    },
    "5848": {
      "op": "MLOAD"
    },
    "5849": {
      "op": "DUP4"
    },
    "5850": {
      "op": "DUP3"
    },
    "5851": {
      "op": "ADD"
    },
    "5852": {
      "op": "MSTORE"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5855": {
      "op": "ADD"
    },
    "5856": {
      "op": "PUSH2",
      "value": "0x16CC"
    },
    "5859": {
      "op": "JUMP"
    },
    "5860": {
      "op": "JUMPDEST"
    },
    "5861": {
      "op": "DUP4"
    },
    "5862": {
      "op": "DUP2"
    },
    "5863": {
      "op": "GT"
    },
    "5864": {
      "op": "ISZERO"
    },
    "5865": {
      "op": "PUSH2",
      "value": "0x16F3"
    },
    "5868": {
      "op": "JUMPI"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5871": {
      "op": "DUP5"
    },
    "5872": {
      "op": "DUP5"
    },
    "5873": {
      "op": "ADD"
    },
    "5874": {
      "op": "MSTORE"
    },
    "5875": {
      "op": "JUMPDEST"
    },
    "5876": {
      "op": "POP"
    },
    "5877": {
      "op": "POP"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "op": "POP"
    },
    "5880": {
      "jump": "o",
      "op": "JUMP"
    },
    "5881": {
      "op": "JUMPDEST"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5884": {
      "op": "DUP2"
    },
    "5885": {
      "op": "MLOAD"
    },
    "5886": {
      "op": "DUP1"
    },
    "5887": {
      "op": "DUP5"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "5892": {
      "op": "DUP2"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5895": {
      "op": "DUP7"
    },
    "5896": {
      "op": "ADD"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5899": {
      "op": "DUP7"
    },
    "5900": {
      "op": "ADD"
    },
    "5901": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "5904": {
      "jump": "i",
      "op": "JUMP"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5911": {
      "op": "NOT"
    },
    "5912": {
      "op": "AND"
    },
    "5913": {
      "op": "SWAP3"
    },
    "5914": {
      "op": "SWAP1"
    },
    "5915": {
      "op": "SWAP3"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5919": {
      "op": "ADD"
    },
    "5920": {
      "op": "SWAP3"
    },
    "5921": {
      "op": "SWAP2"
    },
    "5922": {
      "op": "POP"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "jump": "o",
      "op": "JUMP"
    },
    "5925": {
      "op": "JUMPDEST"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5928": {
      "op": "DUP2"
    },
    "5929": {
      "op": "MSTORE"
    },
    "5930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5932": {
      "op": "PUSH2",
      "value": "0x1738"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5937": {
      "op": "DUP4"
    },
    "5938": {
      "op": "ADD"
    },
    "5939": {
      "op": "DUP8"
    },
    "5940": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "5943": {
      "jump": "i",
      "op": "JUMP"
    },
    "5944": {
      "op": "JUMPDEST"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5947": {
      "op": "DUP4"
    },
    "5948": {
      "op": "ADD"
    },
    "5949": {
      "op": "SWAP6"
    },
    "5950": {
      "op": "SWAP1"
    },
    "5951": {
      "op": "SWAP6"
    },
    "5952": {
      "op": "MSTORE"
    },
    "5953": {
      "op": "POP"
    },
    "5954": {
      "op": "SWAP2"
    },
    "5955": {
      "op": "ISZERO"
    },
    "5956": {
      "op": "ISZERO"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5959": {
      "op": "DUP4"
    },
    "5960": {
      "op": "ADD"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "ISZERO"
    },
    "5963": {
      "op": "ISZERO"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5966": {
      "op": "SWAP1"
    },
    "5967": {
      "op": "SWAP2"
    },
    "5968": {
      "op": "ADD"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "SWAP2"
    },
    "5971": {
      "op": "SWAP1"
    },
    "5972": {
      "op": "POP"
    },
    "5973": {
      "jump": "o",
      "op": "JUMP"
    },
    "5974": {
      "op": "JUMPDEST"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5979": {
      "op": "DUP3"
    },
    "5980": {
      "op": "DUP5"
    },
    "5981": {
      "op": "SUB"
    },
    "5982": {
      "op": "SLT"
    },
    "5983": {
      "op": "ISZERO"
    },
    "5984": {
      "op": "PUSH2",
      "value": "0x1768"
    },
    "5987": {
      "op": "JUMPI"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5990": {
      "op": "DUP1"
    },
    "5991": {
      "op": "REVERT"
    },
    "5992": {
      "op": "JUMPDEST"
    },
    "5993": {
      "op": "DUP2"
    },
    "5994": {
      "op": "CALLDATALOAD"
    },
    "5995": {
      "op": "PUSH2",
      "value": "0x1773"
    },
    "5998": {
      "op": "DUP2"
    },
    "5999": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "6002": {
      "jump": "i",
      "op": "JUMP"
    },
    "6003": {
      "op": "JUMPDEST"
    },
    "6004": {
      "op": "SWAP4"
    },
    "6005": {
      "op": "SWAP3"
    },
    "6006": {
      "op": "POP"
    },
    "6007": {
      "op": "POP"
    },
    "6008": {
      "op": "POP"
    },
    "6009": {
      "jump": "o",
      "op": "JUMP"
    },
    "6010": {
      "op": "JUMPDEST"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6013": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6016": {
      "op": "DUP1"
    },
    "6017": {
      "op": "DUP4"
    },
    "6018": {
      "op": "MSTORE"
    },
    "6019": {
      "op": "PUSH2",
      "value": "0x178E"
    },
    "6022": {
      "op": "DUP2"
    },
    "6023": {
      "op": "DUP5"
    },
    "6024": {
      "op": "ADD"
    },
    "6025": {
      "op": "DUP14"
    },
    "6026": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "6029": {
      "jump": "i",
      "op": "JUMP"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6033": {
      "op": "DUP5"
    },
    "6034": {
      "op": "ADD"
    },
    "6035": {
      "op": "SWAP12"
    },
    "6036": {
      "op": "SWAP1"
    },
    "6037": {
      "op": "SWAP12"
    },
    "6038": {
      "op": "MSTORE"
    },
    "6039": {
      "op": "POP"
    },
    "6040": {
      "op": "POP"
    },
    "6041": {
      "op": "SWAP7"
    },
    "6042": {
      "op": "ISZERO"
    },
    "6043": {
      "op": "ISZERO"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6046": {
      "op": "DUP9"
    },
    "6047": {
      "op": "ADD"
    },
    "6048": {
      "op": "MSTORE"
    },
    "6049": {
      "op": "SWAP5"
    },
    "6050": {
      "op": "ISZERO"
    },
    "6051": {
      "op": "ISZERO"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6054": {
      "op": "DUP8"
    },
    "6055": {
      "op": "ADD"
    },
    "6056": {
      "op": "MSTORE"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6059": {
      "op": "DUP7"
    },
    "6060": {
      "op": "ADD"
    },
    "6061": {
      "op": "SWAP4"
    },
    "6062": {
      "op": "SWAP1"
    },
    "6063": {
      "op": "SWAP4"
    },
    "6064": {
      "op": "MSTORE"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6067": {
      "op": "DUP6"
    },
    "6068": {
      "op": "ADD"
    },
    "6069": {
      "op": "SWAP2"
    },
    "6070": {
      "op": "SWAP1"
    },
    "6071": {
      "op": "SWAP2"
    },
    "6072": {
      "op": "MSTORE"
    },
    "6073": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6075": {
      "op": "DUP5"
    },
    "6076": {
      "op": "ADD"
    },
    "6077": {
      "op": "MSTORE"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6080": {
      "op": "DUP4"
    },
    "6081": {
      "op": "ADD"
    },
    "6082": {
      "op": "MSTORE"
    },
    "6083": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6086": {
      "op": "SWAP1"
    },
    "6087": {
      "op": "SWAP2"
    },
    "6088": {
      "op": "ADD"
    },
    "6089": {
      "op": "MSTORE"
    },
    "6090": {
      "op": "SWAP2"
    },
    "6091": {
      "op": "SWAP1"
    },
    "6092": {
      "op": "POP"
    },
    "6093": {
      "jump": "o",
      "op": "JUMP"
    },
    "6094": {
      "op": "JUMPDEST"
    },
    "6095": {
      "op": "DUP1"
    },
    "6096": {
      "op": "ISZERO"
    },
    "6097": {
      "op": "ISZERO"
    },
    "6098": {
      "op": "DUP2"
    },
    "6099": {
      "op": "EQ"
    },
    "6100": {
      "op": "PUSH2",
      "value": "0x143F"
    },
    "6103": {
      "op": "JUMPI"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6106": {
      "op": "DUP1"
    },
    "6107": {
      "op": "REVERT"
    },
    "6108": {
      "op": "JUMPDEST"
    },
    "6109": {
      "op": "DUP1"
    },
    "6110": {
      "op": "CALLDATALOAD"
    },
    "6111": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "6114": {
      "op": "DUP2"
    },
    "6115": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "6118": {
      "jump": "i",
      "op": "JUMP"
    },
    "6119": {
      "op": "JUMPDEST"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6122": {
      "op": "DUP1"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6125": {
      "op": "DUP1"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6130": {
      "op": "DUP7"
    },
    "6131": {
      "op": "DUP9"
    },
    "6132": {
      "op": "SUB"
    },
    "6133": {
      "op": "SLT"
    },
    "6134": {
      "op": "ISZERO"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x17FF"
    },
    "6138": {
      "op": "JUMPI"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6141": {
      "op": "DUP1"
    },
    "6142": {
      "op": "REVERT"
    },
    "6143": {
      "op": "JUMPDEST"
    },
    "6144": {
      "op": "DUP6"
    },
    "6145": {
      "op": "CALLDATALOAD"
    },
    "6146": {
      "op": "SWAP5"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6150": {
      "op": "DUP7"
    },
    "6151": {
      "op": "ADD"
    },
    "6152": {
      "op": "CALLDATALOAD"
    },
    "6153": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "6156": {
      "op": "DUP2"
    },
    "6157": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "6160": {
      "jump": "i",
      "op": "JUMP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "SWAP4"
    },
    "6163": {
      "op": "POP"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6166": {
      "op": "DUP7"
    },
    "6167": {
      "op": "ADD"
    },
    "6168": {
      "op": "CALLDATALOAD"
    },
    "6169": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6178": {
      "op": "DUP1"
    },
    "6179": {
      "op": "DUP3"
    },
    "6180": {
      "op": "GT"
    },
    "6181": {
      "op": "ISZERO"
    },
    "6182": {
      "op": "PUSH2",
      "value": "0x182E"
    },
    "6185": {
      "op": "JUMPI"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6188": {
      "op": "DUP1"
    },
    "6189": {
      "op": "REVERT"
    },
    "6190": {
      "op": "JUMPDEST"
    },
    "6191": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "6194": {
      "op": "DUP10"
    },
    "6195": {
      "op": "DUP4"
    },
    "6196": {
      "op": "DUP11"
    },
    "6197": {
      "op": "ADD"
    },
    "6198": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6201": {
      "jump": "i",
      "op": "JUMP"
    },
    "6202": {
      "op": "JUMPDEST"
    },
    "6203": {
      "op": "SWAP5"
    },
    "6204": {
      "op": "POP"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6207": {
      "op": "DUP9"
    },
    "6208": {
      "op": "ADD"
    },
    "6209": {
      "op": "CALLDATALOAD"
    },
    "6210": {
      "op": "SWAP2"
    },
    "6211": {
      "op": "POP"
    },
    "6212": {
      "op": "PUSH2",
      "value": "0x157C"
    },
    "6215": {
      "op": "DUP3"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "6219": {
      "jump": "i",
      "op": "JUMP"
    },
    "6220": {
      "op": "JUMPDEST"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6223": {
      "op": "DUP1"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6228": {
      "op": "DUP5"
    },
    "6229": {
      "op": "DUP7"
    },
    "6230": {
      "op": "SUB"
    },
    "6231": {
      "op": "SLT"
    },
    "6232": {
      "op": "ISZERO"
    },
    "6233": {
      "op": "PUSH2",
      "value": "0x1861"
    },
    "6236": {
      "op": "JUMPI"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6239": {
      "op": "DUP1"
    },
    "6240": {
      "op": "REVERT"
    },
    "6241": {
      "op": "JUMPDEST"
    },
    "6242": {
      "op": "DUP4"
    },
    "6243": {
      "op": "CALLDATALOAD"
    },
    "6244": {
      "op": "PUSH2",
      "value": "0x186C"
    },
    "6247": {
      "op": "DUP2"
    },
    "6248": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "6251": {
      "jump": "i",
      "op": "JUMP"
    },
    "6252": {
      "op": "JUMPDEST"
    },
    "6253": {
      "op": "SWAP3"
    },
    "6254": {
      "op": "POP"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6257": {
      "op": "DUP5"
    },
    "6258": {
      "op": "ADD"
    },
    "6259": {
      "op": "CALLDATALOAD"
    },
    "6260": {
      "op": "PUSH2",
      "value": "0x187C"
    },
    "6263": {
      "op": "DUP2"
    },
    "6264": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "6267": {
      "jump": "i",
      "op": "JUMP"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "SWAP2"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6273": {
      "op": "DUP5"
    },
    "6274": {
      "op": "ADD"
    },
    "6275": {
      "op": "CALLDATALOAD"
    },
    "6276": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6285": {
      "op": "DUP2"
    },
    "6286": {
      "op": "GT"
    },
    "6287": {
      "op": "ISZERO"
    },
    "6288": {
      "op": "PUSH2",
      "value": "0x1898"
    },
    "6291": {
      "op": "JUMPI"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6294": {
      "op": "DUP1"
    },
    "6295": {
      "op": "REVERT"
    },
    "6296": {
      "op": "JUMPDEST"
    },
    "6297": {
      "op": "PUSH2",
      "value": "0x18A4"
    },
    "6300": {
      "op": "DUP7"
    },
    "6301": {
      "op": "DUP3"
    },
    "6302": {
      "op": "DUP8"
    },
    "6303": {
      "op": "ADD"
    },
    "6304": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6307": {
      "jump": "i",
      "op": "JUMP"
    },
    "6308": {
      "op": "JUMPDEST"
    },
    "6309": {
      "op": "SWAP2"
    },
    "6310": {
      "op": "POP"
    },
    "6311": {
      "op": "POP"
    },
    "6312": {
      "op": "SWAP3"
    },
    "6313": {
      "op": "POP"
    },
    "6314": {
      "op": "SWAP3"
    },
    "6315": {
      "op": "POP"
    },
    "6316": {
      "op": "SWAP3"
    },
    "6317": {
      "jump": "o",
      "op": "JUMP"
    },
    "6318": {
      "op": "JUMPDEST"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6323": {
      "op": "DUP1"
    },
    "6324": {
      "op": "DUP4"
    },
    "6325": {
      "op": "ADD"
    },
    "6326": {
      "op": "DUP2"
    },
    "6327": {
      "op": "DUP5"
    },
    "6328": {
      "op": "MSTORE"
    },
    "6329": {
      "op": "DUP1"
    },
    "6330": {
      "op": "DUP6"
    },
    "6331": {
      "op": "MLOAD"
    },
    "6332": {
      "op": "DUP1"
    },
    "6333": {
      "op": "DUP4"
    },
    "6334": {
      "op": "MSTORE"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6337": {
      "op": "SWAP3"
    },
    "6338": {
      "op": "POP"
    },
    "6339": {
      "op": "DUP3"
    },
    "6340": {
      "op": "DUP7"
    },
    "6341": {
      "op": "ADD"
    },
    "6342": {
      "op": "SWAP2"
    },
    "6343": {
      "op": "POP"
    },
    "6344": {
      "op": "DUP3"
    },
    "6345": {
      "op": "DUP2"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6348": {
      "op": "SHL"
    },
    "6349": {
      "op": "DUP8"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "ADD"
    },
    "6352": {
      "op": "DUP5"
    },
    "6353": {
      "op": "DUP9"
    },
    "6354": {
      "op": "ADD"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6357": {
      "op": "JUMPDEST"
    },
    "6358": {
      "op": "DUP4"
    },
    "6359": {
      "op": "DUP2"
    },
    "6360": {
      "op": "LT"
    },
    "6361": {
      "op": "ISZERO"
    },
    "6362": {
      "op": "PUSH2",
      "value": "0x1944"
    },
    "6365": {
      "op": "JUMPI"
    },
    "6366": {
      "op": "DUP9"
    },
    "6367": {
      "op": "DUP4"
    },
    "6368": {
      "op": "SUB"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6371": {
      "op": "NOT"
    },
    "6372": {
      "op": "ADD"
    },
    "6373": {
      "op": "DUP6"
    },
    "6374": {
      "op": "MSTORE"
    },
    "6375": {
      "op": "DUP2"
    },
    "6376": {
      "op": "MLOAD"
    },
    "6377": {
      "op": "DUP1"
    },
    "6378": {
      "op": "MLOAD"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6385": {
      "op": "SHL"
    },
    "6386": {
      "op": "SUB"
    },
    "6387": {
      "op": "AND"
    },
    "6388": {
      "op": "DUP5"
    },
    "6389": {
      "op": "MSTORE"
    },
    "6390": {
      "op": "DUP8"
    },
    "6391": {
      "op": "DUP2"
    },
    "6392": {
      "op": "ADD"
    },
    "6393": {
      "op": "MLOAD"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6396": {
      "op": "DUP10"
    },
    "6397": {
      "op": "DUP7"
    },
    "6398": {
      "op": "ADD"
    },
    "6399": {
      "op": "DUP2"
    },
    "6400": {
      "op": "SWAP1"
    },
    "6401": {
      "op": "MSTORE"
    },
    "6402": {
      "op": "SWAP1"
    },
    "6403": {
      "op": "PUSH2",
      "value": "0x190E"
    },
    "6406": {
      "op": "DUP3"
    },
    "6407": {
      "op": "DUP8"
    },
    "6408": {
      "op": "ADD"
    },
    "6409": {
      "op": "DUP3"
    },
    "6410": {
      "op": "PUSH2",
      "value": "0x16F9"
    },
    "6413": {
      "jump": "i",
      "op": "JUMP"
    },
    "6414": {
      "op": "JUMPDEST"
    },
    "6415": {
      "op": "DUP4"
    },
    "6416": {
      "op": "DUP11"
    },
    "6417": {
      "op": "ADD"
    },
    "6418": {
      "op": "MLOAD"
    },
    "6419": {
      "op": "DUP8"
    },
    "6420": {
      "op": "DUP12"
    },
    "6421": {
      "op": "ADD"
    },
    "6422": {
      "op": "MSTORE"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6425": {
      "op": "DUP1"
    },
    "6426": {
      "op": "DUP6"
    },
    "6427": {
      "op": "ADD"
    },
    "6428": {
      "op": "MLOAD"
    },
    "6429": {
      "op": "ISZERO"
    },
    "6430": {
      "op": "ISZERO"
    },
    "6431": {
      "op": "SWAP1"
    },
    "6432": {
      "op": "DUP9"
    },
    "6433": {
      "op": "ADD"
    },
    "6434": {
      "op": "MSTORE"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6437": {
      "op": "SWAP4"
    },
    "6438": {
      "op": "DUP5"
    },
    "6439": {
      "op": "ADD"
    },
    "6440": {
      "op": "MLOAD"
    },
    "6441": {
      "op": "ISZERO"
    },
    "6442": {
      "op": "ISZERO"
    },
    "6443": {
      "op": "SWAP4"
    },
    "6444": {
      "op": "SWAP1"
    },
    "6445": {
      "op": "SWAP7"
    },
    "6446": {
      "op": "ADD"
    },
    "6447": {
      "op": "SWAP3"
    },
    "6448": {
      "op": "SWAP1"
    },
    "6449": {
      "op": "SWAP3"
    },
    "6450": {
      "op": "MSTORE"
    },
    "6451": {
      "op": "POP"
    },
    "6452": {
      "op": "POP"
    },
    "6453": {
      "op": "SWAP4"
    },
    "6454": {
      "op": "DUP7"
    },
    "6455": {
      "op": "ADD"
    },
    "6456": {
      "op": "SWAP4"
    },
    "6457": {
      "op": "SWAP1"
    },
    "6458": {
      "op": "DUP7"
    },
    "6459": {
      "op": "ADD"
    },
    "6460": {
      "op": "SWAP1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6463": {
      "op": "ADD"
    },
    "6464": {
      "op": "PUSH2",
      "value": "0x18D5"
    },
    "6467": {
      "op": "JUMP"
    },
    "6468": {
      "op": "JUMPDEST"
    },
    "6469": {
      "op": "POP"
    },
    "6470": {
      "op": "SWAP1"
    },
    "6471": {
      "op": "SWAP9"
    },
    "6472": {
      "op": "SWAP8"
    },
    "6473": {
      "op": "POP"
    },
    "6474": {
      "op": "POP"
    },
    "6475": {
      "op": "POP"
    },
    "6476": {
      "op": "POP"
    },
    "6477": {
      "op": "POP"
    },
    "6478": {
      "op": "POP"
    },
    "6479": {
      "op": "POP"
    },
    "6480": {
      "op": "POP"
    },
    "6481": {
      "jump": "o",
      "op": "JUMP"
    },
    "6482": {
      "op": "JUMPDEST"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6485": {
      "op": "DUP1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6488": {
      "op": "DUP1"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6491": {
      "op": "DUP1"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6494": {
      "op": "DUP1"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6497": {
      "op": "DUP1"
    },
    "6498": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "6501": {
      "op": "DUP12"
    },
    "6502": {
      "op": "DUP14"
    },
    "6503": {
      "op": "SUB"
    },
    "6504": {
      "op": "SLT"
    },
    "6505": {
      "op": "ISZERO"
    },
    "6506": {
      "op": "PUSH2",
      "value": "0x1972"
    },
    "6509": {
      "op": "JUMPI"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6512": {
      "op": "DUP1"
    },
    "6513": {
      "op": "REVERT"
    },
    "6514": {
      "op": "JUMPDEST"
    },
    "6515": {
      "op": "DUP11"
    },
    "6516": {
      "op": "CALLDATALOAD"
    },
    "6517": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6526": {
      "op": "DUP1"
    },
    "6527": {
      "op": "DUP3"
    },
    "6528": {
      "op": "GT"
    },
    "6529": {
      "op": "ISZERO"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "6533": {
      "op": "JUMPI"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6536": {
      "op": "DUP1"
    },
    "6537": {
      "op": "REVERT"
    },
    "6538": {
      "op": "JUMPDEST"
    },
    "6539": {
      "op": "PUSH2",
      "value": "0x1996"
    },
    "6542": {
      "op": "DUP15"
    },
    "6543": {
      "op": "DUP4"
    },
    "6544": {
      "op": "DUP16"
    },
    "6545": {
      "op": "ADD"
    },
    "6546": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6549": {
      "jump": "i",
      "op": "JUMP"
    },
    "6550": {
      "op": "JUMPDEST"
    },
    "6551": {
      "op": "SWAP12"
    },
    "6552": {
      "op": "POP"
    },
    "6553": {
      "op": "PUSH2",
      "value": "0x19A4"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6558": {
      "op": "DUP15"
    },
    "6559": {
      "op": "ADD"
    },
    "6560": {
      "op": "PUSH2",
      "value": "0x17DC"
    },
    "6563": {
      "jump": "i",
      "op": "JUMP"
    },
    "6564": {
      "op": "JUMPDEST"
    },
    "6565": {
      "op": "SWAP11"
    },
    "6566": {
      "op": "POP"
    },
    "6567": {
      "op": "PUSH2",
      "value": "0x19B2"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6572": {
      "op": "DUP15"
    },
    "6573": {
      "op": "ADD"
    },
    "6574": {
      "op": "PUSH2",
      "value": "0x17DC"
    },
    "6577": {
      "jump": "i",
      "op": "JUMP"
    },
    "6578": {
      "op": "JUMPDEST"
    },
    "6579": {
      "op": "SWAP10"
    },
    "6580": {
      "op": "POP"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6583": {
      "op": "DUP14"
    },
    "6584": {
      "op": "ADD"
    },
    "6585": {
      "op": "CALLDATALOAD"
    },
    "6586": {
      "op": "SWAP9"
    },
    "6587": {
      "op": "POP"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6590": {
      "op": "DUP14"
    },
    "6591": {
      "op": "ADD"
    },
    "6592": {
      "op": "CALLDATALOAD"
    },
    "6593": {
      "op": "SWAP8"
    },
    "6594": {
      "op": "POP"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6597": {
      "op": "DUP14"
    },
    "6598": {
      "op": "ADD"
    },
    "6599": {
      "op": "CALLDATALOAD"
    },
    "6600": {
      "op": "SWAP7"
    },
    "6601": {
      "op": "POP"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6604": {
      "op": "DUP14"
    },
    "6605": {
      "op": "ADD"
    },
    "6606": {
      "op": "CALLDATALOAD"
    },
    "6607": {
      "op": "SWAP6"
    },
    "6608": {
      "op": "POP"
    },
    "6609": {
      "op": "PUSH2",
      "value": "0x19DC"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6614": {
      "op": "DUP15"
    },
    "6615": {
      "op": "ADD"
    },
    "6616": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "6619": {
      "jump": "i",
      "op": "JUMP"
    },
    "6620": {
      "op": "JUMPDEST"
    },
    "6621": {
      "op": "SWAP5"
    },
    "6622": {
      "op": "POP"
    },
    "6623": {
      "op": "PUSH2",
      "value": "0x19EB"
    },
    "6626": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6629": {
      "op": "DUP15"
    },
    "6630": {
      "op": "ADD"
    },
    "6631": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "6634": {
      "jump": "i",
      "op": "JUMP"
    },
    "6635": {
      "op": "JUMPDEST"
    },
    "6636": {
      "op": "SWAP4"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6641": {
      "op": "DUP14"
    },
    "6642": {
      "op": "ADD"
    },
    "6643": {
      "op": "CALLDATALOAD"
    },
    "6644": {
      "op": "SWAP2"
    },
    "6645": {
      "op": "POP"
    },
    "6646": {
      "op": "DUP1"
    },
    "6647": {
      "op": "DUP3"
    },
    "6648": {
      "op": "GT"
    },
    "6649": {
      "op": "ISZERO"
    },
    "6650": {
      "op": "PUSH2",
      "value": "0x1A02"
    },
    "6653": {
      "op": "JUMPI"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6656": {
      "op": "DUP1"
    },
    "6657": {
      "op": "REVERT"
    },
    "6658": {
      "op": "JUMPDEST"
    },
    "6659": {
      "op": "POP"
    },
    "6660": {
      "op": "PUSH2",
      "value": "0x1A0F"
    },
    "6663": {
      "op": "DUP14"
    },
    "6664": {
      "op": "DUP3"
    },
    "6665": {
      "op": "DUP15"
    },
    "6666": {
      "op": "ADD"
    },
    "6667": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6670": {
      "jump": "i",
      "op": "JUMP"
    },
    "6671": {
      "op": "JUMPDEST"
    },
    "6672": {
      "op": "SWAP2"
    },
    "6673": {
      "op": "POP"
    },
    "6674": {
      "op": "POP"
    },
    "6675": {
      "op": "SWAP3"
    },
    "6676": {
      "op": "SWAP6"
    },
    "6677": {
      "op": "SWAP9"
    },
    "6678": {
      "op": "SWAP12"
    },
    "6679": {
      "op": "SWAP2"
    },
    "6680": {
      "op": "SWAP5"
    },
    "6681": {
      "op": "SWAP8"
    },
    "6682": {
      "op": "SWAP11"
    },
    "6683": {
      "op": "POP"
    },
    "6684": {
      "op": "SWAP3"
    },
    "6685": {
      "op": "SWAP6"
    },
    "6686": {
      "op": "SWAP9"
    },
    "6687": {
      "op": "POP"
    },
    "6688": {
      "jump": "o",
      "op": "JUMP"
    },
    "6689": {
      "op": "JUMPDEST"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6692": {
      "op": "DUP1"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6695": {
      "op": "DUP1"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6698": {
      "op": "DUP1"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6701": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6703": {
      "op": "DUP9"
    },
    "6704": {
      "op": "DUP11"
    },
    "6705": {
      "op": "SUB"
    },
    "6706": {
      "op": "SLT"
    },
    "6707": {
      "op": "ISZERO"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x1A3C"
    },
    "6711": {
      "op": "JUMPI"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6714": {
      "op": "DUP1"
    },
    "6715": {
      "op": "REVERT"
    },
    "6716": {
      "op": "JUMPDEST"
    },
    "6717": {
      "op": "DUP8"
    },
    "6718": {
      "op": "CALLDATALOAD"
    },
    "6719": {
      "op": "PUSH2",
      "value": "0x1A47"
    },
    "6722": {
      "op": "DUP2"
    },
    "6723": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "6726": {
      "jump": "i",
      "op": "JUMP"
    },
    "6727": {
      "op": "JUMPDEST"
    },
    "6728": {
      "op": "SWAP7"
    },
    "6729": {
      "op": "POP"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6732": {
      "op": "DUP9"
    },
    "6733": {
      "op": "ADD"
    },
    "6734": {
      "op": "CALLDATALOAD"
    },
    "6735": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6744": {
      "op": "DUP1"
    },
    "6745": {
      "op": "DUP3"
    },
    "6746": {
      "op": "GT"
    },
    "6747": {
      "op": "ISZERO"
    },
    "6748": {
      "op": "PUSH2",
      "value": "0x1A64"
    },
    "6751": {
      "op": "JUMPI"
    },
    "6752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6754": {
      "op": "DUP1"
    },
    "6755": {
      "op": "REVERT"
    },
    "6756": {
      "op": "JUMPDEST"
    },
    "6757": {
      "op": "PUSH2",
      "value": "0x1A70"
    },
    "6760": {
      "op": "DUP12"
    },
    "6761": {
      "op": "DUP4"
    },
    "6762": {
      "op": "DUP13"
    },
    "6763": {
      "op": "ADD"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6767": {
      "jump": "i",
      "op": "JUMP"
    },
    "6768": {
      "op": "JUMPDEST"
    },
    "6769": {
      "op": "SWAP8"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6773": {
      "op": "DUP11"
    },
    "6774": {
      "op": "ADD"
    },
    "6775": {
      "op": "CALLDATALOAD"
    },
    "6776": {
      "op": "SWAP2"
    },
    "6777": {
      "op": "POP"
    },
    "6778": {
      "op": "DUP1"
    },
    "6779": {
      "op": "DUP3"
    },
    "6780": {
      "op": "GT"
    },
    "6781": {
      "op": "ISZERO"
    },
    "6782": {
      "op": "PUSH2",
      "value": "0x1A86"
    },
    "6785": {
      "op": "JUMPI"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6788": {
      "op": "DUP1"
    },
    "6789": {
      "op": "REVERT"
    },
    "6790": {
      "op": "JUMPDEST"
    },
    "6791": {
      "op": "PUSH2",
      "value": "0x1A92"
    },
    "6794": {
      "op": "DUP12"
    },
    "6795": {
      "op": "DUP4"
    },
    "6796": {
      "op": "DUP13"
    },
    "6797": {
      "op": "ADD"
    },
    "6798": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6801": {
      "jump": "i",
      "op": "JUMP"
    },
    "6802": {
      "op": "JUMPDEST"
    },
    "6803": {
      "op": "SWAP7"
    },
    "6804": {
      "op": "POP"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6807": {
      "op": "DUP11"
    },
    "6808": {
      "op": "ADD"
    },
    "6809": {
      "op": "CALLDATALOAD"
    },
    "6810": {
      "op": "SWAP2"
    },
    "6811": {
      "op": "POP"
    },
    "6812": {
      "op": "PUSH2",
      "value": "0x1AA4"
    },
    "6815": {
      "op": "DUP3"
    },
    "6816": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "6819": {
      "jump": "i",
      "op": "JUMP"
    },
    "6820": {
      "op": "JUMPDEST"
    },
    "6821": {
      "op": "DUP2"
    },
    "6822": {
      "op": "SWAP6"
    },
    "6823": {
      "op": "POP"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6826": {
      "op": "DUP11"
    },
    "6827": {
      "op": "ADD"
    },
    "6828": {
      "op": "CALLDATALOAD"
    },
    "6829": {
      "op": "SWAP5"
    },
    "6830": {
      "op": "POP"
    },
    "6831": {
      "op": "PUSH2",
      "value": "0x1ABA"
    },
    "6834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6836": {
      "op": "DUP12"
    },
    "6837": {
      "op": "ADD"
    },
    "6838": {
      "op": "PUSH2",
      "value": "0x1442"
    },
    "6841": {
      "jump": "i",
      "op": "JUMP"
    },
    "6842": {
      "op": "JUMPDEST"
    },
    "6843": {
      "op": "SWAP4"
    },
    "6844": {
      "op": "POP"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6847": {
      "op": "DUP11"
    },
    "6848": {
      "op": "ADD"
    },
    "6849": {
      "op": "CALLDATALOAD"
    },
    "6850": {
      "op": "SWAP2"
    },
    "6851": {
      "op": "POP"
    },
    "6852": {
      "op": "DUP1"
    },
    "6853": {
      "op": "DUP3"
    },
    "6854": {
      "op": "GT"
    },
    "6855": {
      "op": "ISZERO"
    },
    "6856": {
      "op": "PUSH2",
      "value": "0x1AD0"
    },
    "6859": {
      "op": "JUMPI"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6862": {
      "op": "DUP1"
    },
    "6863": {
      "op": "REVERT"
    },
    "6864": {
      "op": "JUMPDEST"
    },
    "6865": {
      "op": "POP"
    },
    "6866": {
      "op": "PUSH2",
      "value": "0x1ADD"
    },
    "6869": {
      "op": "DUP11"
    },
    "6870": {
      "op": "DUP3"
    },
    "6871": {
      "op": "DUP12"
    },
    "6872": {
      "op": "ADD"
    },
    "6873": {
      "op": "PUSH2",
      "value": "0x14C1"
    },
    "6876": {
      "jump": "i",
      "op": "JUMP"
    },
    "6877": {
      "op": "JUMPDEST"
    },
    "6878": {
      "op": "SWAP2"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "op": "SWAP3"
    },
    "6882": {
      "op": "SWAP6"
    },
    "6883": {
      "op": "SWAP9"
    },
    "6884": {
      "op": "SWAP2"
    },
    "6885": {
      "op": "SWAP5"
    },
    "6886": {
      "op": "SWAP8"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "op": "SWAP3"
    },
    "6889": {
      "op": "SWAP6"
    },
    "6890": {
      "op": "POP"
    },
    "6891": {
      "jump": "o",
      "op": "JUMP"
    },
    "6892": {
      "op": "JUMPDEST"
    },
    "6893": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "6926": {
      "op": "DUP2"
    },
    "6927": {
      "op": "MSTORE"
    },
    "6928": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6963": {
      "op": "DUP3"
    },
    "6964": {
      "op": "ADD"
    },
    "6965": {
      "op": "MSTORE"
    },
    "6966": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6987": {
      "op": "SHL"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6990": {
      "op": "DUP3"
    },
    "6991": {
      "op": "ADD"
    },
    "6992": {
      "op": "MSTORE"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "6995": {
      "op": "ADD"
    },
    "6996": {
      "op": "SWAP1"
    },
    "6997": {
      "jump": "o",
      "op": "JUMP"
    },
    "6998": {
      "op": "JUMPDEST"
    },
    "6999": {
      "op": "SWAP5"
    },
    "7000": {
      "op": "DUP6"
    },
    "7001": {
      "op": "MSTORE"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7004": {
      "op": "DUP6"
    },
    "7005": {
      "op": "ADD"
    },
    "7006": {
      "op": "SWAP4"
    },
    "7007": {
      "op": "SWAP1"
    },
    "7008": {
      "op": "SWAP4"
    },
    "7009": {
      "op": "MSTORE"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7012": {
      "op": "DUP5"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "op": "SWAP2"
    },
    "7015": {
      "op": "SWAP1"
    },
    "7016": {
      "op": "SWAP2"
    },
    "7017": {
      "op": "MSTORE"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7020": {
      "op": "DUP4"
    },
    "7021": {
      "op": "ADD"
    },
    "7022": {
      "op": "MSTORE"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7029": {
      "op": "SHL"
    },
    "7030": {
      "op": "SUB"
    },
    "7031": {
      "op": "AND"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7034": {
      "op": "DUP3"
    },
    "7035": {
      "op": "ADD"
    },
    "7036": {
      "op": "MSTORE"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7039": {
      "op": "ADD"
    },
    "7040": {
      "op": "SWAP1"
    },
    "7041": {
      "jump": "o",
      "op": "JUMP"
    },
    "7042": {
      "op": "JUMPDEST"
    },
    "7043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7045": {
      "op": "DUP3"
    },
    "7046": {
      "op": "MLOAD"
    },
    "7047": {
      "op": "PUSH2",
      "value": "0x1B94"
    },
    "7050": {
      "op": "DUP2"
    },
    "7051": {
      "op": "DUP5"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7054": {
      "op": "DUP8"
    },
    "7055": {
      "op": "ADD"
    },
    "7056": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "7059": {
      "jump": "i",
      "op": "JUMP"
    },
    "7060": {
      "op": "JUMPDEST"
    },
    "7061": {
      "op": "SWAP2"
    },
    "7062": {
      "op": "SWAP1"
    },
    "7063": {
      "op": "SWAP2"
    },
    "7064": {
      "op": "ADD"
    },
    "7065": {
      "op": "SWAP3"
    },
    "7066": {
      "op": "SWAP2"
    },
    "7067": {
      "op": "POP"
    },
    "7068": {
      "op": "POP"
    },
    "7069": {
      "jump": "o",
      "op": "JUMP"
    },
    "7070": {
      "op": "JUMPDEST"
    },
    "7071": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7076": {
      "op": "SHL"
    },
    "7077": {
      "op": "DUP2"
    },
    "7078": {
      "op": "MSTORE"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7081": {
      "op": "DUP2"
    },
    "7082": {
      "op": "ADD"
    },
    "7083": {
      "op": "SWAP3"
    },
    "7084": {
      "op": "SWAP1"
    },
    "7085": {
      "op": "SWAP3"
    },
    "7086": {
      "op": "MSTORE"
    },
    "7087": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7089": {
      "op": "DUP3"
    },
    "7090": {
      "op": "ADD"
    },
    "7091": {
      "op": "MSTORE"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "7094": {
      "op": "ADD"
    },
    "7095": {
      "op": "SWAP1"
    },
    "7096": {
      "jump": "o",
      "op": "JUMP"
    },
    "7097": {
      "op": "JUMPDEST"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7102": {
      "op": "DUP3"
    },
    "7103": {
      "op": "DUP5"
    },
    "7104": {
      "op": "SUB"
    },
    "7105": {
      "op": "SLT"
    },
    "7106": {
      "op": "ISZERO"
    },
    "7107": {
      "op": "PUSH2",
      "value": "0x1BCB"
    },
    "7110": {
      "op": "JUMPI"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7113": {
      "op": "DUP1"
    },
    "7114": {
      "op": "REVERT"
    },
    "7115": {
      "op": "JUMPDEST"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "op": "MLOAD"
    },
    "7118": {
      "op": "SWAP2"
    },
    "7119": {
      "op": "SWAP1"
    },
    "7120": {
      "op": "POP"
    },
    "7121": {
      "jump": "o",
      "op": "JUMP"
    },
    "7122": {
      "op": "JUMPDEST"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7125": {
      "op": "DUP3"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7128": {
      "op": "DUP4"
    },
    "7129": {
      "op": "ADD"
    },
    "7130": {
      "op": "SLT"
    },
    "7131": {
      "op": "PUSH2",
      "value": "0x1BE3"
    },
    "7134": {
      "op": "JUMPI"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7137": {
      "op": "DUP1"
    },
    "7138": {
      "op": "REVERT"
    },
    "7139": {
      "op": "JUMPDEST"
    },
    "7140": {
      "op": "DUP2"
    },
    "7141": {
      "op": "MLOAD"
    },
    "7142": {
      "op": "PUSH2",
      "value": "0x1BF1"
    },
    "7145": {
      "op": "PUSH2",
      "value": "0x14E0"
    },
    "7148": {
      "op": "DUP3"
    },
    "7149": {
      "op": "PUSH2",
      "value": "0x1499"
    },
    "7152": {
      "jump": "i",
      "op": "JUMP"
    },
    "7153": {
      "op": "JUMPDEST"
    },
    "7154": {
      "op": "DUP2"
    },
    "7155": {
      "op": "DUP2"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "DUP5"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7160": {
      "op": "DUP4"
    },
    "7161": {
      "op": "DUP7"
    },
    "7162": {
      "op": "ADD"
    },
    "7163": {
      "op": "ADD"
    },
    "7164": {
      "op": "GT"
    },
    "7165": {
      "op": "ISZERO"
    },
    "7166": {
      "op": "PUSH2",
      "value": "0x1C06"
    },
    "7169": {
      "op": "JUMPI"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7172": {
      "op": "DUP1"
    },
    "7173": {
      "op": "REVERT"
    },
    "7174": {
      "op": "JUMPDEST"
    },
    "7175": {
      "op": "PUSH2",
      "value": "0x1C17"
    },
    "7178": {
      "op": "DUP3"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7181": {
      "op": "DUP4"
    },
    "7182": {
      "op": "ADD"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7185": {
      "op": "DUP8"
    },
    "7186": {
      "op": "ADD"
    },
    "7187": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "7190": {
      "jump": "i",
      "op": "JUMP"
    },
    "7191": {
      "op": "JUMPDEST"
    },
    "7192": {
      "op": "SWAP5"
    },
    "7193": {
      "op": "SWAP4"
    },
    "7194": {
      "op": "POP"
    },
    "7195": {
      "op": "POP"
    },
    "7196": {
      "op": "POP"
    },
    "7197": {
      "op": "POP"
    },
    "7198": {
      "jump": "o",
      "op": "JUMP"
    },
    "7199": {
      "op": "JUMPDEST"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7202": {
      "op": "DUP1"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7205": {
      "op": "DUP1"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7210": {
      "op": "DUP7"
    },
    "7211": {
      "op": "DUP9"
    },
    "7212": {
      "op": "SUB"
    },
    "7213": {
      "op": "SLT"
    },
    "7214": {
      "op": "ISZERO"
    },
    "7215": {
      "op": "PUSH2",
      "value": "0x1C37"
    },
    "7218": {
      "op": "JUMPI"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7221": {
      "op": "DUP1"
    },
    "7222": {
      "op": "REVERT"
    },
    "7223": {
      "op": "JUMPDEST"
    },
    "7224": {
      "op": "DUP6"
    },
    "7225": {
      "op": "MLOAD"
    },
    "7226": {
      "op": "PUSH2",
      "value": "0x1C42"
    },
    "7229": {
      "op": "DUP2"
    },
    "7230": {
      "op": "PUSH2",
      "value": "0x142A"
    },
    "7233": {
      "jump": "i",
      "op": "JUMP"
    },
    "7234": {
      "op": "JUMPDEST"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7237": {
      "op": "DUP8"
    },
    "7238": {
      "op": "ADD"
    },
    "7239": {
      "op": "MLOAD"
    },
    "7240": {
      "op": "SWAP1"
    },
    "7241": {
      "op": "SWAP6"
    },
    "7242": {
      "op": "POP"
    },
    "7243": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7252": {
      "op": "DUP2"
    },
    "7253": {
      "op": "GT"
    },
    "7254": {
      "op": "ISZERO"
    },
    "7255": {
      "op": "PUSH2",
      "value": "0x1C5F"
    },
    "7258": {
      "op": "JUMPI"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7261": {
      "op": "DUP1"
    },
    "7262": {
      "op": "REVERT"
    },
    "7263": {
      "op": "JUMPDEST"
    },
    "7264": {
      "op": "PUSH2",
      "value": "0x1C6B"
    },
    "7267": {
      "op": "DUP9"
    },
    "7268": {
      "op": "DUP3"
    },
    "7269": {
      "op": "DUP10"
    },
    "7270": {
      "op": "ADD"
    },
    "7271": {
      "op": "PUSH2",
      "value": "0x1BD2"
    },
    "7274": {
      "jump": "i",
      "op": "JUMP"
    },
    "7275": {
      "op": "JUMPDEST"
    },
    "7276": {
      "op": "SWAP5"
    },
    "7277": {
      "op": "POP"
    },
    "7278": {
      "op": "POP"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7281": {
      "op": "DUP7"
    },
    "7282": {
      "op": "ADD"
    },
    "7283": {
      "op": "MLOAD"
    },
    "7284": {
      "op": "SWAP3"
    },
    "7285": {
      "op": "POP"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7288": {
      "op": "DUP7"
    },
    "7289": {
      "op": "ADD"
    },
    "7290": {
      "op": "MLOAD"
    },
    "7291": {
      "op": "PUSH2",
      "value": "0x1C83"
    },
    "7294": {
      "op": "DUP2"
    },
    "7295": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "7298": {
      "jump": "i",
      "op": "JUMP"
    },
    "7299": {
      "op": "JUMPDEST"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7302": {
      "op": "DUP8"
    },
    "7303": {
      "op": "ADD"
    },
    "7304": {
      "op": "MLOAD"
    },
    "7305": {
      "op": "SWAP1"
    },
    "7306": {
      "op": "SWAP3"
    },
    "7307": {
      "op": "POP"
    },
    "7308": {
      "op": "PUSH2",
      "value": "0x1C94"
    },
    "7311": {
      "op": "DUP2"
    },
    "7312": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "7315": {
      "jump": "i",
      "op": "JUMP"
    },
    "7316": {
      "op": "JUMPDEST"
    },
    "7317": {
      "op": "DUP1"
    },
    "7318": {
      "op": "SWAP2"
    },
    "7319": {
      "op": "POP"
    },
    "7320": {
      "op": "POP"
    },
    "7321": {
      "op": "SWAP3"
    },
    "7322": {
      "op": "SWAP6"
    },
    "7323": {
      "op": "POP"
    },
    "7324": {
      "op": "SWAP3"
    },
    "7325": {
      "op": "SWAP6"
    },
    "7326": {
      "op": "SWAP1"
    },
    "7327": {
      "op": "SWAP4"
    },
    "7328": {
      "op": "POP"
    },
    "7329": {
      "jump": "o",
      "op": "JUMP"
    },
    "7330": {
      "op": "JUMPDEST"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7335": {
      "op": "DUP3"
    },
    "7336": {
      "op": "DUP5"
    },
    "7337": {
      "op": "SUB"
    },
    "7338": {
      "op": "SLT"
    },
    "7339": {
      "op": "ISZERO"
    },
    "7340": {
      "op": "PUSH2",
      "value": "0x1CB4"
    },
    "7343": {
      "op": "JUMPI"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7346": {
      "op": "DUP1"
    },
    "7347": {
      "op": "REVERT"
    },
    "7348": {
      "op": "JUMPDEST"
    },
    "7349": {
      "op": "DUP2"
    },
    "7350": {
      "op": "MLOAD"
    },
    "7351": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7360": {
      "op": "DUP2"
    },
    "7361": {
      "op": "GT"
    },
    "7362": {
      "op": "ISZERO"
    },
    "7363": {
      "op": "PUSH2",
      "value": "0x1CCB"
    },
    "7366": {
      "op": "JUMPI"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7369": {
      "op": "DUP1"
    },
    "7370": {
      "op": "REVERT"
    },
    "7371": {
      "op": "JUMPDEST"
    },
    "7372": {
      "op": "PUSH2",
      "value": "0x1C17"
    },
    "7375": {
      "op": "DUP5"
    },
    "7376": {
      "op": "DUP3"
    },
    "7377": {
      "op": "DUP6"
    },
    "7378": {
      "op": "ADD"
    },
    "7379": {
      "op": "PUSH2",
      "value": "0x1BD2"
    },
    "7382": {
      "jump": "i",
      "op": "JUMP"
    },
    "7383": {
      "op": "JUMPDEST"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7388": {
      "op": "DUP3"
    },
    "7389": {
      "op": "DUP5"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "op": "SLT"
    },
    "7392": {
      "op": "ISZERO"
    },
    "7393": {
      "op": "PUSH2",
      "value": "0x1CE9"
    },
    "7396": {
      "op": "JUMPI"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7399": {
      "op": "DUP1"
    },
    "7400": {
      "op": "REVERT"
    },
    "7401": {
      "op": "JUMPDEST"
    },
    "7402": {
      "op": "DUP2"
    },
    "7403": {
      "op": "MLOAD"
    },
    "7404": {
      "op": "PUSH2",
      "value": "0x1773"
    },
    "7407": {
      "op": "DUP2"
    },
    "7408": {
      "op": "PUSH2",
      "value": "0x17CE"
    },
    "7411": {
      "jump": "i",
      "op": "JUMP"
    },
    "7412": {
      "op": "JUMPDEST"
    },
    "7413": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7420": {
      "op": "SHL"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7423": {
      "op": "MSTORE"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7428": {
      "op": "MSTORE"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7433": {
      "op": "REVERT"
    },
    "7434": {
      "op": "JUMPDEST"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7439": {
      "op": "NOT"
    },
    "7440": {
      "op": "DUP3"
    },
    "7441": {
      "op": "EQ"
    },
    "7442": {
      "op": "ISZERO"
    },
    "7443": {
      "op": "PUSH2",
      "value": "0x1D2C"
    },
    "7446": {
      "op": "JUMPI"
    },
    "7447": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7454": {
      "op": "SHL"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7457": {
      "op": "MSTORE"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7462": {
      "op": "MSTORE"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7467": {
      "op": "REVERT"
    },
    "7468": {
      "op": "JUMPDEST"
    },
    "7469": {
      "op": "POP"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7472": {
      "op": "ADD"
    },
    "7473": {
      "op": "SWAP1"
    },
    "7474": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "01ecb8e8130e7d5d6878b08ff562f507603ef9d6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"../../interfaces/ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract CLHouseApi {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            signR := mload( add( _signature, 32 ) )\n            // second 32 bytes\n            signS := mload( add( _signature, 64 ) )\n            // final byte (first byte of the next 32 bytes)\n            signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isUser true if is User\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isUser,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdUser( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strUser memory houseUser;\n\n        (   houseUser.walletAddr,\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n        require( true == houseUser.isUser  , \"Is not a user\" );\n\n        return (\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager\n        );\n    }\n\n    /// @notice The list of all users address\n    /// @param _houseAddr address of the CLH\n    /// @return arrUsers array with list of users\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strUser[] memory arrUsers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 numUsers = daoCLH.numUsers( );\n        uint256 arrUsersLength = daoCLH.GetArrUsersLength();\n        strUser[] memory _arrUsers = new strUser[] ( numUsers );\n\n        uint256 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrUsersLength ; uid++ ) {\n            strUser memory houseUser;\n\n            (   houseUser.walletAddr,\n                houseUser.name,\n                houseUser.balance,\n                houseUser.isUser,\n                houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n            if( true == houseUser.isUser ){\n                _arrUsers[ index ] = houseUser;\n                index++;\n            }\n        }\n        return _arrUsers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return houseOpen True if is Open\n    /// @return numUsers Current users of a CLH\n    /// @return numManagers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n    /// @return govRuleMaxUsers Max of all users (including managers)\n    /// @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            bool houseOpen,\n            uint256 numUsers,\n            uint256 numManagers,\n            uint256 govRuleApprovPercentage,\n            uint256 govRuleMaxUsers,\n            uint256 govRuleMaxManagers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.houseOpen(),\n            daoCLH.numUsers(),\n            daoCLH.numManagers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxUsers(),\n            daoCLH.govRuleMaxManagers()\n        );\n    }\n\n\n    function SignerOCInvit(\n        bool _acceptance,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCDelUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCDELUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCRequest(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256 _govRuleMaxUsers,\n        uint256 _govRuleMaxManagers,\n        uint256 _govRuleApprovPercentage,\n        address _whiteListWallets,\n        address _addrCLF,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _addrCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRuleMaxUsers,\n                _govRuleMaxManagers,\n                _govRuleApprovPercentage,\n                _whiteListWallets\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "223:10627:46:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/APICLH/CLHouseApi.sol",
  "type": "contract"
}