{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "houseOpen",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxManagers",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUser",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strUser[]",
          "name": "arrUsers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCBulkVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCDelUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whiteListNFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_whiteListWallets",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addrCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "46": "contracts/APICLH/CLHouseApi.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "61": "interfaces/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/APICLH/CLHouseApi.sol",
    "exportedSymbols": {
      "CLHouseApi": [
        970
      ],
      "DebugDLGTCLL": [
        9603
      ],
      "ICLHouse": [
        6006
      ],
      "InvalidGovernanceType": [
        9597
      ],
      "__CLHOUSE_VERSION__": [
        9606
      ],
      "__CONTRACT_NAME_HASH__": [
        9632
      ],
      "__CONTRACT_VERSION_HASH__": [
        9640
      ],
      "__GOV_COMMITTEE__": [
        9622
      ],
      "__GOV_DICTATORSHIP__": [
        9617
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9627
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9648
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9672
      ],
      "__STR_OCDELUSER_HASH__": [
        9688
      ],
      "__STR_OCINVIT_HASH__": [
        9656
      ],
      "__STR_OCNEWCLH_HASH__": [
        9704
      ],
      "__STR_OCNEWUSER_HASH__": [
        9680
      ],
      "__STR_OCREQUEST_HASH__": [
        9696
      ],
      "__STR_OCVOTE_HASH__": [
        9664
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9612
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9609
      ],
      "assetsEvent": [
        9718
      ],
      "eCLC": [
        9742
      ],
      "gRule": [
        9736
      ],
      "proposalEvent": [
        9722
      ],
      "proposalType": [
        9732
      ],
      "strDataGovRules": [
        9799
      ],
      "strDataTxAssets": [
        9796
      ],
      "strDataUser": [
        9787
      ],
      "strProposal": [
        9773
      ],
      "strUser": [
        9753
      ],
      "strVote": [
        9780
      ],
      "userEvent": [
        9711
      ]
    },
    "id": 971,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:46"
      },
      {
        "absolutePath": "interfaces/ICLHouse.sol",
        "file": "../../interfaces/ICLHouse.sol",
        "id": 229,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 6007,
        "src": "58:39:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CLHouseApi",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 230,
          "nodeType": "StructuredDocumentation",
          "src": "99:124:46",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 970,
        "linearizedBaseContracts": [
          970
        ],
        "name": "CLHouseApi",
        "nameLocation": "232:10:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "598:546:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 241,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "617:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "617:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "638:2:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "617:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "642:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "608:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "608:58:46"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "685:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "677:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "677:13:46"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "708:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "700:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:13:46"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "729:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "723:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "723:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "723:11:46"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "754:324:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "823:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "856:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "839:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "839:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "832:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "823:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "906:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "927:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "939:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "922:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "922:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "915:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "906:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1018:50:46",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1048:10:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1060:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1043:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1043:21:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1036:5:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1036:30:46"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1027:4:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1027:41:46"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "1018:5:46"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1048:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "844:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "927:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 249,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "823:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 252,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "906:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 255,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1018:5:46",
                      "valueSize": 1
                    }
                  ],
                  "id": 257,
                  "nodeType": "InlineAssembly",
                  "src": "745:333:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 259,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1106:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 260,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "1116:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 261,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1123:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 262,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "1130:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 258,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1095:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "1088:49:46"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "250:197:46",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "461:11:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "491:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "482:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "522:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "509:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:66:46"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "584:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:11:46"
            },
            "scope": 970,
            "src": "452:692:46",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "1765:601:46",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1784:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1775:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6006",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 282,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6006,
                          "src": "1775:8:46"
                        },
                        "referencedDeclaration": 6006,
                        "src": "1775:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6006",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "1803:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6006,
                      "src": "1793:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6006_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6006",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1775:40:46"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1834:3:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1826:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1826:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 293,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "1858:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 291,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1840:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6006",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5879,
                      "src": "1840:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:45:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1891:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 298,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "1896:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1891:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1902:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1882:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:43:46"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "houseUser",
                      "nameLocation": "1951:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1936:24:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                        "typeString": "struct strUser"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "strUser",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9753,
                          "src": "1936:7:46"
                        },
                        "referencedDeclaration": 9753,
                        "src": "1936:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strUser_$9753_storage_ptr",
                          "typeString": "struct strUser"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1936:24:46"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 307,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1975:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9744,
                          "src": "1975:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 310,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2009:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9746,
                          "src": "2009:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 312,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2037:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9748,
                          "src": "2037:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 314,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2068:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9750,
                          "src": "2068:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 316,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2098:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9752,
                          "src": "2098:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 318,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1971:148:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 321,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "2139:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 319,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "2122:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$6006",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5821,
                        "src": "2122:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2122:22:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1971:173:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:173:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2164:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 327,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2172:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9750,
                          "src": "2172:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2164:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4973206e6f7420612075736572",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        },
                        "value": "Is not a user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2155:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:54:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:54:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 333,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2241:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9746,
                        "src": "2241:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 335,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2269:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9748,
                        "src": "2269:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 337,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2300:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9750,
                        "src": "2300:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 339,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2330:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9752,
                        "src": "2330:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 341,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2227:132:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 281,
                  "id": 342,
                  "nodeType": "Return",
                  "src": "2220:139:46"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "1150:346:46",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isUser true if is User\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1510:20:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1548:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1540:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1576:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1568:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:63:46"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1667:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1653:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1690:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1685:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "isUser",
                  "nameLocation": "1716:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1711:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1741:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1736:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:121:46"
            },
            "scope": 970,
            "src": "1501:865:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "2672:735:46",
              "statements": [
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2691:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2682:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6006",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6006,
                          "src": "2682:8:46"
                        },
                        "referencedDeclaration": 6006,
                        "src": "2682:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6006",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "2710:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 357,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6006,
                      "src": "2700:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6006_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6006",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2682:40:46"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "numUsers",
                      "nameLocation": "2741:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2733:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2733:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 363,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2752:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6006",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5786,
                      "src": "2752:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:18:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2733:37:46"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "arrUsersLength",
                      "nameLocation": "2788:14:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2780:22:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 369,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2805:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6006",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrUsersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5904,
                      "src": "2805:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:51:46"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "_arrUsers",
                      "nameLocation": "2858:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2841:26:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9753_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strUser[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 375,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 374,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9753,
                            "src": "2841:7:46"
                          },
                          "referencedDeclaration": 9753,
                          "src": "2841:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9753_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 376,
                        "nodeType": "ArrayTypeName",
                        "src": "2841:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9753_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "numUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2886:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2870:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strUser_$9753_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strUser memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 379,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 378,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9753,
                            "src": "2874:7:46"
                          },
                          "referencedDeclaration": 9753,
                          "src": "2874:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9753_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 380,
                        "nodeType": "ArrayTypeName",
                        "src": "2874:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9753_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9753_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2841:55:46"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2915:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2907:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2907:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2923:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2907:17:46"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "2990:385:46",
                    "statements": [
                      {
                        "assignments": [
                          401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 401,
                            "mutability": "mutable",
                            "name": "houseUser",
                            "nameLocation": "3019:9:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 436,
                            "src": "3004:24:46",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                              "typeString": "struct strUser"
                            },
                            "typeName": {
                              "id": 400,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 399,
                                "name": "strUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9753,
                                "src": "3004:7:46"
                              },
                              "referencedDeclaration": 9753,
                              "src": "3004:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9753_storage_ptr",
                                "typeString": "struct strUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 402,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3004:24:46"
                      },
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 403,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3047:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9744,
                                "src": "3047:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 406,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3085:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9746,
                                "src": "3085:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 408,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3117:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9748,
                                "src": "3117:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 410,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3152:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9750,
                                "src": "3152:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 412,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3186:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9752,
                                "src": "3186:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 414,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3043:164:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 417,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "3227:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 415,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3210:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$6006",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5821,
                              "src": "3210:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3210:22:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "3043:189:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "3043:189:46"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3251:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 422,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "3259:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                "typeString": "struct strUser memory"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9750,
                            "src": "3259:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3251:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 435,
                        "nodeType": "IfStatement",
                        "src": "3247:118:46",
                        "trueBody": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "3277:88:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 425,
                                    "name": "_arrUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "3295:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strUser_$9753_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strUser memory[] memory"
                                    }
                                  },
                                  "id": 427,
                                  "indexExpression": {
                                    "id": 426,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 386,
                                    "src": "3306:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3295:18:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 428,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3316:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "src": "3295:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strUser_$9753_memory_ptr",
                                  "typeString": "struct strUser memory"
                                }
                              },
                              "id": 430,
                              "nodeType": "ExpressionStatement",
                              "src": "3295:30:46"
                            },
                            {
                              "expression": {
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3343:7:46",
                                "subExpression": {
                                  "id": 431,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "3343:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "3343:7:46"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 393,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "2959:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 394,
                      "name": "arrUsersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2965:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2959:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "initializationExpression": {
                    "assignments": [
                      390
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2949:3:46",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "2941:11:46",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2941:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 392,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2955:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2941:15:46"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2982:5:46",
                      "subExpression": {
                        "id": 396,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "2982:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 398,
                    "nodeType": "ExpressionStatement",
                    "src": "2982:5:46"
                  },
                  "nodeType": "ForStatement",
                  "src": "2936:439:46"
                },
                {
                  "expression": {
                    "id": 438,
                    "name": "_arrUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 377,
                    "src": "3391:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9753_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "functionReturnParameters": 353,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "3384:16:46"
                }
              ]
            },
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "2372:136:46",
              "text": "@notice The list of all users address\n @param _houseAddr address of the CLH\n @return arrUsers array with list of users"
            },
            "functionSelector": "b698be8d",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2522:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2556:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2548:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:34:46"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "arrUsers",
                  "nameLocation": "2649:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2632:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strUser_$9753_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 350,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 349,
                        "name": "strUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9753,
                        "src": "2632:7:46"
                      },
                      "referencedDeclaration": 9753,
                      "src": "2632:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9753_storage_ptr",
                        "typeString": "struct strUser"
                      }
                    },
                    "id": 351,
                    "nodeType": "ArrayTypeName",
                    "src": "2632:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9753_storage_$dyn_storage_ptr",
                      "typeString": "struct strUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2618:49:46"
            },
            "scope": 970,
            "src": "2513:894:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "4508:419:46",
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4527:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4518:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$6006",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 465,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6006,
                          "src": "4518:8:46"
                        },
                        "referencedDeclaration": 6006,
                        "src": "4518:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$6006",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4546:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 468,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6006,
                      "src": "4536:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$6006_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$6006",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4518:40:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 472,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4589:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5776,
                          "src": "4589:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:19:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 475,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4622:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5781,
                          "src": "4622:29:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4622:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 478,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4667:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5766,
                          "src": "4667:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 481,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4702:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "houseOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5771,
                          "src": "4702:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4702:18:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 484,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4734:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5786,
                          "src": "4734:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4734:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 487,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4765:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5791,
                          "src": "4765:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4765:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 490,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4799:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5796,
                          "src": "4799:30:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4799:32:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 493,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4845:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5801,
                          "src": "4845:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4845:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 496,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4883:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$6006",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5806,
                          "src": "4883:25:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4883:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 499,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4575:345:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string memory,bytes32,bool,bool,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "4569:351:46"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "3413:642:46",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return houseOpen True if is Open\n @return numUsers Current users of a CLH\n @return numManagers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n @return govRuleMaxUsers Max of all users (including managers)\n @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "4069:18:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4105:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4097:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4087:34:46"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "4195:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4181:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "4227:22:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4219:30:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4219:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "4268:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4263:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "houseOpen",
                  "nameLocation": "4299:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4294:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "numUsers",
                  "nameLocation": "4330:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4322:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "numManagers",
                  "nameLocation": "4360:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4352:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4393:23:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4385:31:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "govRuleMaxUsers",
                  "nameLocation": "4438:15:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4430:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagers",
                  "nameLocation": "4475:18:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4467:26:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:336:46"
            },
            "scope": 970,
            "src": "4060:867:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5104:592:46",
              "statements": [
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5122:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5114:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 513,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5114:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 518,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "5192:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 519,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "5235:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 520,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "5275:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 521,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5318:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "5318:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 523,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "5349:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 516,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5164:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5164:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5164:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 515,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5141:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5114:269:46"
                },
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "5402:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5394:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5394:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9656,
                            "src": "5463:20:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 533,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5501:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 530,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5435:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5435:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5435:91:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 529,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5412:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:124:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5394:142:46"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5555:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5547:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5547:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5595:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 543,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "5607:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 544,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "5625:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 540,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5577:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5577:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5577:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 539,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5566:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5547:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 549,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "5667:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 550,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "5677:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 548,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5654:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 512,
                  "id": 552,
                  "nodeType": "Return",
                  "src": "5647:42:46"
                }
              ]
            },
            "functionSelector": "9f6fd7ab",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "4943:13:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "4971:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4966:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5000:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4992:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5033:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5020:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:93:46"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5090:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:11:46"
            },
            "scope": 970,
            "src": "4934:762:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "5929:678:46",
              "statements": [
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5947:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "5939:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5939:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 574,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "6017:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 575,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "6060:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 576,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "6100:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 577,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6143:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6143:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 579,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "6174:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5989:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5989:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 571,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5966:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5939:269:46"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "6227:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6219:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6219:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 588,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9664,
                            "src": "6288:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 589,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "6325:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 590,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "6350:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 560,
                                    "src": "6405:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 592,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6387:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6387:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6387:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 591,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6376:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6376:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 586,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6260:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6260:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6260:177:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 585,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6237:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6237:210:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6219:228:46"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "6466:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6458:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6458:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6506:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 606,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "6518:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 607,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6536:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 603,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6488:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6488:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6488:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 602,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6477:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6477:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "6578:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 613,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "6588:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 611,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "6565:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 568,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "6558:42:46"
                }
              ]
            },
            "functionSelector": "89ab062a",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "5712:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "5739:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5734:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5734:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "5761:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5756:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "5793:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5779:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5779:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5825:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5817:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5858:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5845:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:150:46"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5915:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5913:11:46"
            },
            "scope": 970,
            "src": "5703:904:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "6857:716:46",
              "statements": [
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "6875:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "6867:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6867:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 638,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "6945:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 639,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "6988:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 640,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "7028:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 641,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7071:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "7071:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 643,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "7102:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 636,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6917:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6917:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6917:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 635,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6894:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6867:269:46"
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7155:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "7147:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7147:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 668,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 652,
                            "name": "__STR_OCBULKVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9672,
                            "src": "7216:23:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 656,
                                    "name": "_propIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "7286:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 654,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7268:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7268:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7268:28:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 653,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7257:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7257:41:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 659,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "7316:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 663,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "7371:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 661,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7353:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7353:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7353:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 660,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7342:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7342:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 650,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7188:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7188:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:215:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 649,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7165:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7165:248:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7147:266:46"
                },
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7432:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "7424:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7424:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 679,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7472:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 675,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "7484:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 676,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "7502:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 672,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7454:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7454:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7454:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 671,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7443:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7443:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7424:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "7544:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 682,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "7554:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 680,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7531:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7531:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "7524:42:46"
                }
              ]
            },
            "functionSelector": "f0b00c9f",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCBulkVote",
            "nameLocation": "6623:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_propIds",
                  "nameLocation": "6666:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6649:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 618,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6649:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "nodeType": "ArrayTypeName",
                    "src": "6649:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "6689:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6684:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "6721:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6707:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6753:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6745:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6745:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6786:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6773:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6639:163:46"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6843:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6841:11:46"
            },
            "scope": 970,
            "src": "6614:959:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "7873:769:46",
              "statements": [
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "7891:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "7883:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7883:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 710,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "7961:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 711,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "8004:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 712,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "8044:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 713,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8087:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8087:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 715,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "8118:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 708,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7933:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7933:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7933:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 707,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7910:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7883:269:46"
                },
                {
                  "assignments": [
                    720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 720,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8171:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "8163:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 719,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8163:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 742,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 724,
                            "name": "__STR_OCNEWUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9680,
                            "src": "8232:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 725,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "8272:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 729,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "8330:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 727,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8312:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8312:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8312:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 726,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8301:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8301:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 735,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 692,
                                    "src": "8386:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 733,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8368:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8368:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8368:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 732,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8357:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8357:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 738,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "8420:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 739,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "8448:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 722,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8204:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8204:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8204:268:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 721,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8181:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8181:301:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8163:319:46"
                },
                {
                  "assignments": [
                    744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 744,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8501:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "8493:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 743,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8493:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 753,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8541:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 749,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "8553:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 750,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8571:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 746,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8523:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8523:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8523:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 745,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8512:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8512:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8493:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "8613:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 756,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8623:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 754,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8600:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 704,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "8593:42:46"
                }
              ]
            },
            "functionSelector": "f240c7e9",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewUser",
            "nameLocation": "7589:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7622:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7614:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7614:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7657:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7643:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7643:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7686:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7672:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "7713:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7708:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7741:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7733:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7733:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7769:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7761:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7802:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7789:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7789:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:214:46"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7859:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7859:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7857:11:46"
            },
            "scope": 970,
            "src": "7580:1062:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "8888:685:46",
              "statements": [
                {
                  "assignments": [
                    776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 776,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8906:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "8898:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 775,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8898:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 780,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "8976:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 781,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "9019:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 782,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "9059:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 783,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9102:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9102:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 785,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "9133:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 778,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8948:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8948:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8948:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 777,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8925:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8898:269:46"
                },
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "9186:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "9178:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9178:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 794,
                            "name": "__STR_OCDELUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "9247:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 795,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "9287:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 799,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
                                    "src": "9345:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 797,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9327:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9327:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9327:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 796,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9316:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9316:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 802,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "9379:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 792,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9219:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9219:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9219:184:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 791,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9196:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9196:217:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9178:235:46"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9432:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "9424:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9424:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9472:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 812,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "9484:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 813,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "9502:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 809,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9454:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9454:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9454:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 808,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9443:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9424:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 818,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "9544:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 819,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "9554:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 817,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9531:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9531:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 774,
                  "id": 821,
                  "nodeType": "Return",
                  "src": "9524:42:46"
                }
              ]
            },
            "functionSelector": "349dc296",
            "id": 823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCDelUser",
            "nameLocation": "8658:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "8691:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8683:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8683:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8726:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8712:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8712:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8756:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8748:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8748:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "8784:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8776:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8817:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8804:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8804:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8673:160:46"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8874:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8874:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8872:11:46"
            },
            "scope": 970,
            "src": "8649:924:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "9791:684:46",
              "statements": [
                {
                  "assignments": [
                    837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9809:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "9801:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9801:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 849,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 841,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "9879:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 842,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "9922:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 843,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "9962:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 844,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10005:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "10005:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 846,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "10036:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 839,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9851:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9851:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9851:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 838,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9828:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9828:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9801:269:46"
                },
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "10089:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "10081:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10081:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 870,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 855,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9696,
                            "src": "10150:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 859,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 825,
                                    "src": "10219:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 857,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10201:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10201:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10201:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 856,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10190:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10190:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 865,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 827,
                                    "src": "10275:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 863,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10257:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10257:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10257:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 862,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10246:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10246:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 853,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10122:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10122:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10122:183:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 852,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10099:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10099:216:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10081:234:46"
                },
                {
                  "assignments": [
                    872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "10334:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "10326:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10326:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10374:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 877,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "10386:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 878,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "10404:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 874,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10356:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10356:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10356:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 873,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10345:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10345:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10326:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "10446:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 884,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "10456:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 882,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "10433:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10433:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "10426:42:46"
                }
              ]
            },
            "functionSelector": "7b3bb156",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequest",
            "nameLocation": "9589:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9628:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9614:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9657:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9643:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9643:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "9687:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9679:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9679:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9720:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9707:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9707:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9604:132:46"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9777:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9777:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:11:46"
            },
            "scope": 970,
            "src": "9580:895:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "10918:958:46",
              "statements": [
                {
                  "assignments": [
                    916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 916,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "10936:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "10928:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 915,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10928:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 928,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 920,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9648,
                            "src": "11006:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 921,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9632,
                            "src": "11049:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 922,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9640,
                            "src": "11089:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 923,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11132:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "11132:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 925,
                            "name": "_addrCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "11163:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 918,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10978:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10978:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10978:207:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 917,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10955:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10955:240:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10928:267:46"
                },
                {
                  "assignments": [
                    930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 930,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "11214:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "11206:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 929,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11206:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 951,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 934,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9704,
                            "src": "11275:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 938,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 890,
                                    "src": "11343:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 936,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11325:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11325:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11325:30:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 935,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11314:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11314:43:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 941,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "11375:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 942,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "11406:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 943,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "11434:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 944,
                            "name": "_govRuleMaxUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "11461:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 945,
                            "name": "_govRuleMaxManagers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "11495:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 946,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "11532:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 947,
                            "name": "_whiteListNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "11574:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 948,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "11605:17:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 932,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11247:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11247:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11247:459:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 931,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11224:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11224:492:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11206:510:46"
                },
                {
                  "assignments": [
                    953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 953,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "11735:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "11727:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 952,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11727:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 962,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11775:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 958,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 916,
                            "src": "11787:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 959,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "11805:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 955,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11757:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11757:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11757:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 954,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11746:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11746:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11727:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 964,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "11847:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 965,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "11857:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 963,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "11834:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11834:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 914,
                  "id": 967,
                  "nodeType": "Return",
                  "src": "11827:42:46"
                }
              ]
            },
            "functionSelector": "8b4bccca",
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "10491:14:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "10529:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10515:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10515:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "10554:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10549:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10549:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "10582:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10577:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10577:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "10610:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10602:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10602:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "_govRuleMaxUsers",
                  "nameLocation": "10637:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10629:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10629:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagers",
                  "nameLocation": "10671:19:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10663:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10663:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "10708:24:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10700:32:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10700:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "_whiteListNFT",
                  "nameLocation": "10750:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10742:21:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10742:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "10781:17:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10773:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10773:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_addrCLF",
                  "nameLocation": "10816:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10808:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10808:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10847:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10834:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10834:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10505:358:46"
            },
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "10904:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10904:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10902:11:46"
            },
            "scope": 970,
            "src": "10482:1394:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 971,
        "src": "223:11655:46",
        "usedErrors": []
      }
    ],
    "src": "32:11846:46"
  },
  "bytecode": "608060405234801561001057600080fd5b50612168806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806389ab062a1161007157806389ab062a1461014f5780638b4bccca146101625780639f6fd7ab14610175578063b698be8d14610188578063f0b00c9f146101a8578063f240c7e9146101bb57600080fd5b8063349dc296146100ae578063622eca77146100de5780637b3bb156146100f157806386abd826146101045780638750bc3e14610127575b600080fd5b6100c16100bc3660046117c0565b6101ce565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c16100ec366004611854565b6103a6565b6100c16100ff36600461189a565b61046a565b610117610112366004611936565b61062f565b6040516100d594939291906119cb565b61013a6101353660046119fc565b6107f4565b6040516100d599989796959493929190611a20565b6100c161015d366004611a8d565b610b9d565b6100c1610170366004611af1565b610cff565b6100c1610183366004611bd2565b610fa5565b61019b6101963660046119fc565b6110f6565b6040516100d59190611c33565b6100c16101b6366004611cd7565b611322565b6100c16101c9366004611dcd565b611479565b6000806040516020016101e090611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206121138339815191529261022c9201611f01565b604051602081830303815290604052805190602001204687604051602001610258959493929190611f1d565b60405160208183030381529060405280519060200120905060006040516020016102d9907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016103019190611f01565b604051602081830303815290604052805190602001208860405160200161034a94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405160208183030381529060405280519060200120905060008282604051602001610377929190611f49565b60405160208183030381529060405280519060200120905061039981866103a6565b9998505050505050505050565b600081516041146103f55760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610455573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161047c90611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926104c89201611f01565b6040516020818303038152906040528051906020012046876040516020016104f4959493929190611f1d565b6040516020818303038152906040528051906020012090506000604051602001610556907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b604051602081830303815290604052805190602001208760405160200161057d9190611f01565b60405160208183030381529060405280519060200120876040516020016105a49190611f01565b60408051601f19818403018152828252805160209182012090830194909452810191909152606081019190915260800160405160208183030381529060405280519060200120905060008282604051602001610601929190611f49565b60405160208183030381529060405280519060200120905061062381866103a6565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611f64565b9050806106ec5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016103ec565b6106f4611699565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa158015610739573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107619190810190611fca565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107cd5760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016103ec565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610845573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086d919081019061204c565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190611f64565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109319190612080565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109939190612080565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190611f64565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a579190611f64565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190611f64565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611f64565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190611f64565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610baf90611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b848301529151919260008051602061211383398151915292610bfb9201611f01565b604051602081830303815290604052805190602001204687604051602001610c27959493929190611f1d565b6040516020818303038152906040528051906020012090506000604051602001610c9a907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610cc39190611f01565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a00161034a565b600080604051602001610d1190611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b848301529151919260008051602061211383398151915292610d5d9201611f01565b604051602081830303815290604052805190602001204687604051602001610d89959493929190611f1d565b6040516020818303038152906040528051906020012090506000604051602001610ead907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c6973744e46542c61646472657373207760a08201526f686974654c69737457616c6c6574732960801b60c082015260d00190565b604051602081830303815290604052805190602001208e604051602001610ed49190611f01565b60408051601f198184030181528282528051602091820120908301939093528101919091528d151560608201528c1515608082015260a081018c905260c081018b905260e081018a905261010081018990526001600160a01b0380891661012083015287166101408201526101600160405160208183030381529060405280519060200120905060008282604051602001610f70929190611f49565b604051602081830303815290604052805190602001209050610f9281866103a6565b9f9e505050505050505050505050505050565b600080604051602001610fb790611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926110039201611f01565b60405160208183030381529060405280519060200120468760405160200161102f959493929190611f1d565b604051602081830303815290604052805190602001209050600060405160200161107c907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f190181528282528051602091820120818401528815158383015281518084038301815260608401909252815191012091506000906110c99084908490608001611f49565b6040516020818303038152906040528051906020012090506110eb81866103a6565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190611f64565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c79190611f64565b90506000826001600160401b038111156111e3576111e36116fd565b60405190808252806020026020018201604052801561121c57816020015b611209611699565b8152602001906001900390816112015790505b509050600060015b8381101561131657611234611699565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a19190810190611fca565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561130357808484815181106112e9576112e961209d565b602002602001018190525082806112ff906120b3565b9350505b508061130e816120b3565b915050611224565b50909695505050505050565b60008060405160200161133490611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926113809201611f01565b6040516020818303038152906040528051906020012046876040516020016113ac959493929190611f1d565b604051602081830303815290604052805190602001209050600060405160200161142a907f7374724f4342756c6b566f74652875696e743235365b5d2070726f704964732c81527f626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6020820152616e2960f01b604082015260420190565b604051602081830303815290604052805190602001208860405160200161145191906120dc565b604051602081830303815290604052805190602001208888604051602001610cc39190611f01565b60008060405160200161148b90611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926114d79201611f01565b604051602081830303815290604052805190602001204687604051602001611503959493929190611f1d565b604051602081830303815290604052805190602001209050600060405160200161159c907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016115c49190611f01565b604051602081830303815290604052805190602001208a6040516020016115eb9190611f01565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e00160405160208183030381529060405280519060200120905060008282604051602001611668929190611f49565b60405160208183030381529060405280519060200120905061168a81866103a6565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b03811681146116ea57600080fd5b50565b80356116f8816116d5565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561173b5761173b6116fd565b604052919050565b60006001600160401b0382111561175c5761175c6116fd565b50601f01601f191660200190565b600082601f83011261177b57600080fd5b813561178e61178982611743565b611713565b8181528460208386010111156117a357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156117d857600080fd5b85356117e3816116d5565b945060208601356001600160401b03808211156117ff57600080fd5b61180b89838a0161176a565b95506040880135945060608801359150611824826116d5565b9092506080870135908082111561183a57600080fd5b506118478882890161176a565b9150509295509295909350565b6000806040838503121561186757600080fd5b8235915060208301356001600160401b0381111561188457600080fd5b6118908582860161176a565b9150509250929050565b600080600080608085870312156118b057600080fd5b84356001600160401b03808211156118c757600080fd5b6118d38883890161176a565b955060208701359150808211156118e957600080fd5b6118f58883890161176a565b945060408701359150611907826116d5565b9092506060860135908082111561191d57600080fd5b5061192a8782880161176a565b91505092959194509250565b6000806040838503121561194957600080fd5b8235611954816116d5565b91506020830135611964816116d5565b809150509250929050565b60005b8381101561198a578181015183820152602001611972565b83811115611999576000848401525b50505050565b600081518084526119b781602086016020860161196f565b601f01601f19169290920160200192915050565b6080815260006119de608083018761199f565b60208301959095525091151560408301521515606090910152919050565b600060208284031215611a0e57600080fd5b8135611a19816116d5565b9392505050565b6000610120808352611a348184018d61199f565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b80151581146116ea57600080fd5b80356116f881611a74565b600080600080600060a08688031215611aa557600080fd5b853594506020860135611ab781611a74565b935060408601356001600160401b0380821115611ad357600080fd5b611adf89838a0161176a565b945060608801359150611824826116d5565b60008060008060008060008060008060006101608c8e031215611b1357600080fd5b6001600160401b03808d351115611b2957600080fd5b611b368e8e358f0161176a565b9b50611b4460208e01611a82565b9a50611b5260408e01611a82565b995060608d0135985060808d0135975060a08d0135965060c08d01359550611b7c60e08e016116ed565b9450611b8b6101008e016116ed565b9350611b9a6101208e016116ed565b9250806101408e01351115611bae57600080fd5b50611bc08d6101408e01358e0161176a565b90509295989b509295989b9093969950565b600080600060608486031215611be757600080fd5b8335611bf281611a74565b92506020840135611c02816116d5565b915060408401356001600160401b03811115611c1d57600080fd5b611c298682870161176a565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611cc957888303603f19018552815180516001600160a01b031684528781015160a089860181905290611c938287018261199f565b838a0151878b01526060808501511515908801526080938401511515939096019290925250509386019390860190600101611c5a565b509098975050505050505050565b600080600080600060a08688031215611cef57600080fd5b85356001600160401b0380821115611d0657600080fd5b818801915088601f830112611d1a57600080fd5b8135602082821115611d2e57611d2e6116fd565b8160051b611d3d828201611713565b928352848101820192828101908d851115611d5757600080fd5b958301955b84871015611d7557863582529583019590830190611d5c565b9a50611d859150508a8201611a82565b975050506040880135915080821115611d9d57600080fd5b611da989838a0161176a565b9450611db7606089016116ed565b9350608088013591508082111561183a57600080fd5b600080600080600080600060e0888a031215611de857600080fd5b8735611df3816116d5565b965060208801356001600160401b0380821115611e0f57600080fd5b611e1b8b838c0161176a565b975060408a0135915080821115611e3157600080fd5b611e3d8b838c0161176a565b965060608a01359150611e4f82611a74565b81955060808a01359450611e6560a08b016116ed565b935060c08a0135915080821115611e7b57600080fd5b50611e888a828b0161176a565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b60008251611f1381846020870161196f565b9190910192915050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611f7657600080fd5b5051919050565b600082601f830112611f8e57600080fd5b8151611f9c61178982611743565b818152846020838601011115611fb157600080fd5b611fc282602083016020870161196f565b949350505050565b600080600080600060a08688031215611fe257600080fd5b8551611fed816116d5565b60208701519095506001600160401b0381111561200957600080fd5b61201588828901611f7d565b94505060408601519250606086015161202d81611a74565b608087015190925061203e81611a74565b809150509295509295909350565b60006020828403121561205e57600080fd5b81516001600160401b0381111561207457600080fd5b611fc284828501611f7d565b60006020828403121561209257600080fd5b8151611a1981611a74565b634e487b7160e01b600052603260045260246000fd5b60006000198214156120d557634e487b7160e01b600052601160045260246000fd5b5060010190565b815160009082906020808601845b83811015612106578151855293820193908201906001016120ea565b5092969550505050505056fe01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a264697066735822122018de0272d08d53f2742e457e0bd79213f679f046aa4238fc8619e93d9c0bebf164736f6c634300080c0033",
  "bytecodeSha1": "199bb2152ebaecd6b76d711af900f009ae906f4a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouseApi",
  "coverageMap": {
    "branches": {
      "46": {
        "CLHouseApi.GetHouseUserList": {
          "20": [
            3251,
            3275,
            false
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "18": [
            1891,
            1899,
            true
          ],
          "19": [
            2164,
            2188,
            true
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "17": [
            617,
            640,
            true
          ]
        }
      },
      "48": {},
      "61": {}
    },
    "statements": {
      "46": {
        "CLHouseApi.GetHouseProperties": {
          "8": [
            4569,
            4920
          ]
        },
        "CLHouseApi.GetHouseUserList": {
          "11": [
            3043,
            3232
          ],
          "12": [
            3295,
            3325
          ],
          "13": [
            3343,
            3350
          ],
          "14": [
            2982,
            2987
          ],
          "15": [
            3384,
            3400
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "4": [
            1882,
            1925
          ],
          "5": [
            1971,
            2144
          ],
          "6": [
            2155,
            2209
          ],
          "7": [
            2220,
            2359
          ]
        },
        "CLHouseApi.SignerOCDelUser": {
          "0": [
            9524,
            9566
          ]
        },
        "CLHouseApi.SignerOCInvit": {
          "10": [
            5647,
            5689
          ]
        },
        "CLHouseApi.SignerOCNewCLH": {
          "9": [
            11827,
            11869
          ]
        },
        "CLHouseApi.SignerOCNewUser": {
          "16": [
            8593,
            8635
          ]
        },
        "CLHouseApi.SignerOCRequest": {
          "3": [
            10426,
            10468
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "1": [
            608,
            666
          ],
          "2": [
            1088,
            1137
          ]
        }
      },
      "48": {},
      "61": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806389ab062a1161007157806389ab062a1461014f5780638b4bccca146101625780639f6fd7ab14610175578063b698be8d14610188578063f0b00c9f146101a8578063f240c7e9146101bb57600080fd5b8063349dc296146100ae578063622eca77146100de5780637b3bb156146100f157806386abd826146101045780638750bc3e14610127575b600080fd5b6100c16100bc3660046117c0565b6101ce565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c16100ec366004611854565b6103a6565b6100c16100ff36600461189a565b61046a565b610117610112366004611936565b61062f565b6040516100d594939291906119cb565b61013a6101353660046119fc565b6107f4565b6040516100d599989796959493929190611a20565b6100c161015d366004611a8d565b610b9d565b6100c1610170366004611af1565b610cff565b6100c1610183366004611bd2565b610fa5565b61019b6101963660046119fc565b6110f6565b6040516100d59190611c33565b6100c16101b6366004611cd7565b611322565b6100c16101c9366004611dcd565b611479565b6000806040516020016101e090611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b84830152915191926000805160206121138339815191529261022c9201611f01565b604051602081830303815290604052805190602001204687604051602001610258959493929190611f1d565b60405160208183030381529060405280519060200120905060006040516020016102d9907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016103019190611f01565b604051602081830303815290604052805190602001208860405160200161034a94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405160208183030381529060405280519060200120905060008282604051602001610377929190611f49565b60405160208183030381529060405280519060200120905061039981866103a6565b9998505050505050505050565b600081516041146103f55760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610455573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161047c90611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926104c89201611f01565b6040516020818303038152906040528051906020012046876040516020016104f4959493929190611f1d565b6040516020818303038152906040528051906020012090506000604051602001610556907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b604051602081830303815290604052805190602001208760405160200161057d9190611f01565b60405160208183030381529060405280519060200120876040516020016105a49190611f01565b60408051601f19818403018152828252805160209182012090830194909452810191909152606081019190915260800160405160208183030381529060405280519060200120905060008282604051602001610601929190611f49565b60405160208183030381529060405280519060200120905061062381866103a6565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611f64565b9050806106ec5760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016103ec565b6106f4611699565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa158015610739573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107619190810190611fca565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107cd5760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016103ec565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610845573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086d919081019061204c565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190611f64565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109319190612080565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109939190612080565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190611f64565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a579190611f64565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190611f64565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611f64565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190611f64565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610baf90611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b848301529151919260008051602061211383398151915292610bfb9201611f01565b604051602081830303815290604052805190602001204687604051602001610c27959493929190611f1d565b6040516020818303038152906040528051906020012090506000604051602001610c9a907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610cc39190611f01565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a00161034a565b600080604051602001610d1190611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b848301529151919260008051602061211383398151915292610d5d9201611f01565b604051602081830303815290604052805190602001204687604051602001610d89959493929190611f1d565b6040516020818303038152906040528051906020012090506000604051602001610ead907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c6973744e46542c61646472657373207760a08201526f686974654c69737457616c6c6574732960801b60c082015260d00190565b604051602081830303815290604052805190602001208e604051602001610ed49190611f01565b60408051601f198184030181528282528051602091820120908301939093528101919091528d151560608201528c1515608082015260a081018c905260c081018b905260e081018a905261010081018990526001600160a01b0380891661012083015287166101408201526101600160405160208183030381529060405280519060200120905060008282604051602001610f70929190611f49565b604051602081830303815290604052805190602001209050610f9281866103a6565b9f9e505050505050505050505050505050565b600080604051602001610fb790611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926110039201611f01565b60405160208183030381529060405280519060200120468760405160200161102f959493929190611f1d565b604051602081830303815290604052805190602001209050600060405160200161107c907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f190181528282528051602091820120818401528815158383015281518084038301815260608401909252815191012091506000906110c99084908490608001611f49565b6040516020818303038152906040528051906020012090506110eb81866103a6565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190611f64565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c79190611f64565b90506000826001600160401b038111156111e3576111e36116fd565b60405190808252806020026020018201604052801561121c57816020015b611209611699565b8152602001906001900390816112015790505b509050600060015b8381101561131657611234611699565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a19190810190611fca565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001141561130357808484815181106112e9576112e961209d565b602002602001018190525082806112ff906120b3565b9350505b508061130e816120b3565b915050611224565b50909695505050505050565b60008060405160200161133490611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926113809201611f01565b6040516020818303038152906040528051906020012046876040516020016113ac959493929190611f1d565b604051602081830303815290604052805190602001209050600060405160200161142a907f7374724f4342756c6b566f74652875696e743235365b5d2070726f704964732c81527f626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6020820152616e2960f01b604082015260420190565b604051602081830303815290604052805190602001208860405160200161145191906120dc565b604051602081830303815290604052805190602001208888604051602001610cc39190611f01565b60008060405160200161148b90611e97565b60408051601f19818403018152828252805160209182012083830183526005845264302e312e3160d81b8483015291519192600080516020612113833981519152926114d79201611f01565b604051602081830303815290604052805190602001204687604051602001611503959493929190611f1d565b604051602081830303815290604052805190602001209050600060405160200161159c907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a6040516020016115c49190611f01565b604051602081830303815290604052805190602001208a6040516020016115eb9190611f01565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e00160405160208183030381529060405280519060200120905060008282604051602001611668929190611f49565b60405160208183030381529060405280519060200120905061168a81866103a6565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b03811681146116ea57600080fd5b50565b80356116f8816116d5565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561173b5761173b6116fd565b604052919050565b60006001600160401b0382111561175c5761175c6116fd565b50601f01601f191660200190565b600082601f83011261177b57600080fd5b813561178e61178982611743565b611713565b8181528460208386010111156117a357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156117d857600080fd5b85356117e3816116d5565b945060208601356001600160401b03808211156117ff57600080fd5b61180b89838a0161176a565b95506040880135945060608801359150611824826116d5565b9092506080870135908082111561183a57600080fd5b506118478882890161176a565b9150509295509295909350565b6000806040838503121561186757600080fd5b8235915060208301356001600160401b0381111561188457600080fd5b6118908582860161176a565b9150509250929050565b600080600080608085870312156118b057600080fd5b84356001600160401b03808211156118c757600080fd5b6118d38883890161176a565b955060208701359150808211156118e957600080fd5b6118f58883890161176a565b945060408701359150611907826116d5565b9092506060860135908082111561191d57600080fd5b5061192a8782880161176a565b91505092959194509250565b6000806040838503121561194957600080fd5b8235611954816116d5565b91506020830135611964816116d5565b809150509250929050565b60005b8381101561198a578181015183820152602001611972565b83811115611999576000848401525b50505050565b600081518084526119b781602086016020860161196f565b601f01601f19169290920160200192915050565b6080815260006119de608083018761199f565b60208301959095525091151560408301521515606090910152919050565b600060208284031215611a0e57600080fd5b8135611a19816116d5565b9392505050565b6000610120808352611a348184018d61199f565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b80151581146116ea57600080fd5b80356116f881611a74565b600080600080600060a08688031215611aa557600080fd5b853594506020860135611ab781611a74565b935060408601356001600160401b0380821115611ad357600080fd5b611adf89838a0161176a565b945060608801359150611824826116d5565b60008060008060008060008060008060006101608c8e031215611b1357600080fd5b6001600160401b03808d351115611b2957600080fd5b611b368e8e358f0161176a565b9b50611b4460208e01611a82565b9a50611b5260408e01611a82565b995060608d0135985060808d0135975060a08d0135965060c08d01359550611b7c60e08e016116ed565b9450611b8b6101008e016116ed565b9350611b9a6101208e016116ed565b9250806101408e01351115611bae57600080fd5b50611bc08d6101408e01358e0161176a565b90509295989b509295989b9093969950565b600080600060608486031215611be757600080fd5b8335611bf281611a74565b92506020840135611c02816116d5565b915060408401356001600160401b03811115611c1d57600080fd5b611c298682870161176a565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611cc957888303603f19018552815180516001600160a01b031684528781015160a089860181905290611c938287018261199f565b838a0151878b01526060808501511515908801526080938401511515939096019290925250509386019390860190600101611c5a565b509098975050505050505050565b600080600080600060a08688031215611cef57600080fd5b85356001600160401b0380821115611d0657600080fd5b818801915088601f830112611d1a57600080fd5b8135602082821115611d2e57611d2e6116fd565b8160051b611d3d828201611713565b928352848101820192828101908d851115611d5757600080fd5b958301955b84871015611d7557863582529583019590830190611d5c565b9a50611d859150508a8201611a82565b975050506040880135915080821115611d9d57600080fd5b611da989838a0161176a565b9450611db7606089016116ed565b9350608088013591508082111561183a57600080fd5b600080600080600080600060e0888a031215611de857600080fd5b8735611df3816116d5565b965060208801356001600160401b0380821115611e0f57600080fd5b611e1b8b838c0161176a565b975060408a0135915080821115611e3157600080fd5b611e3d8b838c0161176a565b965060608a01359150611e4f82611a74565b81955060808a01359450611e6560a08b016116ed565b935060c08a0135915080821115611e7b57600080fd5b50611e888a828b0161176a565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b60008251611f1381846020870161196f565b9190910192915050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611f7657600080fd5b5051919050565b600082601f830112611f8e57600080fd5b8151611f9c61178982611743565b818152846020838601011115611fb157600080fd5b611fc282602083016020870161196f565b949350505050565b600080600080600060a08688031215611fe257600080fd5b8551611fed816116d5565b60208701519095506001600160401b0381111561200957600080fd5b61201588828901611f7d565b94505060408601519250606086015161202d81611a74565b608087015190925061203e81611a74565b809150509295509295909350565b60006020828403121561205e57600080fd5b81516001600160401b0381111561207457600080fd5b611fc284828501611f7d565b60006020828403121561209257600080fd5b8151611a1981611a74565b634e487b7160e01b600052603260045260246000fd5b60006000198214156120d557634e487b7160e01b600052601160045260246000fd5b5060010190565b815160009082906020808601845b83811015612106578151855293820193908201906001016120ea565b5092969550505050505056fe01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a264697066735822122018de0272d08d53f2742e457e0bd79213f679f046aa4238fc8619e93d9c0bebf164736f6c634300080c0033",
  "deployedSourceMap": "223:11655:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8649:924;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2419:32:62;;;2401:51;;2389:2;2374:18;8649:924:46;;;;;;;;452:692;;;;;;:::i;:::-;;:::i;9580:895::-;;;;;;:::i;:::-;;:::i;1501:865::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4060:867::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;5703:904::-;;;;;;:::i;:::-;;:::i;10482:1394::-;;;;;;:::i;:::-;;:::i;4934:762::-;;;;;;:::i;:::-;;:::i;2513:894::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6614:959::-;;;;;;:::i;:::-;;:::i;7580:1062::-;;;;;;:::i;:::-;;:::i;8649:924::-;8874:7;8898:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;9102:13:46;9133:10;8948:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8925:242;;;;;;8898:269;;9178:15;1599:103:48;;;;;;14541:34:62;14529:47;;14606:34;14601:2;14592:12;;14585:56;-1:-1:-1;;;14666:2:62;14657:12;;14650:29;14704:2;14695:12;;14327:386;1599:103:48;;;;;;;;;;;;;1584:120;;;;;;9287:11:46;9345:12;9327:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;9316:45;;;;;;9379:10;9219:184;;;;;;;;;;14949:25:62;;;-1:-1:-1;;;;;15010:32:62;;;;15005:2;14990:18;;14983:60;15074:2;15059:18;;15052:34;15117:2;15102:18;;15095:34;14936:3;14921:19;;14718:417;9219:184:46;;;;;;;;;;;;;9196:217;;;;;;9178:235;;9424:16;9484;9502:7;9454:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9443:70;;;;;;9424:89;;9531:35;9544:8;9554:10;9531:11;:35::i;:::-;9524:42;8649:924;-1:-1:-1;;;;;;;;;8649:924:46:o;452:692::-;584:7;617:10;:17;638:2;617:23;608:58;;;;-1:-1:-1;;;608:58:46;;15739:2:62;608:58:46;;;15721:21:62;15778:2;15758:18;;;15751:30;-1:-1:-1;;;15797:18:62;;;15790:50;15857:18;;608:58:46;;;;;;;;;856:2;839:21;;;832:30;939:2;922:21;;;915:30;1060:2;1043:21;;;1036:30;1095:42;;677:13;1095:42;;;;;;;;;16113:25:62;;;1027:41:46;;16154:18:62;;;16147:45;;;16208:18;;16201:34;;;16251:18;;;16244:34;;;832:30:46;;1095:42;;16085:19:62;;1095:42:46;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1095:42:46;;-1:-1:-1;;1095:42:46;;;452:692;-1:-1:-1;;;;;;;452:692:46:o;9580:895::-;9777:7;9801:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;10005:13:46;10036:10;9851:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9828:242;;;;;;9801:269;;10081:15;1763:78:48;;;;;;16503:34:62;16491:47;;-1:-1:-1;;;16563:2:62;16554:12;;16547:36;16608:2;16599:12;;16289:328;1763:78:48;;;;;;;;;;;;;1748:95;;;;;;10219:5:46;10201:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;10190:38;;;;;;10275:12;10257:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10257:32:46;;;;;;;;;10246:45;;10257:32;10246:45;;;;10122:183;;;16824:25:62;;;;16865:18;;16858:34;;;;16908:18;;;16901:34;;;;16797:18;;10122:183:46;;;;;;;;;;;;10099:216;;;;;;10081:234;;10326:16;10386;10404:7;10356:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10345:70;;;;;;10326:89;;10433:35;10446:8;10456:10;10433:11;:35::i;:::-;10426:42;9580:895;-1:-1:-1;;;;;;;;9580:895:46:o;1501:865::-;1840:31;;-1:-1:-1;;;1840:31:46;;-1:-1:-1;;;;;2419:32:62;;;1840:31:46;;;2401:51:62;1653:18:46;;1685:12;;;;;;1803:10;;1685:12;;1840:16;;;;;2374:18:62;;1840:31:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1826:45;-1:-1:-1;1891:8:46;1882:43;;;;-1:-1:-1;;;1882:43:46;;17337:2:62;1882:43:46;;;17319:21:62;17376:2;17356:18;;;17349:30;-1:-1:-1;;;17395:18:62;;;17388:49;17454:18;;1882:43:46;17135:343:62;1882:43:46;1936:24;;:::i;:::-;2122:22;;-1:-1:-1;;;2122:22:46;;;;;17629:25:62;;;-1:-1:-1;;;;;2122:15:46;;;;;17602:18:62;;2122:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2122:22:46;;;;;;;;;;;;:::i;:::-;1971:173;;2098:19;;;1971:173;;;2068:16;;;1971:173;;;2037:17;;;1971:173;;;;2009:14;;;1971:173;;;;-1:-1:-1;;;;;1971:173:46;;;;;2164:4;:24;2155:54;;;;-1:-1:-1;;;2155:54:46;;19091:2:62;2155:54:46;;;19073:21:62;19130:2;19110:18;;;19103:30;-1:-1:-1;;;19149:18:62;;;19142:43;19202:18;;2155:54:46;18889:337:62;2155:54:46;2241:14;;;;2269:17;;;;2300:16;;;;2330:19;;;;;2241:14;;2269:17;;-1:-1:-1;2300:16:46;;-1:-1:-1;2330:19:46;-1:-1:-1;1501:865:46;-1:-1:-1;;;;;1501:865:46:o;4060:867::-;4181:24;4219:30;4263:17;4294:14;4322:16;4352:19;4385:31;4430:23;4467:26;4518:15;4546:10;4518:40;;4589:6;-1:-1:-1;;;;;4589:17:46;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4589:19:46;;;;;;;;;;;;:::i;:::-;4622:6;-1:-1:-1;;;;;4622:29:46;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4667:6;-1:-1:-1;;;;;4667:19:46;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4702:6;-1:-1:-1;;;;;4702:16:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4734:6;-1:-1:-1;;;;;4734:15:46;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4765:6;-1:-1:-1;;;;;4765:18:46;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4799:6;-1:-1:-1;;;;;4799:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4845:6;-1:-1:-1;;;;;4845:22:46;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4883:6;-1:-1:-1;;;;;4883:25:46;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:351;;;;;;;;;;;;;;;;;;;4060:867;;;;;;;;;;;:::o;5703:904::-;5915:7;5939:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;6143:13:46;6174:10;5989:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5966:242;;;;;;5939:269;;6219:15;1092:93:48;;;;;;20226:34:62;20214:47;;20291:29;20286:2;20277:12;;20270:51;20346:2;20337:12;;20012:343;1092:93:48;;;;;;;;;;;;;1077:110;;;;;;6325:7:46;6350:8;6405:14;6387:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:34:46;;;;;;;;;6376:47;;6387:34;6376:47;;;;6260:177;;;20585:25:62;;;;20626:18;;20619:34;;;;20696:14;20689:22;20669:18;;;20662:50;20728:18;;;20721:34;;;;20557:19;;6260:177:46;20360:401:62;10482:1394:46;10904:7;10928:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;11132:13:46;11163:8;10978:207;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10955:240;;;;;;10928:267;;11206:15;1901:242:48;;;;;;20980:34:62;20968:47;;21045:34;21040:2;21031:12;;21024:56;21110:34;21105:2;21096:12;;21089:56;21175:34;21170:2;21161:12;;21154:56;21241:34;21235:3;21226:13;;21219:57;21307:34;21301:3;21292:13;;21285:57;-1:-1:-1;;;21367:3:62;21358:13;;21351:41;21417:3;21408:13;;20766:661;1901:242:48;;;;;;;;;;;;;1886:259;;;;;;11343:10:46;11325:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11325:30:46;;;;;;;;;11314:43;;11325:30;11314:43;;;;11247:459;;;21819:25:62;;;;21860:18;;21853:34;;;;21930:14;;21923:22;21903:18;;;21896:50;21989:14;;21982:22;21962:18;;;21955:50;22021:19;;;22014:35;;;22065:19;;;22058:35;;;22109:19;;;22102:35;;;22153:19;;;22146:35;;;-1:-1:-1;;;;;22256:15:62;;;22235:19;;;22228:44;22309:15;;22288:19;;;22281:44;21791:19;;11247:459:46;;;;;;;;;;;;11224:492;;;;;;11206:510;;11727:16;11787;11805:7;11757:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11746:70;;;;;;11727:89;;11834:35;11847:8;11857:10;11834:11;:35::i;:::-;11827:42;10482:1394;-1:-1:-1;;;;;;;;;;;;;;;10482:1394:46:o;4934:762::-;5090:7;5114:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;5318:13:46;5349:10;5164:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5141:242;;;;;;5114:269;;5394:15;973:61:48;;;;;;22550:29:62;22538:42;;22605:2;22596:12;;22336:278;973:61:48;;;;;;;-1:-1:-1;;973:61:48;;;;;;958:78;;973:61;958:78;;;;5435:91:46;;;22787:25:62;22855:14;;22848:22;22828:18;;;22821:50;5435:91:46;;;;;;;;;22760:18:62;;;5435:91:46;;;5412:124;;;;;;-1:-1:-1;;;5577:57:46;;5607:16;;5412:124;;5577:57;;;:::i;:::-;;;;;;;;;;;;;5566:70;;;;;;5547:89;;5654:35;5667:8;5677:10;5654:11;:35::i;:::-;5647:42;4934:762;-1:-1:-1;;;;;;;4934:762:46:o;2513:894::-;2632:25;2682:15;2710:10;2682:40;;2733:16;2752:6;-1:-1:-1;;;;;2752:15:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:37;;2780:22;2805:6;-1:-1:-1;;;;;2805:24:46;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2780:51;;2841:26;2886:8;-1:-1:-1;;;;;2870:26:46;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2841:55:46;-1:-1:-1;2907:13:46;2955:1;2936:439;2965:14;2959:3;:20;2936:439;;;3004:24;;:::i;:::-;3210:22;;-1:-1:-1;;;3210:22:46;;;;;17629:25:62;;;-1:-1:-1;;;;;3210:15:46;;;;;17602:18:62;;3210:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3210:22:46;;;;;;;;;;;;:::i;:::-;3043:189;;3186:19;;;3043:189;;;3152:16;;;3043:189;;;3117:17;;;3043:189;;;;3085:14;;;3043:189;;;;-1:-1:-1;;;;;3043:189:46;;;;;3251:4;:24;3247:118;;;3316:9;3295;3306:5;3295:18;;;;;;;;:::i;:::-;;;;;;:30;;;;3343:7;;;;;:::i;:::-;;;;3247:118;-1:-1:-1;2982:5:46;;;;:::i;:::-;;;;2936:439;;;-1:-1:-1;3391:9:46;;2513:894;-1:-1:-1;;;;;;2513:894:46:o;6614:959::-;6843:7;6867:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;7071:13:46;7102:10;6917:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6894:242;;;;;;6867:269;;7147:15;1247:100:48;;;;;;23465:34:62;23453:47;;23530:34;23525:2;23516:12;;23509:56;-1:-1:-1;;;23590:2:62;23581:12;;23574:26;23625:2;23616:12;;23251:383;1247:100:48;;;;;;;;;;;;;1232:117;;;;;;7286:8:46;7268:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;7257:41;;;;;;7316:8;7371:14;7353:34;;;;;;;;:::i;7580:1062::-;7859:7;7883:24;798:116:48;;;;;;;:::i;:::-;;;;-1:-1:-1;;798:116:48;;;;;;;;;783:133;;798:116;783:133;;;;713:19;;;;;;;;-1:-1:-1;;;713:19:48;;;;695:39;;783:133;;-1:-1:-1;;;;;;;;;;;613:20:48;695:39;;;;:::i;:::-;;;;;;;;;;;;;680:56;;;;;;8087:13:46;8118:10;7933:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7910:242;;;;;;7883:269;;8163:15;1408:130:48;;;;;;24807:34:62;24795:47;;24872:34;24867:2;24858:12;;24851:56;24937:34;24932:2;24923:12;;24916:56;24997:2;24988:12;;24593:413;1408:130:48;;;;;;;;;;;;;1393:147;;;;;;8272:11:46;8330:5;8312:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;8301:38;;;;;;8386:12;8368:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8368:32:46;;;;;;;;;8357:45;;8368:32;8357:45;;;;8204:268;;;25292:25:62;;;;-1:-1:-1;;;;;25353:32:62;;;25333:18;;;25326:60;;;;25402:18;;;25395:34;25445:18;;;25438:34;;;;25516:14;;25509:22;25488:19;;;25481:51;25548:19;;;25541:35;;;25264:19;;8204:268:46;;;;;;;;;;;;8181:301;;;;;;8163:319;;8493:16;8553;8571:7;8523:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8512:70;;;;;;8493:89;;8600:35;8613:8;8623:10;8600:11;:35::i;:::-;8593:42;7580:1062;-1:-1:-1;;;;;;;;;;;7580:1062:46:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:62:-;-1:-1:-1;;;;;89:31:62;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:275;492:2;486:9;557:2;538:13;;-1:-1:-1;;534:27:62;522:40;;-1:-1:-1;;;;;577:34:62;;613:22;;;574:62;571:88;;;639:18;;:::i;:::-;675:2;668:22;421:275;;-1:-1:-1;421:275:62:o;701:187::-;750:4;-1:-1:-1;;;;;775:6:62;772:30;769:56;;;805:18;;:::i;:::-;-1:-1:-1;871:2:62;850:15;-1:-1:-1;;846:29:62;877:4;842:40;;701:187::o;893:464::-;936:5;989:3;982:4;974:6;970:17;966:27;956:55;;1007:1;1004;997:12;956:55;1043:6;1030:20;1074:49;1090:32;1119:2;1090:32;:::i;:::-;1074:49;:::i;:::-;1148:2;1139:7;1132:19;1194:3;1187:4;1182:2;1174:6;1170:15;1166:26;1163:35;1160:55;;;1211:1;1208;1201:12;1160:55;1276:2;1269:4;1261:6;1257:17;1250:4;1241:7;1237:18;1224:55;1324:1;1299:16;;;1317:4;1295:27;1288:38;;;;1303:7;893:464;-1:-1:-1;;;893:464:62:o;1362:888::-;1476:6;1484;1492;1500;1508;1561:3;1549:9;1540:7;1536:23;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1617:9;1604:23;1636:31;1661:5;1636:31;:::i;:::-;1686:5;-1:-1:-1;1742:2:62;1727:18;;1714:32;-1:-1:-1;;;;;1795:14:62;;;1792:34;;;1822:1;1819;1812:12;1792:34;1845:50;1887:7;1878:6;1867:9;1863:22;1845:50;:::i;:::-;1835:60;;1942:2;1931:9;1927:18;1914:32;1904:42;;1998:2;1987:9;1983:18;1970:32;1955:47;;2011:33;2036:7;2011:33;:::i;:::-;2063:7;;-1:-1:-1;2123:3:62;2108:19;;2095:33;;2140:16;;;2137:36;;;2169:1;2166;2159:12;2137:36;;2192:52;2236:7;2225:8;2214:9;2210:24;2192:52;:::i;:::-;2182:62;;;1362:888;;;;;;;;:::o;2463:389::-;2540:6;2548;2601:2;2589:9;2580:7;2576:23;2572:32;2569:52;;;2617:1;2614;2607:12;2569:52;2653:9;2640:23;2630:33;;2714:2;2703:9;2699:18;2686:32;-1:-1:-1;;;;;2733:6:62;2730:30;2727:50;;;2773:1;2770;2763:12;2727:50;2796;2838:7;2829:6;2818:9;2814:22;2796:50;:::i;:::-;2786:60;;;2463:389;;;;;:::o;2857:878::-;2972:6;2980;2988;2996;3049:3;3037:9;3028:7;3024:23;3020:33;3017:53;;;3066:1;3063;3056:12;3017:53;3106:9;3093:23;-1:-1:-1;;;;;3176:2:62;3168:6;3165:14;3162:34;;;3192:1;3189;3182:12;3162:34;3215:50;3257:7;3248:6;3237:9;3233:22;3215:50;:::i;:::-;3205:60;;3318:2;3307:9;3303:18;3290:32;3274:48;;3347:2;3337:8;3334:16;3331:36;;;3363:1;3360;3353:12;3331:36;3386:52;3430:7;3419:8;3408:9;3404:24;3386:52;:::i;:::-;3376:62;;3488:2;3477:9;3473:18;3460:32;3447:45;;3501:31;3526:5;3501:31;:::i;:::-;3551:5;;-1:-1:-1;3609:2:62;3594:18;;3581:32;;3625:16;;;3622:36;;;3654:1;3651;3644:12;3622:36;;3677:52;3721:7;3710:8;3699:9;3695:24;3677:52;:::i;:::-;3667:62;;;2857:878;;;;;;;:::o;3740:388::-;3808:6;3816;3869:2;3857:9;3848:7;3844:23;3840:32;3837:52;;;3885:1;3882;3875:12;3837:52;3924:9;3911:23;3943:31;3968:5;3943:31;:::i;:::-;3993:5;-1:-1:-1;4050:2:62;4035:18;;4022:32;4063:33;4022:32;4063:33;:::i;:::-;4115:7;4105:17;;;3740:388;;;;;:::o;4133:258::-;4205:1;4215:113;4229:6;4226:1;4223:13;4215:113;;;4305:11;;;4299:18;4286:11;;;4279:39;4251:2;4244:10;4215:113;;;4346:6;4343:1;4340:13;4337:48;;;4381:1;4372:6;4367:3;4363:16;4356:27;4337:48;;4133:258;;;:::o;4396:::-;4438:3;4476:5;4470:12;4503:6;4498:3;4491:19;4519:63;4575:6;4568:4;4563:3;4559:14;4552:4;4545:5;4541:16;4519:63;:::i;:::-;4636:2;4615:15;-1:-1:-1;;4611:29:62;4602:39;;;;4643:4;4598:50;;4396:258;-1:-1:-1;;4396:258:62:o;4659:455::-;4880:3;4869:9;4862:22;4843:4;4901:46;4942:3;4931:9;4927:19;4919:6;4901:46;:::i;:::-;4978:2;4963:18;;4956:34;;;;-1:-1:-1;5033:14:62;;5026:22;5021:2;5006:18;;4999:50;5092:14;5085:22;5080:2;5065:18;;;5058:50;4893:54;4659:455;-1:-1:-1;4659:455:62:o;5119:247::-;5178:6;5231:2;5219:9;5210:7;5206:23;5202:32;5199:52;;;5247:1;5244;5237:12;5199:52;5286:9;5273:23;5305:31;5330:5;5305:31;:::i;:::-;5355:5;5119:247;-1:-1:-1;;;5119:247:62:o;5371:835::-;5695:4;5724:3;5754:2;5743:9;5736:21;5774:45;5815:2;5804:9;5800:18;5792:6;5774:45;:::i;:::-;5850:2;5835:18;;5828:34;;;;-1:-1:-1;;5905:14:62;;5898:22;5893:2;5878:18;;5871:50;5964:14;;5957:22;5952:2;5937:18;;5930:50;6011:3;5996:19;;5989:35;;;;6055:3;6040:19;;6033:35;;;;6099:3;6084:19;;6077:35;6143:3;6128:19;;6121:35;6187:3;6172:19;;;6165:35;5766:53;5371:835;-1:-1:-1;5371:835:62:o;6211:118::-;6297:5;6290:13;6283:21;6276:5;6273:32;6263:60;;6319:1;6316;6309:12;6334:128;6399:20;;6428:28;6399:20;6428:28;:::i;6467:882::-;6578:6;6586;6594;6602;6610;6663:3;6651:9;6642:7;6638:23;6634:33;6631:53;;;6680:1;6677;6670:12;6631:53;6716:9;6703:23;6693:33;;6776:2;6765:9;6761:18;6748:32;6789:28;6811:5;6789:28;:::i;:::-;6836:5;-1:-1:-1;6892:2:62;6877:18;;6864:32;-1:-1:-1;;;;;6945:14:62;;;6942:34;;;6972:1;6969;6962:12;6942:34;6995:50;7037:7;7028:6;7017:9;7013:22;6995:50;:::i;:::-;6985:60;;7097:2;7086:9;7082:18;7069:32;7054:47;;7110:33;7135:7;7110:33;:::i;7354:1162::-;7516:6;7524;7532;7540;7548;7556;7564;7572;7580;7588;7596:7;7650:3;7638:9;7629:7;7625:23;7621:33;7618:53;;;7667:1;7664;7657:12;7618:53;-1:-1:-1;;;;;7748:2:62;7736:9;7723:23;7720:31;7717:51;;;7764:1;7761;7754:12;7717:51;7787:67;7846:7;7833:9;7820:23;7809:9;7805:39;7787:67;:::i;:::-;7777:77;;7873:35;7904:2;7893:9;7889:18;7873:35;:::i;:::-;7863:45;;7927:35;7958:2;7947:9;7943:18;7927:35;:::i;:::-;7917:45;;8009:2;7998:9;7994:18;7981:32;7971:42;;8060:3;8049:9;8045:19;8032:33;8022:43;;8112:3;8101:9;8097:19;8084:33;8074:43;;8164:3;8153:9;8149:19;8136:33;8126:43;;8188:39;8222:3;8211:9;8207:19;8188:39;:::i;:::-;8178:49;;8246:39;8280:3;8269:9;8265:19;8246:39;:::i;:::-;8236:49;;8304:39;8338:3;8327:9;8323:19;8304:39;:::i;:::-;8294:49;;8393:2;8386:3;8375:9;8371:19;8358:33;8355:41;8352:61;;;8409:1;8406;8399:12;8352:61;;8433:77;8502:7;8494:3;8483:9;8479:19;8466:33;8455:9;8451:49;8433:77;:::i;:::-;8422:88;;7354:1162;;;;;;;;;;;;;;:::o;8521:591::-;8604:6;8612;8620;8673:2;8661:9;8652:7;8648:23;8644:32;8641:52;;;8689:1;8686;8679:12;8641:52;8728:9;8715:23;8747:28;8769:5;8747:28;:::i;:::-;8794:5;-1:-1:-1;8851:2:62;8836:18;;8823:32;8864:33;8823:32;8864:33;:::i;:::-;8916:7;-1:-1:-1;8974:2:62;8959:18;;8946:32;-1:-1:-1;;;;;8990:30:62;;8987:50;;;9033:1;9030;9023:12;8987:50;9056;9098:7;9089:6;9078:9;9074:22;9056:50;:::i;:::-;9046:60;;;8521:591;;;;;:::o;9117:1367::-;9309:4;9338:2;9378;9367:9;9363:18;9408:2;9397:9;9390:21;9431:6;9466;9460:13;9497:6;9489;9482:22;9523:2;9513:12;;9556:2;9545:9;9541:18;9534:25;;9618:2;9608:6;9605:1;9601:14;9590:9;9586:30;9582:39;9656:2;9648:6;9644:15;9677:1;9687:768;9701:6;9698:1;9695:13;9687:768;;;9766:22;;;-1:-1:-1;;9762:36:62;9750:49;;9822:13;;9894:9;;-1:-1:-1;;;;;9890:35:62;9875:51;;9965:11;;;9959:18;9858:4;9997:15;;;9990:27;;;9858:4;10044:48;10076:15;;;9959:18;10044:48;:::i;:::-;10135:11;;;10129:18;10112:15;;;10105:43;10171:4;10232:11;;;10226:18;10219:26;10212:34;10195:15;;;10188:59;10270:4;10331:11;;;10325:18;10318:26;10311:34;10294:15;;;;10287:59;;;;-1:-1:-1;;10433:12:62;;;;10398:15;;;;9723:1;9716:9;9687:768;;;-1:-1:-1;10472:6:62;;9117:1367;-1:-1:-1;;;;;;;;9117:1367:62:o;10489:1491::-;10625:6;10633;10641;10649;10657;10710:3;10698:9;10689:7;10685:23;10681:33;10678:53;;;10727:1;10724;10717:12;10678:53;10767:9;10754:23;-1:-1:-1;;;;;10837:2:62;10829:6;10826:14;10823:34;;;10853:1;10850;10843:12;10823:34;10891:6;10880:9;10876:22;10866:32;;10936:7;10929:4;10925:2;10921:13;10917:27;10907:55;;10958:1;10955;10948:12;10907:55;10994:2;10981:16;11016:4;11039:2;11035;11032:10;11029:36;;;11045:18;;:::i;:::-;11091:2;11088:1;11084:10;11114:28;11138:2;11134;11130:11;11114:28;:::i;:::-;11176:15;;;11246:11;;;11242:20;;;11207:12;;;;11274:19;;;11271:39;;;11306:1;11303;11296:12;11271:39;11330:11;;;;11350:142;11366:6;11361:3;11358:15;11350:142;;;11432:17;;11420:30;;11383:12;;;;11470;;;;11350:142;;;11511:5;-1:-1:-1;11535:35:62;;-1:-1:-1;;11551:18:62;;;11535:35;:::i;:::-;11525:45;;;;11623:2;11612:9;11608:18;11595:32;11579:48;;11652:2;11642:8;11639:16;11636:36;;;11668:1;11665;11658:12;11636:36;11691:52;11735:7;11724:8;11713:9;11709:24;11691:52;:::i;:::-;11681:62;;11762:38;11796:2;11785:9;11781:18;11762:38;:::i;:::-;11752:48;;11853:3;11842:9;11838:19;11825:33;11809:49;;11883:2;11873:8;11870:16;11867:36;;;11899:1;11896;11889:12;11985:1158;12124:6;12132;12140;12148;12156;12164;12172;12225:3;12213:9;12204:7;12200:23;12196:33;12193:53;;;12242:1;12239;12232:12;12193:53;12281:9;12268:23;12300:31;12325:5;12300:31;:::i;:::-;12350:5;-1:-1:-1;12406:2:62;12391:18;;12378:32;-1:-1:-1;;;;;12459:14:62;;;12456:34;;;12486:1;12483;12476:12;12456:34;12509:50;12551:7;12542:6;12531:9;12527:22;12509:50;:::i;:::-;12499:60;;12612:2;12601:9;12597:18;12584:32;12568:48;;12641:2;12631:8;12628:16;12625:36;;;12657:1;12654;12647:12;12625:36;12680:52;12724:7;12713:8;12702:9;12698:24;12680:52;:::i;:::-;12670:62;;12784:2;12773:9;12769:18;12756:32;12741:47;;12797:30;12819:7;12797:30;:::i;:::-;12846:7;12836:17;;12900:3;12889:9;12885:19;12872:33;12862:43;;12924:39;12958:3;12947:9;12943:19;12924:39;:::i;:::-;12914:49;;13016:3;13005:9;13001:19;12988:33;12972:49;;13046:2;13036:8;13033:16;13030:36;;;13062:1;13059;13052:12;13030:36;;13085:52;13129:7;13118:8;13107:9;13103:24;13085:52;:::i;:::-;13075:62;;;11985:1158;;;;;;;;;;:::o;13148:399::-;13362:34;13350:47;;13427:34;13422:2;13413:12;;13406:56;-1:-1:-1;;;13487:2:62;13478:12;;13471:42;13538:2;13529:12;;13148:399::o;13552:276::-;13683:3;13721:6;13715:13;13737:53;13783:6;13778:3;13771:4;13763:6;13759:17;13737:53;:::i;:::-;13806:16;;;;;13552:276;-1:-1:-1;;13552:276:62:o;13833:489::-;14092:25;;;14148:2;14133:18;;14126:34;;;;14191:2;14176:18;;14169:34;;;;14234:2;14219:18;;14212:34;-1:-1:-1;;;;;14283:32:62;14277:3;14262:19;;14255:61;14079:3;14064:19;;13833:489::o;15140:392::-;-1:-1:-1;;;15398:27:62;;15450:1;15441:11;;15434:27;;;;15486:2;15477:12;;15470:28;15523:2;15514:12;;15140:392::o;16946:184::-;17016:6;17069:2;17057:9;17048:7;17044:23;17040:32;17037:52;;;17085:1;17082;17075:12;17037:52;-1:-1:-1;17108:16:62;;16946:184;-1:-1:-1;16946:184:62:o;17665:430::-;17719:5;17772:3;17765:4;17757:6;17753:17;17749:27;17739:55;;17790:1;17787;17780:12;17739:55;17819:6;17813:13;17850:49;17866:32;17895:2;17866:32;:::i;17850:49::-;17924:2;17915:7;17908:19;17970:3;17963:4;17958:2;17950:6;17946:15;17942:26;17939:35;17936:55;;;17987:1;17984;17977:12;17936:55;18000:64;18061:2;18054:4;18045:7;18041:18;18034:4;18026:6;18022:17;18000:64;:::i;:::-;18082:7;17665:430;-1:-1:-1;;;;17665:430:62:o;18100:784::-;18210:6;18218;18226;18234;18242;18295:3;18283:9;18274:7;18270:23;18266:33;18263:53;;;18312:1;18309;18302:12;18263:53;18344:9;18338:16;18363:31;18388:5;18363:31;:::i;:::-;18462:2;18447:18;;18441:25;18413:5;;-1:-1:-1;;;;;;18478:30:62;;18475:50;;;18521:1;18518;18511:12;18475:50;18544:61;18597:7;18588:6;18577:9;18573:22;18544:61;:::i;:::-;18534:71;;;18645:2;18634:9;18630:18;18624:25;18614:35;;18694:2;18683:9;18679:18;18673:25;18707:30;18729:7;18707:30;:::i;:::-;18808:3;18793:19;;18787:26;18756:7;;-1:-1:-1;18822:30:62;18787:26;18822:30;:::i;:::-;18871:7;18861:17;;;18100:784;;;;;;;;:::o;19231:337::-;19311:6;19364:2;19352:9;19343:7;19339:23;19335:32;19332:52;;;19380:1;19377;19370:12;19332:52;19413:9;19407:16;-1:-1:-1;;;;;19438:6:62;19435:30;19432:50;;;19478:1;19475;19468:12;19432:50;19501:61;19554:7;19545:6;19534:9;19530:22;19501:61;:::i;19762:245::-;19829:6;19882:2;19870:9;19861:7;19857:23;19853:32;19850:52;;;19898:1;19895;19888:12;19850:52;19930:9;19924:16;19949:28;19971:5;19949:28;:::i;22882:127::-;22943:10;22938:3;22934:20;22931:1;22924:31;22974:4;22971:1;22964:15;22998:4;22995:1;22988:15;23014:232;23053:3;-1:-1:-1;;23074:17:62;;23071:140;;;23133:10;23128:3;23124:20;23121:1;23114:31;23168:4;23165:1;23158:15;23196:4;23193:1;23186:15;23071:140;-1:-1:-1;23238:1:62;23227:13;;23014:232::o;23639:543::-;23857:13;;23800:3;;23831;;23910:4;23937:15;;;23800:3;23980:175;23994:6;23991:1;23988:13;23980:175;;;24057:13;;24043:28;;24093:14;;;;24130:15;;;;24016:1;24009:9;23980:175;;;-1:-1:-1;24171:5:62;;23639:543;-1:-1:-1;;;;;;23639:543:62:o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagers`",
          "govRuleMaxManagers": "Max of managers that CLH can accept (only for COMMITTEE )",
          "govRuleMaxUsers": "Max of all users (including managers)",
          "houseOpen": "True if is Open",
          "housePrivate": "True if is private",
          "numManagers": "Current managers of a CLH",
          "numUsers": "Current users of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all users address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrUsers": "array with list of users"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isUser": "true if is User",
          "name": "Nickname ot other user identificaction"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    223,
    11878
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AB062A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x8B4BCCCA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x9F6FD7AB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF0B00C9F EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF240C7E9 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x349DC296 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x7B3BB156 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8D JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CD7 JUMP JUMPDEST PUSH2 0x1322 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCD JUMP JUMPDEST PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E0 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x22C SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x258 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D9 SWAP1 PUSH32 0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179 PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0x54696D6529 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x34A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x377 SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x399 DUP2 DUP7 PUSH2 0x3A6 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x47C SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x4C8 SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4F4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x556 SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x601 SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x623 DUP2 DUP7 PUSH2 0x3A6 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3FE463 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70FF918C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x6F4 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x739 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x761 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FCA JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B9903737BA1030903AB9B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x845 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x86D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x204C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F2E1339 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x2080 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE68777D7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1343E9A5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE810A58E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBAF SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xBFB SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC27 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9A SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCC3 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD11 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xD5D SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD89 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEAD SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x652C616464726573732077686974654C6973744E46542C616464726573732077 PUSH1 0xA0 DUP3 ADD MSTORE PUSH16 0x686974654C69737457616C6C65747329 PUSH1 0x80 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED4 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP14 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP13 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH2 0x120 DUP4 ADD MSTORE DUP8 AND PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF70 SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xF92 DUP2 DUP7 PUSH2 0x3A6 JUMP JUMPDEST SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFB7 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x1003 SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x102F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107C SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000 DUP2 MSTORE PUSH1 0x1B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE DUP9 ISZERO ISZERO DUP4 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x10C9 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x10EB DUP2 DUP7 PUSH2 0x3A6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA693649A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C7 SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E3 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x121C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1209 PUSH2 0x1699 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1201 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1234 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12A1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FCA JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0x1303 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x12E9 JUMPI PUSH2 0x12E9 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x12FF SWAP1 PUSH2 0x20B3 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x130E DUP2 PUSH2 0x20B3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1224 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1334 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x1380 SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13AC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x142A SWAP1 PUSH32 0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C DUP2 MSTORE PUSH32 0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x6E29 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x20DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCC3 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x148B SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2113 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x14D7 SWAP3 ADD PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1503 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x159C SWAP1 PUSH32 0x7374724F434E65775573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15C4 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15EB SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1668 SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x168A DUP2 DUP7 PUSH2 0x3A6 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x16F8 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x173B JUMPI PUSH2 0x173B PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x175C JUMPI PUSH2 0x175C PUSH2 0x16FD JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x177B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x178E PUSH2 0x1789 DUP3 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x1713 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x17E3 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180B DUP10 DUP4 DUP11 ADD PUSH2 0x176A JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1824 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1847 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1890 DUP6 DUP3 DUP7 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D3 DUP9 DUP4 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F5 DUP9 DUP4 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1907 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192A DUP8 DUP3 DUP9 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1954 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1964 DUP2 PUSH2 0x16D5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1972 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1999 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19B7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x196F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19DE PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A19 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x1A34 DUP2 DUP5 ADD DUP14 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP SWAP7 ISZERO ISZERO PUSH1 0x40 DUP9 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x16F8 DUP2 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1AB7 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ADF DUP10 DUP4 DUP11 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1824 DUP3 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP14 CALLDATALOAD GT ISZERO PUSH2 0x1B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B36 DUP15 DUP15 CALLDATALOAD DUP16 ADD PUSH2 0x176A JUMP JUMPDEST SWAP12 POP PUSH2 0x1B44 PUSH1 0x20 DUP15 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP11 POP PUSH2 0x1B52 PUSH1 0x40 DUP15 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP10 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP9 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP6 POP PUSH2 0x1B7C PUSH1 0xE0 DUP15 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP5 POP PUSH2 0x1B8B PUSH2 0x100 DUP15 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1B9A PUSH2 0x120 DUP15 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x140 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC0 DUP14 PUSH2 0x140 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x176A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1BF2 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1C02 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C29 DUP7 DUP3 DUP8 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC9 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1C93 DUP3 DUP8 ADD DUP3 PUSH2 0x199F JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C5A JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1D2E JUMPI PUSH2 0x1D2E PUSH2 0x16FD JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1D3D DUP3 DUP3 ADD PUSH2 0x1713 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP14 DUP6 GT ISZERO PUSH2 0x1D57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 DUP4 ADD SWAP6 JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1D75 JUMPI DUP7 CALLDATALOAD DUP3 MSTORE SWAP6 DUP4 ADD SWAP6 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1D5C JUMP JUMPDEST SWAP11 POP PUSH2 0x1D85 SWAP2 POP POP DUP11 DUP3 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA9 DUP10 DUP4 DUP11 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP PUSH2 0x1DB7 PUSH1 0x60 DUP10 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1DF3 DUP2 PUSH2 0x16D5 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1E0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E1B DUP12 DUP4 DUP13 ADD PUSH2 0x176A JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3D DUP12 DUP4 DUP13 ADD PUSH2 0x176A JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1E4F DUP3 PUSH2 0x1A74 JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1E65 PUSH1 0xA0 DUP12 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E88 DUP11 DUP3 DUP12 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F13 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x196F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1F9C PUSH2 0x1789 DUP3 PUSH2 0x1743 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC2 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x196F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1FED DUP2 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2015 DUP9 DUP3 DUP10 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x202D DUP2 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x203E DUP2 PUSH2 0x1A74 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x205E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A19 DUP2 PUSH2 0x1A74 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x20D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2106 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x20EA JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C875A2646970667358221220 XOR 0xDE MUL PUSH19 0xD08D53F2742E457E0BD79213F679F046AA4238 0xFC DUP7 NOT 0xE9 RETURNDATASIZE SWAP13 SIGNEXTEND 0xEB CALL PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "6": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "REVERT",
      "path": "46"
    },
    "16": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "17": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "POP",
      "path": "46"
    },
    "18": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "21": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "LT",
      "path": "46"
    },
    "22": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "26": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "29": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "SHR",
      "path": "46"
    },
    "32": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "33": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "38": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "GT",
      "path": "46"
    },
    "39": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "43": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "44": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "49": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "50": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14F"
    },
    "53": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "54": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "55": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x8B4BCCCA"
    },
    "60": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "61": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x162"
    },
    "64": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "65": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "66": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9F6FD7AB"
    },
    "71": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "72": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x175"
    },
    "75": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "76": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "77": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB698BE8D"
    },
    "82": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "83": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x188"
    },
    "86": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "87": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "88": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF0B00C9F"
    },
    "93": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "94": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A8"
    },
    "97": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "98": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "99": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF240C7E9"
    },
    "104": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "105": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB"
    },
    "108": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "109": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "112": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "REVERT",
      "path": "46"
    },
    "113": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "114": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "115": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x349DC296"
    },
    "120": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "121": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "125": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "126": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x622ECA77"
    },
    "131": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "132": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xDE"
    },
    "135": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "136": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "137": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7B3BB156"
    },
    "142": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "143": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF1"
    },
    "146": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "147": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "148": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x86ABD826"
    },
    "153": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "154": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x104"
    },
    "157": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "158": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "159": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x8750BC3E"
    },
    "164": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "EQ",
      "path": "46"
    },
    "165": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x127"
    },
    "168": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "169": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "170": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "DUP1",
      "path": "46"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        223,
        11878
      ],
      "op": "REVERT",
      "path": "46"
    },
    "174": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "175": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "178": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xBC"
    },
    "181": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "182": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "184": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17C0"
    },
    "187": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "188": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "189": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CE"
    },
    "192": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "193": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "194": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "196": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "op": "SUB"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "SWAP2"
    },
    "207": {
      "op": "AND"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "214": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "216": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "217": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "DUP1",
      "path": "46"
    },
    "218": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "219": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SUB",
      "path": "46"
    },
    "220": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "221": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "RETURN",
      "path": "46"
    },
    "222": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "223": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "226": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEC"
    },
    "229": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "230": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "232": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1854"
    },
    "235": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "236": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "237": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A6"
    },
    "240": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "241": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "242": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "245": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFF"
    },
    "248": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "249": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "251": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x189A"
    },
    "254": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "255": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "256": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x46A"
    },
    "259": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "260": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "261": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x117"
    },
    "264": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x112"
    },
    "267": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "268": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "270": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1936"
    },
    "273": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "274": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "275": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x62F"
    },
    "278": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "279": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "280": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "282": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "283": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD5"
    },
    "286": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "287": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "288": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "289": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "290": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "291": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19CB"
    },
    "294": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "295": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "296": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13A"
    },
    "299": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x135"
    },
    "302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "305": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19FC"
    },
    "308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "309": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7F4"
    },
    "313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "314": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "315": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD5"
    },
    "321": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "322": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "323": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "324": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "327": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "328": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "330": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "331": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A20"
    },
    "334": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "335": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "336": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "339": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15D"
    },
    "342": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "343": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "345": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A8D"
    },
    "348": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "349": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "350": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB9D"
    },
    "353": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "354": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "355": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "358": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x170"
    },
    "361": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "362": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "364": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1AF1"
    },
    "367": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMP",
      "path": "46"
    },
    "368": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "369": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCFF"
    },
    "372": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMP",
      "path": "46"
    },
    "373": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "374": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "377": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x183"
    },
    "380": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "381": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "383": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BD2"
    },
    "386": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "387": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "388": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFA5"
    },
    "391": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "392": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19B"
    },
    "396": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x196"
    },
    "399": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "400": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "402": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19FC"
    },
    "405": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "406": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "407": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10F6"
    },
    "410": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "411": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "412": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "414": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "415": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD5"
    },
    "418": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "419": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "420": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C33"
    },
    "423": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "424": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "425": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "428": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B6"
    },
    "431": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "432": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "434": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CD7"
    },
    "437": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "438": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "439": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1322"
    },
    "442": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "443": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "444": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "447": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C9"
    },
    "450": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "451": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "453": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DCD"
    },
    "456": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "457": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "458": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1479"
    },
    "461": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "462": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "463": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8874,
        8881
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "465": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        8922
      ],
      "op": "DUP1",
      "path": "46"
    },
    "466": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "468": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "469": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "471": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "472": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E0"
    },
    "475": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "476": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "479": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "480": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "481": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "483": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "484": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "487": {
      "op": "NOT"
    },
    "488": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "489": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "490": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "491": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "492": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "493": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "494": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "495": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "496": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "497": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "498": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "499": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "501": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "502": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "503": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "504": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "505": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "506": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "507": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "508": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "509": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "510": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "512": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "513": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "514": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "522": {
      "op": "SHL"
    },
    "523": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "524": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "525": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "526": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "527": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "528": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "529": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "530": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "533": {
      "op": "DUP1"
    },
    "534": {
      "op": "MLOAD"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "537": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "540": {
      "op": "DUP4"
    },
    "541": {
      "op": "CODECOPY"
    },
    "542": {
      "op": "DUP2"
    },
    "543": {
      "op": "MLOAD"
    },
    "544": {
      "op": "SWAP2"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "547": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x22C"
    },
    "550": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "551": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "552": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "555": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "556": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "557": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "559": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "560": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "562": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "563": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "564": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "565": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "566": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "567": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "568": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "569": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "571": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "572": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "573": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "574": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "575": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "577": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "578": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "579": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9102,
        9115
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "580": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9133,
        9143
      ],
      "op": "DUP8",
      "path": "46"
    },
    "581": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "583": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "584": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "586": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "ADD",
      "path": "46"
    },
    "587": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x258"
    },
    "590": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "591": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "592": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "593": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "594": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "595": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "596": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "599": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8948,
        9157
      ],
      "op": "JUMP",
      "path": "46"
    },
    "600": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "601": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "603": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "604": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "606": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP2",
      "path": "46"
    },
    "607": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP4",
      "path": "46"
    },
    "608": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SUB",
      "path": "46"
    },
    "609": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SUB",
      "path": "46"
    },
    "610": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP2",
      "path": "46"
    },
    "611": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "612": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "613": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "615": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "616": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "DUP1",
      "path": "46"
    },
    "617": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "618": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "619": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "621": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "ADD",
      "path": "46"
    },
    "622": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "623": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        9167
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "624": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        9167
      ],
      "op": "POP",
      "path": "46"
    },
    "625": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9193
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "627": {
      "offset": [
        1599,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "629": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "630": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "632": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "ADD",
      "path": "48"
    },
    "633": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2D9"
    },
    "636": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "637": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C"
    },
    "670": {
      "op": "DUP2"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "op": "PUSH32",
      "value": "0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "707": {
      "op": "DUP3"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH5",
      "value": "0x54696D6529"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "721": {
      "op": "DUP3"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "op": "SWAP1"
    },
    "728": {
      "op": "JUMP"
    },
    "729": {
      "offset": [
        1599,
        1702
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "730": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "732": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "733": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "735": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "DUP2",
      "path": "48"
    },
    "736": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "DUP4",
      "path": "48"
    },
    "737": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "SUB",
      "path": "48"
    },
    "738": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "SUB",
      "path": "48"
    },
    "739": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "DUP2",
      "path": "48"
    },
    "740": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "741": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "742": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "744": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1599,
        1702
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "745": {
      "offset": [
        1584,
        1704
      ],
      "op": "DUP1",
      "path": "48"
    },
    "746": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1584,
        1704
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "747": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1584,
        1704
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "748": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1584,
        1704
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "750": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1584,
        1704
      ],
      "op": "ADD",
      "path": "48"
    },
    "751": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1584,
        1704
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "752": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9287,
        9298
      ],
      "op": "DUP9",
      "path": "46"
    },
    "753": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9345,
        9357
      ],
      "op": "DUP9",
      "path": "46"
    },
    "754": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "756": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "757": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "759": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "ADD",
      "path": "46"
    },
    "760": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x301"
    },
    "763": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "764": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "765": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "768": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9327,
        9359
      ],
      "op": "JUMP",
      "path": "46"
    },
    "769": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "770": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "772": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "773": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "775": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP2",
      "path": "46"
    },
    "776": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP4",
      "path": "46"
    },
    "777": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SUB",
      "path": "46"
    },
    "778": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SUB",
      "path": "46"
    },
    "779": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP2",
      "path": "46"
    },
    "780": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "781": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "782": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "784": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "785": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "DUP1",
      "path": "46"
    },
    "786": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "787": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "788": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "790": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "ADD",
      "path": "46"
    },
    "791": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "792": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9379,
        9389
      ],
      "op": "DUP9",
      "path": "46"
    },
    "793": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "795": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "796": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "798": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "ADD",
      "path": "46"
    },
    "799": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x34A"
    },
    "802": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "803": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "804": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "805": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "806": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "807": {
      "op": "SWAP4"
    },
    "808": {
      "op": "DUP5"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "816": {
      "op": "SHL"
    },
    "817": {
      "op": "SUB"
    },
    "818": {
      "op": "SWAP3"
    },
    "819": {
      "op": "SWAP1"
    },
    "820": {
      "op": "SWAP3"
    },
    "821": {
      "op": "AND"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "824": {
      "op": "DUP5"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "829": {
      "op": "DUP4"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "834": {
      "op": "DUP3"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "839": {
      "op": "ADD"
    },
    "840": {
      "op": "SWAP1"
    },
    "841": {
      "op": "JUMP"
    },
    "842": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "843": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "845": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "846": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "848": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP2",
      "path": "46"
    },
    "849": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP4",
      "path": "46"
    },
    "850": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SUB",
      "path": "46"
    },
    "851": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SUB",
      "path": "46"
    },
    "852": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP2",
      "path": "46"
    },
    "853": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "854": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "855": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "857": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "858": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "DUP1",
      "path": "46"
    },
    "859": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "860": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "861": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "863": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "ADD",
      "path": "46"
    },
    "864": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "865": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "866": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9413
      ],
      "op": "POP",
      "path": "46"
    },
    "867": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9440
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "869": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9484,
        9500
      ],
      "op": "DUP3",
      "path": "46"
    },
    "870": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9502,
        9509
      ],
      "op": "DUP3",
      "path": "46"
    },
    "871": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "873": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "874": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "876": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "ADD",
      "path": "46"
    },
    "877": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x377"
    },
    "880": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "881": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "882": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "883": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F49"
    },
    "886": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9454,
        9511
      ],
      "op": "JUMP",
      "path": "46"
    },
    "887": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "888": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "890": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "891": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "893": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP2",
      "path": "46"
    },
    "894": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP4",
      "path": "46"
    },
    "895": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SUB",
      "path": "46"
    },
    "896": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SUB",
      "path": "46"
    },
    "897": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP2",
      "path": "46"
    },
    "898": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "899": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "900": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "902": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "903": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "DUP1",
      "path": "46"
    },
    "904": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "905": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "906": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "908": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "ADD",
      "path": "46"
    },
    "909": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "910": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9513
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "911": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9513
      ],
      "op": "POP",
      "path": "46"
    },
    "912": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9566
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 0,
      "value": "0x399"
    },
    "915": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9544,
        9552
      ],
      "op": "DUP2",
      "path": "46"
    },
    "916": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9554,
        9564
      ],
      "op": "DUP7",
      "path": "46"
    },
    "917": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9542
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A6"
    },
    "920": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9531,
        9566
      ],
      "op": "JUMP",
      "path": "46"
    },
    "921": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9566
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "922": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9524,
        9566
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "923": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "o",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "934": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "935": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        584,
        591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "937": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        627
      ],
      "op": "DUP2",
      "path": "46",
      "statement": 1
    },
    "938": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "939": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        638,
        640
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x41"
    },
    "941": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        640
      ],
      "op": "EQ",
      "path": "46"
    },
    "942": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3F5"
    },
    "945": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "946": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "948": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "949": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP2",
      "path": "46"
    },
    "957": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "960": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "962": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP3",
      "path": "46"
    },
    "963": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "ADD",
      "path": "46"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "op": "MSTORE"
    },
    "972": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "998": {
      "op": "DUP3"
    },
    "999": {
      "op": "ADD"
    },
    "1000": {
      "op": "MSTORE"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1005": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1007": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1008": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1009": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1010": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SUB",
      "path": "46"
    },
    "1011": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1012": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "46"
    },
    "1013": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1014": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        856,
        858
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1016": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1017": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1018": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "ADD",
      "path": "46"
    },
    "1019": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1020": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        939,
        941
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1022": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1023": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1024": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "ADD",
      "path": "46"
    },
    "1025": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        915,
        945
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1026": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1060,
        1062
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1028": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1029": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1030": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "ADD",
      "path": "46"
    },
    "1031": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1036,
        1066
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1032": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP4",
      "path": "46",
      "statement": 2
    },
    "1033": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1034": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        677,
        690
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1036": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1037": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1038": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1039": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1040": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1041": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "1042": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1043": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1044": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1045": {
      "op": "DUP11"
    },
    "1046": {
      "op": "SWAP1"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1049": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "BYTE",
      "path": "46"
    },
    "1050": {
      "op": "SWAP3"
    },
    "1051": {
      "op": "DUP6"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "op": "DUP4"
    },
    "1054": {
      "op": "SWAP1"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "DUP5"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "op": "DUP4"
    },
    "1059": {
      "op": "SWAP1"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1063": {
      "op": "DUP5"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "DUP2"
    },
    "1066": {
      "op": "SWAP1"
    },
    "1067": {
      "op": "MSTORE"
    },
    "1068": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1069": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1070": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "1072": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1078": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1080": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1081": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1083": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1084": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1085": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1086": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1087": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1088": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1089": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1090": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1091": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "GAS",
      "path": "46"
    },
    "1092": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1093": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1094": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1095": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1096": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x455"
    },
    "1099": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1100": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1101": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1103": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1104": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1105": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1106": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1108": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1109": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "op": "POP"
    },
    "1112": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1114": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1117": {
      "op": "NOT"
    },
    "1118": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "1119": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1120": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1121": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "POP"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "o",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1130": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1131": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9777,
        9784
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1133": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        9825
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1134": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1136": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1137": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1139": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "1140": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x47C"
    },
    "1143": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1144": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "1147": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1148": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1149": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1151": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1152": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1155": {
      "op": "NOT"
    },
    "1156": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1157": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1158": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "1159": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "1160": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1161": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1162": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1163": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1164": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1165": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1166": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1167": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1169": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1170": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "1171": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "1172": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1173": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1174": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1175": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "1176": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1177": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1178": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "1180": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1181": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1182": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1190": {
      "op": "SHL"
    },
    "1191": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "1192": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1193": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "1194": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1195": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1196": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1197": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "1198": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1201": {
      "op": "DUP1"
    },
    "1202": {
      "op": "MLOAD"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1205": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "1208": {
      "op": "DUP4"
    },
    "1209": {
      "op": "CODECOPY"
    },
    "1210": {
      "op": "DUP2"
    },
    "1211": {
      "op": "MLOAD"
    },
    "1212": {
      "op": "SWAP2"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1215": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4C8"
    },
    "1218": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "1219": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "1220": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "1223": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1224": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1225": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1227": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1228": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1230": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1231": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1232": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "1233": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "1234": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1235": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1236": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1237": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1239": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1240": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1241": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1242": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1243": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1245": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "1246": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1247": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10005,
        10018
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "1248": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10036,
        10046
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1249": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1251": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1252": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1254": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "ADD",
      "path": "46"
    },
    "1255": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x4F4"
    },
    "1258": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1259": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1260": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1261": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1262": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1263": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1264": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "1267": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9851,
        10060
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1268": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1269": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1271": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1272": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1274": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1275": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1276": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SUB",
      "path": "46"
    },
    "1277": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SUB",
      "path": "46"
    },
    "1278": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1279": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1280": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1281": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1283": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1284": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1285": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1286": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1287": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1289": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "ADD",
      "path": "46"
    },
    "1290": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1291": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        10070
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1292": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        10070
      ],
      "op": "POP",
      "path": "46"
    },
    "1293": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10096
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1295": {
      "offset": [
        1763,
        1841
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1297": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1298": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1300": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "ADD",
      "path": "48"
    },
    "1301": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x556"
    },
    "1304": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1305": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1358": {
      "op": "DUP3"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "op": "MSTORE"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "SWAP1"
    },
    "1365": {
      "op": "JUMP"
    },
    "1366": {
      "offset": [
        1763,
        1841
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1367": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1369": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1370": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1372": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1373": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1374": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "SUB",
      "path": "48"
    },
    "1375": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "SUB",
      "path": "48"
    },
    "1376": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1377": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1378": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1379": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1381": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1763,
        1841
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1382": {
      "offset": [
        1748,
        1843
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1383": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1748,
        1843
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1384": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1748,
        1843
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1385": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1748,
        1843
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1387": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1748,
        1843
      ],
      "op": "ADD",
      "path": "48"
    },
    "1388": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1748,
        1843
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1389": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10219,
        10224
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1390": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1392": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1393": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1395": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "ADD",
      "path": "46"
    },
    "1396": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x57D"
    },
    "1399": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1400": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1401": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "1404": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10201,
        10226
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1405": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1406": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1408": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1409": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1411": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1412": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1413": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SUB",
      "path": "46"
    },
    "1414": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SUB",
      "path": "46"
    },
    "1415": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1416": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1417": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1418": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1420": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1421": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1422": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1423": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1424": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1426": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "ADD",
      "path": "46"
    },
    "1427": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1428": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10275,
        10287
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1429": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1431": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1432": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1434": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "ADD",
      "path": "46"
    },
    "1435": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5A4"
    },
    "1438": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1439": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1440": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "1443": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10257,
        10289
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1444": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1445": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1447": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1448": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1451": {
      "op": "NOT"
    },
    "1452": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1453": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1454": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SUB",
      "path": "46"
    },
    "1455": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "ADD",
      "path": "46"
    },
    "1456": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1457": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1458": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1459": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1460": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1461": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1462": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1463": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1465": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1466": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1467": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "ADD",
      "path": "46"
    },
    "1468": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1469": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1470": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1471": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "ADD",
      "path": "46"
    },
    "1472": {
      "op": "SWAP5"
    },
    "1473": {
      "op": "SWAP1"
    },
    "1474": {
      "op": "SWAP5"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "DUP2"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "SWAP2"
    },
    "1479": {
      "op": "SWAP1"
    },
    "1480": {
      "op": "SWAP2"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "SWAP2"
    },
    "1487": {
      "op": "SWAP1"
    },
    "1488": {
      "op": "SWAP2"
    },
    "1489": {
      "op": "MSTORE"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1495": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1496": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1498": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1499": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1500": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SUB",
      "path": "46"
    },
    "1501": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SUB",
      "path": "46"
    },
    "1502": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1503": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1504": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1505": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1507": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1508": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1509": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1510": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1511": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1513": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "ADD",
      "path": "46"
    },
    "1514": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1515": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10315
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1516": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10315
      ],
      "op": "POP",
      "path": "46"
    },
    "1517": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10342
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1519": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10386,
        10402
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1520": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10404,
        10411
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1521": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1523": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1524": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1526": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "ADD",
      "path": "46"
    },
    "1527": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x601"
    },
    "1530": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1531": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1532": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1533": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F49"
    },
    "1536": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10356,
        10413
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1537": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1538": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1540": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1541": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1543": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1544": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1545": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SUB",
      "path": "46"
    },
    "1546": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SUB",
      "path": "46"
    },
    "1547": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1548": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1549": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1550": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1552": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1553": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1554": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1555": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1556": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1558": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "ADD",
      "path": "46"
    },
    "1559": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1560": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10415
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1561": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10415
      ],
      "op": "POP",
      "path": "46"
    },
    "1562": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10468
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 3,
      "value": "0x623"
    },
    "1565": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10446,
        10454
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1566": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10456,
        10466
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1567": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10444
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A6"
    },
    "1570": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10433,
        10468
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1571": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10468
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1572": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10426,
        10468
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "1573": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "op": "POP"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "op": "POP"
    },
    "1581": {
      "op": "POP"
    },
    "1582": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "o",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1583": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1584": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1586": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1587": {
      "op": "PUSH4",
      "value": "0x1C3FE463"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1596": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "op": "DUP3"
    },
    "1606": {
      "op": "DUP2"
    },
    "1607": {
      "op": "AND"
    },
    "1608": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1610": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1611": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1612": {
      "op": "MSTORE"
    },
    "1613": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1615": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1616": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1618": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1619": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1620": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1621": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1622": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1623": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1624": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1625": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1626": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1627": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1628": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "AND",
      "path": "46"
    },
    "1629": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1630": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70FF918C"
    },
    "1635": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1641": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1643": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1644": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1645": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1646": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SUB",
      "path": "46"
    },
    "1647": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1648": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1649": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "GAS",
      "path": "46"
    },
    "1650": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1651": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1652": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1653": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1654": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x683"
    },
    "1657": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1658": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1659": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1661": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1662": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1663": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1664": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1666": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1667": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1668": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1669": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1670": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1671": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1672": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1674": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1675": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1676": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1678": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "NOT",
      "path": "46"
    },
    "1679": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1681": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1682": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1683": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "AND",
      "path": "46"
    },
    "1684": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1685": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1686": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1687": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1689": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1690": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1691": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1692": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1693": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1694": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6A7"
    },
    "1697": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1698": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1699": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "1702": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1703": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1704": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1826,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1705": {
      "op": "POP"
    },
    "1706": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1891,
        1899
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 4
    },
    "1707": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6EC"
    },
    "1710": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1711": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1713": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1722": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1725": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1727": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1728": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "ADD",
      "path": "46"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1734": {
      "op": "DUP3"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "op": "MSTORE"
    },
    "1737": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1762": {
      "op": "DUP3"
    },
    "1763": {
      "op": "ADD"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1767": {
      "op": "ADD"
    },
    "1768": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3EC"
    },
    "1771": {
      "op": "JUMP"
    },
    "1772": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1773": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6F4"
    },
    "1776": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1699"
    },
    "1779": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1780": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1781": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 5,
      "value": "0x40"
    },
    "1783": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1784": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1793": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1794": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1796": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1797": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1798": {
      "op": "DUP4"
    },
    "1799": {
      "op": "SWAP1"
    },
    "1800": {
      "op": "MSTORE"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1810": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "AND",
      "path": "46"
    },
    "1811": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1812": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "1817": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1823": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1825": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1826": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1827": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1828": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SUB",
      "path": "46"
    },
    "1829": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1830": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1831": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "GAS",
      "path": "46"
    },
    "1832": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1833": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1834": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1835": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1836": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x739"
    },
    "1839": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1840": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1841": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1843": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1844": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1845": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1846": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1848": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1849": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1850": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1851": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1852": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1853": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1854": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1856": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1857": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1858": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1860": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1861": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1862": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1864": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1865": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1866": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1867": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1870": {
      "op": "NOT"
    },
    "1871": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "1872": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1873": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1874": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1876": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1877": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x761"
    },
    "1880": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1881": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1882": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1883": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1884": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1885": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1FCA"
    },
    "1888": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1889": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1890": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1891": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1892": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "1894": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1895": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "ADD",
      "path": "46"
    },
    "1896": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1897": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1898": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1899": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1901": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1902": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "ADD",
      "path": "46"
    },
    "1903": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1904": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1905": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1906": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1908": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1909": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "ADD",
      "path": "46"
    },
    "1910": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1911": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1912": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1913": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1914": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1916": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1917": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "ADD",
      "path": "46"
    },
    "1918": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1919": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1920": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1921": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1928": {
      "op": "SHL"
    },
    "1929": {
      "op": "SUB"
    },
    "1930": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1931": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1932": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "1933": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1934": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1935": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2168
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 6,
      "value": "0x1"
    },
    "1937": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2188
      ],
      "op": "EQ",
      "path": "46"
    },
    "1938": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7CD"
    },
    "1941": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1942": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1944": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1953": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1956": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1958": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1959": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "ADD",
      "path": "46"
    },
    "1960": {
      "op": "MSTORE"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1965": {
      "op": "DUP3"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "MSTORE"
    },
    "1968": {
      "op": "PUSH13",
      "value": "0x24B9903737BA1030903AB9B2B9"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1987": {
      "op": "DUP3"
    },
    "1988": {
      "op": "ADD"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3EC"
    },
    "1996": {
      "op": "JUMP"
    },
    "1997": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1998": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 7,
      "value": "0x20"
    },
    "2000": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2001": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "ADD",
      "path": "46"
    },
    "2002": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2003": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2005": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2006": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "ADD",
      "path": "46"
    },
    "2007": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2008": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "2010": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2011": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "ADD",
      "path": "46"
    },
    "2012": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2013": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2015": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2016": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2017": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "ADD",
      "path": "46"
    },
    "2018": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2019": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2020": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "2021": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2022": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "2023": {
      "op": "POP"
    },
    "2024": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2025": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "POP"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2036": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2037": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4181,
        4205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "2039": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4219,
        4249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2041": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4263,
        4280
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2042": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4294,
        4308
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2044": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4322,
        4338
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2045": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2047": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4385,
        4416
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2048": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4430,
        4453
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2050": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4467,
        4493
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2051": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4533
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2053": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4546,
        4556
      ],
      "op": "DUP11",
      "path": "46"
    },
    "2054": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2055": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "POP",
      "path": "46"
    },
    "2056": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4595
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 8
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "AND",
      "path": "46"
    },
    "2066": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x59CA2D03"
    },
    "2071": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2073": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2074": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2075": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2080": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "2081": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2083": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SHL",
      "path": "46"
    },
    "2084": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2085": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2086": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2088": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2089": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2091": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2093": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2094": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2095": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2096": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SUB",
      "path": "46"
    },
    "2097": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2098": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2099": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "GAS",
      "path": "46"
    },
    "2100": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2101": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2102": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2103": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2104": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x845"
    },
    "2107": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2108": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2109": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2111": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2112": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2113": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2114": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2116": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2117": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2118": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2119": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2120": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2121": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2122": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2124": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2125": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2126": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2128": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2129": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2130": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2132": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2133": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2134": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2135": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2138": {
      "op": "NOT"
    },
    "2139": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "2140": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2141": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2142": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2144": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2145": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x86D"
    },
    "2148": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2149": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2150": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2151": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2152": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2153": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x204C"
    },
    "2156": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2157": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2158": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4628
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "SUB"
    },
    "2167": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "AND",
      "path": "46"
    },
    "2168": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1D5FD3CA"
    },
    "2173": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2175": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2176": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2177": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2182": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2183": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2185": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SHL",
      "path": "46"
    },
    "2186": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2187": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2188": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2190": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2191": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2193": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2195": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2196": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2197": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2198": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SUB",
      "path": "46"
    },
    "2199": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2200": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2201": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "GAS",
      "path": "46"
    },
    "2202": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2203": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2204": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2205": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2206": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8AB"
    },
    "2209": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2210": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2211": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2213": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2214": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2215": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2216": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2218": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2219": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2220": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2221": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2222": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2223": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2224": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2226": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2227": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2228": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2230": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "NOT",
      "path": "46"
    },
    "2231": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2233": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2234": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2235": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2236": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2237": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2238": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2239": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2241": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2242": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2243": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2244": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2245": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2246": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8CF"
    },
    "2249": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2250": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2251": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "2254": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2255": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2256": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4673
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2263": {
      "op": "SHL"
    },
    "2264": {
      "op": "SUB"
    },
    "2265": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "AND",
      "path": "46"
    },
    "2266": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF00D6274"
    },
    "2271": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2273": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2274": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2275": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2280": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2281": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2283": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SHL",
      "path": "46"
    },
    "2284": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2285": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2286": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2288": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2289": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2291": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2293": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2294": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2295": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2296": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SUB",
      "path": "46"
    },
    "2297": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2298": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2299": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "GAS",
      "path": "46"
    },
    "2300": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2301": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2304": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x90D"
    },
    "2307": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2309": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2311": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2312": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2314": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2316": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2319": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2320": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2321": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2322": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2324": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2328": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "NOT",
      "path": "46"
    },
    "2329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2331": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2332": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2333": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2334": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2335": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2336": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2337": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2339": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2340": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2341": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2342": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2343": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2344": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x931"
    },
    "2347": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2348": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2349": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2080"
    },
    "2352": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2353": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2354": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4708
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "op": "SUB"
    },
    "2363": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "AND",
      "path": "46"
    },
    "2364": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1F2E1339"
    },
    "2369": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2371": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2372": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2373": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2378": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2379": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2381": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SHL",
      "path": "46"
    },
    "2382": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2383": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2384": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2386": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2387": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2389": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2391": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2392": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2393": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2394": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SUB",
      "path": "46"
    },
    "2395": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2396": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2397": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "GAS",
      "path": "46"
    },
    "2398": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2399": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2400": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2401": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2402": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x96F"
    },
    "2405": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2406": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2407": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2409": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2410": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2411": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2412": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2414": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2415": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2416": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2417": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2418": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2419": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2420": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2422": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2423": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2424": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2426": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "NOT",
      "path": "46"
    },
    "2427": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2429": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2430": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2431": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2432": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2433": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2434": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2435": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2437": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2438": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2439": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2440": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2441": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2442": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x993"
    },
    "2445": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2446": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2447": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2080"
    },
    "2450": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2451": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2452": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4740
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2459": {
      "op": "SHL"
    },
    "2460": {
      "op": "SUB"
    },
    "2461": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "AND",
      "path": "46"
    },
    "2462": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "2467": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2469": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2470": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2471": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2476": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "2477": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2479": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SHL",
      "path": "46"
    },
    "2480": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2481": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2482": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2484": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2485": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2487": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2489": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2490": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2491": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2492": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SUB",
      "path": "46"
    },
    "2493": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2494": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2495": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "GAS",
      "path": "46"
    },
    "2496": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2497": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2498": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2499": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2500": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9D1"
    },
    "2503": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2504": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2505": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2507": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2508": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2509": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2510": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2512": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2513": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2514": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2515": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2516": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2517": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2518": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2520": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2521": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2522": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2524": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "NOT",
      "path": "46"
    },
    "2525": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2527": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2528": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2529": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "2530": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2531": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2532": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2533": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2535": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2536": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2537": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2538": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2539": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2540": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9F5"
    },
    "2543": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2544": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2545": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "2548": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2549": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2550": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4771
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "op": "SUB"
    },
    "2559": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "AND",
      "path": "46"
    },
    "2560": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE68777D7"
    },
    "2565": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2567": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2568": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2569": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2574": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "2575": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2577": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SHL",
      "path": "46"
    },
    "2578": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2579": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2580": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2582": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2583": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2585": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2587": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2588": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2589": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2590": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SUB",
      "path": "46"
    },
    "2591": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2592": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2593": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "GAS",
      "path": "46"
    },
    "2594": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2595": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2596": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2597": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2598": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA33"
    },
    "2601": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2602": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2603": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2605": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2606": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2607": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2608": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2610": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2611": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2612": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2613": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2614": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2615": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2616": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2618": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2619": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2620": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2622": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "NOT",
      "path": "46"
    },
    "2623": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2625": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2626": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2627": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "2628": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2629": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2630": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2631": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2633": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2634": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2635": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2636": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2637": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2638": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA57"
    },
    "2641": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2642": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2643": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "2646": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2647": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2648": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4805
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2655": {
      "op": "SHL"
    },
    "2656": {
      "op": "SUB"
    },
    "2657": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "AND",
      "path": "46"
    },
    "2658": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9C630A88"
    },
    "2663": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2665": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2666": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2667": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2672": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "2673": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2675": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SHL",
      "path": "46"
    },
    "2676": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2677": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2678": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2680": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2681": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2683": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2685": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2686": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2687": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2688": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SUB",
      "path": "46"
    },
    "2689": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2690": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2691": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "GAS",
      "path": "46"
    },
    "2692": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2693": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2694": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2695": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2696": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA95"
    },
    "2699": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2700": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2701": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2703": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2704": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2705": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2706": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2708": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2709": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2710": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2711": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2712": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2713": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2714": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2716": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2717": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2718": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2720": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "NOT",
      "path": "46"
    },
    "2721": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2723": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2724": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2725": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "2726": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2727": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2728": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2729": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2731": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2732": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2733": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2734": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2735": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2736": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAB9"
    },
    "2739": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2740": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2741": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "2744": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2745": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2746": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4851
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "AND",
      "path": "46"
    },
    "2756": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1343E9A5"
    },
    "2761": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2763": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2764": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2765": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2770": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "2771": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2773": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SHL",
      "path": "46"
    },
    "2774": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2775": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2776": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2778": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2779": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2781": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2783": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2784": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2785": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2786": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SUB",
      "path": "46"
    },
    "2787": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2788": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2789": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "GAS",
      "path": "46"
    },
    "2790": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2791": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2792": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2793": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2794": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAF7"
    },
    "2797": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2798": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2799": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2801": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2802": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2803": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2804": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2806": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2807": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2808": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2809": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2810": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2811": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2812": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2814": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2815": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2816": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2818": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "NOT",
      "path": "46"
    },
    "2819": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2821": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2822": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2823": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "2824": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2825": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2826": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2827": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2829": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2830": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2831": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2832": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2833": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2834": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB1B"
    },
    "2837": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2838": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2839": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "2842": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2843": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2844": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4889
      ],
      "op": "DUP9",
      "path": "46"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "SUB"
    },
    "2853": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "AND",
      "path": "46"
    },
    "2854": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE810A58E"
    },
    "2859": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2861": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2862": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2863": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2868": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "2869": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2871": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SHL",
      "path": "46"
    },
    "2872": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2873": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2874": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2876": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2877": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2879": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2881": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2882": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2883": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2884": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SUB",
      "path": "46"
    },
    "2885": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2886": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2887": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "GAS",
      "path": "46"
    },
    "2888": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2889": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2890": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2891": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2892": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB59"
    },
    "2895": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2896": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2897": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2899": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2900": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2901": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2902": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2904": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2905": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2906": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2907": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2908": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2909": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2910": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2912": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2913": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2914": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2916": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "NOT",
      "path": "46"
    },
    "2917": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2919": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2920": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2921": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "2922": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2923": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2924": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2925": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2927": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2928": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2929": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2930": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2931": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2932": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB7D"
    },
    "2935": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2936": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2937": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "2940": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2941": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2942": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2943": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2944": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2945": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2946": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2947": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2948": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2949": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2950": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2951": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2952": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2953": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2954": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2955": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2956": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2957": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2958": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2959": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2960": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2961": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2962": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2963": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "2964": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "2965": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2966": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2967": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2968": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2969": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "2970": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "2971": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "POP",
      "path": "46"
    },
    "2972": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "o",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2973": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2974": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5915,
        5922
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2976": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        5963
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2977": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2979": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2980": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2982": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "2983": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xBAF"
    },
    "2986": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2987": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "2990": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2991": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2992": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2994": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2995": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2998": {
      "op": "NOT"
    },
    "2999": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3000": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3001": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "3002": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "3003": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3004": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3005": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3006": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3007": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3008": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3009": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3010": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3012": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3013": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3014": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "3015": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3016": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3017": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3018": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "3019": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3020": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3021": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "3023": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3024": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3025": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3033": {
      "op": "SHL"
    },
    "3034": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3035": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3036": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "3037": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3038": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3039": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3040": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3041": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3044": {
      "op": "DUP1"
    },
    "3045": {
      "op": "MLOAD"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3048": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "3051": {
      "op": "DUP4"
    },
    "3052": {
      "op": "CODECOPY"
    },
    "3053": {
      "op": "DUP2"
    },
    "3054": {
      "op": "MLOAD"
    },
    "3055": {
      "op": "SWAP2"
    },
    "3056": {
      "op": "MSTORE"
    },
    "3057": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3058": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xBFB"
    },
    "3061": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3062": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "3063": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "3066": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3067": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3068": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3070": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3071": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3073": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3074": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3075": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "3076": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "3077": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3078": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3079": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3080": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3082": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3083": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3084": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3085": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3086": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3088": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "3089": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3090": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6143,
        6156
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "3091": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6174,
        6184
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3092": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3094": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3095": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3097": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "ADD",
      "path": "46"
    },
    "3098": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC27"
    },
    "3101": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3102": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3103": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3104": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3105": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3106": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3107": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "3110": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3111": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3112": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3114": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3115": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3117": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3118": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3119": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "3120": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "3121": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3122": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3123": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3124": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3126": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3127": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3128": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3129": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3130": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3132": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "ADD",
      "path": "46"
    },
    "3133": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3134": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3135": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "POP",
      "path": "46"
    },
    "3136": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6219,
        6234
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3138": {
      "offset": [
        1092,
        1185
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3140": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3141": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3143": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "ADD",
      "path": "48"
    },
    "3144": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xC9A"
    },
    "3147": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3148": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3181": {
      "op": "DUP2"
    },
    "3182": {
      "op": "MSTORE"
    },
    "3183": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3218": {
      "op": "DUP3"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "op": "MSTORE"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3223": {
      "op": "ADD"
    },
    "3224": {
      "op": "SWAP1"
    },
    "3225": {
      "op": "JUMP"
    },
    "3226": {
      "offset": [
        1092,
        1185
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3227": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3229": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3230": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3232": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3233": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3234": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "SUB",
      "path": "48"
    },
    "3235": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "SUB",
      "path": "48"
    },
    "3236": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3237": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3238": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3239": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3241": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1092,
        1185
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3242": {
      "offset": [
        1077,
        1187
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3243": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1077,
        1187
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3244": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1077,
        1187
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3245": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1077,
        1187
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3247": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1077,
        1187
      ],
      "op": "ADD",
      "path": "48"
    },
    "3248": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1077,
        1187
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3249": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6325,
        6332
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3250": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6350,
        6358
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3251": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6405,
        6419
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3252": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3254": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3255": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3257": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3258": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC3"
    },
    "3261": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3262": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3263": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "3266": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3267": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3268": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3270": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3271": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3274": {
      "op": "NOT"
    },
    "3275": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3276": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3277": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SUB",
      "path": "46"
    },
    "3278": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3279": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3280": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3281": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3282": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3283": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3284": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3285": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3286": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3288": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3289": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3290": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "ADD",
      "path": "46"
    },
    "3291": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3292": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3293": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3294": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "ADD",
      "path": "46"
    },
    "3295": {
      "op": "SWAP6"
    },
    "3296": {
      "op": "SWAP1"
    },
    "3297": {
      "op": "SWAP6"
    },
    "3298": {
      "op": "MSTORE"
    },
    "3299": {
      "op": "DUP2"
    },
    "3300": {
      "op": "ADD"
    },
    "3301": {
      "op": "SWAP3"
    },
    "3302": {
      "op": "SWAP1"
    },
    "3303": {
      "op": "SWAP3"
    },
    "3304": {
      "op": "MSTORE"
    },
    "3305": {
      "op": "ISZERO"
    },
    "3306": {
      "op": "ISZERO"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3309": {
      "op": "DUP3"
    },
    "3310": {
      "op": "ADD"
    },
    "3311": {
      "op": "MSTORE"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3314": {
      "op": "DUP2"
    },
    "3315": {
      "op": "ADD"
    },
    "3316": {
      "op": "SWAP2"
    },
    "3317": {
      "op": "SWAP1"
    },
    "3318": {
      "op": "SWAP2"
    },
    "3319": {
      "op": "MSTORE"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3322": {
      "op": "ADD"
    },
    "3323": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x34A"
    },
    "3326": {
      "op": "JUMP"
    },
    "3327": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3328": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10904,
        10911
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3330": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10928,
        10952
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3331": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3333": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3334": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3336": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "3337": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD11"
    },
    "3340": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3341": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "3344": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3345": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3346": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3348": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3349": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3352": {
      "op": "NOT"
    },
    "3353": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3354": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3355": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "3356": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "3357": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3358": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3359": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3360": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3361": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3362": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3363": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3364": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3366": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3367": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3368": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "3369": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3370": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3371": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3372": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "3373": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3374": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3375": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "3377": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3378": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3379": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3387": {
      "op": "SHL"
    },
    "3388": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "3389": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3390": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "3391": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3392": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3393": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3394": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3395": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3398": {
      "op": "DUP1"
    },
    "3399": {
      "op": "MLOAD"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3402": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "3405": {
      "op": "DUP4"
    },
    "3406": {
      "op": "CODECOPY"
    },
    "3407": {
      "op": "DUP2"
    },
    "3408": {
      "op": "MLOAD"
    },
    "3409": {
      "op": "SWAP2"
    },
    "3410": {
      "op": "MSTORE"
    },
    "3411": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3412": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD5D"
    },
    "3415": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "3416": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "3417": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "3420": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3421": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3422": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3424": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3425": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3427": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3428": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3429": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "3430": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "3431": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3432": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3433": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3434": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3436": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3437": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3438": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3439": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3440": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3442": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "3443": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3444": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11132,
        11145
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "3445": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11163,
        11171
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3446": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3448": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3449": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3451": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "ADD",
      "path": "46"
    },
    "3452": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD89"
    },
    "3455": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3456": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3457": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3458": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3459": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3460": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3461": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "3464": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10978,
        11185
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3465": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3466": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3468": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3469": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3471": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3472": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3473": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SUB",
      "path": "46"
    },
    "3474": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SUB",
      "path": "46"
    },
    "3475": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3476": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3477": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3478": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3480": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10978,
        11185
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3481": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3482": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3483": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3484": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3486": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "ADD",
      "path": "46"
    },
    "3487": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10955,
        11195
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3488": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10928,
        11195
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3489": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10928,
        11195
      ],
      "op": "POP",
      "path": "46"
    },
    "3490": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11206,
        11221
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3492": {
      "offset": [
        1901,
        2143
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3494": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3495": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3497": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "ADD",
      "path": "48"
    },
    "3498": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xEAD"
    },
    "3501": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3502": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "3535": {
      "op": "DUP2"
    },
    "3536": {
      "op": "MSTORE"
    },
    "3537": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3572": {
      "op": "DUP3"
    },
    "3573": {
      "op": "ADD"
    },
    "3574": {
      "op": "MSTORE"
    },
    "3575": {
      "op": "PUSH32",
      "value": "0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "op": "PUSH32",
      "value": "0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3648": {
      "op": "DUP3"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "MSTORE"
    },
    "3651": {
      "op": "PUSH32",
      "value": "0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3686": {
      "op": "DUP3"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "MSTORE"
    },
    "3689": {
      "op": "PUSH32",
      "value": "0x652C616464726573732077686974654C6973744E46542C616464726573732077"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH16",
      "value": "0x686974654C69737457616C6C65747329"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3746": {
      "op": "SHL"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3749": {
      "op": "DUP3"
    },
    "3750": {
      "op": "ADD"
    },
    "3751": {
      "op": "MSTORE"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "op": "SWAP1"
    },
    "3756": {
      "op": "JUMP"
    },
    "3757": {
      "offset": [
        1901,
        2143
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3758": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3760": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3761": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3763": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3764": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3765": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "SUB",
      "path": "48"
    },
    "3766": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "SUB",
      "path": "48"
    },
    "3767": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3768": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3769": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3770": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3772": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1901,
        2143
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3773": {
      "offset": [
        1886,
        2145
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3774": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1886,
        2145
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3775": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1886,
        2145
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3776": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1886,
        2145
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3778": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1886,
        2145
      ],
      "op": "ADD",
      "path": "48"
    },
    "3779": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1886,
        2145
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3780": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11343,
        11353
      ],
      "op": "DUP15",
      "path": "46"
    },
    "3781": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3783": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3784": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3786": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "ADD",
      "path": "46"
    },
    "3787": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xED4"
    },
    "3790": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3791": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3792": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "3795": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11325,
        11355
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3796": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3797": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3799": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3800": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3803": {
      "op": "NOT"
    },
    "3804": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3805": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3806": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "SUB",
      "path": "46"
    },
    "3807": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "ADD",
      "path": "46"
    },
    "3808": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3809": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3810": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3811": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3812": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3813": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3814": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3815": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11325,
        11355
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3817": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3818": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3819": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "ADD",
      "path": "46"
    },
    "3820": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11314,
        11357
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3821": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3822": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3823": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "ADD",
      "path": "46"
    },
    "3824": {
      "op": "SWAP4"
    },
    "3825": {
      "op": "SWAP1"
    },
    "3826": {
      "op": "SWAP4"
    },
    "3827": {
      "op": "MSTORE"
    },
    "3828": {
      "op": "DUP2"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "SWAP2"
    },
    "3831": {
      "op": "SWAP1"
    },
    "3832": {
      "op": "SWAP2"
    },
    "3833": {
      "op": "MSTORE"
    },
    "3834": {
      "op": "DUP14"
    },
    "3835": {
      "op": "ISZERO"
    },
    "3836": {
      "op": "ISZERO"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3839": {
      "op": "DUP3"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "DUP13"
    },
    "3843": {
      "op": "ISZERO"
    },
    "3844": {
      "op": "ISZERO"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3847": {
      "op": "DUP3"
    },
    "3848": {
      "op": "ADD"
    },
    "3849": {
      "op": "MSTORE"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3852": {
      "op": "DUP2"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "DUP13"
    },
    "3855": {
      "op": "SWAP1"
    },
    "3856": {
      "op": "MSTORE"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3859": {
      "op": "DUP2"
    },
    "3860": {
      "op": "ADD"
    },
    "3861": {
      "op": "DUP12"
    },
    "3862": {
      "op": "SWAP1"
    },
    "3863": {
      "op": "MSTORE"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3866": {
      "op": "DUP2"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "op": "DUP11"
    },
    "3869": {
      "op": "SWAP1"
    },
    "3870": {
      "op": "MSTORE"
    },
    "3871": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3874": {
      "op": "DUP2"
    },
    "3875": {
      "op": "ADD"
    },
    "3876": {
      "op": "DUP10"
    },
    "3877": {
      "op": "SWAP1"
    },
    "3878": {
      "op": "MSTORE"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3885": {
      "op": "SHL"
    },
    "3886": {
      "op": "SUB"
    },
    "3887": {
      "op": "DUP1"
    },
    "3888": {
      "op": "DUP10"
    },
    "3889": {
      "op": "AND"
    },
    "3890": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "3893": {
      "op": "DUP4"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "DUP8"
    },
    "3897": {
      "op": "AND"
    },
    "3898": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "3907": {
      "op": "ADD"
    },
    "3908": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3910": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3911": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3913": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3914": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3915": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SUB",
      "path": "46"
    },
    "3916": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SUB",
      "path": "46"
    },
    "3917": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3918": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3919": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3920": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3922": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11247,
        11706
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3923": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3924": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3925": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3926": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3928": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "ADD",
      "path": "46"
    },
    "3929": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11224,
        11716
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3930": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11206,
        11716
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3931": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11206,
        11716
      ],
      "op": "POP",
      "path": "46"
    },
    "3932": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11727,
        11743
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3934": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11787,
        11803
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3935": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11805,
        11812
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3936": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3938": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3939": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3941": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "ADD",
      "path": "46"
    },
    "3942": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF70"
    },
    "3945": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3946": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3947": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3948": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F49"
    },
    "3951": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11757,
        11814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3952": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3953": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3955": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3956": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3958": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3959": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3960": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SUB",
      "path": "46"
    },
    "3961": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SUB",
      "path": "46"
    },
    "3962": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3963": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3964": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3965": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3967": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11757,
        11814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3968": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3969": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3970": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3971": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3973": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "ADD",
      "path": "46"
    },
    "3974": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11746,
        11816
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3975": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11727,
        11816
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3976": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11727,
        11816
      ],
      "op": "POP",
      "path": "46"
    },
    "3977": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11834,
        11869
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 9,
      "value": "0xF92"
    },
    "3980": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11847,
        11855
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3981": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11857,
        11867
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3982": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11834,
        11845
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A6"
    },
    "3985": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11834,
        11869
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3986": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11834,
        11869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3987": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11827,
        11869
      ],
      "op": "SWAP16",
      "path": "46"
    },
    "3988": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11876
      ],
      "op": "SWAP15",
      "path": "46"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "op": "POP"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "POP"
    },
    "3994": {
      "op": "POP"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "op": "POP"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "POP"
    },
    "4000": {
      "op": "POP"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "op": "POP"
    },
    "4004": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        10482,
        11876
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4005": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4006": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5090,
        5097
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4008": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5138
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4009": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4011": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4012": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4014": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "4015": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xFB7"
    },
    "4018": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4019": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "4022": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4023": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4024": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4026": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4027": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4030": {
      "op": "NOT"
    },
    "4031": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4032": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4033": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "4034": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "4035": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4036": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4037": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4038": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4039": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4040": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4041": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4042": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4044": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4045": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4046": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "4047": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4048": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4049": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4050": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "4051": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4052": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4053": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4055": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4056": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4057": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4067": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4068": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "4069": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4070": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4071": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4072": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4073": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4076": {
      "op": "DUP1"
    },
    "4077": {
      "op": "MLOAD"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4080": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "4083": {
      "op": "DUP4"
    },
    "4084": {
      "op": "CODECOPY"
    },
    "4085": {
      "op": "DUP2"
    },
    "4086": {
      "op": "MLOAD"
    },
    "4087": {
      "op": "SWAP2"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4090": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1003"
    },
    "4093": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4094": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "4095": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "4098": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4099": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4100": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4102": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4103": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4105": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4106": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4107": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "4108": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "4109": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4110": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4111": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4112": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4114": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4115": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4116": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4117": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4118": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4120": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "4121": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4122": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5318,
        5331
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "4123": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5349,
        5359
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4124": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4126": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4127": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4129": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "ADD",
      "path": "46"
    },
    "4130": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x102F"
    },
    "4133": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4134": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4135": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4136": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4137": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4138": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4139": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "4142": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4143": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4144": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4146": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4147": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4149": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4150": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4151": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "4152": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "4153": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4154": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4155": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4156": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4158": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4159": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4160": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4161": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4162": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4164": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "ADD",
      "path": "46"
    },
    "4165": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4166": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4167": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "POP",
      "path": "46"
    },
    "4168": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5394,
        5409
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4170": {
      "offset": [
        973,
        1034
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4172": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4173": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4175": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "ADD",
      "path": "48"
    },
    "4176": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x107C"
    },
    "4179": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4180": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000"
    },
    "4213": {
      "op": "DUP2"
    },
    "4214": {
      "op": "MSTORE"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4217": {
      "op": "ADD"
    },
    "4218": {
      "op": "SWAP1"
    },
    "4219": {
      "op": "JUMP"
    },
    "4220": {
      "offset": [
        973,
        1034
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4221": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4223": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4224": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4225": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4226": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4227": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "SUB",
      "path": "48"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4230": {
      "op": "NOT"
    },
    "4231": {
      "offset": [
        973,
        1034
      ],
      "op": "ADD",
      "path": "48"
    },
    "4232": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4233": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4234": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4235": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4236": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        973,
        1034
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4237": {
      "offset": [
        958,
        1036
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4238": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        958,
        1036
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4239": {
      "offset": [
        973,
        1034
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4241": {
      "offset": [
        958,
        1036
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4242": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        958,
        1036
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4243": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        958,
        1036
      ],
      "op": "ADD",
      "path": "48"
    },
    "4244": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        958,
        1036
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4245": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4246": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4247": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "4248": {
      "op": "MSTORE"
    },
    "4249": {
      "op": "DUP9"
    },
    "4250": {
      "op": "ISZERO"
    },
    "4251": {
      "op": "ISZERO"
    },
    "4252": {
      "op": "DUP4"
    },
    "4253": {
      "op": "DUP4"
    },
    "4254": {
      "op": "ADD"
    },
    "4255": {
      "op": "MSTORE"
    },
    "4256": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4257": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4258": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4259": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4260": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SUB",
      "path": "46"
    },
    "4261": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4262": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "4263": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4264": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4267": {
      "op": "DUP5"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4270": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4271": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4272": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4273": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4274": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4275": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "ADD",
      "path": "46"
    },
    "4276": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4277": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "SWAP1"
    },
    "4282": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10C9"
    },
    "4285": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4286": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4287": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4288": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4289": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4290": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "4292": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "ADD",
      "path": "46"
    },
    "4293": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F49"
    },
    "4296": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4297": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4298": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4300": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4301": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4303": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4304": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4305": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "4306": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "4307": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4308": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4309": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4310": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4312": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4313": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4314": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4315": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4316": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4318": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "ADD",
      "path": "46"
    },
    "4319": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4320": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4321": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "POP",
      "path": "46"
    },
    "4322": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 10,
      "value": "0x10EB"
    },
    "4325": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5667,
        5675
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4326": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5677,
        5687
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4327": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A6"
    },
    "4330": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4331": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4332": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5647,
        5689
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "4333": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "4334": {
      "op": "POP"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "op": "POP"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "op": "POP"
    },
    "4339": {
      "op": "POP"
    },
    "4340": {
      "op": "POP"
    },
    "4341": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "o",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4342": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4343": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2632,
        2657
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "4345": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4347": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2710,
        2720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4348": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4349": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "POP",
      "path": "46"
    },
    "4350": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4352": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2758
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4359": {
      "op": "SHL"
    },
    "4360": {
      "op": "SUB"
    },
    "4361": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "AND",
      "path": "46"
    },
    "4362": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "4367": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4369": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4370": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4371": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4376": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "4377": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "4379": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SHL",
      "path": "46"
    },
    "4380": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4381": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4382": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4384": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4385": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4387": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4389": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4390": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4391": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4392": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SUB",
      "path": "46"
    },
    "4393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4394": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4395": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "GAS",
      "path": "46"
    },
    "4396": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4397": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4398": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4399": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4400": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x113D"
    },
    "4403": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4404": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4405": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4407": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4408": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "4409": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4410": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4412": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "REVERT",
      "path": "46"
    },
    "4413": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4414": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4415": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4416": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4417": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4418": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4420": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4421": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4422": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4424": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "NOT",
      "path": "46"
    },
    "4425": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4427": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4428": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4429": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "4430": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4431": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4432": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4433": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4435": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4436": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4437": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4438": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "4439": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4440": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1161"
    },
    "4443": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4444": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4445": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "4448": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4449": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4450": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4451": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "4452": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2802
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4454": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2811
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4461": {
      "op": "SHL"
    },
    "4462": {
      "op": "SUB"
    },
    "4463": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "AND",
      "path": "46"
    },
    "4464": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA693649A"
    },
    "4469": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4471": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4472": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4473": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "4478": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "4479": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "4481": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SHL",
      "path": "46"
    },
    "4482": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4483": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4484": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4486": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "4487": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4489": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4491": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4492": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4493": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4494": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SUB",
      "path": "46"
    },
    "4495": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4496": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4497": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "GAS",
      "path": "46"
    },
    "4498": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4499": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4500": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4501": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4502": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11A3"
    },
    "4505": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4506": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4507": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4509": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4510": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "4511": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4512": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4514": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "4515": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4516": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "4517": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "4518": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "4519": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "4520": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4522": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4523": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4524": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4526": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "NOT",
      "path": "46"
    },
    "4527": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4529": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4530": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "4531": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "4532": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4533": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "4534": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4535": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4537": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4538": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "4539": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4540": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "4541": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4542": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11C7"
    },
    "4545": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4546": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4547": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "4550": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4551": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4552": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4553": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "4554": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2867
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4556": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2886,
        2894
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "op": "SUB"
    },
    "4565": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4566": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "GT",
      "path": "46"
    },
    "4567": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4568": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11E3"
    },
    "4571": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4572": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11E3"
    },
    "4575": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16FD"
    },
    "4578": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4579": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4580": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4582": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4583": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4584": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4585": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4586": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4587": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4588": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4590": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MUL",
      "path": "46"
    },
    "4591": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4593": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "4594": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4595": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "4596": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4598": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4599": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4600": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4601": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x121C"
    },
    "4604": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4605": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4606": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4608": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "4609": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4610": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1209"
    },
    "4613": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1699"
    },
    "4616": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4617": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4618": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4619": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4620": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4622": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "4623": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4624": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "4626": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4627": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SUB",
      "path": "46"
    },
    "4628": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4629": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4630": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1201"
    },
    "4633": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4634": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4635": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "POP",
      "path": "46"
    },
    "4636": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2907,
        2920
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4642": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2955,
        2956
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "4644": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4645": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2965,
        2979
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4646": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2962
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4647": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2979
      ],
      "op": "LT",
      "path": "46"
    },
    "4648": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4649": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1316"
    },
    "4652": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4653": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1234"
    },
    "4656": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1699"
    },
    "4659": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4660": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4661": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 11,
      "value": "0x40"
    },
    "4663": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4664": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4671": {
      "op": "SHL"
    },
    "4672": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4673": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4674": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "4676": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4677": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "4678": {
      "op": "DUP4"
    },
    "4679": {
      "op": "SWAP1"
    },
    "4680": {
      "op": "MSTORE"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4687": {
      "op": "SHL"
    },
    "4688": {
      "op": "SUB"
    },
    "4689": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "DUP9",
      "path": "46"
    },
    "4690": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "AND",
      "path": "46"
    },
    "4691": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4692": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "4697": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4700": {
      "op": "ADD"
    },
    "4701": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4703": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4705": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4706": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4707": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4708": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SUB",
      "path": "46"
    },
    "4709": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4710": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4711": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "GAS",
      "path": "46"
    },
    "4712": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "4713": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4714": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4715": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4716": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1279"
    },
    "4719": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4720": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4721": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4723": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4724": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "4725": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4726": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4728": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "REVERT",
      "path": "46"
    },
    "4729": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4730": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "4731": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "4732": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "4733": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "4734": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4736": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4737": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4738": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4740": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4741": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "4742": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "4744": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "4745": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4746": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4747": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4750": {
      "op": "NOT"
    },
    "4751": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "4752": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4753": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "4754": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4756": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4757": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12A1"
    },
    "4760": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4761": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4762": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4763": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "4764": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4765": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1FCA"
    },
    "4768": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4769": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4770": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4771": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4772": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "4774": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4775": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "ADD",
      "path": "46"
    },
    "4776": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4777": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4778": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4779": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "4781": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "DUP6",
      "path": "46"
    },
    "4782": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "ADD",
      "path": "46"
    },
    "4783": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4784": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4785": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4786": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4788": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "DUP6",
      "path": "46"
    },
    "4789": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "ADD",
      "path": "46"
    },
    "4790": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4791": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4792": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4793": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4794": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4796": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4797": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "ADD",
      "path": "46"
    },
    "4798": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4799": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4800": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4801": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4808": {
      "op": "SHL"
    },
    "4809": {
      "op": "SUB"
    },
    "4810": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4811": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4812": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "4813": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4814": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4815": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3255
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "4817": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3275
      ],
      "op": "EQ",
      "path": "46"
    },
    "4818": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "4819": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1303"
    },
    "4822": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4823": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3316,
        3325
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 12
    },
    "4824": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4825": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3306,
        3311
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4826": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4827": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4828": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4829": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "LT",
      "path": "46"
    },
    "4830": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12E9"
    },
    "4833": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "4834": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12E9"
    },
    "4837": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x209D"
    },
    "4840": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4841": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4842": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4844": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MUL",
      "path": "46"
    },
    "4845": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4847": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "4848": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "4849": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4850": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4851": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4852": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "POP",
      "path": "46"
    },
    "4853": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP3",
      "path": "46",
      "statement": 13
    },
    "4854": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4855": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x12FF"
    },
    "4858": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4859": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20B3"
    },
    "4862": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4863": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4864": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4865": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "4866": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "4867": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4868": {
      "op": "POP"
    },
    "4869": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 14
    },
    "4870": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x130E"
    },
    "4873": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4874": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20B3"
    },
    "4877": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4878": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4879": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4880": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "4881": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "4882": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1224"
    },
    "4885": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4886": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4887": {
      "op": "POP"
    },
    "4888": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 15
    },
    "4889": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "4890": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "POP"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "o",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4898": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4899": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4901": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        6891
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4902": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4904": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4905": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4907": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "4908": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1334"
    },
    "4911": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4912": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "4915": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4916": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4917": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4919": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4920": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4923": {
      "op": "NOT"
    },
    "4924": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4925": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4926": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "4927": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "4928": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4929": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4930": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4931": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4932": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4933": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4934": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4935": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4937": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4938": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "4939": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "4940": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4941": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4942": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4943": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "4944": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4945": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4946": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "4948": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4949": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4950": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4958": {
      "op": "SHL"
    },
    "4959": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "4960": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4961": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "4962": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4963": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4964": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4965": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "4966": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4969": {
      "op": "DUP1"
    },
    "4970": {
      "op": "MLOAD"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4973": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "4976": {
      "op": "DUP4"
    },
    "4977": {
      "op": "CODECOPY"
    },
    "4978": {
      "op": "DUP2"
    },
    "4979": {
      "op": "MLOAD"
    },
    "4980": {
      "op": "SWAP2"
    },
    "4981": {
      "op": "MSTORE"
    },
    "4982": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4983": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1380"
    },
    "4986": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "4987": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "4988": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "4991": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4992": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4993": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4995": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4996": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4998": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4999": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5000": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "5001": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "5002": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5003": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5004": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5005": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5007": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5008": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5009": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5010": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5011": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5013": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "5014": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5015": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7071,
        7084
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "5016": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7102,
        7112
      ],
      "op": "DUP8",
      "path": "46"
    },
    "5017": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5019": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5020": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5022": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "ADD",
      "path": "46"
    },
    "5023": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13AC"
    },
    "5026": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "5027": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5028": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5029": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5030": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5031": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5032": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "5035": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6917,
        7126
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5036": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5037": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5039": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5040": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5042": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5043": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5044": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SUB",
      "path": "46"
    },
    "5045": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SUB",
      "path": "46"
    },
    "5046": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5047": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5048": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5049": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5051": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5052": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5053": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5054": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5055": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5057": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "ADD",
      "path": "46"
    },
    "5058": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5059": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        7136
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5060": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        7136
      ],
      "op": "POP",
      "path": "46"
    },
    "5061": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7147,
        7162
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5063": {
      "offset": [
        1247,
        1347
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5065": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5066": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5068": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "ADD",
      "path": "48"
    },
    "5069": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x142A"
    },
    "5072": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5073": {
      "op": "PUSH32",
      "value": "0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C"
    },
    "5106": {
      "op": "DUP2"
    },
    "5107": {
      "op": "MSTORE"
    },
    "5108": {
      "op": "PUSH32",
      "value": "0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5143": {
      "op": "DUP3"
    },
    "5144": {
      "op": "ADD"
    },
    "5145": {
      "op": "MSTORE"
    },
    "5146": {
      "op": "PUSH2",
      "value": "0x6E29"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5151": {
      "op": "SHL"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5154": {
      "op": "DUP3"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "SWAP1"
    },
    "5161": {
      "op": "JUMP"
    },
    "5162": {
      "offset": [
        1247,
        1347
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5163": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5165": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5166": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5168": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5169": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5170": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "SUB",
      "path": "48"
    },
    "5171": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "SUB",
      "path": "48"
    },
    "5172": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5173": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5174": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5175": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5177": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1247,
        1347
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5178": {
      "offset": [
        1232,
        1349
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5179": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1232,
        1349
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5180": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1232,
        1349
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5181": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1232,
        1349
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5183": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1232,
        1349
      ],
      "op": "ADD",
      "path": "48"
    },
    "5184": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1232,
        1349
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5185": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7286,
        7294
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5186": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5188": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5189": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5191": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "ADD",
      "path": "46"
    },
    "5192": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1451"
    },
    "5195": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5196": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5197": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x20DC"
    },
    "5200": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        7268,
        7296
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5201": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5202": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5204": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5205": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5207": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5208": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5209": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SUB",
      "path": "46"
    },
    "5210": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SUB",
      "path": "46"
    },
    "5211": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5212": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5213": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5214": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5216": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5217": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5218": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5219": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5220": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5222": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "ADD",
      "path": "46"
    },
    "5223": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5224": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7316,
        7324
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5225": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7371,
        7385
      ],
      "op": "DUP9",
      "path": "46"
    },
    "5226": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5228": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5229": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5231": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "ADD",
      "path": "46"
    },
    "5232": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCC3"
    },
    "5235": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5236": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5237": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "5240": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        7353,
        7387
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5241": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5242": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7859,
        7866
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5244": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        7907
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5245": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5247": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5248": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5250": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "5251": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x148B"
    },
    "5254": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5255": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E97"
    },
    "5258": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        798,
        914
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5259": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5260": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5262": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5263": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5266": {
      "op": "NOT"
    },
    "5267": {
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5268": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5269": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "SUB",
      "path": "48"
    },
    "5270": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "ADD",
      "path": "48"
    },
    "5271": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5272": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5273": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5274": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5275": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        798,
        914
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5276": {
      "offset": [
        783,
        916
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5277": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        783,
        916
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5278": {
      "offset": [
        798,
        914
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5280": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5281": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        783,
        916
      ],
      "op": "DUP3",
      "path": "48"
    },
    "5282": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        783,
        916
      ],
      "op": "ADD",
      "path": "48"
    },
    "5283": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        783,
        916
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5284": {
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5285": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5286": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "5287": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5288": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5289": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x5"
    },
    "5291": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5292": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5293": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "offset": [
        713,
        732
      ],
      "op": "DUP5",
      "path": "48"
    },
    "5303": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5304": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "ADD",
      "path": "48"
    },
    "5305": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        732
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5306": {
      "offset": [
        695,
        734
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5307": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5308": {
      "offset": [
        783,
        916
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "5309": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        783,
        916
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5312": {
      "op": "DUP1"
    },
    "5313": {
      "op": "MLOAD"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "5319": {
      "op": "DUP4"
    },
    "5320": {
      "op": "CODECOPY"
    },
    "5321": {
      "op": "DUP2"
    },
    "5322": {
      "op": "MLOAD"
    },
    "5323": {
      "op": "SWAP2"
    },
    "5324": {
      "op": "MSTORE"
    },
    "5325": {
      "offset": [
        613,
        633
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5326": {
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x14D7"
    },
    "5329": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "SWAP3",
      "path": "48"
    },
    "5330": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "ADD",
      "path": "48"
    },
    "5331": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1F01"
    },
    "5334": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        695,
        734
      ],
      "op": "JUMP",
      "path": "48"
    },
    "5335": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5336": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5338": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5339": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5341": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5342": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5343": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "5344": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "SUB",
      "path": "48"
    },
    "5345": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5346": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5347": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5348": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5350": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        695,
        734
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5351": {
      "offset": [
        680,
        736
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5352": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        680,
        736
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5353": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        680,
        736
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5354": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        680,
        736
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5356": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        680,
        736
      ],
      "op": "ADD",
      "path": "48"
    },
    "5357": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        680,
        736
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5358": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8087,
        8100
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "5359": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8118,
        8128
      ],
      "op": "DUP8",
      "path": "46"
    },
    "5360": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5362": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5363": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5365": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "ADD",
      "path": "46"
    },
    "5366": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1503"
    },
    "5369": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "5370": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5371": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5372": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5373": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5374": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5375": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F1D"
    },
    "5378": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7933,
        8142
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5379": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5380": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5382": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5383": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5385": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5386": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5387": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SUB",
      "path": "46"
    },
    "5388": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SUB",
      "path": "46"
    },
    "5389": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5390": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5391": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5392": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5394": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5395": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5396": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5397": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5398": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5400": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "ADD",
      "path": "46"
    },
    "5401": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5402": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        8152
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5403": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        8152
      ],
      "op": "POP",
      "path": "46"
    },
    "5404": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5406": {
      "offset": [
        1408,
        1538
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5408": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5409": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5411": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "ADD",
      "path": "48"
    },
    "5412": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x159C"
    },
    "5415": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5416": {
      "op": "PUSH32",
      "value": "0x7374724F434E65775573657228616464726573732077616C6C6574416464722C"
    },
    "5449": {
      "op": "DUP2"
    },
    "5450": {
      "op": "MSTORE"
    },
    "5451": {
      "op": "PUSH32",
      "value": "0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5486": {
      "op": "DUP3"
    },
    "5487": {
      "op": "ADD"
    },
    "5488": {
      "op": "MSTORE"
    },
    "5489": {
      "op": "PUSH32",
      "value": "0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5524": {
      "op": "DUP3"
    },
    "5525": {
      "op": "ADD"
    },
    "5526": {
      "op": "MSTORE"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5529": {
      "op": "ADD"
    },
    "5530": {
      "op": "SWAP1"
    },
    "5531": {
      "op": "JUMP"
    },
    "5532": {
      "offset": [
        1408,
        1538
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5533": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5535": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5536": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5538": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5539": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5540": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "SUB",
      "path": "48"
    },
    "5541": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "SUB",
      "path": "48"
    },
    "5542": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5543": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5544": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5545": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5547": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1408,
        1538
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5548": {
      "offset": [
        1393,
        1540
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5549": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1393,
        1540
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5550": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1393,
        1540
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5551": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1393,
        1540
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5553": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1393,
        1540
      ],
      "op": "ADD",
      "path": "48"
    },
    "5554": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1393,
        1540
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5555": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8272,
        8283
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5556": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8330,
        8335
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5557": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5559": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5560": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5562": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "ADD",
      "path": "46"
    },
    "5563": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15C4"
    },
    "5566": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5567": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5568": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "5571": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8312,
        8337
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5572": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5573": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5575": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5576": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5578": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5579": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5580": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SUB",
      "path": "46"
    },
    "5581": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SUB",
      "path": "46"
    },
    "5582": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5583": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5584": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5585": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5587": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5588": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5589": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5590": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5591": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5593": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "ADD",
      "path": "46"
    },
    "5594": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5595": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8386,
        8398
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5596": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5598": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5599": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5601": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "ADD",
      "path": "46"
    },
    "5602": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15EB"
    },
    "5605": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5606": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5607": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F01"
    },
    "5610": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8368,
        8400
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5611": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5612": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5614": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5615": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5618": {
      "op": "NOT"
    },
    "5619": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5620": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5621": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SUB",
      "path": "46"
    },
    "5622": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "ADD",
      "path": "46"
    },
    "5623": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5624": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5625": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5626": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5627": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5628": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5629": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5630": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5632": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5633": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5634": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "ADD",
      "path": "46"
    },
    "5635": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5636": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5637": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5638": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "ADD",
      "path": "46"
    },
    "5639": {
      "op": "SWAP6"
    },
    "5640": {
      "op": "SWAP1"
    },
    "5641": {
      "op": "SWAP6"
    },
    "5642": {
      "op": "MSTORE"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5649": {
      "op": "SHL"
    },
    "5650": {
      "op": "SUB"
    },
    "5651": {
      "op": "SWAP1"
    },
    "5652": {
      "op": "SWAP4"
    },
    "5653": {
      "op": "AND"
    },
    "5654": {
      "op": "SWAP3"
    },
    "5655": {
      "op": "DUP2"
    },
    "5656": {
      "op": "ADD"
    },
    "5657": {
      "op": "SWAP3"
    },
    "5658": {
      "op": "SWAP1"
    },
    "5659": {
      "op": "SWAP3"
    },
    "5660": {
      "op": "MSTORE"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5663": {
      "op": "DUP3"
    },
    "5664": {
      "op": "ADD"
    },
    "5665": {
      "op": "MSTORE"
    },
    "5666": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5668": {
      "op": "DUP2"
    },
    "5669": {
      "op": "ADD"
    },
    "5670": {
      "op": "SWAP2"
    },
    "5671": {
      "op": "SWAP1"
    },
    "5672": {
      "op": "SWAP2"
    },
    "5673": {
      "op": "MSTORE"
    },
    "5674": {
      "op": "DUP8"
    },
    "5675": {
      "op": "ISZERO"
    },
    "5676": {
      "op": "ISZERO"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5679": {
      "op": "DUP3"
    },
    "5680": {
      "op": "ADD"
    },
    "5681": {
      "op": "MSTORE"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5684": {
      "op": "DUP2"
    },
    "5685": {
      "op": "ADD"
    },
    "5686": {
      "op": "DUP8"
    },
    "5687": {
      "op": "SWAP1"
    },
    "5688": {
      "op": "MSTORE"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5691": {
      "op": "ADD"
    },
    "5692": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5694": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5695": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5697": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5698": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5699": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SUB",
      "path": "46"
    },
    "5700": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SUB",
      "path": "46"
    },
    "5701": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5702": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5703": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5704": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5706": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5707": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5708": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5709": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5710": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5712": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "ADD",
      "path": "46"
    },
    "5713": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5714": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8482
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5715": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8482
      ],
      "op": "POP",
      "path": "46"
    },
    "5716": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8509
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5718": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8553,
        8569
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5719": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8571,
        8578
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5720": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5722": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5723": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5725": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "ADD",
      "path": "46"
    },
    "5726": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1668"
    },
    "5729": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5730": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5731": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5732": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F49"
    },
    "5735": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8523,
        8580
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5736": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5737": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5739": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5740": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5742": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5743": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5744": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SUB",
      "path": "46"
    },
    "5745": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SUB",
      "path": "46"
    },
    "5746": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5747": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5748": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5749": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5751": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5752": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5753": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5754": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5755": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5757": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "ADD",
      "path": "46"
    },
    "5758": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5759": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8582
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5760": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8582
      ],
      "op": "POP",
      "path": "46"
    },
    "5761": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8635
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 16,
      "value": "0x168A"
    },
    "5764": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8613,
        8621
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5765": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8623,
        8633
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5766": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8611
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3A6"
    },
    "5769": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8600,
        8635
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5770": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8635
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5771": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8593,
        8635
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "5772": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "POP"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "op": "POP"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "op": "POP"
    },
    "5782": {
      "op": "POP"
    },
    "5783": {
      "op": "POP"
    },
    "5784": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "o",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5785": {
      "op": "JUMPDEST"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5788": {
      "op": "MLOAD"
    },
    "5789": {
      "op": "DUP1"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "DUP1"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5805": {
      "op": "SHL"
    },
    "5806": {
      "op": "SUB"
    },
    "5807": {
      "op": "AND"
    },
    "5808": {
      "op": "DUP2"
    },
    "5809": {
      "op": "MSTORE"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5815": {
      "op": "DUP2"
    },
    "5816": {
      "op": "MSTORE"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5819": {
      "op": "ADD"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5822": {
      "op": "DUP2"
    },
    "5823": {
      "op": "MSTORE"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5829": {
      "op": "ISZERO"
    },
    "5830": {
      "op": "ISZERO"
    },
    "5831": {
      "op": "DUP2"
    },
    "5832": {
      "op": "MSTORE"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5835": {
      "op": "ADD"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5838": {
      "op": "ISZERO"
    },
    "5839": {
      "op": "ISZERO"
    },
    "5840": {
      "op": "DUP2"
    },
    "5841": {
      "op": "MSTORE"
    },
    "5842": {
      "op": "POP"
    },
    "5843": {
      "op": "SWAP1"
    },
    "5844": {
      "jump": "o",
      "op": "JUMP"
    },
    "5845": {
      "op": "JUMPDEST"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "op": "SUB"
    },
    "5854": {
      "op": "DUP2"
    },
    "5855": {
      "op": "AND"
    },
    "5856": {
      "op": "DUP2"
    },
    "5857": {
      "op": "EQ"
    },
    "5858": {
      "op": "PUSH2",
      "value": "0x16EA"
    },
    "5861": {
      "op": "JUMPI"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5864": {
      "op": "DUP1"
    },
    "5865": {
      "op": "REVERT"
    },
    "5866": {
      "op": "JUMPDEST"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "jump": "o",
      "op": "JUMP"
    },
    "5869": {
      "op": "JUMPDEST"
    },
    "5870": {
      "op": "DUP1"
    },
    "5871": {
      "op": "CALLDATALOAD"
    },
    "5872": {
      "op": "PUSH2",
      "value": "0x16F8"
    },
    "5875": {
      "op": "DUP2"
    },
    "5876": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "5879": {
      "jump": "i",
      "op": "JUMP"
    },
    "5880": {
      "op": "JUMPDEST"
    },
    "5881": {
      "op": "SWAP2"
    },
    "5882": {
      "op": "SWAP1"
    },
    "5883": {
      "op": "POP"
    },
    "5884": {
      "jump": "o",
      "op": "JUMP"
    },
    "5885": {
      "op": "JUMPDEST"
    },
    "5886": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5893": {
      "op": "SHL"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5896": {
      "op": "MSTORE"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5901": {
      "op": "MSTORE"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5906": {
      "op": "REVERT"
    },
    "5907": {
      "op": "JUMPDEST"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5910": {
      "op": "MLOAD"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5913": {
      "op": "DUP3"
    },
    "5914": {
      "op": "ADD"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5917": {
      "op": "NOT"
    },
    "5918": {
      "op": "AND"
    },
    "5919": {
      "op": "DUP2"
    },
    "5920": {
      "op": "ADD"
    },
    "5921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5927": {
      "op": "SHL"
    },
    "5928": {
      "op": "SUB"
    },
    "5929": {
      "op": "DUP2"
    },
    "5930": {
      "op": "GT"
    },
    "5931": {
      "op": "DUP3"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "LT"
    },
    "5934": {
      "op": "OR"
    },
    "5935": {
      "op": "ISZERO"
    },
    "5936": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "5939": {
      "op": "JUMPI"
    },
    "5940": {
      "op": "PUSH2",
      "value": "0x173B"
    },
    "5943": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5946": {
      "jump": "i",
      "op": "JUMP"
    },
    "5947": {
      "op": "JUMPDEST"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5950": {
      "op": "MSTORE"
    },
    "5951": {
      "op": "SWAP2"
    },
    "5952": {
      "op": "SWAP1"
    },
    "5953": {
      "op": "POP"
    },
    "5954": {
      "jump": "o",
      "op": "JUMP"
    },
    "5955": {
      "op": "JUMPDEST"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "op": "DUP3"
    },
    "5967": {
      "op": "GT"
    },
    "5968": {
      "op": "ISZERO"
    },
    "5969": {
      "op": "PUSH2",
      "value": "0x175C"
    },
    "5972": {
      "op": "JUMPI"
    },
    "5973": {
      "op": "PUSH2",
      "value": "0x175C"
    },
    "5976": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "5979": {
      "jump": "i",
      "op": "JUMP"
    },
    "5980": {
      "op": "JUMPDEST"
    },
    "5981": {
      "op": "POP"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5984": {
      "op": "ADD"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5987": {
      "op": "NOT"
    },
    "5988": {
      "op": "AND"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5991": {
      "op": "ADD"
    },
    "5992": {
      "op": "SWAP1"
    },
    "5993": {
      "jump": "o",
      "op": "JUMP"
    },
    "5994": {
      "op": "JUMPDEST"
    },
    "5995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5997": {
      "op": "DUP3"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6000": {
      "op": "DUP4"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "SLT"
    },
    "6003": {
      "op": "PUSH2",
      "value": "0x177B"
    },
    "6006": {
      "op": "JUMPI"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6009": {
      "op": "DUP1"
    },
    "6010": {
      "op": "REVERT"
    },
    "6011": {
      "op": "JUMPDEST"
    },
    "6012": {
      "op": "DUP2"
    },
    "6013": {
      "op": "CALLDATALOAD"
    },
    "6014": {
      "op": "PUSH2",
      "value": "0x178E"
    },
    "6017": {
      "op": "PUSH2",
      "value": "0x1789"
    },
    "6020": {
      "op": "DUP3"
    },
    "6021": {
      "op": "PUSH2",
      "value": "0x1743"
    },
    "6024": {
      "jump": "i",
      "op": "JUMP"
    },
    "6025": {
      "op": "JUMPDEST"
    },
    "6026": {
      "op": "PUSH2",
      "value": "0x1713"
    },
    "6029": {
      "jump": "i",
      "op": "JUMP"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "DUP2"
    },
    "6032": {
      "op": "DUP2"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "op": "DUP5"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6037": {
      "op": "DUP4"
    },
    "6038": {
      "op": "DUP7"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "ADD"
    },
    "6041": {
      "op": "GT"
    },
    "6042": {
      "op": "ISZERO"
    },
    "6043": {
      "op": "PUSH2",
      "value": "0x17A3"
    },
    "6046": {
      "op": "JUMPI"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6049": {
      "op": "DUP1"
    },
    "6050": {
      "op": "REVERT"
    },
    "6051": {
      "op": "JUMPDEST"
    },
    "6052": {
      "op": "DUP2"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6055": {
      "op": "DUP6"
    },
    "6056": {
      "op": "ADD"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6059": {
      "op": "DUP4"
    },
    "6060": {
      "op": "ADD"
    },
    "6061": {
      "op": "CALLDATACOPY"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6064": {
      "op": "SWAP2"
    },
    "6065": {
      "op": "DUP2"
    },
    "6066": {
      "op": "ADD"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6069": {
      "op": "ADD"
    },
    "6070": {
      "op": "SWAP2"
    },
    "6071": {
      "op": "SWAP1"
    },
    "6072": {
      "op": "SWAP2"
    },
    "6073": {
      "op": "MSTORE"
    },
    "6074": {
      "op": "SWAP4"
    },
    "6075": {
      "op": "SWAP3"
    },
    "6076": {
      "op": "POP"
    },
    "6077": {
      "op": "POP"
    },
    "6078": {
      "op": "POP"
    },
    "6079": {
      "jump": "o",
      "op": "JUMP"
    },
    "6080": {
      "op": "JUMPDEST"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6083": {
      "op": "DUP1"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6086": {
      "op": "DUP1"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6091": {
      "op": "DUP7"
    },
    "6092": {
      "op": "DUP9"
    },
    "6093": {
      "op": "SUB"
    },
    "6094": {
      "op": "SLT"
    },
    "6095": {
      "op": "ISZERO"
    },
    "6096": {
      "op": "PUSH2",
      "value": "0x17D8"
    },
    "6099": {
      "op": "JUMPI"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6102": {
      "op": "DUP1"
    },
    "6103": {
      "op": "REVERT"
    },
    "6104": {
      "op": "JUMPDEST"
    },
    "6105": {
      "op": "DUP6"
    },
    "6106": {
      "op": "CALLDATALOAD"
    },
    "6107": {
      "op": "PUSH2",
      "value": "0x17E3"
    },
    "6110": {
      "op": "DUP2"
    },
    "6111": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6114": {
      "jump": "i",
      "op": "JUMP"
    },
    "6115": {
      "op": "JUMPDEST"
    },
    "6116": {
      "op": "SWAP5"
    },
    "6117": {
      "op": "POP"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6120": {
      "op": "DUP7"
    },
    "6121": {
      "op": "ADD"
    },
    "6122": {
      "op": "CALLDATALOAD"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6129": {
      "op": "SHL"
    },
    "6130": {
      "op": "SUB"
    },
    "6131": {
      "op": "DUP1"
    },
    "6132": {
      "op": "DUP3"
    },
    "6133": {
      "op": "GT"
    },
    "6134": {
      "op": "ISZERO"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x17FF"
    },
    "6138": {
      "op": "JUMPI"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6141": {
      "op": "DUP1"
    },
    "6142": {
      "op": "REVERT"
    },
    "6143": {
      "op": "JUMPDEST"
    },
    "6144": {
      "op": "PUSH2",
      "value": "0x180B"
    },
    "6147": {
      "op": "DUP10"
    },
    "6148": {
      "op": "DUP4"
    },
    "6149": {
      "op": "DUP11"
    },
    "6150": {
      "op": "ADD"
    },
    "6151": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6154": {
      "jump": "i",
      "op": "JUMP"
    },
    "6155": {
      "op": "JUMPDEST"
    },
    "6156": {
      "op": "SWAP6"
    },
    "6157": {
      "op": "POP"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6160": {
      "op": "DUP9"
    },
    "6161": {
      "op": "ADD"
    },
    "6162": {
      "op": "CALLDATALOAD"
    },
    "6163": {
      "op": "SWAP5"
    },
    "6164": {
      "op": "POP"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6167": {
      "op": "DUP9"
    },
    "6168": {
      "op": "ADD"
    },
    "6169": {
      "op": "CALLDATALOAD"
    },
    "6170": {
      "op": "SWAP2"
    },
    "6171": {
      "op": "POP"
    },
    "6172": {
      "op": "PUSH2",
      "value": "0x1824"
    },
    "6175": {
      "op": "DUP3"
    },
    "6176": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6179": {
      "jump": "i",
      "op": "JUMP"
    },
    "6180": {
      "op": "JUMPDEST"
    },
    "6181": {
      "op": "SWAP1"
    },
    "6182": {
      "op": "SWAP3"
    },
    "6183": {
      "op": "POP"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6186": {
      "op": "DUP8"
    },
    "6187": {
      "op": "ADD"
    },
    "6188": {
      "op": "CALLDATALOAD"
    },
    "6189": {
      "op": "SWAP1"
    },
    "6190": {
      "op": "DUP1"
    },
    "6191": {
      "op": "DUP3"
    },
    "6192": {
      "op": "GT"
    },
    "6193": {
      "op": "ISZERO"
    },
    "6194": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "6197": {
      "op": "JUMPI"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6200": {
      "op": "DUP1"
    },
    "6201": {
      "op": "REVERT"
    },
    "6202": {
      "op": "JUMPDEST"
    },
    "6203": {
      "op": "POP"
    },
    "6204": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6207": {
      "op": "DUP9"
    },
    "6208": {
      "op": "DUP3"
    },
    "6209": {
      "op": "DUP10"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6214": {
      "jump": "i",
      "op": "JUMP"
    },
    "6215": {
      "op": "JUMPDEST"
    },
    "6216": {
      "op": "SWAP2"
    },
    "6217": {
      "op": "POP"
    },
    "6218": {
      "op": "POP"
    },
    "6219": {
      "op": "SWAP3"
    },
    "6220": {
      "op": "SWAP6"
    },
    "6221": {
      "op": "POP"
    },
    "6222": {
      "op": "SWAP3"
    },
    "6223": {
      "op": "SWAP6"
    },
    "6224": {
      "op": "SWAP1"
    },
    "6225": {
      "op": "SWAP4"
    },
    "6226": {
      "op": "POP"
    },
    "6227": {
      "jump": "o",
      "op": "JUMP"
    },
    "6228": {
      "op": "JUMPDEST"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6231": {
      "op": "DUP1"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6234": {
      "op": "DUP4"
    },
    "6235": {
      "op": "DUP6"
    },
    "6236": {
      "op": "SUB"
    },
    "6237": {
      "op": "SLT"
    },
    "6238": {
      "op": "ISZERO"
    },
    "6239": {
      "op": "PUSH2",
      "value": "0x1867"
    },
    "6242": {
      "op": "JUMPI"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6245": {
      "op": "DUP1"
    },
    "6246": {
      "op": "REVERT"
    },
    "6247": {
      "op": "JUMPDEST"
    },
    "6248": {
      "op": "DUP3"
    },
    "6249": {
      "op": "CALLDATALOAD"
    },
    "6250": {
      "op": "SWAP2"
    },
    "6251": {
      "op": "POP"
    },
    "6252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6254": {
      "op": "DUP4"
    },
    "6255": {
      "op": "ADD"
    },
    "6256": {
      "op": "CALLDATALOAD"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6263": {
      "op": "SHL"
    },
    "6264": {
      "op": "SUB"
    },
    "6265": {
      "op": "DUP2"
    },
    "6266": {
      "op": "GT"
    },
    "6267": {
      "op": "ISZERO"
    },
    "6268": {
      "op": "PUSH2",
      "value": "0x1884"
    },
    "6271": {
      "op": "JUMPI"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6274": {
      "op": "DUP1"
    },
    "6275": {
      "op": "REVERT"
    },
    "6276": {
      "op": "JUMPDEST"
    },
    "6277": {
      "op": "PUSH2",
      "value": "0x1890"
    },
    "6280": {
      "op": "DUP6"
    },
    "6281": {
      "op": "DUP3"
    },
    "6282": {
      "op": "DUP7"
    },
    "6283": {
      "op": "ADD"
    },
    "6284": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6287": {
      "jump": "i",
      "op": "JUMP"
    },
    "6288": {
      "op": "JUMPDEST"
    },
    "6289": {
      "op": "SWAP2"
    },
    "6290": {
      "op": "POP"
    },
    "6291": {
      "op": "POP"
    },
    "6292": {
      "op": "SWAP3"
    },
    "6293": {
      "op": "POP"
    },
    "6294": {
      "op": "SWAP3"
    },
    "6295": {
      "op": "SWAP1"
    },
    "6296": {
      "op": "POP"
    },
    "6297": {
      "jump": "o",
      "op": "JUMP"
    },
    "6298": {
      "op": "JUMPDEST"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6301": {
      "op": "DUP1"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6304": {
      "op": "DUP1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6307": {
      "op": "DUP6"
    },
    "6308": {
      "op": "DUP8"
    },
    "6309": {
      "op": "SUB"
    },
    "6310": {
      "op": "SLT"
    },
    "6311": {
      "op": "ISZERO"
    },
    "6312": {
      "op": "PUSH2",
      "value": "0x18B0"
    },
    "6315": {
      "op": "JUMPI"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6318": {
      "op": "DUP1"
    },
    "6319": {
      "op": "REVERT"
    },
    "6320": {
      "op": "JUMPDEST"
    },
    "6321": {
      "op": "DUP5"
    },
    "6322": {
      "op": "CALLDATALOAD"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6329": {
      "op": "SHL"
    },
    "6330": {
      "op": "SUB"
    },
    "6331": {
      "op": "DUP1"
    },
    "6332": {
      "op": "DUP3"
    },
    "6333": {
      "op": "GT"
    },
    "6334": {
      "op": "ISZERO"
    },
    "6335": {
      "op": "PUSH2",
      "value": "0x18C7"
    },
    "6338": {
      "op": "JUMPI"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6341": {
      "op": "DUP1"
    },
    "6342": {
      "op": "REVERT"
    },
    "6343": {
      "op": "JUMPDEST"
    },
    "6344": {
      "op": "PUSH2",
      "value": "0x18D3"
    },
    "6347": {
      "op": "DUP9"
    },
    "6348": {
      "op": "DUP4"
    },
    "6349": {
      "op": "DUP10"
    },
    "6350": {
      "op": "ADD"
    },
    "6351": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6354": {
      "jump": "i",
      "op": "JUMP"
    },
    "6355": {
      "op": "JUMPDEST"
    },
    "6356": {
      "op": "SWAP6"
    },
    "6357": {
      "op": "POP"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6360": {
      "op": "DUP8"
    },
    "6361": {
      "op": "ADD"
    },
    "6362": {
      "op": "CALLDATALOAD"
    },
    "6363": {
      "op": "SWAP2"
    },
    "6364": {
      "op": "POP"
    },
    "6365": {
      "op": "DUP1"
    },
    "6366": {
      "op": "DUP3"
    },
    "6367": {
      "op": "GT"
    },
    "6368": {
      "op": "ISZERO"
    },
    "6369": {
      "op": "PUSH2",
      "value": "0x18E9"
    },
    "6372": {
      "op": "JUMPI"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6375": {
      "op": "DUP1"
    },
    "6376": {
      "op": "REVERT"
    },
    "6377": {
      "op": "JUMPDEST"
    },
    "6378": {
      "op": "PUSH2",
      "value": "0x18F5"
    },
    "6381": {
      "op": "DUP9"
    },
    "6382": {
      "op": "DUP4"
    },
    "6383": {
      "op": "DUP10"
    },
    "6384": {
      "op": "ADD"
    },
    "6385": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6388": {
      "jump": "i",
      "op": "JUMP"
    },
    "6389": {
      "op": "JUMPDEST"
    },
    "6390": {
      "op": "SWAP5"
    },
    "6391": {
      "op": "POP"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6394": {
      "op": "DUP8"
    },
    "6395": {
      "op": "ADD"
    },
    "6396": {
      "op": "CALLDATALOAD"
    },
    "6397": {
      "op": "SWAP2"
    },
    "6398": {
      "op": "POP"
    },
    "6399": {
      "op": "PUSH2",
      "value": "0x1907"
    },
    "6402": {
      "op": "DUP3"
    },
    "6403": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6406": {
      "jump": "i",
      "op": "JUMP"
    },
    "6407": {
      "op": "JUMPDEST"
    },
    "6408": {
      "op": "SWAP1"
    },
    "6409": {
      "op": "SWAP3"
    },
    "6410": {
      "op": "POP"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6413": {
      "op": "DUP7"
    },
    "6414": {
      "op": "ADD"
    },
    "6415": {
      "op": "CALLDATALOAD"
    },
    "6416": {
      "op": "SWAP1"
    },
    "6417": {
      "op": "DUP1"
    },
    "6418": {
      "op": "DUP3"
    },
    "6419": {
      "op": "GT"
    },
    "6420": {
      "op": "ISZERO"
    },
    "6421": {
      "op": "PUSH2",
      "value": "0x191D"
    },
    "6424": {
      "op": "JUMPI"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6427": {
      "op": "DUP1"
    },
    "6428": {
      "op": "REVERT"
    },
    "6429": {
      "op": "JUMPDEST"
    },
    "6430": {
      "op": "POP"
    },
    "6431": {
      "op": "PUSH2",
      "value": "0x192A"
    },
    "6434": {
      "op": "DUP8"
    },
    "6435": {
      "op": "DUP3"
    },
    "6436": {
      "op": "DUP9"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6441": {
      "jump": "i",
      "op": "JUMP"
    },
    "6442": {
      "op": "JUMPDEST"
    },
    "6443": {
      "op": "SWAP2"
    },
    "6444": {
      "op": "POP"
    },
    "6445": {
      "op": "POP"
    },
    "6446": {
      "op": "SWAP3"
    },
    "6447": {
      "op": "SWAP6"
    },
    "6448": {
      "op": "SWAP2"
    },
    "6449": {
      "op": "SWAP5"
    },
    "6450": {
      "op": "POP"
    },
    "6451": {
      "op": "SWAP3"
    },
    "6452": {
      "op": "POP"
    },
    "6453": {
      "jump": "o",
      "op": "JUMP"
    },
    "6454": {
      "op": "JUMPDEST"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6457": {
      "op": "DUP1"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6460": {
      "op": "DUP4"
    },
    "6461": {
      "op": "DUP6"
    },
    "6462": {
      "op": "SUB"
    },
    "6463": {
      "op": "SLT"
    },
    "6464": {
      "op": "ISZERO"
    },
    "6465": {
      "op": "PUSH2",
      "value": "0x1949"
    },
    "6468": {
      "op": "JUMPI"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6471": {
      "op": "DUP1"
    },
    "6472": {
      "op": "REVERT"
    },
    "6473": {
      "op": "JUMPDEST"
    },
    "6474": {
      "op": "DUP3"
    },
    "6475": {
      "op": "CALLDATALOAD"
    },
    "6476": {
      "op": "PUSH2",
      "value": "0x1954"
    },
    "6479": {
      "op": "DUP2"
    },
    "6480": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6483": {
      "jump": "i",
      "op": "JUMP"
    },
    "6484": {
      "op": "JUMPDEST"
    },
    "6485": {
      "op": "SWAP2"
    },
    "6486": {
      "op": "POP"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6489": {
      "op": "DUP4"
    },
    "6490": {
      "op": "ADD"
    },
    "6491": {
      "op": "CALLDATALOAD"
    },
    "6492": {
      "op": "PUSH2",
      "value": "0x1964"
    },
    "6495": {
      "op": "DUP2"
    },
    "6496": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6499": {
      "jump": "i",
      "op": "JUMP"
    },
    "6500": {
      "op": "JUMPDEST"
    },
    "6501": {
      "op": "DUP1"
    },
    "6502": {
      "op": "SWAP2"
    },
    "6503": {
      "op": "POP"
    },
    "6504": {
      "op": "POP"
    },
    "6505": {
      "op": "SWAP3"
    },
    "6506": {
      "op": "POP"
    },
    "6507": {
      "op": "SWAP3"
    },
    "6508": {
      "op": "SWAP1"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "jump": "o",
      "op": "JUMP"
    },
    "6511": {
      "op": "JUMPDEST"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6514": {
      "op": "JUMPDEST"
    },
    "6515": {
      "op": "DUP4"
    },
    "6516": {
      "op": "DUP2"
    },
    "6517": {
      "op": "LT"
    },
    "6518": {
      "op": "ISZERO"
    },
    "6519": {
      "op": "PUSH2",
      "value": "0x198A"
    },
    "6522": {
      "op": "JUMPI"
    },
    "6523": {
      "op": "DUP2"
    },
    "6524": {
      "op": "DUP2"
    },
    "6525": {
      "op": "ADD"
    },
    "6526": {
      "op": "MLOAD"
    },
    "6527": {
      "op": "DUP4"
    },
    "6528": {
      "op": "DUP3"
    },
    "6529": {
      "op": "ADD"
    },
    "6530": {
      "op": "MSTORE"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6533": {
      "op": "ADD"
    },
    "6534": {
      "op": "PUSH2",
      "value": "0x1972"
    },
    "6537": {
      "op": "JUMP"
    },
    "6538": {
      "op": "JUMPDEST"
    },
    "6539": {
      "op": "DUP4"
    },
    "6540": {
      "op": "DUP2"
    },
    "6541": {
      "op": "GT"
    },
    "6542": {
      "op": "ISZERO"
    },
    "6543": {
      "op": "PUSH2",
      "value": "0x1999"
    },
    "6546": {
      "op": "JUMPI"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6549": {
      "op": "DUP5"
    },
    "6550": {
      "op": "DUP5"
    },
    "6551": {
      "op": "ADD"
    },
    "6552": {
      "op": "MSTORE"
    },
    "6553": {
      "op": "JUMPDEST"
    },
    "6554": {
      "op": "POP"
    },
    "6555": {
      "op": "POP"
    },
    "6556": {
      "op": "POP"
    },
    "6557": {
      "op": "POP"
    },
    "6558": {
      "jump": "o",
      "op": "JUMP"
    },
    "6559": {
      "op": "JUMPDEST"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6562": {
      "op": "DUP2"
    },
    "6563": {
      "op": "MLOAD"
    },
    "6564": {
      "op": "DUP1"
    },
    "6565": {
      "op": "DUP5"
    },
    "6566": {
      "op": "MSTORE"
    },
    "6567": {
      "op": "PUSH2",
      "value": "0x19B7"
    },
    "6570": {
      "op": "DUP2"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6573": {
      "op": "DUP7"
    },
    "6574": {
      "op": "ADD"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6577": {
      "op": "DUP7"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "op": "PUSH2",
      "value": "0x196F"
    },
    "6582": {
      "jump": "i",
      "op": "JUMP"
    },
    "6583": {
      "op": "JUMPDEST"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6586": {
      "op": "ADD"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6589": {
      "op": "NOT"
    },
    "6590": {
      "op": "AND"
    },
    "6591": {
      "op": "SWAP3"
    },
    "6592": {
      "op": "SWAP1"
    },
    "6593": {
      "op": "SWAP3"
    },
    "6594": {
      "op": "ADD"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6597": {
      "op": "ADD"
    },
    "6598": {
      "op": "SWAP3"
    },
    "6599": {
      "op": "SWAP2"
    },
    "6600": {
      "op": "POP"
    },
    "6601": {
      "op": "POP"
    },
    "6602": {
      "jump": "o",
      "op": "JUMP"
    },
    "6603": {
      "op": "JUMPDEST"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6606": {
      "op": "DUP2"
    },
    "6607": {
      "op": "MSTORE"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6610": {
      "op": "PUSH2",
      "value": "0x19DE"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6615": {
      "op": "DUP4"
    },
    "6616": {
      "op": "ADD"
    },
    "6617": {
      "op": "DUP8"
    },
    "6618": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "6621": {
      "jump": "i",
      "op": "JUMP"
    },
    "6622": {
      "op": "JUMPDEST"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6625": {
      "op": "DUP4"
    },
    "6626": {
      "op": "ADD"
    },
    "6627": {
      "op": "SWAP6"
    },
    "6628": {
      "op": "SWAP1"
    },
    "6629": {
      "op": "SWAP6"
    },
    "6630": {
      "op": "MSTORE"
    },
    "6631": {
      "op": "POP"
    },
    "6632": {
      "op": "SWAP2"
    },
    "6633": {
      "op": "ISZERO"
    },
    "6634": {
      "op": "ISZERO"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6637": {
      "op": "DUP4"
    },
    "6638": {
      "op": "ADD"
    },
    "6639": {
      "op": "MSTORE"
    },
    "6640": {
      "op": "ISZERO"
    },
    "6641": {
      "op": "ISZERO"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6644": {
      "op": "SWAP1"
    },
    "6645": {
      "op": "SWAP2"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "SWAP2"
    },
    "6649": {
      "op": "SWAP1"
    },
    "6650": {
      "op": "POP"
    },
    "6651": {
      "jump": "o",
      "op": "JUMP"
    },
    "6652": {
      "op": "JUMPDEST"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6657": {
      "op": "DUP3"
    },
    "6658": {
      "op": "DUP5"
    },
    "6659": {
      "op": "SUB"
    },
    "6660": {
      "op": "SLT"
    },
    "6661": {
      "op": "ISZERO"
    },
    "6662": {
      "op": "PUSH2",
      "value": "0x1A0E"
    },
    "6665": {
      "op": "JUMPI"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6668": {
      "op": "DUP1"
    },
    "6669": {
      "op": "REVERT"
    },
    "6670": {
      "op": "JUMPDEST"
    },
    "6671": {
      "op": "DUP2"
    },
    "6672": {
      "op": "CALLDATALOAD"
    },
    "6673": {
      "op": "PUSH2",
      "value": "0x1A19"
    },
    "6676": {
      "op": "DUP2"
    },
    "6677": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6680": {
      "jump": "i",
      "op": "JUMP"
    },
    "6681": {
      "op": "JUMPDEST"
    },
    "6682": {
      "op": "SWAP4"
    },
    "6683": {
      "op": "SWAP3"
    },
    "6684": {
      "op": "POP"
    },
    "6685": {
      "op": "POP"
    },
    "6686": {
      "op": "POP"
    },
    "6687": {
      "jump": "o",
      "op": "JUMP"
    },
    "6688": {
      "op": "JUMPDEST"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6691": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6694": {
      "op": "DUP1"
    },
    "6695": {
      "op": "DUP4"
    },
    "6696": {
      "op": "MSTORE"
    },
    "6697": {
      "op": "PUSH2",
      "value": "0x1A34"
    },
    "6700": {
      "op": "DUP2"
    },
    "6701": {
      "op": "DUP5"
    },
    "6702": {
      "op": "ADD"
    },
    "6703": {
      "op": "DUP14"
    },
    "6704": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "6707": {
      "jump": "i",
      "op": "JUMP"
    },
    "6708": {
      "op": "JUMPDEST"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6711": {
      "op": "DUP5"
    },
    "6712": {
      "op": "ADD"
    },
    "6713": {
      "op": "SWAP12"
    },
    "6714": {
      "op": "SWAP1"
    },
    "6715": {
      "op": "SWAP12"
    },
    "6716": {
      "op": "MSTORE"
    },
    "6717": {
      "op": "POP"
    },
    "6718": {
      "op": "POP"
    },
    "6719": {
      "op": "SWAP7"
    },
    "6720": {
      "op": "ISZERO"
    },
    "6721": {
      "op": "ISZERO"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6724": {
      "op": "DUP9"
    },
    "6725": {
      "op": "ADD"
    },
    "6726": {
      "op": "MSTORE"
    },
    "6727": {
      "op": "SWAP5"
    },
    "6728": {
      "op": "ISZERO"
    },
    "6729": {
      "op": "ISZERO"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6732": {
      "op": "DUP8"
    },
    "6733": {
      "op": "ADD"
    },
    "6734": {
      "op": "MSTORE"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6737": {
      "op": "DUP7"
    },
    "6738": {
      "op": "ADD"
    },
    "6739": {
      "op": "SWAP4"
    },
    "6740": {
      "op": "SWAP1"
    },
    "6741": {
      "op": "SWAP4"
    },
    "6742": {
      "op": "MSTORE"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6745": {
      "op": "DUP6"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "SWAP2"
    },
    "6748": {
      "op": "SWAP1"
    },
    "6749": {
      "op": "SWAP2"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6753": {
      "op": "DUP5"
    },
    "6754": {
      "op": "ADD"
    },
    "6755": {
      "op": "MSTORE"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6758": {
      "op": "DUP4"
    },
    "6759": {
      "op": "ADD"
    },
    "6760": {
      "op": "MSTORE"
    },
    "6761": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6764": {
      "op": "SWAP1"
    },
    "6765": {
      "op": "SWAP2"
    },
    "6766": {
      "op": "ADD"
    },
    "6767": {
      "op": "MSTORE"
    },
    "6768": {
      "op": "SWAP2"
    },
    "6769": {
      "op": "SWAP1"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "jump": "o",
      "op": "JUMP"
    },
    "6772": {
      "op": "JUMPDEST"
    },
    "6773": {
      "op": "DUP1"
    },
    "6774": {
      "op": "ISZERO"
    },
    "6775": {
      "op": "ISZERO"
    },
    "6776": {
      "op": "DUP2"
    },
    "6777": {
      "op": "EQ"
    },
    "6778": {
      "op": "PUSH2",
      "value": "0x16EA"
    },
    "6781": {
      "op": "JUMPI"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6784": {
      "op": "DUP1"
    },
    "6785": {
      "op": "REVERT"
    },
    "6786": {
      "op": "JUMPDEST"
    },
    "6787": {
      "op": "DUP1"
    },
    "6788": {
      "op": "CALLDATALOAD"
    },
    "6789": {
      "op": "PUSH2",
      "value": "0x16F8"
    },
    "6792": {
      "op": "DUP2"
    },
    "6793": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "6796": {
      "jump": "i",
      "op": "JUMP"
    },
    "6797": {
      "op": "JUMPDEST"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6800": {
      "op": "DUP1"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6803": {
      "op": "DUP1"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6808": {
      "op": "DUP7"
    },
    "6809": {
      "op": "DUP9"
    },
    "6810": {
      "op": "SUB"
    },
    "6811": {
      "op": "SLT"
    },
    "6812": {
      "op": "ISZERO"
    },
    "6813": {
      "op": "PUSH2",
      "value": "0x1AA5"
    },
    "6816": {
      "op": "JUMPI"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6819": {
      "op": "DUP1"
    },
    "6820": {
      "op": "REVERT"
    },
    "6821": {
      "op": "JUMPDEST"
    },
    "6822": {
      "op": "DUP6"
    },
    "6823": {
      "op": "CALLDATALOAD"
    },
    "6824": {
      "op": "SWAP5"
    },
    "6825": {
      "op": "POP"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6828": {
      "op": "DUP7"
    },
    "6829": {
      "op": "ADD"
    },
    "6830": {
      "op": "CALLDATALOAD"
    },
    "6831": {
      "op": "PUSH2",
      "value": "0x1AB7"
    },
    "6834": {
      "op": "DUP2"
    },
    "6835": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "6838": {
      "jump": "i",
      "op": "JUMP"
    },
    "6839": {
      "op": "JUMPDEST"
    },
    "6840": {
      "op": "SWAP4"
    },
    "6841": {
      "op": "POP"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6844": {
      "op": "DUP7"
    },
    "6845": {
      "op": "ADD"
    },
    "6846": {
      "op": "CALLDATALOAD"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6853": {
      "op": "SHL"
    },
    "6854": {
      "op": "SUB"
    },
    "6855": {
      "op": "DUP1"
    },
    "6856": {
      "op": "DUP3"
    },
    "6857": {
      "op": "GT"
    },
    "6858": {
      "op": "ISZERO"
    },
    "6859": {
      "op": "PUSH2",
      "value": "0x1AD3"
    },
    "6862": {
      "op": "JUMPI"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6865": {
      "op": "DUP1"
    },
    "6866": {
      "op": "REVERT"
    },
    "6867": {
      "op": "JUMPDEST"
    },
    "6868": {
      "op": "PUSH2",
      "value": "0x1ADF"
    },
    "6871": {
      "op": "DUP10"
    },
    "6872": {
      "op": "DUP4"
    },
    "6873": {
      "op": "DUP11"
    },
    "6874": {
      "op": "ADD"
    },
    "6875": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6878": {
      "jump": "i",
      "op": "JUMP"
    },
    "6879": {
      "op": "JUMPDEST"
    },
    "6880": {
      "op": "SWAP5"
    },
    "6881": {
      "op": "POP"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6884": {
      "op": "DUP9"
    },
    "6885": {
      "op": "ADD"
    },
    "6886": {
      "op": "CALLDATALOAD"
    },
    "6887": {
      "op": "SWAP2"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "op": "PUSH2",
      "value": "0x1824"
    },
    "6892": {
      "op": "DUP3"
    },
    "6893": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "6896": {
      "jump": "i",
      "op": "JUMP"
    },
    "6897": {
      "op": "JUMPDEST"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6900": {
      "op": "DUP1"
    },
    "6901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6903": {
      "op": "DUP1"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6906": {
      "op": "DUP1"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6909": {
      "op": "DUP1"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6912": {
      "op": "DUP1"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6915": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "6918": {
      "op": "DUP13"
    },
    "6919": {
      "op": "DUP15"
    },
    "6920": {
      "op": "SUB"
    },
    "6921": {
      "op": "SLT"
    },
    "6922": {
      "op": "ISZERO"
    },
    "6923": {
      "op": "PUSH2",
      "value": "0x1B13"
    },
    "6926": {
      "op": "JUMPI"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6929": {
      "op": "DUP1"
    },
    "6930": {
      "op": "REVERT"
    },
    "6931": {
      "op": "JUMPDEST"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6938": {
      "op": "SHL"
    },
    "6939": {
      "op": "SUB"
    },
    "6940": {
      "op": "DUP1"
    },
    "6941": {
      "op": "DUP14"
    },
    "6942": {
      "op": "CALLDATALOAD"
    },
    "6943": {
      "op": "GT"
    },
    "6944": {
      "op": "ISZERO"
    },
    "6945": {
      "op": "PUSH2",
      "value": "0x1B29"
    },
    "6948": {
      "op": "JUMPI"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6951": {
      "op": "DUP1"
    },
    "6952": {
      "op": "REVERT"
    },
    "6953": {
      "op": "JUMPDEST"
    },
    "6954": {
      "op": "PUSH2",
      "value": "0x1B36"
    },
    "6957": {
      "op": "DUP15"
    },
    "6958": {
      "op": "DUP15"
    },
    "6959": {
      "op": "CALLDATALOAD"
    },
    "6960": {
      "op": "DUP16"
    },
    "6961": {
      "op": "ADD"
    },
    "6962": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "6965": {
      "jump": "i",
      "op": "JUMP"
    },
    "6966": {
      "op": "JUMPDEST"
    },
    "6967": {
      "op": "SWAP12"
    },
    "6968": {
      "op": "POP"
    },
    "6969": {
      "op": "PUSH2",
      "value": "0x1B44"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6974": {
      "op": "DUP15"
    },
    "6975": {
      "op": "ADD"
    },
    "6976": {
      "op": "PUSH2",
      "value": "0x1A82"
    },
    "6979": {
      "jump": "i",
      "op": "JUMP"
    },
    "6980": {
      "op": "JUMPDEST"
    },
    "6981": {
      "op": "SWAP11"
    },
    "6982": {
      "op": "POP"
    },
    "6983": {
      "op": "PUSH2",
      "value": "0x1B52"
    },
    "6986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6988": {
      "op": "DUP15"
    },
    "6989": {
      "op": "ADD"
    },
    "6990": {
      "op": "PUSH2",
      "value": "0x1A82"
    },
    "6993": {
      "jump": "i",
      "op": "JUMP"
    },
    "6994": {
      "op": "JUMPDEST"
    },
    "6995": {
      "op": "SWAP10"
    },
    "6996": {
      "op": "POP"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6999": {
      "op": "DUP14"
    },
    "7000": {
      "op": "ADD"
    },
    "7001": {
      "op": "CALLDATALOAD"
    },
    "7002": {
      "op": "SWAP9"
    },
    "7003": {
      "op": "POP"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7006": {
      "op": "DUP14"
    },
    "7007": {
      "op": "ADD"
    },
    "7008": {
      "op": "CALLDATALOAD"
    },
    "7009": {
      "op": "SWAP8"
    },
    "7010": {
      "op": "POP"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7013": {
      "op": "DUP14"
    },
    "7014": {
      "op": "ADD"
    },
    "7015": {
      "op": "CALLDATALOAD"
    },
    "7016": {
      "op": "SWAP7"
    },
    "7017": {
      "op": "POP"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7020": {
      "op": "DUP14"
    },
    "7021": {
      "op": "ADD"
    },
    "7022": {
      "op": "CALLDATALOAD"
    },
    "7023": {
      "op": "SWAP6"
    },
    "7024": {
      "op": "POP"
    },
    "7025": {
      "op": "PUSH2",
      "value": "0x1B7C"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7030": {
      "op": "DUP15"
    },
    "7031": {
      "op": "ADD"
    },
    "7032": {
      "op": "PUSH2",
      "value": "0x16ED"
    },
    "7035": {
      "jump": "i",
      "op": "JUMP"
    },
    "7036": {
      "op": "JUMPDEST"
    },
    "7037": {
      "op": "SWAP5"
    },
    "7038": {
      "op": "POP"
    },
    "7039": {
      "op": "PUSH2",
      "value": "0x1B8B"
    },
    "7042": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7045": {
      "op": "DUP15"
    },
    "7046": {
      "op": "ADD"
    },
    "7047": {
      "op": "PUSH2",
      "value": "0x16ED"
    },
    "7050": {
      "jump": "i",
      "op": "JUMP"
    },
    "7051": {
      "op": "JUMPDEST"
    },
    "7052": {
      "op": "SWAP4"
    },
    "7053": {
      "op": "POP"
    },
    "7054": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "7057": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7060": {
      "op": "DUP15"
    },
    "7061": {
      "op": "ADD"
    },
    "7062": {
      "op": "PUSH2",
      "value": "0x16ED"
    },
    "7065": {
      "jump": "i",
      "op": "JUMP"
    },
    "7066": {
      "op": "JUMPDEST"
    },
    "7067": {
      "op": "SWAP3"
    },
    "7068": {
      "op": "POP"
    },
    "7069": {
      "op": "DUP1"
    },
    "7070": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "7073": {
      "op": "DUP15"
    },
    "7074": {
      "op": "ADD"
    },
    "7075": {
      "op": "CALLDATALOAD"
    },
    "7076": {
      "op": "GT"
    },
    "7077": {
      "op": "ISZERO"
    },
    "7078": {
      "op": "PUSH2",
      "value": "0x1BAE"
    },
    "7081": {
      "op": "JUMPI"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7084": {
      "op": "DUP1"
    },
    "7085": {
      "op": "REVERT"
    },
    "7086": {
      "op": "JUMPDEST"
    },
    "7087": {
      "op": "POP"
    },
    "7088": {
      "op": "PUSH2",
      "value": "0x1BC0"
    },
    "7091": {
      "op": "DUP14"
    },
    "7092": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "7095": {
      "op": "DUP15"
    },
    "7096": {
      "op": "ADD"
    },
    "7097": {
      "op": "CALLDATALOAD"
    },
    "7098": {
      "op": "DUP15"
    },
    "7099": {
      "op": "ADD"
    },
    "7100": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "7103": {
      "jump": "i",
      "op": "JUMP"
    },
    "7104": {
      "op": "JUMPDEST"
    },
    "7105": {
      "op": "SWAP1"
    },
    "7106": {
      "op": "POP"
    },
    "7107": {
      "op": "SWAP3"
    },
    "7108": {
      "op": "SWAP6"
    },
    "7109": {
      "op": "SWAP9"
    },
    "7110": {
      "op": "SWAP12"
    },
    "7111": {
      "op": "POP"
    },
    "7112": {
      "op": "SWAP3"
    },
    "7113": {
      "op": "SWAP6"
    },
    "7114": {
      "op": "SWAP9"
    },
    "7115": {
      "op": "SWAP12"
    },
    "7116": {
      "op": "SWAP1"
    },
    "7117": {
      "op": "SWAP4"
    },
    "7118": {
      "op": "SWAP7"
    },
    "7119": {
      "op": "SWAP10"
    },
    "7120": {
      "op": "POP"
    },
    "7121": {
      "jump": "o",
      "op": "JUMP"
    },
    "7122": {
      "op": "JUMPDEST"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7125": {
      "op": "DUP1"
    },
    "7126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7130": {
      "op": "DUP5"
    },
    "7131": {
      "op": "DUP7"
    },
    "7132": {
      "op": "SUB"
    },
    "7133": {
      "op": "SLT"
    },
    "7134": {
      "op": "ISZERO"
    },
    "7135": {
      "op": "PUSH2",
      "value": "0x1BE7"
    },
    "7138": {
      "op": "JUMPI"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7141": {
      "op": "DUP1"
    },
    "7142": {
      "op": "REVERT"
    },
    "7143": {
      "op": "JUMPDEST"
    },
    "7144": {
      "op": "DUP4"
    },
    "7145": {
      "op": "CALLDATALOAD"
    },
    "7146": {
      "op": "PUSH2",
      "value": "0x1BF2"
    },
    "7149": {
      "op": "DUP2"
    },
    "7150": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "7153": {
      "jump": "i",
      "op": "JUMP"
    },
    "7154": {
      "op": "JUMPDEST"
    },
    "7155": {
      "op": "SWAP3"
    },
    "7156": {
      "op": "POP"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7159": {
      "op": "DUP5"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "op": "CALLDATALOAD"
    },
    "7162": {
      "op": "PUSH2",
      "value": "0x1C02"
    },
    "7165": {
      "op": "DUP2"
    },
    "7166": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "7169": {
      "jump": "i",
      "op": "JUMP"
    },
    "7170": {
      "op": "JUMPDEST"
    },
    "7171": {
      "op": "SWAP2"
    },
    "7172": {
      "op": "POP"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7175": {
      "op": "DUP5"
    },
    "7176": {
      "op": "ADD"
    },
    "7177": {
      "op": "CALLDATALOAD"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7184": {
      "op": "SHL"
    },
    "7185": {
      "op": "SUB"
    },
    "7186": {
      "op": "DUP2"
    },
    "7187": {
      "op": "GT"
    },
    "7188": {
      "op": "ISZERO"
    },
    "7189": {
      "op": "PUSH2",
      "value": "0x1C1D"
    },
    "7192": {
      "op": "JUMPI"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7195": {
      "op": "DUP1"
    },
    "7196": {
      "op": "REVERT"
    },
    "7197": {
      "op": "JUMPDEST"
    },
    "7198": {
      "op": "PUSH2",
      "value": "0x1C29"
    },
    "7201": {
      "op": "DUP7"
    },
    "7202": {
      "op": "DUP3"
    },
    "7203": {
      "op": "DUP8"
    },
    "7204": {
      "op": "ADD"
    },
    "7205": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "7208": {
      "jump": "i",
      "op": "JUMP"
    },
    "7209": {
      "op": "JUMPDEST"
    },
    "7210": {
      "op": "SWAP2"
    },
    "7211": {
      "op": "POP"
    },
    "7212": {
      "op": "POP"
    },
    "7213": {
      "op": "SWAP3"
    },
    "7214": {
      "op": "POP"
    },
    "7215": {
      "op": "SWAP3"
    },
    "7216": {
      "op": "POP"
    },
    "7217": {
      "op": "SWAP3"
    },
    "7218": {
      "jump": "o",
      "op": "JUMP"
    },
    "7219": {
      "op": "JUMPDEST"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7224": {
      "op": "DUP1"
    },
    "7225": {
      "op": "DUP4"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "op": "DUP2"
    },
    "7228": {
      "op": "DUP5"
    },
    "7229": {
      "op": "MSTORE"
    },
    "7230": {
      "op": "DUP1"
    },
    "7231": {
      "op": "DUP6"
    },
    "7232": {
      "op": "MLOAD"
    },
    "7233": {
      "op": "DUP1"
    },
    "7234": {
      "op": "DUP4"
    },
    "7235": {
      "op": "MSTORE"
    },
    "7236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7238": {
      "op": "SWAP3"
    },
    "7239": {
      "op": "POP"
    },
    "7240": {
      "op": "DUP3"
    },
    "7241": {
      "op": "DUP7"
    },
    "7242": {
      "op": "ADD"
    },
    "7243": {
      "op": "SWAP2"
    },
    "7244": {
      "op": "POP"
    },
    "7245": {
      "op": "DUP3"
    },
    "7246": {
      "op": "DUP2"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7249": {
      "op": "SHL"
    },
    "7250": {
      "op": "DUP8"
    },
    "7251": {
      "op": "ADD"
    },
    "7252": {
      "op": "ADD"
    },
    "7253": {
      "op": "DUP5"
    },
    "7254": {
      "op": "DUP9"
    },
    "7255": {
      "op": "ADD"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7258": {
      "op": "JUMPDEST"
    },
    "7259": {
      "op": "DUP4"
    },
    "7260": {
      "op": "DUP2"
    },
    "7261": {
      "op": "LT"
    },
    "7262": {
      "op": "ISZERO"
    },
    "7263": {
      "op": "PUSH2",
      "value": "0x1CC9"
    },
    "7266": {
      "op": "JUMPI"
    },
    "7267": {
      "op": "DUP9"
    },
    "7268": {
      "op": "DUP4"
    },
    "7269": {
      "op": "SUB"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7272": {
      "op": "NOT"
    },
    "7273": {
      "op": "ADD"
    },
    "7274": {
      "op": "DUP6"
    },
    "7275": {
      "op": "MSTORE"
    },
    "7276": {
      "op": "DUP2"
    },
    "7277": {
      "op": "MLOAD"
    },
    "7278": {
      "op": "DUP1"
    },
    "7279": {
      "op": "MLOAD"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "op": "SUB"
    },
    "7288": {
      "op": "AND"
    },
    "7289": {
      "op": "DUP5"
    },
    "7290": {
      "op": "MSTORE"
    },
    "7291": {
      "op": "DUP8"
    },
    "7292": {
      "op": "DUP2"
    },
    "7293": {
      "op": "ADD"
    },
    "7294": {
      "op": "MLOAD"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7297": {
      "op": "DUP10"
    },
    "7298": {
      "op": "DUP7"
    },
    "7299": {
      "op": "ADD"
    },
    "7300": {
      "op": "DUP2"
    },
    "7301": {
      "op": "SWAP1"
    },
    "7302": {
      "op": "MSTORE"
    },
    "7303": {
      "op": "SWAP1"
    },
    "7304": {
      "op": "PUSH2",
      "value": "0x1C93"
    },
    "7307": {
      "op": "DUP3"
    },
    "7308": {
      "op": "DUP8"
    },
    "7309": {
      "op": "ADD"
    },
    "7310": {
      "op": "DUP3"
    },
    "7311": {
      "op": "PUSH2",
      "value": "0x199F"
    },
    "7314": {
      "jump": "i",
      "op": "JUMP"
    },
    "7315": {
      "op": "JUMPDEST"
    },
    "7316": {
      "op": "DUP4"
    },
    "7317": {
      "op": "DUP11"
    },
    "7318": {
      "op": "ADD"
    },
    "7319": {
      "op": "MLOAD"
    },
    "7320": {
      "op": "DUP8"
    },
    "7321": {
      "op": "DUP12"
    },
    "7322": {
      "op": "ADD"
    },
    "7323": {
      "op": "MSTORE"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7326": {
      "op": "DUP1"
    },
    "7327": {
      "op": "DUP6"
    },
    "7328": {
      "op": "ADD"
    },
    "7329": {
      "op": "MLOAD"
    },
    "7330": {
      "op": "ISZERO"
    },
    "7331": {
      "op": "ISZERO"
    },
    "7332": {
      "op": "SWAP1"
    },
    "7333": {
      "op": "DUP9"
    },
    "7334": {
      "op": "ADD"
    },
    "7335": {
      "op": "MSTORE"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7338": {
      "op": "SWAP4"
    },
    "7339": {
      "op": "DUP5"
    },
    "7340": {
      "op": "ADD"
    },
    "7341": {
      "op": "MLOAD"
    },
    "7342": {
      "op": "ISZERO"
    },
    "7343": {
      "op": "ISZERO"
    },
    "7344": {
      "op": "SWAP4"
    },
    "7345": {
      "op": "SWAP1"
    },
    "7346": {
      "op": "SWAP7"
    },
    "7347": {
      "op": "ADD"
    },
    "7348": {
      "op": "SWAP3"
    },
    "7349": {
      "op": "SWAP1"
    },
    "7350": {
      "op": "SWAP3"
    },
    "7351": {
      "op": "MSTORE"
    },
    "7352": {
      "op": "POP"
    },
    "7353": {
      "op": "POP"
    },
    "7354": {
      "op": "SWAP4"
    },
    "7355": {
      "op": "DUP7"
    },
    "7356": {
      "op": "ADD"
    },
    "7357": {
      "op": "SWAP4"
    },
    "7358": {
      "op": "SWAP1"
    },
    "7359": {
      "op": "DUP7"
    },
    "7360": {
      "op": "ADD"
    },
    "7361": {
      "op": "SWAP1"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "PUSH2",
      "value": "0x1C5A"
    },
    "7368": {
      "op": "JUMP"
    },
    "7369": {
      "op": "JUMPDEST"
    },
    "7370": {
      "op": "POP"
    },
    "7371": {
      "op": "SWAP1"
    },
    "7372": {
      "op": "SWAP9"
    },
    "7373": {
      "op": "SWAP8"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "op": "POP"
    },
    "7376": {
      "op": "POP"
    },
    "7377": {
      "op": "POP"
    },
    "7378": {
      "op": "POP"
    },
    "7379": {
      "op": "POP"
    },
    "7380": {
      "op": "POP"
    },
    "7381": {
      "op": "POP"
    },
    "7382": {
      "jump": "o",
      "op": "JUMP"
    },
    "7383": {
      "op": "JUMPDEST"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7386": {
      "op": "DUP1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7389": {
      "op": "DUP1"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7394": {
      "op": "DUP7"
    },
    "7395": {
      "op": "DUP9"
    },
    "7396": {
      "op": "SUB"
    },
    "7397": {
      "op": "SLT"
    },
    "7398": {
      "op": "ISZERO"
    },
    "7399": {
      "op": "PUSH2",
      "value": "0x1CEF"
    },
    "7402": {
      "op": "JUMPI"
    },
    "7403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7405": {
      "op": "DUP1"
    },
    "7406": {
      "op": "REVERT"
    },
    "7407": {
      "op": "JUMPDEST"
    },
    "7408": {
      "op": "DUP6"
    },
    "7409": {
      "op": "CALLDATALOAD"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7416": {
      "op": "SHL"
    },
    "7417": {
      "op": "SUB"
    },
    "7418": {
      "op": "DUP1"
    },
    "7419": {
      "op": "DUP3"
    },
    "7420": {
      "op": "GT"
    },
    "7421": {
      "op": "ISZERO"
    },
    "7422": {
      "op": "PUSH2",
      "value": "0x1D06"
    },
    "7425": {
      "op": "JUMPI"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7428": {
      "op": "DUP1"
    },
    "7429": {
      "op": "REVERT"
    },
    "7430": {
      "op": "JUMPDEST"
    },
    "7431": {
      "op": "DUP2"
    },
    "7432": {
      "op": "DUP9"
    },
    "7433": {
      "op": "ADD"
    },
    "7434": {
      "op": "SWAP2"
    },
    "7435": {
      "op": "POP"
    },
    "7436": {
      "op": "DUP9"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7439": {
      "op": "DUP4"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "op": "SLT"
    },
    "7442": {
      "op": "PUSH2",
      "value": "0x1D1A"
    },
    "7445": {
      "op": "JUMPI"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7448": {
      "op": "DUP1"
    },
    "7449": {
      "op": "REVERT"
    },
    "7450": {
      "op": "JUMPDEST"
    },
    "7451": {
      "op": "DUP2"
    },
    "7452": {
      "op": "CALLDATALOAD"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7455": {
      "op": "DUP3"
    },
    "7456": {
      "op": "DUP3"
    },
    "7457": {
      "op": "GT"
    },
    "7458": {
      "op": "ISZERO"
    },
    "7459": {
      "op": "PUSH2",
      "value": "0x1D2E"
    },
    "7462": {
      "op": "JUMPI"
    },
    "7463": {
      "op": "PUSH2",
      "value": "0x1D2E"
    },
    "7466": {
      "op": "PUSH2",
      "value": "0x16FD"
    },
    "7469": {
      "jump": "i",
      "op": "JUMP"
    },
    "7470": {
      "op": "JUMPDEST"
    },
    "7471": {
      "op": "DUP2"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7474": {
      "op": "SHL"
    },
    "7475": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7478": {
      "op": "DUP3"
    },
    "7479": {
      "op": "DUP3"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x1713"
    },
    "7484": {
      "jump": "i",
      "op": "JUMP"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "SWAP3"
    },
    "7487": {
      "op": "DUP4"
    },
    "7488": {
      "op": "MSTORE"
    },
    "7489": {
      "op": "DUP5"
    },
    "7490": {
      "op": "DUP2"
    },
    "7491": {
      "op": "ADD"
    },
    "7492": {
      "op": "DUP3"
    },
    "7493": {
      "op": "ADD"
    },
    "7494": {
      "op": "SWAP3"
    },
    "7495": {
      "op": "DUP3"
    },
    "7496": {
      "op": "DUP2"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "op": "SWAP1"
    },
    "7499": {
      "op": "DUP14"
    },
    "7500": {
      "op": "DUP6"
    },
    "7501": {
      "op": "GT"
    },
    "7502": {
      "op": "ISZERO"
    },
    "7503": {
      "op": "PUSH2",
      "value": "0x1D57"
    },
    "7506": {
      "op": "JUMPI"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7509": {
      "op": "DUP1"
    },
    "7510": {
      "op": "REVERT"
    },
    "7511": {
      "op": "JUMPDEST"
    },
    "7512": {
      "op": "SWAP6"
    },
    "7513": {
      "op": "DUP4"
    },
    "7514": {
      "op": "ADD"
    },
    "7515": {
      "op": "SWAP6"
    },
    "7516": {
      "op": "JUMPDEST"
    },
    "7517": {
      "op": "DUP5"
    },
    "7518": {
      "op": "DUP8"
    },
    "7519": {
      "op": "LT"
    },
    "7520": {
      "op": "ISZERO"
    },
    "7521": {
      "op": "PUSH2",
      "value": "0x1D75"
    },
    "7524": {
      "op": "JUMPI"
    },
    "7525": {
      "op": "DUP7"
    },
    "7526": {
      "op": "CALLDATALOAD"
    },
    "7527": {
      "op": "DUP3"
    },
    "7528": {
      "op": "MSTORE"
    },
    "7529": {
      "op": "SWAP6"
    },
    "7530": {
      "op": "DUP4"
    },
    "7531": {
      "op": "ADD"
    },
    "7532": {
      "op": "SWAP6"
    },
    "7533": {
      "op": "SWAP1"
    },
    "7534": {
      "op": "DUP4"
    },
    "7535": {
      "op": "ADD"
    },
    "7536": {
      "op": "SWAP1"
    },
    "7537": {
      "op": "PUSH2",
      "value": "0x1D5C"
    },
    "7540": {
      "op": "JUMP"
    },
    "7541": {
      "op": "JUMPDEST"
    },
    "7542": {
      "op": "SWAP11"
    },
    "7543": {
      "op": "POP"
    },
    "7544": {
      "op": "PUSH2",
      "value": "0x1D85"
    },
    "7547": {
      "op": "SWAP2"
    },
    "7548": {
      "op": "POP"
    },
    "7549": {
      "op": "POP"
    },
    "7550": {
      "op": "DUP11"
    },
    "7551": {
      "op": "DUP3"
    },
    "7552": {
      "op": "ADD"
    },
    "7553": {
      "op": "PUSH2",
      "value": "0x1A82"
    },
    "7556": {
      "jump": "i",
      "op": "JUMP"
    },
    "7557": {
      "op": "JUMPDEST"
    },
    "7558": {
      "op": "SWAP8"
    },
    "7559": {
      "op": "POP"
    },
    "7560": {
      "op": "POP"
    },
    "7561": {
      "op": "POP"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7564": {
      "op": "DUP9"
    },
    "7565": {
      "op": "ADD"
    },
    "7566": {
      "op": "CALLDATALOAD"
    },
    "7567": {
      "op": "SWAP2"
    },
    "7568": {
      "op": "POP"
    },
    "7569": {
      "op": "DUP1"
    },
    "7570": {
      "op": "DUP3"
    },
    "7571": {
      "op": "GT"
    },
    "7572": {
      "op": "ISZERO"
    },
    "7573": {
      "op": "PUSH2",
      "value": "0x1D9D"
    },
    "7576": {
      "op": "JUMPI"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7579": {
      "op": "DUP1"
    },
    "7580": {
      "op": "REVERT"
    },
    "7581": {
      "op": "JUMPDEST"
    },
    "7582": {
      "op": "PUSH2",
      "value": "0x1DA9"
    },
    "7585": {
      "op": "DUP10"
    },
    "7586": {
      "op": "DUP4"
    },
    "7587": {
      "op": "DUP11"
    },
    "7588": {
      "op": "ADD"
    },
    "7589": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "7592": {
      "jump": "i",
      "op": "JUMP"
    },
    "7593": {
      "op": "JUMPDEST"
    },
    "7594": {
      "op": "SWAP5"
    },
    "7595": {
      "op": "POP"
    },
    "7596": {
      "op": "PUSH2",
      "value": "0x1DB7"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7601": {
      "op": "DUP10"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "PUSH2",
      "value": "0x16ED"
    },
    "7606": {
      "jump": "i",
      "op": "JUMP"
    },
    "7607": {
      "op": "JUMPDEST"
    },
    "7608": {
      "op": "SWAP4"
    },
    "7609": {
      "op": "POP"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7612": {
      "op": "DUP9"
    },
    "7613": {
      "op": "ADD"
    },
    "7614": {
      "op": "CALLDATALOAD"
    },
    "7615": {
      "op": "SWAP2"
    },
    "7616": {
      "op": "POP"
    },
    "7617": {
      "op": "DUP1"
    },
    "7618": {
      "op": "DUP3"
    },
    "7619": {
      "op": "GT"
    },
    "7620": {
      "op": "ISZERO"
    },
    "7621": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "7624": {
      "op": "JUMPI"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7627": {
      "op": "DUP1"
    },
    "7628": {
      "op": "REVERT"
    },
    "7629": {
      "op": "JUMPDEST"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7632": {
      "op": "DUP1"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7635": {
      "op": "DUP1"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7638": {
      "op": "DUP1"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7643": {
      "op": "DUP9"
    },
    "7644": {
      "op": "DUP11"
    },
    "7645": {
      "op": "SUB"
    },
    "7646": {
      "op": "SLT"
    },
    "7647": {
      "op": "ISZERO"
    },
    "7648": {
      "op": "PUSH2",
      "value": "0x1DE8"
    },
    "7651": {
      "op": "JUMPI"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7654": {
      "op": "DUP1"
    },
    "7655": {
      "op": "REVERT"
    },
    "7656": {
      "op": "JUMPDEST"
    },
    "7657": {
      "op": "DUP8"
    },
    "7658": {
      "op": "CALLDATALOAD"
    },
    "7659": {
      "op": "PUSH2",
      "value": "0x1DF3"
    },
    "7662": {
      "op": "DUP2"
    },
    "7663": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "7666": {
      "jump": "i",
      "op": "JUMP"
    },
    "7667": {
      "op": "JUMPDEST"
    },
    "7668": {
      "op": "SWAP7"
    },
    "7669": {
      "op": "POP"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7672": {
      "op": "DUP9"
    },
    "7673": {
      "op": "ADD"
    },
    "7674": {
      "op": "CALLDATALOAD"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7681": {
      "op": "SHL"
    },
    "7682": {
      "op": "SUB"
    },
    "7683": {
      "op": "DUP1"
    },
    "7684": {
      "op": "DUP3"
    },
    "7685": {
      "op": "GT"
    },
    "7686": {
      "op": "ISZERO"
    },
    "7687": {
      "op": "PUSH2",
      "value": "0x1E0F"
    },
    "7690": {
      "op": "JUMPI"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7693": {
      "op": "DUP1"
    },
    "7694": {
      "op": "REVERT"
    },
    "7695": {
      "op": "JUMPDEST"
    },
    "7696": {
      "op": "PUSH2",
      "value": "0x1E1B"
    },
    "7699": {
      "op": "DUP12"
    },
    "7700": {
      "op": "DUP4"
    },
    "7701": {
      "op": "DUP13"
    },
    "7702": {
      "op": "ADD"
    },
    "7703": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "7706": {
      "jump": "i",
      "op": "JUMP"
    },
    "7707": {
      "op": "JUMPDEST"
    },
    "7708": {
      "op": "SWAP8"
    },
    "7709": {
      "op": "POP"
    },
    "7710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7712": {
      "op": "DUP11"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "CALLDATALOAD"
    },
    "7715": {
      "op": "SWAP2"
    },
    "7716": {
      "op": "POP"
    },
    "7717": {
      "op": "DUP1"
    },
    "7718": {
      "op": "DUP3"
    },
    "7719": {
      "op": "GT"
    },
    "7720": {
      "op": "ISZERO"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1E31"
    },
    "7724": {
      "op": "JUMPI"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7727": {
      "op": "DUP1"
    },
    "7728": {
      "op": "REVERT"
    },
    "7729": {
      "op": "JUMPDEST"
    },
    "7730": {
      "op": "PUSH2",
      "value": "0x1E3D"
    },
    "7733": {
      "op": "DUP12"
    },
    "7734": {
      "op": "DUP4"
    },
    "7735": {
      "op": "DUP13"
    },
    "7736": {
      "op": "ADD"
    },
    "7737": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "7740": {
      "jump": "i",
      "op": "JUMP"
    },
    "7741": {
      "op": "JUMPDEST"
    },
    "7742": {
      "op": "SWAP7"
    },
    "7743": {
      "op": "POP"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7746": {
      "op": "DUP11"
    },
    "7747": {
      "op": "ADD"
    },
    "7748": {
      "op": "CALLDATALOAD"
    },
    "7749": {
      "op": "SWAP2"
    },
    "7750": {
      "op": "POP"
    },
    "7751": {
      "op": "PUSH2",
      "value": "0x1E4F"
    },
    "7754": {
      "op": "DUP3"
    },
    "7755": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "7758": {
      "jump": "i",
      "op": "JUMP"
    },
    "7759": {
      "op": "JUMPDEST"
    },
    "7760": {
      "op": "DUP2"
    },
    "7761": {
      "op": "SWAP6"
    },
    "7762": {
      "op": "POP"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7765": {
      "op": "DUP11"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "CALLDATALOAD"
    },
    "7768": {
      "op": "SWAP5"
    },
    "7769": {
      "op": "POP"
    },
    "7770": {
      "op": "PUSH2",
      "value": "0x1E65"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7775": {
      "op": "DUP12"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "op": "PUSH2",
      "value": "0x16ED"
    },
    "7780": {
      "jump": "i",
      "op": "JUMP"
    },
    "7781": {
      "op": "JUMPDEST"
    },
    "7782": {
      "op": "SWAP4"
    },
    "7783": {
      "op": "POP"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7786": {
      "op": "DUP11"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "op": "CALLDATALOAD"
    },
    "7789": {
      "op": "SWAP2"
    },
    "7790": {
      "op": "POP"
    },
    "7791": {
      "op": "DUP1"
    },
    "7792": {
      "op": "DUP3"
    },
    "7793": {
      "op": "GT"
    },
    "7794": {
      "op": "ISZERO"
    },
    "7795": {
      "op": "PUSH2",
      "value": "0x1E7B"
    },
    "7798": {
      "op": "JUMPI"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7801": {
      "op": "DUP1"
    },
    "7802": {
      "op": "REVERT"
    },
    "7803": {
      "op": "JUMPDEST"
    },
    "7804": {
      "op": "POP"
    },
    "7805": {
      "op": "PUSH2",
      "value": "0x1E88"
    },
    "7808": {
      "op": "DUP11"
    },
    "7809": {
      "op": "DUP3"
    },
    "7810": {
      "op": "DUP12"
    },
    "7811": {
      "op": "ADD"
    },
    "7812": {
      "op": "PUSH2",
      "value": "0x176A"
    },
    "7815": {
      "jump": "i",
      "op": "JUMP"
    },
    "7816": {
      "op": "JUMPDEST"
    },
    "7817": {
      "op": "SWAP2"
    },
    "7818": {
      "op": "POP"
    },
    "7819": {
      "op": "POP"
    },
    "7820": {
      "op": "SWAP3"
    },
    "7821": {
      "op": "SWAP6"
    },
    "7822": {
      "op": "SWAP9"
    },
    "7823": {
      "op": "SWAP2"
    },
    "7824": {
      "op": "SWAP5"
    },
    "7825": {
      "op": "SWAP8"
    },
    "7826": {
      "op": "POP"
    },
    "7827": {
      "op": "SWAP3"
    },
    "7828": {
      "op": "SWAP6"
    },
    "7829": {
      "op": "POP"
    },
    "7830": {
      "jump": "o",
      "op": "JUMP"
    },
    "7831": {
      "op": "JUMPDEST"
    },
    "7832": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "7865": {
      "op": "DUP2"
    },
    "7866": {
      "op": "MSTORE"
    },
    "7867": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7902": {
      "op": "DUP3"
    },
    "7903": {
      "op": "ADD"
    },
    "7904": {
      "op": "MSTORE"
    },
    "7905": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7926": {
      "op": "SHL"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7929": {
      "op": "DUP3"
    },
    "7930": {
      "op": "ADD"
    },
    "7931": {
      "op": "MSTORE"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7934": {
      "op": "ADD"
    },
    "7935": {
      "op": "SWAP1"
    },
    "7936": {
      "jump": "o",
      "op": "JUMP"
    },
    "7937": {
      "op": "JUMPDEST"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7940": {
      "op": "DUP3"
    },
    "7941": {
      "op": "MLOAD"
    },
    "7942": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "7945": {
      "op": "DUP2"
    },
    "7946": {
      "op": "DUP5"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7949": {
      "op": "DUP8"
    },
    "7950": {
      "op": "ADD"
    },
    "7951": {
      "op": "PUSH2",
      "value": "0x196F"
    },
    "7954": {
      "jump": "i",
      "op": "JUMP"
    },
    "7955": {
      "op": "JUMPDEST"
    },
    "7956": {
      "op": "SWAP2"
    },
    "7957": {
      "op": "SWAP1"
    },
    "7958": {
      "op": "SWAP2"
    },
    "7959": {
      "op": "ADD"
    },
    "7960": {
      "op": "SWAP3"
    },
    "7961": {
      "op": "SWAP2"
    },
    "7962": {
      "op": "POP"
    },
    "7963": {
      "op": "POP"
    },
    "7964": {
      "jump": "o",
      "op": "JUMP"
    },
    "7965": {
      "op": "JUMPDEST"
    },
    "7966": {
      "op": "SWAP5"
    },
    "7967": {
      "op": "DUP6"
    },
    "7968": {
      "op": "MSTORE"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7971": {
      "op": "DUP6"
    },
    "7972": {
      "op": "ADD"
    },
    "7973": {
      "op": "SWAP4"
    },
    "7974": {
      "op": "SWAP1"
    },
    "7975": {
      "op": "SWAP4"
    },
    "7976": {
      "op": "MSTORE"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7979": {
      "op": "DUP5"
    },
    "7980": {
      "op": "ADD"
    },
    "7981": {
      "op": "SWAP2"
    },
    "7982": {
      "op": "SWAP1"
    },
    "7983": {
      "op": "SWAP2"
    },
    "7984": {
      "op": "MSTORE"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7987": {
      "op": "DUP4"
    },
    "7988": {
      "op": "ADD"
    },
    "7989": {
      "op": "MSTORE"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7996": {
      "op": "SHL"
    },
    "7997": {
      "op": "SUB"
    },
    "7998": {
      "op": "AND"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8001": {
      "op": "DUP3"
    },
    "8002": {
      "op": "ADD"
    },
    "8003": {
      "op": "MSTORE"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "op": "SWAP1"
    },
    "8008": {
      "jump": "o",
      "op": "JUMP"
    },
    "8009": {
      "op": "JUMPDEST"
    },
    "8010": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8015": {
      "op": "SHL"
    },
    "8016": {
      "op": "DUP2"
    },
    "8017": {
      "op": "MSTORE"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8020": {
      "op": "DUP2"
    },
    "8021": {
      "op": "ADD"
    },
    "8022": {
      "op": "SWAP3"
    },
    "8023": {
      "op": "SWAP1"
    },
    "8024": {
      "op": "SWAP3"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8028": {
      "op": "DUP3"
    },
    "8029": {
      "op": "ADD"
    },
    "8030": {
      "op": "MSTORE"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "8033": {
      "op": "ADD"
    },
    "8034": {
      "op": "SWAP1"
    },
    "8035": {
      "jump": "o",
      "op": "JUMP"
    },
    "8036": {
      "op": "JUMPDEST"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8041": {
      "op": "DUP3"
    },
    "8042": {
      "op": "DUP5"
    },
    "8043": {
      "op": "SUB"
    },
    "8044": {
      "op": "SLT"
    },
    "8045": {
      "op": "ISZERO"
    },
    "8046": {
      "op": "PUSH2",
      "value": "0x1F76"
    },
    "8049": {
      "op": "JUMPI"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8052": {
      "op": "DUP1"
    },
    "8053": {
      "op": "REVERT"
    },
    "8054": {
      "op": "JUMPDEST"
    },
    "8055": {
      "op": "POP"
    },
    "8056": {
      "op": "MLOAD"
    },
    "8057": {
      "op": "SWAP2"
    },
    "8058": {
      "op": "SWAP1"
    },
    "8059": {
      "op": "POP"
    },
    "8060": {
      "jump": "o",
      "op": "JUMP"
    },
    "8061": {
      "op": "JUMPDEST"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8064": {
      "op": "DUP3"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8067": {
      "op": "DUP4"
    },
    "8068": {
      "op": "ADD"
    },
    "8069": {
      "op": "SLT"
    },
    "8070": {
      "op": "PUSH2",
      "value": "0x1F8E"
    },
    "8073": {
      "op": "JUMPI"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8076": {
      "op": "DUP1"
    },
    "8077": {
      "op": "REVERT"
    },
    "8078": {
      "op": "JUMPDEST"
    },
    "8079": {
      "op": "DUP2"
    },
    "8080": {
      "op": "MLOAD"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x1F9C"
    },
    "8084": {
      "op": "PUSH2",
      "value": "0x1789"
    },
    "8087": {
      "op": "DUP3"
    },
    "8088": {
      "op": "PUSH2",
      "value": "0x1743"
    },
    "8091": {
      "jump": "i",
      "op": "JUMP"
    },
    "8092": {
      "op": "JUMPDEST"
    },
    "8093": {
      "op": "DUP2"
    },
    "8094": {
      "op": "DUP2"
    },
    "8095": {
      "op": "MSTORE"
    },
    "8096": {
      "op": "DUP5"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8099": {
      "op": "DUP4"
    },
    "8100": {
      "op": "DUP7"
    },
    "8101": {
      "op": "ADD"
    },
    "8102": {
      "op": "ADD"
    },
    "8103": {
      "op": "GT"
    },
    "8104": {
      "op": "ISZERO"
    },
    "8105": {
      "op": "PUSH2",
      "value": "0x1FB1"
    },
    "8108": {
      "op": "JUMPI"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8111": {
      "op": "DUP1"
    },
    "8112": {
      "op": "REVERT"
    },
    "8113": {
      "op": "JUMPDEST"
    },
    "8114": {
      "op": "PUSH2",
      "value": "0x1FC2"
    },
    "8117": {
      "op": "DUP3"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8120": {
      "op": "DUP4"
    },
    "8121": {
      "op": "ADD"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8124": {
      "op": "DUP8"
    },
    "8125": {
      "op": "ADD"
    },
    "8126": {
      "op": "PUSH2",
      "value": "0x196F"
    },
    "8129": {
      "jump": "i",
      "op": "JUMP"
    },
    "8130": {
      "op": "JUMPDEST"
    },
    "8131": {
      "op": "SWAP5"
    },
    "8132": {
      "op": "SWAP4"
    },
    "8133": {
      "op": "POP"
    },
    "8134": {
      "op": "POP"
    },
    "8135": {
      "op": "POP"
    },
    "8136": {
      "op": "POP"
    },
    "8137": {
      "jump": "o",
      "op": "JUMP"
    },
    "8138": {
      "op": "JUMPDEST"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8141": {
      "op": "DUP1"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8144": {
      "op": "DUP1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8149": {
      "op": "DUP7"
    },
    "8150": {
      "op": "DUP9"
    },
    "8151": {
      "op": "SUB"
    },
    "8152": {
      "op": "SLT"
    },
    "8153": {
      "op": "ISZERO"
    },
    "8154": {
      "op": "PUSH2",
      "value": "0x1FE2"
    },
    "8157": {
      "op": "JUMPI"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8160": {
      "op": "DUP1"
    },
    "8161": {
      "op": "REVERT"
    },
    "8162": {
      "op": "JUMPDEST"
    },
    "8163": {
      "op": "DUP6"
    },
    "8164": {
      "op": "MLOAD"
    },
    "8165": {
      "op": "PUSH2",
      "value": "0x1FED"
    },
    "8168": {
      "op": "DUP2"
    },
    "8169": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "8172": {
      "jump": "i",
      "op": "JUMP"
    },
    "8173": {
      "op": "JUMPDEST"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8176": {
      "op": "DUP8"
    },
    "8177": {
      "op": "ADD"
    },
    "8178": {
      "op": "MLOAD"
    },
    "8179": {
      "op": "SWAP1"
    },
    "8180": {
      "op": "SWAP6"
    },
    "8181": {
      "op": "POP"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8188": {
      "op": "SHL"
    },
    "8189": {
      "op": "SUB"
    },
    "8190": {
      "op": "DUP2"
    },
    "8191": {
      "op": "GT"
    },
    "8192": {
      "op": "ISZERO"
    },
    "8193": {
      "op": "PUSH2",
      "value": "0x2009"
    },
    "8196": {
      "op": "JUMPI"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8199": {
      "op": "DUP1"
    },
    "8200": {
      "op": "REVERT"
    },
    "8201": {
      "op": "JUMPDEST"
    },
    "8202": {
      "op": "PUSH2",
      "value": "0x2015"
    },
    "8205": {
      "op": "DUP9"
    },
    "8206": {
      "op": "DUP3"
    },
    "8207": {
      "op": "DUP10"
    },
    "8208": {
      "op": "ADD"
    },
    "8209": {
      "op": "PUSH2",
      "value": "0x1F7D"
    },
    "8212": {
      "jump": "i",
      "op": "JUMP"
    },
    "8213": {
      "op": "JUMPDEST"
    },
    "8214": {
      "op": "SWAP5"
    },
    "8215": {
      "op": "POP"
    },
    "8216": {
      "op": "POP"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8219": {
      "op": "DUP7"
    },
    "8220": {
      "op": "ADD"
    },
    "8221": {
      "op": "MLOAD"
    },
    "8222": {
      "op": "SWAP3"
    },
    "8223": {
      "op": "POP"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8226": {
      "op": "DUP7"
    },
    "8227": {
      "op": "ADD"
    },
    "8228": {
      "op": "MLOAD"
    },
    "8229": {
      "op": "PUSH2",
      "value": "0x202D"
    },
    "8232": {
      "op": "DUP2"
    },
    "8233": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "8236": {
      "jump": "i",
      "op": "JUMP"
    },
    "8237": {
      "op": "JUMPDEST"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8240": {
      "op": "DUP8"
    },
    "8241": {
      "op": "ADD"
    },
    "8242": {
      "op": "MLOAD"
    },
    "8243": {
      "op": "SWAP1"
    },
    "8244": {
      "op": "SWAP3"
    },
    "8245": {
      "op": "POP"
    },
    "8246": {
      "op": "PUSH2",
      "value": "0x203E"
    },
    "8249": {
      "op": "DUP2"
    },
    "8250": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "8253": {
      "jump": "i",
      "op": "JUMP"
    },
    "8254": {
      "op": "JUMPDEST"
    },
    "8255": {
      "op": "DUP1"
    },
    "8256": {
      "op": "SWAP2"
    },
    "8257": {
      "op": "POP"
    },
    "8258": {
      "op": "POP"
    },
    "8259": {
      "op": "SWAP3"
    },
    "8260": {
      "op": "SWAP6"
    },
    "8261": {
      "op": "POP"
    },
    "8262": {
      "op": "SWAP3"
    },
    "8263": {
      "op": "SWAP6"
    },
    "8264": {
      "op": "SWAP1"
    },
    "8265": {
      "op": "SWAP4"
    },
    "8266": {
      "op": "POP"
    },
    "8267": {
      "jump": "o",
      "op": "JUMP"
    },
    "8268": {
      "op": "JUMPDEST"
    },
    "8269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8273": {
      "op": "DUP3"
    },
    "8274": {
      "op": "DUP5"
    },
    "8275": {
      "op": "SUB"
    },
    "8276": {
      "op": "SLT"
    },
    "8277": {
      "op": "ISZERO"
    },
    "8278": {
      "op": "PUSH2",
      "value": "0x205E"
    },
    "8281": {
      "op": "JUMPI"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8284": {
      "op": "DUP1"
    },
    "8285": {
      "op": "REVERT"
    },
    "8286": {
      "op": "JUMPDEST"
    },
    "8287": {
      "op": "DUP2"
    },
    "8288": {
      "op": "MLOAD"
    },
    "8289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8295": {
      "op": "SHL"
    },
    "8296": {
      "op": "SUB"
    },
    "8297": {
      "op": "DUP2"
    },
    "8298": {
      "op": "GT"
    },
    "8299": {
      "op": "ISZERO"
    },
    "8300": {
      "op": "PUSH2",
      "value": "0x2074"
    },
    "8303": {
      "op": "JUMPI"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8306": {
      "op": "DUP1"
    },
    "8307": {
      "op": "REVERT"
    },
    "8308": {
      "op": "JUMPDEST"
    },
    "8309": {
      "op": "PUSH2",
      "value": "0x1FC2"
    },
    "8312": {
      "op": "DUP5"
    },
    "8313": {
      "op": "DUP3"
    },
    "8314": {
      "op": "DUP6"
    },
    "8315": {
      "op": "ADD"
    },
    "8316": {
      "op": "PUSH2",
      "value": "0x1F7D"
    },
    "8319": {
      "jump": "i",
      "op": "JUMP"
    },
    "8320": {
      "op": "JUMPDEST"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8325": {
      "op": "DUP3"
    },
    "8326": {
      "op": "DUP5"
    },
    "8327": {
      "op": "SUB"
    },
    "8328": {
      "op": "SLT"
    },
    "8329": {
      "op": "ISZERO"
    },
    "8330": {
      "op": "PUSH2",
      "value": "0x2092"
    },
    "8333": {
      "op": "JUMPI"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8336": {
      "op": "DUP1"
    },
    "8337": {
      "op": "REVERT"
    },
    "8338": {
      "op": "JUMPDEST"
    },
    "8339": {
      "op": "DUP2"
    },
    "8340": {
      "op": "MLOAD"
    },
    "8341": {
      "op": "PUSH2",
      "value": "0x1A19"
    },
    "8344": {
      "op": "DUP2"
    },
    "8345": {
      "op": "PUSH2",
      "value": "0x1A74"
    },
    "8348": {
      "jump": "i",
      "op": "JUMP"
    },
    "8349": {
      "op": "JUMPDEST"
    },
    "8350": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8357": {
      "op": "SHL"
    },
    "8358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8360": {
      "op": "MSTORE"
    },
    "8361": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8363": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8365": {
      "op": "MSTORE"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8370": {
      "op": "REVERT"
    },
    "8371": {
      "op": "JUMPDEST"
    },
    "8372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8376": {
      "op": "NOT"
    },
    "8377": {
      "op": "DUP3"
    },
    "8378": {
      "op": "EQ"
    },
    "8379": {
      "op": "ISZERO"
    },
    "8380": {
      "op": "PUSH2",
      "value": "0x20D5"
    },
    "8383": {
      "op": "JUMPI"
    },
    "8384": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8389": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8391": {
      "op": "SHL"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8394": {
      "op": "MSTORE"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8399": {
      "op": "MSTORE"
    },
    "8400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8404": {
      "op": "REVERT"
    },
    "8405": {
      "op": "JUMPDEST"
    },
    "8406": {
      "op": "POP"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8409": {
      "op": "ADD"
    },
    "8410": {
      "op": "SWAP1"
    },
    "8411": {
      "jump": "o",
      "op": "JUMP"
    },
    "8412": {
      "op": "JUMPDEST"
    },
    "8413": {
      "op": "DUP2"
    },
    "8414": {
      "op": "MLOAD"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8417": {
      "op": "SWAP1"
    },
    "8418": {
      "op": "DUP3"
    },
    "8419": {
      "op": "SWAP1"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8422": {
      "op": "DUP1"
    },
    "8423": {
      "op": "DUP7"
    },
    "8424": {
      "op": "ADD"
    },
    "8425": {
      "op": "DUP5"
    },
    "8426": {
      "op": "JUMPDEST"
    },
    "8427": {
      "op": "DUP4"
    },
    "8428": {
      "op": "DUP2"
    },
    "8429": {
      "op": "LT"
    },
    "8430": {
      "op": "ISZERO"
    },
    "8431": {
      "op": "PUSH2",
      "value": "0x2106"
    },
    "8434": {
      "op": "JUMPI"
    },
    "8435": {
      "op": "DUP2"
    },
    "8436": {
      "op": "MLOAD"
    },
    "8437": {
      "op": "DUP6"
    },
    "8438": {
      "op": "MSTORE"
    },
    "8439": {
      "op": "SWAP4"
    },
    "8440": {
      "op": "DUP3"
    },
    "8441": {
      "op": "ADD"
    },
    "8442": {
      "op": "SWAP4"
    },
    "8443": {
      "op": "SWAP1"
    },
    "8444": {
      "op": "DUP3"
    },
    "8445": {
      "op": "ADD"
    },
    "8446": {
      "op": "SWAP1"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8449": {
      "op": "ADD"
    },
    "8450": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8453": {
      "op": "JUMP"
    },
    "8454": {
      "op": "JUMPDEST"
    },
    "8455": {
      "op": "POP"
    },
    "8456": {
      "op": "SWAP3"
    },
    "8457": {
      "op": "SWAP7"
    },
    "8458": {
      "op": "SWAP6"
    },
    "8459": {
      "op": "POP"
    },
    "8460": {
      "op": "POP"
    },
    "8461": {
      "op": "POP"
    },
    "8462": {
      "op": "POP"
    },
    "8463": {
      "op": "POP"
    },
    "8464": {
      "op": "POP"
    },
    "8465": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "263f0956266cb2749233411d604ae817a1a3da43",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"../../interfaces/ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract CLHouseApi {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            signR := mload( add( _signature, 32 ) )\n            // second 32 bytes\n            signS := mload( add( _signature, 64 ) )\n            // final byte (first byte of the next 32 bytes)\n            signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isUser true if is User\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isUser,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdUser( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strUser memory houseUser;\n\n        (   houseUser.walletAddr,\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n        require( true == houseUser.isUser  , \"Is not a user\" );\n\n        return (\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager\n        );\n    }\n\n    /// @notice The list of all users address\n    /// @param _houseAddr address of the CLH\n    /// @return arrUsers array with list of users\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strUser[] memory arrUsers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 numUsers = daoCLH.numUsers( );\n        uint256 arrUsersLength = daoCLH.GetArrUsersLength();\n        strUser[] memory _arrUsers = new strUser[] ( numUsers );\n\n        uint256 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrUsersLength ; uid++ ) {\n            strUser memory houseUser;\n\n            (   houseUser.walletAddr,\n                houseUser.name,\n                houseUser.balance,\n                houseUser.isUser,\n                houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n            if( true == houseUser.isUser ){\n                _arrUsers[ index ] = houseUser;\n                index++;\n            }\n        }\n        return _arrUsers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return houseOpen True if is Open\n    /// @return numUsers Current users of a CLH\n    /// @return numManagers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n    /// @return govRuleMaxUsers Max of all users (including managers)\n    /// @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            bool houseOpen,\n            uint256 numUsers,\n            uint256 numManagers,\n            uint256 govRuleApprovPercentage,\n            uint256 govRuleMaxUsers,\n            uint256 govRuleMaxManagers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.houseOpen(),\n            daoCLH.numUsers(),\n            daoCLH.numManagers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxUsers(),\n            daoCLH.govRuleMaxManagers()\n        );\n    }\n\n\n    function SignerOCInvit(\n        bool _acceptance,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCBulkVote(\n        uint256[] memory _propIds,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCBULKVOTE_HASH__,\n                keccak256( abi.encodePacked( _propIds ) ),\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCDelUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCDELUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCRequest(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256 _govRuleMaxUsers,\n        uint256 _govRuleMaxManagers,\n        uint256 _govRuleApprovPercentage,\n        address _whiteListNFT,\n        address _whiteListWallets,\n        address _addrCLF,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _addrCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRuleMaxUsers,\n                _govRuleMaxManagers,\n                _govRuleApprovPercentage,\n                _whiteListNFT,\n                _whiteListWallets\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "223:11655:46:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/APICLH/CLHouseApi.sol",
  "type": "contract"
}