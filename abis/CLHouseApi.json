{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseProperties",
      "outputs": [
        {
          "internalType": "string",
          "name": "HOUSE_NAME",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "HOUSE_GOVERNANCE_MODEL",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "houseOpen",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "govRuleMaxManagers",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isUser",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strUser[]",
          "name": "arrUsers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        }
      ],
      "name": "GetUserInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCBulkVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCDelUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxManagers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whiteListWallets",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addrCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "46": "contracts/APICLH/CLHouseApi.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "61": "interfaces/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/APICLH/CLHouseApi.sol",
    "exportedSymbols": {
      "CLHouseApi": [
        967
      ],
      "DebugDLGTCLL": [
        9405
      ],
      "ICLHouse": [
        5924
      ],
      "InvalidGovernanceType": [
        9399
      ],
      "__CONTRACT_NAME_HASH__": [
        9431
      ],
      "__CONTRACT_VERSION_HASH__": [
        9436
      ],
      "__GOV_COMMITTEE__": [
        9421
      ],
      "__GOV_DICTATORSHIP__": [
        9416
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9426
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9444
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9468
      ],
      "__STR_OCDELUSER_HASH__": [
        9484
      ],
      "__STR_OCINVIT_HASH__": [
        9452
      ],
      "__STR_OCNEWCLH_HASH__": [
        9500
      ],
      "__STR_OCNEWUSER_HASH__": [
        9476
      ],
      "__STR_OCREQUEST_HASH__": [
        9492
      ],
      "__STR_OCVOTE_HASH__": [
        9460
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9411
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9408
      ],
      "assetsEvent": [
        9514
      ],
      "eCLC": [
        9537
      ],
      "gRule": [
        9532
      ],
      "proposalEvent": [
        9518
      ],
      "proposalType": [
        9528
      ],
      "strDataGovRules": [
        9594
      ],
      "strDataTxAssets": [
        9591
      ],
      "strDataUser": [
        9582
      ],
      "strProposal": [
        9568
      ],
      "strUser": [
        9548
      ],
      "strVote": [
        9575
      ],
      "userEvent": [
        9507
      ]
    },
    "id": 968,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:46"
      },
      {
        "absolutePath": "interfaces/ICLHouse.sol",
        "file": "../../interfaces/ICLHouse.sol",
        "id": 229,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 5925,
        "src": "58:39:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CLHouseApi",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 230,
          "nodeType": "StructuredDocumentation",
          "src": "99:124:46",
          "text": "@title Some funtions to interact with a CLHouse\n @author Leonardo Urrego\n @notice This contract is only for test "
        },
        "fullyImplemented": true,
        "id": 967,
        "linearizedBaseContracts": [
          967
        ],
        "name": "CLHouseApi",
        "nameLocation": "232:10:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "598:546:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 241,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "617:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "617:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "638:2:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "617:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "642:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "608:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:58:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "608:58:46"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "685:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "677:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "677:13:46"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "708:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "700:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:13:46"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "729:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "723:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "723:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "723:11:46"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "754:324:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "823:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "856:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "839:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "839:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "832:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "823:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "906:39:46",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "927:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "939:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "922:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "922:21:46"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "915:5:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:30:46"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "906:5:46"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1018:50:46",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1048:10:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1060:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1043:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1043:21:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1036:5:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1036:30:46"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "1027:4:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1027:41:46"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "1018:5:46"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1048:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "844:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "927:10:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 249,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "823:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 252,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "906:5:46",
                      "valueSize": 1
                    },
                    {
                      "declaration": 255,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1018:5:46",
                      "valueSize": 1
                    }
                  ],
                  "id": 257,
                  "nodeType": "InlineAssembly",
                  "src": "745:333:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 259,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1106:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 260,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "1116:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 261,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1123:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 262,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "1130:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 258,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1095:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 239,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "1088:49:46"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "250:197:46",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "461:11:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "491:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "482:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "522:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "509:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:66:46"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "584:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:11:46"
            },
            "scope": 967,
            "src": "452:692:46",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "1765:601:46",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1784:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1775:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5924",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 283,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 282,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5924,
                          "src": "1775:8:46"
                        },
                        "referencedDeclaration": 5924,
                        "src": "1775:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5924",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 288,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "1803:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 285,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5924,
                      "src": "1793:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5924_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5924",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1775:40:46"
                },
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1834:3:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1826:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1826:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 293,
                        "name": "_walletAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 271,
                        "src": "1858:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 291,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1840:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5924",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mapIdUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5809,
                      "src": "1840:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1826:45:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1891:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 298,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "1896:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1891:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f742065786973742121",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1902:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        },
                        "value": "Address not exist!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_335b052c01809cadb58751aecd52fd9211dbc7c104e7b94de6c6b00d18ca83c4",
                          "typeString": "literal_string \"Address not exist!!\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1882:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:43:46"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "houseUser",
                      "nameLocation": "1951:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "1936:24:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                        "typeString": "struct strUser"
                      },
                      "typeName": {
                        "id": 304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 303,
                          "name": "strUser",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9548,
                          "src": "1936:7:46"
                        },
                        "referencedDeclaration": 9548,
                        "src": "1936:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strUser_$9548_storage_ptr",
                          "typeString": "struct strUser"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1936:24:46"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 307,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "1975:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "walletAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9539,
                          "src": "1975:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 310,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2009:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9541,
                          "src": "2009:14:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 312,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2037:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9543,
                          "src": "2037:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 314,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2068:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9545,
                          "src": "2068:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 316,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2098:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "isManager",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9547,
                          "src": "2098:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 318,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1971:148:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 321,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 290,
                          "src": "2139:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 319,
                          "name": "daoCLH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "2122:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLHouse_$5924",
                            "typeString": "contract ICLHouse"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arrUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5751,
                        "src": "2122:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                          "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2122:22:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                        "typeString": "tuple(address,string memory,uint256,bool,bool)"
                      }
                    },
                    "src": "1971:173:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1971:173:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2164:4:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 327,
                            "name": "houseUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2172:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser memory"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9545,
                          "src": "2172:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2164:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4973206e6f7420612075736572",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2192:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        },
                        "value": "Is not a user"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bee137d91b916495469925eb93041e97af4f511e80b0445466229f73e7bebc7e",
                          "typeString": "literal_string \"Is not a user\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2155:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:54:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:54:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 333,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2241:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9541,
                        "src": "2241:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 335,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2269:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9543,
                        "src": "2269:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 337,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2300:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9545,
                        "src": "2300:16:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 339,
                          "name": "houseUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2330:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                            "typeString": "struct strUser memory"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isManager",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9547,
                        "src": "2330:19:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 341,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2227:132:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                      "typeString": "tuple(string memory,uint256,bool,bool)"
                    }
                  },
                  "functionReturnParameters": 281,
                  "id": 342,
                  "nodeType": "Return",
                  "src": "2220:139:46"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "1150:346:46",
              "text": "@notice Get the info of an user in one especific CLH\n @param _houseAddr Address of the CLH\n @param _walletAddr Address of the user\n @return name Nickname ot other user identificaction\n @return balance How much money have deposited\n @return isUser true if is User\n @return isManager true if is manager"
            },
            "functionSelector": "86abd826",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetUserInfoByAddress",
            "nameLocation": "1510:20:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1548:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1540:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "1576:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1568:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:63:46"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1667:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1653:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1690:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1685:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "isUser",
                  "nameLocation": "1716:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1711:11:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "isManager",
                  "nameLocation": "1741:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "1736:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:121:46"
            },
            "scope": 967,
            "src": "1501:865:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "2672:735:46",
              "statements": [
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "2691:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2682:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5924",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5924,
                          "src": "2682:8:46"
                        },
                        "referencedDeclaration": 5924,
                        "src": "2682:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5924",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "2710:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 357,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5924,
                      "src": "2700:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5924_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5924",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2682:40:46"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "numUsers",
                      "nameLocation": "2741:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2733:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2733:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 363,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2752:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5924",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5716,
                      "src": "2752:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:18:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2733:37:46"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "arrUsersLength",
                      "nameLocation": "2788:14:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2780:22:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 372,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 369,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "2805:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5924",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrUsersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5834,
                      "src": "2805:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:51:46"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "_arrUsers",
                      "nameLocation": "2858:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2841:26:46",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9548_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct strUser[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 375,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 374,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9548,
                            "src": "2841:7:46"
                          },
                          "referencedDeclaration": 9548,
                          "src": "2841:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9548_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 376,
                        "nodeType": "ArrayTypeName",
                        "src": "2841:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9548_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 382,
                        "name": "numUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2886:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2870:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strUser_$9548_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct strUser memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 379,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 378,
                            "name": "strUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9548,
                            "src": "2874:7:46"
                          },
                          "referencedDeclaration": 9548,
                          "src": "2874:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strUser_$9548_storage_ptr",
                            "typeString": "struct strUser"
                          }
                        },
                        "id": 380,
                        "nodeType": "ArrayTypeName",
                        "src": "2874:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_strUser_$9548_storage_$dyn_storage_ptr",
                          "typeString": "struct strUser[]"
                        }
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9548_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2841:55:46"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2915:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 440,
                      "src": "2907:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2907:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2923:1:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2907:17:46"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "2990:385:46",
                    "statements": [
                      {
                        "assignments": [
                          401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 401,
                            "mutability": "mutable",
                            "name": "houseUser",
                            "nameLocation": "3019:9:46",
                            "nodeType": "VariableDeclaration",
                            "scope": 436,
                            "src": "3004:24:46",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                              "typeString": "struct strUser"
                            },
                            "typeName": {
                              "id": 400,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 399,
                                "name": "strUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9548,
                                "src": "3004:7:46"
                              },
                              "referencedDeclaration": 9548,
                              "src": "3004:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9548_storage_ptr",
                                "typeString": "struct strUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 402,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3004:24:46"
                      },
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 403,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3047:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "walletAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9539,
                                "src": "3047:20:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 406,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3085:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9541,
                                "src": "3085:14:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 408,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3117:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9543,
                                "src": "3117:17:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 410,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3152:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9545,
                                "src": "3152:16:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 412,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3186:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9547,
                                "src": "3186:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 414,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3043:164:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 417,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 390,
                                "src": "3227:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 415,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3210:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$5924",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5751,
                              "src": "3210:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                                "typeString": "function (uint256) view external returns (address,string memory,uint256,bool,bool)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3210:22:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$",
                              "typeString": "tuple(address,string memory,uint256,bool,bool)"
                            }
                          },
                          "src": "3043:189:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "3043:189:46"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3251:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 422,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "3259:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                "typeString": "struct strUser memory"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9545,
                            "src": "3259:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3251:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 435,
                        "nodeType": "IfStatement",
                        "src": "3247:118:46",
                        "trueBody": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "3277:88:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 425,
                                    "name": "_arrUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "3295:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strUser_$9548_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct strUser memory[] memory"
                                    }
                                  },
                                  "id": 427,
                                  "indexExpression": {
                                    "id": 426,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 386,
                                    "src": "3306:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3295:18:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 428,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "3316:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                    "typeString": "struct strUser memory"
                                  }
                                },
                                "src": "3295:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strUser_$9548_memory_ptr",
                                  "typeString": "struct strUser memory"
                                }
                              },
                              "id": 430,
                              "nodeType": "ExpressionStatement",
                              "src": "3295:30:46"
                            },
                            {
                              "expression": {
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3343:7:46",
                                "subExpression": {
                                  "id": 431,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "3343:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "3343:7:46"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 393,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "2959:3:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 394,
                      "name": "arrUsersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2965:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2959:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "initializationExpression": {
                    "assignments": [
                      390
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "2949:3:46",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "2941:11:46",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2941:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 392,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2955:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2941:15:46"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2982:5:46",
                      "subExpression": {
                        "id": 396,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "2982:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 398,
                    "nodeType": "ExpressionStatement",
                    "src": "2982:5:46"
                  },
                  "nodeType": "ForStatement",
                  "src": "2936:439:46"
                },
                {
                  "expression": {
                    "id": 438,
                    "name": "_arrUsers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 377,
                    "src": "3391:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9548_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct strUser memory[] memory"
                    }
                  },
                  "functionReturnParameters": 353,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "3384:16:46"
                }
              ]
            },
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "2372:136:46",
              "text": "@notice The list of all users address\n @param _houseAddr address of the CLH\n @return arrUsers array with list of users"
            },
            "functionSelector": "b698be8d",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "2522:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2556:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2548:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:34:46"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "arrUsers",
                  "nameLocation": "2649:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "2632:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strUser_$9548_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 350,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 349,
                        "name": "strUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9548,
                        "src": "2632:7:46"
                      },
                      "referencedDeclaration": 9548,
                      "src": "2632:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strUser_$9548_storage_ptr",
                        "typeString": "struct strUser"
                      }
                    },
                    "id": 351,
                    "nodeType": "ArrayTypeName",
                    "src": "2632:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strUser_$9548_storage_$dyn_storage_ptr",
                      "typeString": "struct strUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2618:49:46"
            },
            "scope": 967,
            "src": "2513:894:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "4508:419:46",
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "4527:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "4518:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5924",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 465,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5924,
                          "src": "4518:8:46"
                        },
                        "referencedDeclaration": 5924,
                        "src": "4518:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5924",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4546:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 468,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5924,
                      "src": "4536:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5924_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5924",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4518:40:46"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 472,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4589:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_NAME",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5706,
                          "src": "4589:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4589:19:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 475,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4622:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "HOUSE_GOVERNANCE_MODEL",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5711,
                          "src": "4622:29:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4622:31:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 478,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4667:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "housePrivate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5696,
                          "src": "4667:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:21:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 481,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4702:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "houseOpen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5701,
                          "src": "4702:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4702:18:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 484,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4734:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5716,
                          "src": "4734:15:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4734:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 487,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4765:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5721,
                          "src": "4765:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4765:20:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 490,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4799:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleApprovPercentage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5726,
                          "src": "4799:30:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4799:32:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 493,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4845:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5731,
                          "src": "4845:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4845:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 496,
                            "name": "daoCLH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 467,
                            "src": "4883:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLHouse_$5924",
                              "typeString": "contract ICLHouse"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "govRuleMaxManagers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5736,
                          "src": "4883:25:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4883:27:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 499,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4575:345:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string memory,bytes32,bool,bool,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "4569:351:46"
                }
              ]
            },
            "documentation": {
              "id": 442,
              "nodeType": "StructuredDocumentation",
              "src": "3413:642:46",
              "text": "@notice All properties of a House\n @param _houseAddr CLH address\n @return HOUSE_NAME name of the CLH\n @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n @return housePrivate True if is private\n @return houseOpen True if is Open\n @return numUsers Current users of a CLH\n @return numManagers Current managers of a CLH\n @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n @return govRuleMaxUsers Max of all users (including managers)\n @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )"
            },
            "functionSelector": "8750bc3e",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseProperties",
            "nameLocation": "4069:18:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "4105:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4097:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4087:34:46"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "HOUSE_NAME",
                  "nameLocation": "4195:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4181:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4181:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "HOUSE_GOVERNANCE_MODEL",
                  "nameLocation": "4227:22:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4219:30:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4219:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "housePrivate",
                  "nameLocation": "4268:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4263:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4263:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "houseOpen",
                  "nameLocation": "4299:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4294:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "numUsers",
                  "nameLocation": "4330:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4322:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "numManagers",
                  "nameLocation": "4360:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4352:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "govRuleApprovPercentage",
                  "nameLocation": "4393:23:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4385:31:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "govRuleMaxUsers",
                  "nameLocation": "4438:15:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4430:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4430:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "govRuleMaxManagers",
                  "nameLocation": "4475:18:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4467:26:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:336:46"
            },
            "scope": 967,
            "src": "4060:867:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "5104:592:46",
              "statements": [
                {
                  "assignments": [
                    514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 514,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5122:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5114:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 513,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5114:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 518,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "5192:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 519,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "5235:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 520,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "5275:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 521,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5318:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "5318:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 523,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "5349:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 516,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5164:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5164:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5164:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 515,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5141:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5114:269:46"
                },
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "5402:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5394:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5394:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 536,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9452,
                            "src": "5463:20:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 533,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5501:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 530,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5435:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5435:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5435:91:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 529,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5412:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:124:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5394:142:46"
                },
                {
                  "assignments": [
                    538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5555:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 553,
                      "src": "5547:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5547:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5595:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 543,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "5607:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 544,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "5625:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 540,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5577:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5577:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5577:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 539,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5566:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5547:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 549,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "5667:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 550,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "5677:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 548,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5654:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 512,
                  "id": 552,
                  "nodeType": "Return",
                  "src": "5647:42:46"
                }
              ]
            },
            "functionSelector": "9f6fd7ab",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "4943:13:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "4971:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4966:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5000:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "4992:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5033:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5020:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:93:46"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "5090:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:11:46"
            },
            "scope": 967,
            "src": "4934:762:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "5929:678:46",
              "statements": [
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5947:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "5939:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5939:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 574,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "6017:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 575,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "6060:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 576,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "6100:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 577,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6143:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6143:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 579,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "6174:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5989:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5989:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 571,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5966:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5939:269:46"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "6227:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6219:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6219:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 599,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 588,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9460,
                            "src": "6288:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 589,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "6325:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 590,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "6350:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 560,
                                    "src": "6405:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 592,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6387:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6387:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6387:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 591,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6376:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6376:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 586,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6260:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6260:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6260:177:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 585,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6237:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6237:210:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6219:228:46"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "6466:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "6458:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6458:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6506:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 606,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "6518:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 607,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6536:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 603,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6488:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6488:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6488:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 602,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6477:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6477:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 612,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "6578:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 613,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "6588:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 611,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "6565:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 568,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "6558:42:46"
                }
              ]
            },
            "functionSelector": "89ab062a",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "5712:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "5739:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5734:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5734:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "5761:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5756:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5756:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "5793:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5779:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5779:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5825:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5817:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5858:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5845:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:150:46"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "5915:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5913:11:46"
            },
            "scope": 967,
            "src": "5703:904:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "6857:716:46",
              "statements": [
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "6875:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "6867:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6867:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 638,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "6945:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 639,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "6988:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 640,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "7028:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 641,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7071:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "7071:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 643,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "7102:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 636,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6917:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6917:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6917:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 635,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6894:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6867:269:46"
                },
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7155:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "7147:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7147:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 668,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 652,
                            "name": "__STR_OCBULKVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9468,
                            "src": "7216:23:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 656,
                                    "name": "_propIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "7286:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 654,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7268:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7268:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7268:28:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 653,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7257:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7257:41:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 659,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "7316:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 663,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "7371:14:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 661,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7353:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7353:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7353:34:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 660,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7342:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7342:47:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 650,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7188:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7188:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:215:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 649,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7165:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7165:248:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7147:266:46"
                },
                {
                  "assignments": [
                    670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7432:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "7424:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7424:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 679,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7472:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 675,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "7484:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 676,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "7502:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 672,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7454:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7454:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7454:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 671,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7443:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7443:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7424:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "7544:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 682,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "7554:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 680,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "7531:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7531:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "7524:42:46"
                }
              ]
            },
            "functionSelector": "f0b00c9f",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCBulkVote",
            "nameLocation": "6623:16:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_propIds",
                  "nameLocation": "6666:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6649:25:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 618,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6649:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "nodeType": "ArrayTypeName",
                    "src": "6649:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "6689:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6684:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "6721:14:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6707:28:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6753:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6745:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6745:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6786:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6773:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6639:163:46"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "6843:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6843:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6841:11:46"
            },
            "scope": 967,
            "src": "6614:959:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "7873:769:46",
              "statements": [
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "7891:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "7883:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7883:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 718,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 710,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "7961:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 711,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "8004:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 712,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "8044:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 713,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8087:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8087:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 715,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "8118:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 708,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7933:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7933:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7933:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 707,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7910:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7883:269:46"
                },
                {
                  "assignments": [
                    720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 720,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8171:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "8163:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 719,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8163:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 742,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 724,
                            "name": "__STR_OCNEWUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9476,
                            "src": "8232:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 725,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "8272:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 729,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 690,
                                    "src": "8330:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 727,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8312:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8312:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8312:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 726,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8301:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8301:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 735,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 692,
                                    "src": "8386:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 733,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8368:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8368:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8368:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 732,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8357:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8357:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 738,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "8420:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 739,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "8448:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 722,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8204:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8204:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8204:268:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 721,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8181:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8181:301:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8163:319:46"
                },
                {
                  "assignments": [
                    744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 744,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8501:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 759,
                      "src": "8493:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 743,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8493:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 753,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8541:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 749,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "8553:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 750,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8571:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 746,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8523:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8523:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8523:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 745,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8512:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8512:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8493:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 755,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "8613:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 756,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "8623:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 754,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "8600:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 704,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "8593:42:46"
                }
              ]
            },
            "functionSelector": "f240c7e9",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewUser",
            "nameLocation": "7589:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7622:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7614:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7614:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7657:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7643:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7643:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7686:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7672:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "7713:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7708:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7741:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7733:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7733:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7769:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7761:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7802:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7789:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7789:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:214:46"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "7859:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7859:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7857:11:46"
            },
            "scope": 967,
            "src": "7580:1062:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "8888:685:46",
              "statements": [
                {
                  "assignments": [
                    776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 776,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8906:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "8898:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 775,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8898:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 780,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "8976:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 781,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "9019:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 782,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "9059:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 783,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9102:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9102:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 785,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "9133:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 778,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8948:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8948:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8948:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 777,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8925:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8925:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8898:269:46"
                },
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "9186:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "9178:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9178:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 794,
                            "name": "__STR_OCDELUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9484,
                            "src": "9247:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 795,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "9287:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 799,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
                                    "src": "9345:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 797,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9327:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9327:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9327:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 796,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9316:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9316:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 802,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "9379:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 792,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9219:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9219:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9219:184:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 791,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9196:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9196:217:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9178:235:46"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9432:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "9424:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9424:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9472:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 812,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "9484:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 813,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "9502:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 809,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9454:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9454:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9454:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 808,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9443:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9424:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 818,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "9544:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 819,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "9554:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 817,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9531:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9531:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 774,
                  "id": 821,
                  "nodeType": "Return",
                  "src": "9524:42:46"
                }
              ]
            },
            "functionSelector": "349dc296",
            "id": 823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCDelUser",
            "nameLocation": "8658:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "8691:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8683:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8683:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8726:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8712:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8712:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8756:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8748:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8748:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "8784:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8776:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8817:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8804:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8804:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8673:160:46"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "8874:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8874:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8872:11:46"
            },
            "scope": 967,
            "src": "8649:924:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "9791:684:46",
              "statements": [
                {
                  "assignments": [
                    837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9809:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "9801:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9801:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 849,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 841,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "9879:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 842,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "9922:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 843,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "9962:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 844,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10005:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "10005:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 846,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "10036:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 839,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9851:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9851:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9851:209:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 838,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9828:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9828:242:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9801:269:46"
                },
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "10089:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "10081:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10081:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 870,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 855,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9492,
                            "src": "10150:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 859,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 825,
                                    "src": "10219:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 857,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10201:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10201:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10201:25:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 856,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10190:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10190:38:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 865,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 827,
                                    "src": "10275:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 863,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10257:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10257:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10257:32:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 862,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10246:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10246:45:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 853,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10122:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10122:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10122:183:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 852,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10099:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10099:216:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10081:234:46"
                },
                {
                  "assignments": [
                    872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "10334:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "10326:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10326:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10374:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 877,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "10386:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 878,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "10404:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 874,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10356:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10356:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10356:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 873,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10345:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10345:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10326:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 883,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "10446:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 884,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "10456:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 882,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "10433:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10433:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "10426:42:46"
                }
              ]
            },
            "functionSelector": "7b3bb156",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequest",
            "nameLocation": "9589:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9628:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9614:19:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9657:12:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9643:26:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9643:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "9687:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9679:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9679:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9720:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9707:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9707:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9604:132:46"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9777:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9777:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:11:46"
            },
            "scope": 967,
            "src": "9580:895:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "10887:927:46",
              "statements": [
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "10905:16:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "10897:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10897:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 926,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 918,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9444,
                            "src": "10975:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 919,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9431,
                            "src": "11018:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 920,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9436,
                            "src": "11058:25:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 921,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11101:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "11101:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 923,
                            "name": "_addrCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "11132:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 916,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10947:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10947:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10947:207:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 915,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10924:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:240:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10897:267:46"
                },
                {
                  "assignments": [
                    928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 928,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "11183:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "11175:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11175:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 948,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 932,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9500,
                            "src": "11244:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 936,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 890,
                                    "src": "11312:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 934,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11294:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11294:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11294:30:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 933,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11283:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11283:43:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 939,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "11344:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 940,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "11375:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 941,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 896,
                            "src": "11403:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 942,
                            "name": "_govRuleMaxUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "11430:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 943,
                            "name": "_govRuleMaxManagers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "11464:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 944,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "11501:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 945,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "11543:17:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 930,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11216:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11216:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11216:428:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 929,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11193:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11193:461:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11175:479:46"
                },
                {
                  "assignments": [
                    950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "11673:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "11665:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11665:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 959,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11713:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 955,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "11725:16:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 956,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "11743:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 952,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11695:3:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11695:16:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11695:57:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 951,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11684:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11684:70:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11665:89:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 961,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "11785:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 962,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "11795:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 960,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "11772:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11772:35:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 912,
                  "id": 964,
                  "nodeType": "Return",
                  "src": "11765:42:46"
                }
              ]
            },
            "functionSelector": "e78fc36b",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "10491:14:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "10529:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10515:24:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10515:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "10554:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10549:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10549:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "10582:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10577:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10577:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "10610:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10602:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10602:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "_govRuleMaxUsers",
                  "nameLocation": "10637:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10629:24:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10629:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagers",
                  "nameLocation": "10671:19:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10663:27:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10663:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "10708:24:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10700:32:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10700:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "10750:17:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10742:25:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10742:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_addrCLF",
                  "nameLocation": "10785:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10777:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10777:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10816:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10803:23:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10803:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10505:327:46"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "10873:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10873:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10871:11:46"
            },
            "scope": 967,
            "src": "10482:1332:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 968,
        "src": "223:11593:46",
        "usedErrors": []
      }
    ],
    "src": "32:11784:46"
  },
  "bytecode": "",
  "bytecodeSha1": "4fcca08f2a0a23bb094d4b7ce9dc6a1f253fc2ca",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouseApi",
  "coverageMap": {
    "branches": {
      "46": {
        "CLHouseApi.GetHouseUserList": {
          "20": [
            3251,
            3275,
            false
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "18": [
            1891,
            1899,
            true
          ],
          "19": [
            2164,
            2188,
            true
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "17": [
            617,
            640,
            true
          ]
        }
      },
      "48": {},
      "61": {}
    },
    "statements": {
      "46": {
        "CLHouseApi.GetHouseProperties": {
          "8": [
            4569,
            4920
          ]
        },
        "CLHouseApi.GetHouseUserList": {
          "10": [
            3043,
            3232
          ],
          "11": [
            3295,
            3325
          ],
          "12": [
            3343,
            3350
          ],
          "13": [
            2982,
            2987
          ],
          "14": [
            3384,
            3400
          ]
        },
        "CLHouseApi.GetUserInfoByAddress": {
          "4": [
            1882,
            1925
          ],
          "5": [
            1971,
            2144
          ],
          "6": [
            2155,
            2209
          ],
          "7": [
            2220,
            2359
          ]
        },
        "CLHouseApi.SignerOCDelUser": {
          "0": [
            9524,
            9566
          ]
        },
        "CLHouseApi.SignerOCInvit": {
          "9": [
            5647,
            5689
          ]
        },
        "CLHouseApi.SignerOCNewCLH": {
          "15": [
            11765,
            11807
          ]
        },
        "CLHouseApi.SignerOCNewUser": {
          "16": [
            8593,
            8635
          ]
        },
        "CLHouseApi.SignerOCRequest": {
          "3": [
            10426,
            10468
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "1": [
            608,
            666
          ],
          "2": [
            1088,
            1137
          ]
        }
      },
      "48": {},
      "61": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806389ab062a1161007157806389ab062a1461014f5780639f6fd7ab14610162578063b698be8d14610175578063e78fc36b14610195578063f0b00c9f146101a8578063f240c7e9146101bb57600080fd5b8063349dc296146100ae578063622eca77146100de5780637b3bb156146100f157806386abd826146101045780638750bc3e14610127575b600080fd5b6100c16100bc36600461165b565b6101ce565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c16100ec3660046116ef565b610378565b6100c16100ff366004611735565b61043c565b6101176101123660046117d1565b6105d3565b6040516100d59493929190611866565b61013a610135366004611897565b610798565b6040516100d5999897969594939291906118bb565b6100c161015d366004611928565b610b41565b6100c161017036600461198c565b610c75565b610188610183366004611897565b610d98565b6040516100d591906119ed565b6100c16101a3366004611a91565b610fc4565b6100c16101b6366004611b5f565b611219565b6100c16101c9366004611c55565b611342565b6000806040516020016101e090611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b833981519152468760405160200161022a959493929190611d89565b60405160208183030381529060405280519060200120905060006040516020016102ab907f7374724f4344656c5573657228616464726573732077616c6c6574416464722c81527f737472696e67206465736372697074696f6e2c75696e743235362064656c617960208201526454696d652960d81b604082015260450190565b6040516020818303038152906040528051906020012088886040516020016102d39190611db5565b604051602081830303815290604052805190602001208860405160200161031c94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405160208183030381529060405280519060200120905060008282604051602001610349929190611dd1565b60405160208183030381529060405280519060200120905061036b8186610378565b9998505050505050505050565b600081516041146103c75760405162461bcd60e51b8152602060048201526014602482015273084c2c840e6d2cedcc2e8eae4ca40d8cadccee8d60631b60448201526064015b60405180910390fd5b602082810151604080850151606080870151835160008082529681018086528a9052951a928501839052840183905260808401819052919260019060a0016020604051602081039080840390855afa158015610427573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060405160200161044e90611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b8339815191524687604051602001610498959493929190611d89565b60405160208183030381529060405280519060200120905060006040516020016104fa907f7374724f435265717565737428737472696e67206e616d652c737472696e672081526b6465736372697074696f6e2960a01b6020820152602c0190565b60405160208183030381529060405280519060200120876040516020016105219190611db5565b60405160208183030381529060405280519060200120876040516020016105489190611db5565b60408051601f198184030181528282528051602091820120908301949094528101919091526060810191909152608001604051602081830303815290604052805190602001209050600082826040516020016105a5929190611dd1565b6040516020818303038152906040528051906020012090506105c78186610378565b98975050505050505050565b604051631c3fe46360e21b81526001600160a01b03828116600483015260609160009182918291879183918316906370ff918c90602401602060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b9190611dec565b9050806106905760405162461bcd60e51b815260206004820152601360248201527241646472657373206e6f74206578697374212160681b60448201526064016103be565b610698611534565b6040516308ad020760e21b8152600481018390526001600160a01b038416906322b4081c90602401600060405180830381865afa1580156106dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107059190810190611e52565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b0390911682526001146107715760405162461bcd60e51b815260206004820152600d60248201526c24b9903737ba1030903ab9b2b960991b60448201526064016103be565b602081015160408201516060830151608090930151919b909a509198509650945050505050565b606060008060008060008060008060008a9050806001600160a01b03166359ca2d036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108119190810190611ed4565b816001600160a01b0316631d5fd3ca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108739190611dec565b826001600160a01b031663f00d62746040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190611f08565b836001600160a01b0316631f2e13396040518163ffffffff1660e01b8152600401602060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190611f08565b846001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190611dec565b856001600160a01b031663e68777d76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190611dec565b866001600160a01b0316639c630a886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190611dec565b876001600160a01b0316631343e9a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190611dec565b886001600160a01b031663e810a58e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b219190611dec565b995099509950995099509950995099509950509193959799909294969850565b600080604051602001610b5390611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b8339815191524687604051602001610b9d959493929190611d89565b6040516020818303038152906040528051906020012090506000604051602001610c10907f7374724f43566f74652875696e743235362070726f7049642c626f6f6c20737581527f70706f72742c737472696e67206a757374696669636174696f6e2900000000006020820152603b0190565b60405160208183030381529060405280519060200120888888604051602001610c399190611db5565b60408051601f1981840301815282825280516020918201209083019590955281019290925215156060820152608081019190915260a00161031c565b600080604051602001610c8790611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b8339815191524687604051602001610cd1959493929190611d89565b6040516020818303038152906040528051906020012090506000604051602001610d1e907f7374724f43496e76697428626f6f6c20616363657074616e63652900000000008152601b0190565b60408051808303601f19018152828252805160209182012081840152881515838301528151808403830181526060840190925281519101209150600090610d6b9084908490608001611dd1565b604051602081830303815290604052805190602001209050610d8d8186610378565b979650505050505050565b606060008290506000816001600160a01b03166319a50f496040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190611dec565b90506000826001600160a01b031663a693649a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e699190611dec565b90506000826001600160401b03811115610e8557610e85611598565b604051908082528060200260200182016040528015610ebe57816020015b610eab611534565b815260200190600190039081610ea35790505b509050600060015b83811015610fb857610ed6611534565b6040516308ad020760e21b8152600481018390526001600160a01b038816906322b4081c90602401600060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f439190810190611e52565b15156080860152151560608501819052604085019190915260208401919091526001600160a01b03909116825260011415610fa55780848481518110610f8b57610f8b611f25565b60200260200101819052508280610fa190611f3b565b9350505b5080610fb081611f3b565b915050610ec6565b50909695505050505050565b600080604051602001610fd690611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b8339815191524687604051602001611020959493929190611d89565b604051602081830303815290604052805190602001209050600060405160200161112b907f7374724f434e6577434c4828737472696e6720686f7573654e616d652c626f6f81527f6c20686f757365507269766174652c626f6f6c20686f7573654f70656e2c627960208201527f746573333220676f764d6f64656c2c75696e7432353620676f7652756c654d6160408201527f7855736572732c75696e7432353620676f7652756c654d61784d616e6167657260608201527f732c75696e7432353620676f7652756c65417070726f7650657263656e74616760808201527f652c616464726573732077686974654c69737457616c6c65747329000000000060a082015260bb0190565b604051602081830303815290604052805190602001208d6040516020016111529190611db5565b60408051601f198184030181528282528051602091820120908301939093528101919091528c151560608201528b1515608082015260a081018b905260c081018a905260e0810189905261010081018890526001600160a01b03871661012082015261014001604051602081830303815290604052805190602001209050600082826040516020016111e5929190611dd1565b6040516020818303038152906040528051906020012090506112078186610378565b9e9d5050505050505050505050505050565b60008060405160200161122b90611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b8339815191524687604051602001611275959493929190611d89565b60405160208183030381529060405280519060200120905060006040516020016112f3907f7374724f4342756c6b566f74652875696e743235365b5d2070726f704964732c81527f626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6020820152616e2960f01b604082015260420190565b604051602081830303815290604052805190602001208860405160200161131a9190611f64565b604051602081830303815290604052805190602001208888604051602001610c399190611db5565b60008060405160200161135490611d1f565b60405160208183030381529060405280519060200120600080516020611fbb833981519152600080516020611f9b833981519152468760405160200161139e959493929190611d89565b6040516020818303038152906040528051906020012090506000604051602001611437907f7374724f434e65775573657228616464726573732077616c6c6574416464722c81527f737472696e67206e616d652c737472696e67206465736372697074696f6e2c6260208201527f6f6f6c2069734d616e616765722c75696e743235362064656c617954696d6529604082015260600190565b604051602081830303815290604052805190602001208a8a60405160200161145f9190611db5565b604051602081830303815290604052805190602001208a6040516020016114869190611db5565b60408051601f198184030181528282528051602091820120908301959095526001600160a01b03909316928101929092526060820152608081019190915287151560a082015260c0810187905260e00160405160208183030381529060405280519060200120905060008282604051602001611503929190611dd1565b6040516020818303038152906040528051906020012090506115258186610378565b9b9a5050505050505050505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000151581526020016000151581525090565b6001600160a01b038116811461158557600080fd5b50565b803561159381611570565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156115d6576115d6611598565b604052919050565b60006001600160401b038211156115f7576115f7611598565b50601f01601f191660200190565b600082601f83011261161657600080fd5b8135611629611624826115de565b6115ae565b81815284602083860101111561163e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561167357600080fd5b853561167e81611570565b945060208601356001600160401b038082111561169a57600080fd5b6116a689838a01611605565b955060408801359450606088013591506116bf82611570565b909250608087013590808211156116d557600080fd5b506116e288828901611605565b9150509295509295909350565b6000806040838503121561170257600080fd5b8235915060208301356001600160401b0381111561171f57600080fd5b61172b85828601611605565b9150509250929050565b6000806000806080858703121561174b57600080fd5b84356001600160401b038082111561176257600080fd5b61176e88838901611605565b9550602087013591508082111561178457600080fd5b61179088838901611605565b9450604087013591506117a282611570565b909250606086013590808211156117b857600080fd5b506117c587828801611605565b91505092959194509250565b600080604083850312156117e457600080fd5b82356117ef81611570565b915060208301356117ff81611570565b809150509250929050565b60005b8381101561182557818101518382015260200161180d565b83811115611834576000848401525b50505050565b6000815180845261185281602086016020860161180a565b601f01601f19169290920160200192915050565b608081526000611879608083018761183a565b60208301959095525091151560408301521515606090910152919050565b6000602082840312156118a957600080fd5b81356118b481611570565b9392505050565b60006101208083526118cf8184018d61183a565b602084019b909b52505096151560408801529415156060870152608086019390935260a085019190915260c084015260e083015261010090910152919050565b801515811461158557600080fd5b80356115938161190f565b600080600080600060a0868803121561194057600080fd5b8535945060208601356119528161190f565b935060408601356001600160401b038082111561196e57600080fd5b61197a89838a01611605565b9450606088013591506116bf82611570565b6000806000606084860312156119a157600080fd5b83356119ac8161190f565b925060208401356119bc81611570565b915060408401356001600160401b038111156119d757600080fd5b6119e386828701611605565b9150509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611a8357888303603f19018552815180516001600160a01b031684528781015160a089860181905290611a4d8287018261183a565b838a0151878b01526060808501511515908801526080938401511515939096019290925250509386019390860190600101611a14565b509098975050505050505050565b6000806000806000806000806000806101408b8d031215611ab157600080fd5b8a356001600160401b0380821115611ac857600080fd5b611ad48e838f01611605565b9b50611ae260208e0161191d565b9a50611af060408e0161191d565b995060608d0135985060808d0135975060a08d0135965060c08d01359550611b1a60e08e01611588565b9450611b296101008e01611588565b93506101208d0135915080821115611b4057600080fd5b50611b4d8d828e01611605565b9150509295989b9194979a5092959850565b600080600080600060a08688031215611b7757600080fd5b85356001600160401b0380821115611b8e57600080fd5b818801915088601f830112611ba257600080fd5b8135602082821115611bb657611bb6611598565b8160051b611bc58282016115ae565b928352848101820192828101908d851115611bdf57600080fd5b958301955b84871015611bfd57863582529583019590830190611be4565b9a50611c0d9150508a820161191d565b975050506040880135915080821115611c2557600080fd5b611c3189838a01611605565b9450611c3f60608901611588565b935060808801359150808211156116d557600080fd5b600080600080600080600060e0888a031215611c7057600080fd5b8735611c7b81611570565b965060208801356001600160401b0380821115611c9757600080fd5b611ca38b838c01611605565b975060408a0135915080821115611cb957600080fd5b611cc58b838c01611605565b965060608a01359150611cd78261190f565b81955060808a01359450611ced60a08b01611588565b935060c08a0135915080821115611d0357600080fd5b50611d108a828b01611605565b91505092959891949750929550565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c75696e7432353620636861696e49642c6164647265737320602082015271766572696679696e67436f6e74726163742960701b604082015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60008251611dc781846020870161180a565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b600060208284031215611dfe57600080fd5b5051919050565b600082601f830112611e1657600080fd5b8151611e24611624826115de565b818152846020838601011115611e3957600080fd5b611e4a82602083016020870161180a565b949350505050565b600080600080600060a08688031215611e6a57600080fd5b8551611e7581611570565b60208701519095506001600160401b03811115611e9157600080fd5b611e9d88828901611e05565b945050604086015192506060860151611eb58161190f565b6080870151909250611ec68161190f565b809150509295509295909350565b600060208284031215611ee657600080fd5b81516001600160401b03811115611efc57600080fd5b611e4a84828501611e05565b600060208284031215611f1a57600080fd5b81516118b48161190f565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611f5d57634e487b7160e01b600052601160045260246000fd5b5060010190565b815160009082906020808601845b83811015611f8e57815185529382019390820190600101611f72565b5092969550505050505056feaa7cdbe2cce2ec7b606b0e199ddd9b264a6e645e767fb8479a7917dcd1b8693f01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875a2646970667358221220e67b05f8df07410ecd6476932c9154ef39d910234917ea2dd9015ef94f32196c64736f6c634300080c0033",
  "deployedSourceMap": "223:11593:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8649:924;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2419:32:62;;;2401:51;;2389:2;2374:18;8649:924:46;;;;;;;;452:692;;;;;;:::i;:::-;;:::i;9580:895::-;;;;;;:::i;:::-;;:::i;1501:865::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4060:867::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;5703:904::-;;;;;;:::i;:::-;;:::i;4934:762::-;;;;;;:::i;:::-;;:::i;2513:894::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10482:1332::-;;;;;;:::i;:::-;;:::i;6614:959::-;;;;;;:::i;:::-;;:::i;7580:1062::-;;;;;;:::i;:::-;;:::i;8649:924::-;8874:7;8898:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9102:13:46;9133:10;8948:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8925:242;;;;;;8898:269;;9178:15;1514:103:48;;;;;;14203:34:62;14191:47;;14268:34;14263:2;14254:12;;14247:56;-1:-1:-1;;;14328:2:62;14319:12;;14312:29;14366:2;14357:12;;13989:386;1514:103:48;;;;;;;;;;;;;1499:120;;;;;;9287:11:46;9345:12;9327:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;9316:45;;;;;;9379:10;9219:184;;;;;;;;;;14892:25:62;;;-1:-1:-1;;;;;14953:32:62;;;;14948:2;14933:18;;14926:60;15017:2;15002:18;;14995:34;15060:2;15045:18;;15038:34;14879:3;14864:19;;14661:417;9219:184:46;;;;;;;;;;;;;9196:217;;;;;;9178:235;;9424:16;9484;9502:7;9454:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9443:70;;;;;;9424:89;;9531:35;9544:8;9554:10;9531:11;:35::i;:::-;9524:42;8649:924;-1:-1:-1;;;;;;;;;8649:924:46:o;452:692::-;584:7;617:10;:17;638:2;617:23;608:58;;;;-1:-1:-1;;;608:58:46;;15682:2:62;608:58:46;;;15664:21:62;15721:2;15701:18;;;15694:30;-1:-1:-1;;;15740:18:62;;;15733:50;15800:18;;608:58:46;;;;;;;;;856:2;839:21;;;832:30;939:2;922:21;;;915:30;1060:2;1043:21;;;1036:30;1095:42;;677:13;1095:42;;;;;;;;;16056:25:62;;;1027:41:46;;16097:18:62;;;16090:45;;;16151:18;;16144:34;;;16194:18;;;16187:34;;;832:30:46;;1095:42;;16028:19:62;;1095:42:46;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1095:42:46;;-1:-1:-1;;1095:42:46;;;452:692;-1:-1:-1;;;;;;;452:692:46:o;9580:895::-;9777:7;9801:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;10005:13:46;10036:10;9851:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9828:242;;;;;;9801:269;;10081:15;1678:78:48;;;;;;16446:34:62;16434:47;;-1:-1:-1;;;16506:2:62;16497:12;;16490:36;16551:2;16542:12;;16232:328;1678:78:48;;;;;;;;;;;;;1663:95;;;;;;10219:5:46;10201:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;10190:38;;;;;;10275:12;10257:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10257:32:46;;;;;;;;;10246:45;;10257:32;10246:45;;;;10122:183;;;16767:25:62;;;;16808:18;;16801:34;;;;16851:18;;;16844:34;;;;16740:18;;10122:183:46;;;;;;;;;;;;10099:216;;;;;;10081:234;;10326:16;10386;10404:7;10356:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10345:70;;;;;;10326:89;;10433:35;10446:8;10456:10;10433:11;:35::i;:::-;10426:42;9580:895;-1:-1:-1;;;;;;;;9580:895:46:o;1501:865::-;1840:31;;-1:-1:-1;;;1840:31:46;;-1:-1:-1;;;;;2419:32:62;;;1840:31:46;;;2401:51:62;1653:18:46;;1685:12;;;;;;1803:10;;1685:12;;1840:16;;;;;2374:18:62;;1840:31:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1826:45;-1:-1:-1;1891:8:46;1882:43;;;;-1:-1:-1;;;1882:43:46;;17280:2:62;1882:43:46;;;17262:21:62;17319:2;17299:18;;;17292:30;-1:-1:-1;;;17338:18:62;;;17331:49;17397:18;;1882:43:46;17078:343:62;1882:43:46;1936:24;;:::i;:::-;2122:22;;-1:-1:-1;;;2122:22:46;;;;;17572:25:62;;;-1:-1:-1;;;;;2122:15:46;;;;;17545:18:62;;2122:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2122:22:46;;;;;;;;;;;;:::i;:::-;1971:173;;2098:19;;;1971:173;;;2068:16;;;1971:173;;;2037:17;;;1971:173;;;;2009:14;;;1971:173;;;;-1:-1:-1;;;;;1971:173:46;;;;;2164:4;:24;2155:54;;;;-1:-1:-1;;;2155:54:46;;19034:2:62;2155:54:46;;;19016:21:62;19073:2;19053:18;;;19046:30;-1:-1:-1;;;19092:18:62;;;19085:43;19145:18;;2155:54:46;18832:337:62;2155:54:46;2241:14;;;;2269:17;;;;2300:16;;;;2330:19;;;;;2241:14;;2269:17;;-1:-1:-1;2300:16:46;;-1:-1:-1;2330:19:46;-1:-1:-1;1501:865:46;-1:-1:-1;;;;;1501:865:46:o;4060:867::-;4181:24;4219:30;4263:17;4294:14;4322:16;4352:19;4385:31;4430:23;4467:26;4518:15;4546:10;4518:40;;4589:6;-1:-1:-1;;;;;4589:17:46;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4589:19:46;;;;;;;;;;;;:::i;:::-;4622:6;-1:-1:-1;;;;;4622:29:46;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4667:6;-1:-1:-1;;;;;4667:19:46;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4702:6;-1:-1:-1;;;;;4702:16:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4734:6;-1:-1:-1;;;;;4734:15:46;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4765:6;-1:-1:-1;;;;;4765:18:46;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4799:6;-1:-1:-1;;;;;4799:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4845:6;-1:-1:-1;;;;;4845:22:46;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4883:6;-1:-1:-1;;;;;4883:25:46;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4569:351;;;;;;;;;;;;;;;;;;;4060:867;;;;;;;;;;;:::o;5703:904::-;5915:7;5939:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;6143:13:46;6174:10;5989:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5966:242;;;;;;5939:269;;6219:15;1007:93:48;;;;;;20169:34:62;20157:47;;20234:29;20229:2;20220:12;;20213:51;20289:2;20280:12;;19955:343;1007:93:48;;;;;;;;;;;;;992:110;;;;;;6325:7:46;6350:8;6405:14;6387:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:34:46;;;;;;;;;6376:47;;6387:34;6376:47;;;;6260:177;;;20528:25:62;;;;20569:18;;20562:34;;;;20639:14;20632:22;20612:18;;;20605:50;20671:18;;;20664:34;;;;20500:19;;6260:177:46;20303:401:62;4934:762:46;5090:7;5114:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;5318:13:46;5349:10;5164:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5141:242;;;;;;5114:269;;5394:15;888:61:48;;;;;;20923:29:62;20911:42;;20978:2;20969:12;;20709:278;888:61:48;;;;;;;-1:-1:-1;;888:61:48;;;;;;873:78;;888:61;873:78;;;;5435:91:46;;;21160:25:62;21228:14;;21221:22;21201:18;;;21194:50;5435:91:46;;;;;;;;;21133:18:62;;;5435:91:46;;;5412:124;;;;;;-1:-1:-1;;;5577:57:46;;5607:16;;5412:124;;5577:57;;;:::i;:::-;;;;;;;;;;;;;5566:70;;;;;;5547:89;;5654:35;5667:8;5677:10;5654:11;:35::i;:::-;5647:42;4934:762;-1:-1:-1;;;;;;;4934:762:46:o;2513:894::-;2632:25;2682:15;2710:10;2682:40;;2733:16;2752:6;-1:-1:-1;;;;;2752:15:46;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:37;;2780:22;2805:6;-1:-1:-1;;;;;2805:24:46;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2780:51;;2841:26;2886:8;-1:-1:-1;;;;;2870:26:46;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;2841:55:46;-1:-1:-1;2907:13:46;2955:1;2936:439;2965:14;2959:3;:20;2936:439;;;3004:24;;:::i;:::-;3210:22;;-1:-1:-1;;;3210:22:46;;;;;17572:25:62;;;-1:-1:-1;;;;;3210:15:46;;;;;17545:18:62;;3210:22:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3210:22:46;;;;;;;;;;;;:::i;:::-;3043:189;;3186:19;;;3043:189;;;3152:16;;;3043:189;;;3117:17;;;3043:189;;;;3085:14;;;3043:189;;;;-1:-1:-1;;;;;3043:189:46;;;;;3251:4;:24;3247:118;;;3316:9;3295;3306:5;3295:18;;;;;;;;:::i;:::-;;;;;;:30;;;;3343:7;;;;;:::i;:::-;;;;3247:118;-1:-1:-1;2982:5:46;;;;:::i;:::-;;;;2936:439;;;-1:-1:-1;3391:9:46;;2513:894;-1:-1:-1;;;;;;2513:894:46:o;10482:1332::-;10873:7;10897:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;11101:13:46;11132:8;10947:207;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10924:240;;;;;;10897:267;;11175:15;1816:221:48;;;;;;21838:34:62;21826:47;;21903:34;21898:2;21889:12;;21882:56;21968:34;21963:2;21954:12;;21947:56;22033:34;22028:2;22019:12;;22012:56;22099:34;22093:3;22084:13;;22077:57;22165:29;22159:3;22150:13;;22143:52;22220:3;22211:13;;21624:606;1816:221:48;;;;;;;;;;;;;1801:238;;;;;;11312:10:46;11294:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11294:30:46;;;;;;;;;11283:43;;11294:30;11283:43;;;;11216:428;;;22594:25:62;;;;22635:18;;22628:34;;;;22705:14;;22698:22;22678:18;;;22671:50;22764:14;;22757:22;22737:18;;;22730:50;22796:19;;;22789:35;;;22840:19;;;22833:35;;;22884:19;;;22877:35;;;22928:19;;;22921:35;;;-1:-1:-1;;;;;22993:32:62;;22972:19;;;22965:61;22566:19;;11216:428:46;;;;;;;;;;;;11193:461;;;;;;11175:479;;11665:16;11725;11743:7;11695:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11684:70;;;;;;11665:89;;11772:35;11785:8;11795:10;11772:11;:35::i;:::-;11765:42;10482:1332;-1:-1:-1;;;;;;;;;;;;;;10482:1332:46:o;6614:959::-;6843:7;6867:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;7071:13:46;7102:10;6917:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6894:242;;;;;;6867:269;;7147:15;1162:100:48;;;;;;23251:34:62;23239:47;;23316:34;23311:2;23302:12;;23295:56;-1:-1:-1;;;23376:2:62;23367:12;;23360:26;23411:2;23402:12;;23037:383;1162:100:48;;;;;;;;;;;;;1147:117;;;;;;7286:8:46;7268:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;7257:41;;;;;;7316:8;7371:14;7353:34;;;;;;;;:::i;7580:1062::-;7859:7;7883:24;713:116:48;;;;;;;:::i;:::-;;;;;;;;;;;;;698:133;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;8087:13:46;8118:10;7933:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7910:242;;;;;;7883:269;;8163:15;1323:130:48;;;;;;24593:34:62;24581:47;;24658:34;24653:2;24644:12;;24637:56;24723:34;24718:2;24709:12;;24702:56;24783:2;24774:12;;24379:413;1323:130:48;;;;;;;;;;;;;1308:147;;;;;;8272:11:46;8330:5;8312:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;8301:38;;;;;;8386:12;8368:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8368:32:46;;;;;;;;;8357:45;;8368:32;8357:45;;;;8204:268;;;25078:25:62;;;;-1:-1:-1;;;;;25139:32:62;;;25119:18;;;25112:60;;;;25188:18;;;25181:34;25231:18;;;25224:34;;;;25302:14;;25295:22;25274:19;;;25267:51;25334:19;;;25327:35;;;25050:19;;8204:268:46;;;;;;;;;;;;8181:301;;;;;;8163:319;;8493:16;8553;8571:7;8523:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8512:70;;;;;;8493:89;;8600:35;8613:8;8623:10;8600:11;:35::i;:::-;8593:42;7580:1062;-1:-1:-1;;;;;;;;;;;7580:1062:46:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:62:-;-1:-1:-1;;;;;89:31:62;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:275;492:2;486:9;557:2;538:13;;-1:-1:-1;;534:27:62;522:40;;-1:-1:-1;;;;;577:34:62;;613:22;;;574:62;571:88;;;639:18;;:::i;:::-;675:2;668:22;421:275;;-1:-1:-1;421:275:62:o;701:187::-;750:4;-1:-1:-1;;;;;775:6:62;772:30;769:56;;;805:18;;:::i;:::-;-1:-1:-1;871:2:62;850:15;-1:-1:-1;;846:29:62;877:4;842:40;;701:187::o;893:464::-;936:5;989:3;982:4;974:6;970:17;966:27;956:55;;1007:1;1004;997:12;956:55;1043:6;1030:20;1074:49;1090:32;1119:2;1090:32;:::i;:::-;1074:49;:::i;:::-;1148:2;1139:7;1132:19;1194:3;1187:4;1182:2;1174:6;1170:15;1166:26;1163:35;1160:55;;;1211:1;1208;1201:12;1160:55;1276:2;1269:4;1261:6;1257:17;1250:4;1241:7;1237:18;1224:55;1324:1;1299:16;;;1317:4;1295:27;1288:38;;;;1303:7;893:464;-1:-1:-1;;;893:464:62:o;1362:888::-;1476:6;1484;1492;1500;1508;1561:3;1549:9;1540:7;1536:23;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1617:9;1604:23;1636:31;1661:5;1636:31;:::i;:::-;1686:5;-1:-1:-1;1742:2:62;1727:18;;1714:32;-1:-1:-1;;;;;1795:14:62;;;1792:34;;;1822:1;1819;1812:12;1792:34;1845:50;1887:7;1878:6;1867:9;1863:22;1845:50;:::i;:::-;1835:60;;1942:2;1931:9;1927:18;1914:32;1904:42;;1998:2;1987:9;1983:18;1970:32;1955:47;;2011:33;2036:7;2011:33;:::i;:::-;2063:7;;-1:-1:-1;2123:3:62;2108:19;;2095:33;;2140:16;;;2137:36;;;2169:1;2166;2159:12;2137:36;;2192:52;2236:7;2225:8;2214:9;2210:24;2192:52;:::i;:::-;2182:62;;;1362:888;;;;;;;;:::o;2463:389::-;2540:6;2548;2601:2;2589:9;2580:7;2576:23;2572:32;2569:52;;;2617:1;2614;2607:12;2569:52;2653:9;2640:23;2630:33;;2714:2;2703:9;2699:18;2686:32;-1:-1:-1;;;;;2733:6:62;2730:30;2727:50;;;2773:1;2770;2763:12;2727:50;2796;2838:7;2829:6;2818:9;2814:22;2796:50;:::i;:::-;2786:60;;;2463:389;;;;;:::o;2857:878::-;2972:6;2980;2988;2996;3049:3;3037:9;3028:7;3024:23;3020:33;3017:53;;;3066:1;3063;3056:12;3017:53;3106:9;3093:23;-1:-1:-1;;;;;3176:2:62;3168:6;3165:14;3162:34;;;3192:1;3189;3182:12;3162:34;3215:50;3257:7;3248:6;3237:9;3233:22;3215:50;:::i;:::-;3205:60;;3318:2;3307:9;3303:18;3290:32;3274:48;;3347:2;3337:8;3334:16;3331:36;;;3363:1;3360;3353:12;3331:36;3386:52;3430:7;3419:8;3408:9;3404:24;3386:52;:::i;:::-;3376:62;;3488:2;3477:9;3473:18;3460:32;3447:45;;3501:31;3526:5;3501:31;:::i;:::-;3551:5;;-1:-1:-1;3609:2:62;3594:18;;3581:32;;3625:16;;;3622:36;;;3654:1;3651;3644:12;3622:36;;3677:52;3721:7;3710:8;3699:9;3695:24;3677:52;:::i;:::-;3667:62;;;2857:878;;;;;;;:::o;3740:388::-;3808:6;3816;3869:2;3857:9;3848:7;3844:23;3840:32;3837:52;;;3885:1;3882;3875:12;3837:52;3924:9;3911:23;3943:31;3968:5;3943:31;:::i;:::-;3993:5;-1:-1:-1;4050:2:62;4035:18;;4022:32;4063:33;4022:32;4063:33;:::i;:::-;4115:7;4105:17;;;3740:388;;;;;:::o;4133:258::-;4205:1;4215:113;4229:6;4226:1;4223:13;4215:113;;;4305:11;;;4299:18;4286:11;;;4279:39;4251:2;4244:10;4215:113;;;4346:6;4343:1;4340:13;4337:48;;;4381:1;4372:6;4367:3;4363:16;4356:27;4337:48;;4133:258;;;:::o;4396:::-;4438:3;4476:5;4470:12;4503:6;4498:3;4491:19;4519:63;4575:6;4568:4;4563:3;4559:14;4552:4;4545:5;4541:16;4519:63;:::i;:::-;4636:2;4615:15;-1:-1:-1;;4611:29:62;4602:39;;;;4643:4;4598:50;;4396:258;-1:-1:-1;;4396:258:62:o;4659:455::-;4880:3;4869:9;4862:22;4843:4;4901:46;4942:3;4931:9;4927:19;4919:6;4901:46;:::i;:::-;4978:2;4963:18;;4956:34;;;;-1:-1:-1;5033:14:62;;5026:22;5021:2;5006:18;;4999:50;5092:14;5085:22;5080:2;5065:18;;;5058:50;4893:54;4659:455;-1:-1:-1;4659:455:62:o;5119:247::-;5178:6;5231:2;5219:9;5210:7;5206:23;5202:32;5199:52;;;5247:1;5244;5237:12;5199:52;5286:9;5273:23;5305:31;5330:5;5305:31;:::i;:::-;5355:5;5119:247;-1:-1:-1;;;5119:247:62:o;5371:835::-;5695:4;5724:3;5754:2;5743:9;5736:21;5774:45;5815:2;5804:9;5800:18;5792:6;5774:45;:::i;:::-;5850:2;5835:18;;5828:34;;;;-1:-1:-1;;5905:14:62;;5898:22;5893:2;5878:18;;5871:50;5964:14;;5957:22;5952:2;5937:18;;5930:50;6011:3;5996:19;;5989:35;;;;6055:3;6040:19;;6033:35;;;;6099:3;6084:19;;6077:35;6143:3;6128:19;;6121:35;6187:3;6172:19;;;6165:35;5766:53;5371:835;-1:-1:-1;5371:835:62:o;6211:118::-;6297:5;6290:13;6283:21;6276:5;6273:32;6263:60;;6319:1;6316;6309:12;6334:128;6399:20;;6428:28;6399:20;6428:28;:::i;6467:882::-;6578:6;6586;6594;6602;6610;6663:3;6651:9;6642:7;6638:23;6634:33;6631:53;;;6680:1;6677;6670:12;6631:53;6716:9;6703:23;6693:33;;6776:2;6765:9;6761:18;6748:32;6789:28;6811:5;6789:28;:::i;:::-;6836:5;-1:-1:-1;6892:2:62;6877:18;;6864:32;-1:-1:-1;;;;;6945:14:62;;;6942:34;;;6972:1;6969;6962:12;6942:34;6995:50;7037:7;7028:6;7017:9;7013:22;6995:50;:::i;:::-;6985:60;;7097:2;7086:9;7082:18;7069:32;7054:47;;7110:33;7135:7;7110:33;:::i;7354:591::-;7437:6;7445;7453;7506:2;7494:9;7485:7;7481:23;7477:32;7474:52;;;7522:1;7519;7512:12;7474:52;7561:9;7548:23;7580:28;7602:5;7580:28;:::i;:::-;7627:5;-1:-1:-1;7684:2:62;7669:18;;7656:32;7697:33;7656:32;7697:33;:::i;:::-;7749:7;-1:-1:-1;7807:2:62;7792:18;;7779:32;-1:-1:-1;;;;;7823:30:62;;7820:50;;;7866:1;7863;7856:12;7820:50;7889;7931:7;7922:6;7911:9;7907:22;7889:50;:::i;:::-;7879:60;;;7354:591;;;;;:::o;7950:1367::-;8142:4;8171:2;8211;8200:9;8196:18;8241:2;8230:9;8223:21;8264:6;8299;8293:13;8330:6;8322;8315:22;8356:2;8346:12;;8389:2;8378:9;8374:18;8367:25;;8451:2;8441:6;8438:1;8434:14;8423:9;8419:30;8415:39;8489:2;8481:6;8477:15;8510:1;8520:768;8534:6;8531:1;8528:13;8520:768;;;8599:22;;;-1:-1:-1;;8595:36:62;8583:49;;8655:13;;8727:9;;-1:-1:-1;;;;;8723:35:62;8708:51;;8798:11;;;8792:18;8691:4;8830:15;;;8823:27;;;8691:4;8877:48;8909:15;;;8792:18;8877:48;:::i;:::-;8968:11;;;8962:18;8945:15;;;8938:43;9004:4;9065:11;;;9059:18;9052:26;9045:34;9028:15;;;9021:59;9103:4;9164:11;;;9158:18;9151:26;9144:34;9127:15;;;;9120:59;;;;-1:-1:-1;;9266:12:62;;;;9231:15;;;;8556:1;8549:9;8520:768;;;-1:-1:-1;9305:6:62;;7950:1367;-1:-1:-1;;;;;;;;7950:1367:62:o;9322:1105::-;9475:6;9483;9491;9499;9507;9515;9523;9531;9539;9547;9600:3;9588:9;9579:7;9575:23;9571:33;9568:53;;;9617:1;9614;9607:12;9568:53;9657:9;9644:23;-1:-1:-1;;;;;9727:2:62;9719:6;9716:14;9713:34;;;9743:1;9740;9733:12;9713:34;9766:50;9808:7;9799:6;9788:9;9784:22;9766:50;:::i;:::-;9756:60;;9835:35;9866:2;9855:9;9851:18;9835:35;:::i;:::-;9825:45;;9889:35;9920:2;9909:9;9905:18;9889:35;:::i;:::-;9879:45;;9971:2;9960:9;9956:18;9943:32;9933:42;;10022:3;10011:9;10007:19;9994:33;9984:43;;10074:3;10063:9;10059:19;10046:33;10036:43;;10126:3;10115:9;10111:19;10098:33;10088:43;;10150:39;10184:3;10173:9;10169:19;10150:39;:::i;:::-;10140:49;;10208:39;10242:3;10231:9;10227:19;10208:39;:::i;:::-;10198:49;;10300:3;10289:9;10285:19;10272:33;10256:49;;10330:2;10320:8;10317:16;10314:36;;;10346:1;10343;10336:12;10314:36;;10369:52;10413:7;10402:8;10391:9;10387:24;10369:52;:::i;:::-;10359:62;;;9322:1105;;;;;;;;;;;;;:::o;10432:1491::-;10568:6;10576;10584;10592;10600;10653:3;10641:9;10632:7;10628:23;10624:33;10621:53;;;10670:1;10667;10660:12;10621:53;10710:9;10697:23;-1:-1:-1;;;;;10780:2:62;10772:6;10769:14;10766:34;;;10796:1;10793;10786:12;10766:34;10834:6;10823:9;10819:22;10809:32;;10879:7;10872:4;10868:2;10864:13;10860:27;10850:55;;10901:1;10898;10891:12;10850:55;10937:2;10924:16;10959:4;10982:2;10978;10975:10;10972:36;;;10988:18;;:::i;:::-;11034:2;11031:1;11027:10;11057:28;11081:2;11077;11073:11;11057:28;:::i;:::-;11119:15;;;11189:11;;;11185:20;;;11150:12;;;;11217:19;;;11214:39;;;11249:1;11246;11239:12;11214:39;11273:11;;;;11293:142;11309:6;11304:3;11301:15;11293:142;;;11375:17;;11363:30;;11326:12;;;;11413;;;;11293:142;;;11454:5;-1:-1:-1;11478:35:62;;-1:-1:-1;;11494:18:62;;;11478:35;:::i;:::-;11468:45;;;;11566:2;11555:9;11551:18;11538:32;11522:48;;11595:2;11585:8;11582:16;11579:36;;;11611:1;11608;11601:12;11579:36;11634:52;11678:7;11667:8;11656:9;11652:24;11634:52;:::i;:::-;11624:62;;11705:38;11739:2;11728:9;11724:18;11705:38;:::i;:::-;11695:48;;11796:3;11785:9;11781:19;11768:33;11752:49;;11826:2;11816:8;11813:16;11810:36;;;11842:1;11839;11832:12;11928:1158;12067:6;12075;12083;12091;12099;12107;12115;12168:3;12156:9;12147:7;12143:23;12139:33;12136:53;;;12185:1;12182;12175:12;12136:53;12224:9;12211:23;12243:31;12268:5;12243:31;:::i;:::-;12293:5;-1:-1:-1;12349:2:62;12334:18;;12321:32;-1:-1:-1;;;;;12402:14:62;;;12399:34;;;12429:1;12426;12419:12;12399:34;12452:50;12494:7;12485:6;12474:9;12470:22;12452:50;:::i;:::-;12442:60;;12555:2;12544:9;12540:18;12527:32;12511:48;;12584:2;12574:8;12571:16;12568:36;;;12600:1;12597;12590:12;12568:36;12623:52;12667:7;12656:8;12645:9;12641:24;12623:52;:::i;:::-;12613:62;;12727:2;12716:9;12712:18;12699:32;12684:47;;12740:30;12762:7;12740:30;:::i;:::-;12789:7;12779:17;;12843:3;12832:9;12828:19;12815:33;12805:43;;12867:39;12901:3;12890:9;12886:19;12867:39;:::i;:::-;12857:49;;12959:3;12948:9;12944:19;12931:33;12915:49;;12989:2;12979:8;12976:16;12973:36;;;13005:1;13002;12995:12;12973:36;;13028:52;13072:7;13061:8;13050:9;13046:24;13028:52;:::i;:::-;13018:62;;;11928:1158;;;;;;;;;;:::o;13091:399::-;13305:34;13293:47;;13370:34;13365:2;13356:12;;13349:56;-1:-1:-1;;;13430:2:62;13421:12;;13414:42;13481:2;13472:12;;13091:399::o;13495:489::-;13754:25;;;13810:2;13795:18;;13788:34;;;;13853:2;13838:18;;13831:34;;;;13896:2;13881:18;;13874:34;-1:-1:-1;;;;;13945:32:62;13939:3;13924:19;;13917:61;13741:3;13726:19;;13495:489::o;14380:276::-;14511:3;14549:6;14543:13;14565:53;14611:6;14606:3;14599:4;14591:6;14587:17;14565:53;:::i;:::-;14634:16;;;;;14380:276;-1:-1:-1;;14380:276:62:o;15083:392::-;-1:-1:-1;;;15341:27:62;;15393:1;15384:11;;15377:27;;;;15429:2;15420:12;;15413:28;15466:2;15457:12;;15083:392::o;16889:184::-;16959:6;17012:2;17000:9;16991:7;16987:23;16983:32;16980:52;;;17028:1;17025;17018:12;16980:52;-1:-1:-1;17051:16:62;;16889:184;-1:-1:-1;16889:184:62:o;17608:430::-;17662:5;17715:3;17708:4;17700:6;17696:17;17692:27;17682:55;;17733:1;17730;17723:12;17682:55;17762:6;17756:13;17793:49;17809:32;17838:2;17809:32;:::i;17793:49::-;17867:2;17858:7;17851:19;17913:3;17906:4;17901:2;17893:6;17889:15;17885:26;17882:35;17879:55;;;17930:1;17927;17920:12;17879:55;17943:64;18004:2;17997:4;17988:7;17984:18;17977:4;17969:6;17965:17;17943:64;:::i;:::-;18025:7;17608:430;-1:-1:-1;;;;17608:430:62:o;18043:784::-;18153:6;18161;18169;18177;18185;18238:3;18226:9;18217:7;18213:23;18209:33;18206:53;;;18255:1;18252;18245:12;18206:53;18287:9;18281:16;18306:31;18331:5;18306:31;:::i;:::-;18405:2;18390:18;;18384:25;18356:5;;-1:-1:-1;;;;;;18421:30:62;;18418:50;;;18464:1;18461;18454:12;18418:50;18487:61;18540:7;18531:6;18520:9;18516:22;18487:61;:::i;:::-;18477:71;;;18588:2;18577:9;18573:18;18567:25;18557:35;;18637:2;18626:9;18622:18;18616:25;18650:30;18672:7;18650:30;:::i;:::-;18751:3;18736:19;;18730:26;18699:7;;-1:-1:-1;18765:30:62;18730:26;18765:30;:::i;:::-;18814:7;18804:17;;;18043:784;;;;;;;;:::o;19174:337::-;19254:6;19307:2;19295:9;19286:7;19282:23;19278:32;19275:52;;;19323:1;19320;19313:12;19275:52;19356:9;19350:16;-1:-1:-1;;;;;19381:6:62;19378:30;19375:50;;;19421:1;19418;19411:12;19375:50;19444:61;19497:7;19488:6;19477:9;19473:22;19444:61;:::i;19705:245::-;19772:6;19825:2;19813:9;19804:7;19800:23;19796:32;19793:52;;;19841:1;19838;19831:12;19793:52;19873:9;19867:16;19892:28;19914:5;19892:28;:::i;21255:127::-;21316:10;21311:3;21307:20;21304:1;21297:31;21347:4;21344:1;21337:15;21371:4;21368:1;21361:15;21387:232;21426:3;-1:-1:-1;;21447:17:62;;21444:140;;;21506:10;21501:3;21497:20;21494:1;21487:31;21541:4;21538:1;21531:15;21569:4;21566:1;21559:15;21444:140;-1:-1:-1;21611:1:62;21600:13;;21387:232::o;23425:543::-;23643:13;;23586:3;;23617;;23696:4;23723:15;;;23586:3;23766:175;23780:6;23777:1;23774:13;23766:175;;;23843:13;;23829:28;;23879:14;;;;23916:15;;;;23802:1;23795:9;23766:175;;;-1:-1:-1;23957:5:62;;23425:543;-1:-1:-1;;;;;;23425:543:62:o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseProperties(address)": {
        "notice": "All properties of a House",
        "params": {
          "_houseAddr": "CLH address"
        },
        "returns": {
          "HOUSE_GOVERNANCE_MODEL": "Hash of governance model",
          "HOUSE_NAME": "name of the CLH",
          "govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagers`",
          "govRuleMaxManagers": "Max of managers that CLH can accept (only for COMMITTEE )",
          "govRuleMaxUsers": "Max of all users (including managers)",
          "houseOpen": "True if is Open",
          "housePrivate": "True if is private",
          "numManagers": "Current managers of a CLH",
          "numUsers": "Current users of a CLH"
        }
      },
      "GetHouseUserList(address)": {
        "notice": "The list of all users address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrUsers": "array with list of users"
        }
      },
      "GetUserInfoByAddress(address,address)": {
        "notice": "Get the info of an user in one especific CLH",
        "params": {
          "_houseAddr": "Address of the CLH",
          "_walletAddr": "Address of the user"
        },
        "returns": {
          "balance": "How much money have deposited",
          "isManager": "true if is manager",
          "isUser": "true if is User",
          "name": "Nickname ot other user identificaction"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "notice": "This contract is only for test ",
    "title": "Some funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    223,
    11816
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AB062A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x9F6FD7AB EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xE78FC36B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xF0B00C9F EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF240C7E9 EQ PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x349DC296 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x7B3BB156 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x86ABD826 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8750BC3E EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x165B JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x198C JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x1897 JUMP JUMPDEST PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B5F JUMP JUMPDEST PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E0 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2AB SWAP1 PUSH32 0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179 PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0x54696D6529 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x31C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x349 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x36B DUP2 DUP7 PUSH2 0x378 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x427 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x44E SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x498 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4FA SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A5 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x5C7 DUP2 DUP7 PUSH2 0x378 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C3FE463 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP8 SWAP2 DUP4 SWAP2 DUP4 AND SWAP1 PUSH4 0x70FF918C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x41646472657373206E6F742065786973742121 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x698 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x705 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E52 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B9903737BA1030903AB9B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP11 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x59CA2D03 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x811 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1D5FD3CA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF00D6274 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F2E1339 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x1F08 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x975 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x999 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE68777D7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FB SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9C630A88 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1343E9A5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE810A58E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP10 SWAP1 SWAP3 SWAP5 SWAP7 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB53 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB9D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC10 SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x31C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC87 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCD1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD1E SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000 DUP2 MSTORE PUSH1 0x1B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP2 DUP5 ADD MSTORE DUP9 ISZERO ISZERO DUP4 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD6B SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x80 ADD PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xD8D DUP2 DUP7 PUSH2 0x378 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA693649A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE69 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE85 JUMPI PUSH2 0xE85 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEBE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xEAB PUSH2 0x1534 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xEA3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xED6 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF43 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E52 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE PUSH1 0x1 EQ ISZERO PUSH2 0xFA5 JUMPI DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF8B JUMPI PUSH2 0xF8B PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0xFA1 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0xFB0 DUP2 PUSH2 0x1F3B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEC6 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFD6 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1020 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x112B SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x652C616464726573732077686974654C69737457616C6C657473290000000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xBB ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP13 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP12 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP10 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1207 DUP2 DUP7 PUSH2 0x378 JUMP JUMPDEST SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x122B SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1275 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12F3 SWAP1 PUSH32 0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C DUP2 MSTORE PUSH32 0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x6E29 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1354 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x139E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1437 SWAP1 PUSH32 0x7374724F434E65775573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x145F SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1503 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1525 DUP2 DUP7 PUSH2 0x378 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1593 DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15D6 JUMPI PUSH2 0x15D6 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x15F7 JUMPI PUSH2 0x15F7 PUSH2 0x1598 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1629 PUSH2 0x1624 DUP3 PUSH2 0x15DE JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x163E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x167E DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A6 DUP10 DUP4 DUP11 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x16BF DUP3 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E2 DUP9 DUP3 DUP10 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x171F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172B DUP6 DUP3 DUP7 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x174B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176E DUP9 DUP4 DUP10 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1790 DUP9 DUP4 DUP10 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x17A2 DUP3 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C5 DUP8 DUP3 DUP9 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17EF DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17FF DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1825 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x180D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1834 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1852 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1879 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18B4 DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x18CF DUP2 DUP5 ADD DUP14 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP SWAP7 ISZERO ISZERO PUSH1 0x40 DUP9 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1593 DUP2 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1952 DUP2 PUSH2 0x190F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x196E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197A DUP10 DUP4 DUP11 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x16BF DUP3 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x19AC DUP2 PUSH2 0x190F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x19BC DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E3 DUP7 DUP3 DUP8 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A83 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0xA0 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1A4D DUP3 DUP8 ADD DUP3 PUSH2 0x183A JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A14 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AD4 DUP15 DUP4 DUP16 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP12 POP PUSH2 0x1AE2 PUSH1 0x20 DUP15 ADD PUSH2 0x191D JUMP JUMPDEST SWAP11 POP PUSH2 0x1AF0 PUSH1 0x40 DUP15 ADD PUSH2 0x191D JUMP JUMPDEST SWAP10 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD SWAP9 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP6 POP PUSH2 0x1B1A PUSH1 0xE0 DUP15 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B29 PUSH2 0x100 DUP15 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP PUSH2 0x120 DUP14 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4D DUP14 DUP3 DUP15 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1BB6 JUMPI PUSH2 0x1BB6 PUSH2 0x1598 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1BC5 DUP3 DUP3 ADD PUSH2 0x15AE JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP14 DUP6 GT ISZERO PUSH2 0x1BDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 DUP4 ADD SWAP6 JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1BFD JUMPI DUP7 CALLDATALOAD DUP3 MSTORE SWAP6 DUP4 ADD SWAP6 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST SWAP11 POP PUSH2 0x1C0D SWAP2 POP POP DUP11 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C31 DUP10 DUP4 DUP11 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP5 POP PUSH2 0x1C3F PUSH1 0x60 DUP10 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1C7B DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA3 DUP12 DUP4 DUP13 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CC5 DUP12 DUP4 DUP13 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1CD7 DUP3 PUSH2 0x190F JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x1CED PUSH1 0xA0 DUP12 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D10 DUP11 DUP3 DUP12 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DC7 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E24 PUSH2 0x1624 DUP3 PUSH2 0x15DE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1E39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4A DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x180A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH2 0x1E75 DUP2 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9D DUP9 DUP3 DUP10 ADD PUSH2 0x1E05 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1EB5 DUP2 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1EC6 DUP2 PUSH2 0x190F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4A DUP5 DUP3 DUP6 ADD PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x18B4 DUP2 PUSH2 0x190F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F5D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8E JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F72 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID 0xAA PUSH29 0xDBE2CCE2EC7B606B0E199DDD9B264A6E645E767FB8479A7917DCD1B869 EXTCODEHASH ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C875A2646970667358221220 0xE6 PUSH28 0x5F8DF07410ECD6476932C9154EF39D910234917EA2DD9015EF94F32 NOT PUSH13 0x64736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "CALLVALUE",
      "path": "46"
    },
    "6": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "7": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "8": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "12": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "REVERT",
      "path": "46"
    },
    "16": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "17": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "POP",
      "path": "46"
    },
    "18": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "21": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "LT",
      "path": "46"
    },
    "22": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "26": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "CALLDATALOAD",
      "path": "46"
    },
    "29": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "SHR",
      "path": "46"
    },
    "32": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "33": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "38": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "GT",
      "path": "46"
    },
    "39": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "43": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "44": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x89AB062A"
    },
    "49": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "50": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x14F"
    },
    "53": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "54": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "55": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9F6FD7AB"
    },
    "60": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "61": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x162"
    },
    "64": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "65": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "66": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xB698BE8D"
    },
    "71": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "72": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x175"
    },
    "75": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "76": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "77": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE78FC36B"
    },
    "82": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "83": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x195"
    },
    "86": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "87": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "88": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF0B00C9F"
    },
    "93": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "94": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A8"
    },
    "97": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "98": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "99": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF240C7E9"
    },
    "104": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "105": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1BB"
    },
    "108": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "109": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "112": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "REVERT",
      "path": "46"
    },
    "113": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "114": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "115": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x349DC296"
    },
    "120": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "121": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "125": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "126": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x622ECA77"
    },
    "131": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "132": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xDE"
    },
    "135": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "136": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "137": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x7B3BB156"
    },
    "142": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "143": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF1"
    },
    "146": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "147": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "148": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x86ABD826"
    },
    "153": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "154": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x104"
    },
    "157": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "158": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "159": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x8750BC3E"
    },
    "164": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "EQ",
      "path": "46"
    },
    "165": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x127"
    },
    "168": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "169": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "170": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "DUP1",
      "path": "46"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        223,
        11816
      ],
      "op": "REVERT",
      "path": "46"
    },
    "174": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "175": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "178": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xBC"
    },
    "181": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "182": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "184": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x165B"
    },
    "187": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "188": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "189": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1CE"
    },
    "192": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "193": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "194": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "196": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "op": "SUB"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "SWAP2"
    },
    "207": {
      "op": "AND"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "214": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "216": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "217": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "DUP1",
      "path": "46"
    },
    "218": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "219": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SUB",
      "path": "46"
    },
    "220": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "221": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "RETURN",
      "path": "46"
    },
    "222": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "223": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "226": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEC"
    },
    "229": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "230": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "232": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x16EF"
    },
    "235": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "236": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "237": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x378"
    },
    "240": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "241": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "242": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "245": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFF"
    },
    "248": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "249": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "251": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1735"
    },
    "254": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "255": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "256": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x43C"
    },
    "259": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "260": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "261": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x117"
    },
    "264": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x112"
    },
    "267": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "268": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "270": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x17D1"
    },
    "273": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "274": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "275": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5D3"
    },
    "278": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "279": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "280": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "282": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "283": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD5"
    },
    "286": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "287": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "288": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "289": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "290": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "291": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1866"
    },
    "294": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "295": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "296": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x13A"
    },
    "299": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x135"
    },
    "302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "305": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "309": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x798"
    },
    "313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "314": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "315": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD5"
    },
    "321": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "322": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "323": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "324": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "327": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "328": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "329": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "330": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "331": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x18BB"
    },
    "334": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "335": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "336": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "339": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x15D"
    },
    "342": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "343": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "345": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1928"
    },
    "348": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "349": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "350": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB41"
    },
    "353": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMP",
      "path": "46"
    },
    "354": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "355": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "358": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x170"
    },
    "361": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "362": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "364": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x198C"
    },
    "367": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "368": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "369": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC75"
    },
    "372": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "373": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "374": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x188"
    },
    "377": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x183"
    },
    "380": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "381": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "383": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1897"
    },
    "386": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "387": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "388": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD98"
    },
    "391": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "392": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "393": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "395": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "396": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD5"
    },
    "399": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "400": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "401": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19ED"
    },
    "404": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "405": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "406": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "409": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A3"
    },
    "412": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "413": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "415": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A91"
    },
    "418": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10482,
        11814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "419": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "420": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFC4"
    },
    "423": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10482,
        11814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "424": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "425": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "428": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B6"
    },
    "431": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "432": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "434": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B5F"
    },
    "437": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "438": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "439": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1219"
    },
    "442": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "443": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "444": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC1"
    },
    "447": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C9"
    },
    "450": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "CALLDATASIZE",
      "path": "46"
    },
    "451": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "453": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1C55"
    },
    "456": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "457": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "458": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1342"
    },
    "461": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "462": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "463": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8874,
        8881
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "465": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        8922
      ],
      "op": "DUP1",
      "path": "46"
    },
    "466": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "468": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "469": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "471": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "472": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1E0"
    },
    "475": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "476": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "479": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "480": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "481": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "483": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "484": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "486": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "487": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "488": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "489": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "490": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "491": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "492": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "493": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "495": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "496": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "497": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "498": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "499": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "501": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "502": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "505": {
      "op": "DUP1"
    },
    "506": {
      "op": "MLOAD"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "509": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "512": {
      "op": "DUP4"
    },
    "513": {
      "op": "CODECOPY"
    },
    "514": {
      "op": "DUP2"
    },
    "515": {
      "op": "MLOAD"
    },
    "516": {
      "op": "SWAP2"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "520": {
      "op": "DUP1"
    },
    "521": {
      "op": "MLOAD"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "524": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "527": {
      "op": "DUP4"
    },
    "528": {
      "op": "CODECOPY"
    },
    "529": {
      "op": "DUP2"
    },
    "530": {
      "op": "MLOAD"
    },
    "531": {
      "op": "SWAP2"
    },
    "532": {
      "op": "MSTORE"
    },
    "533": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9102,
        9115
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "534": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9133,
        9143
      ],
      "op": "DUP8",
      "path": "46"
    },
    "535": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "537": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "538": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "540": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "ADD",
      "path": "46"
    },
    "541": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x22A"
    },
    "544": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "545": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "546": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "547": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "548": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "549": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "550": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "553": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        8948,
        9157
      ],
      "op": "JUMP",
      "path": "46"
    },
    "554": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "555": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "557": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "558": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "560": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP2",
      "path": "46"
    },
    "561": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP4",
      "path": "46"
    },
    "562": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SUB",
      "path": "46"
    },
    "563": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SUB",
      "path": "46"
    },
    "564": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "DUP2",
      "path": "46"
    },
    "565": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "566": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "567": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "569": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8948,
        9157
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "570": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "DUP1",
      "path": "46"
    },
    "571": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "572": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "573": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "575": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "ADD",
      "path": "46"
    },
    "576": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8925,
        9167
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "577": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        9167
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "578": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8898,
        9167
      ],
      "op": "POP",
      "path": "46"
    },
    "579": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9193
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "581": {
      "offset": [
        1514,
        1617
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "583": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "584": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "586": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "ADD",
      "path": "48"
    },
    "587": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x2AB"
    },
    "590": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "591": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C"
    },
    "624": {
      "op": "DUP2"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "op": "PUSH32",
      "value": "0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "DUP3"
    },
    "662": {
      "op": "ADD"
    },
    "663": {
      "op": "MSTORE"
    },
    "664": {
      "op": "PUSH5",
      "value": "0x54696D6529"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "675": {
      "op": "DUP3"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "op": "SWAP1"
    },
    "682": {
      "op": "JUMP"
    },
    "683": {
      "offset": [
        1514,
        1617
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "684": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "686": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "687": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "689": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "DUP2",
      "path": "48"
    },
    "690": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "DUP4",
      "path": "48"
    },
    "691": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "SUB",
      "path": "48"
    },
    "692": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "SUB",
      "path": "48"
    },
    "693": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "DUP2",
      "path": "48"
    },
    "694": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "695": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "696": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "698": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1514,
        1617
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "699": {
      "offset": [
        1499,
        1619
      ],
      "op": "DUP1",
      "path": "48"
    },
    "700": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1499,
        1619
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "701": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1499,
        1619
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "702": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1499,
        1619
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "704": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1499,
        1619
      ],
      "op": "ADD",
      "path": "48"
    },
    "705": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        1499,
        1619
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "706": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9287,
        9298
      ],
      "op": "DUP9",
      "path": "46"
    },
    "707": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9345,
        9357
      ],
      "op": "DUP9",
      "path": "46"
    },
    "708": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "710": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "711": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "713": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "ADD",
      "path": "46"
    },
    "714": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x2D3"
    },
    "717": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "718": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "719": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "722": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9327,
        9359
      ],
      "op": "JUMP",
      "path": "46"
    },
    "723": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "724": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "726": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "727": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "729": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP2",
      "path": "46"
    },
    "730": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP4",
      "path": "46"
    },
    "731": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SUB",
      "path": "46"
    },
    "732": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SUB",
      "path": "46"
    },
    "733": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "DUP2",
      "path": "46"
    },
    "734": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "735": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "736": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "738": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9327,
        9359
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "739": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "DUP1",
      "path": "46"
    },
    "740": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "741": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "742": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "744": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "ADD",
      "path": "46"
    },
    "745": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9316,
        9361
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "746": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9379,
        9389
      ],
      "op": "DUP9",
      "path": "46"
    },
    "747": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "749": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "750": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "752": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "ADD",
      "path": "46"
    },
    "753": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x31C"
    },
    "756": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "757": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "758": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "759": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "760": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "761": {
      "op": "SWAP4"
    },
    "762": {
      "op": "DUP5"
    },
    "763": {
      "op": "MSTORE"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "op": "SWAP3"
    },
    "773": {
      "op": "SWAP1"
    },
    "774": {
      "op": "SWAP3"
    },
    "775": {
      "op": "AND"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "778": {
      "op": "DUP5"
    },
    "779": {
      "op": "ADD"
    },
    "780": {
      "op": "MSTORE"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "783": {
      "op": "DUP4"
    },
    "784": {
      "op": "ADD"
    },
    "785": {
      "op": "MSTORE"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "788": {
      "op": "DUP3"
    },
    "789": {
      "op": "ADD"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "793": {
      "op": "ADD"
    },
    "794": {
      "op": "SWAP1"
    },
    "795": {
      "op": "JUMP"
    },
    "796": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "797": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "799": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "800": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "802": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP2",
      "path": "46"
    },
    "803": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP4",
      "path": "46"
    },
    "804": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SUB",
      "path": "46"
    },
    "805": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SUB",
      "path": "46"
    },
    "806": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "DUP2",
      "path": "46"
    },
    "807": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "808": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "809": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "811": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9219,
        9403
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "812": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "DUP1",
      "path": "46"
    },
    "813": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "814": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "815": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "817": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "ADD",
      "path": "46"
    },
    "818": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9196,
        9413
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "819": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "820": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9178,
        9413
      ],
      "op": "POP",
      "path": "46"
    },
    "821": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9440
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "823": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9484,
        9500
      ],
      "op": "DUP3",
      "path": "46"
    },
    "824": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9502,
        9509
      ],
      "op": "DUP3",
      "path": "46"
    },
    "825": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "827": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "828": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "830": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "ADD",
      "path": "46"
    },
    "831": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x349"
    },
    "834": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "835": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "836": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "837": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DD1"
    },
    "840": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9454,
        9511
      ],
      "op": "JUMP",
      "path": "46"
    },
    "841": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "842": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "844": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "845": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "847": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP2",
      "path": "46"
    },
    "848": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP4",
      "path": "46"
    },
    "849": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SUB",
      "path": "46"
    },
    "850": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SUB",
      "path": "46"
    },
    "851": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "DUP2",
      "path": "46"
    },
    "852": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "853": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "854": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "856": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9454,
        9511
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "857": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "DUP1",
      "path": "46"
    },
    "858": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "859": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "860": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "862": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "ADD",
      "path": "46"
    },
    "863": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9443,
        9513
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "864": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9513
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "865": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9424,
        9513
      ],
      "op": "POP",
      "path": "46"
    },
    "866": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9566
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 0,
      "value": "0x36B"
    },
    "869": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9544,
        9552
      ],
      "op": "DUP2",
      "path": "46"
    },
    "870": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9554,
        9564
      ],
      "op": "DUP7",
      "path": "46"
    },
    "871": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9542
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x378"
    },
    "874": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "i",
      "offset": [
        9531,
        9566
      ],
      "op": "JUMP",
      "path": "46"
    },
    "875": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9531,
        9566
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "876": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        9524,
        9566
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "877": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "offset": [
        8649,
        9573
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "op": "POP"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "op": "POP"
    },
    "884": {
      "op": "POP"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "fn": "CLHouseApi.SignerOCDelUser",
      "jump": "o",
      "offset": [
        8649,
        9573
      ],
      "op": "JUMP",
      "path": "46"
    },
    "888": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "889": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        584,
        591
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "891": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        627
      ],
      "op": "DUP2",
      "path": "46",
      "statement": 1
    },
    "892": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "893": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        638,
        640
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x41"
    },
    "895": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        617,
        640
      ],
      "op": "EQ",
      "path": "46"
    },
    "896": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3C7"
    },
    "899": {
      "branch": 17,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "900": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "902": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP2",
      "path": "46"
    },
    "911": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "914": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "916": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP3",
      "path": "46"
    },
    "917": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "ADD",
      "path": "46"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "923": {
      "op": "DUP3"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "952": {
      "op": "DUP3"
    },
    "953": {
      "op": "ADD"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "957": {
      "op": "ADD"
    },
    "958": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "959": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "961": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "962": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "DUP1",
      "path": "46"
    },
    "963": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "964": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SUB",
      "path": "46"
    },
    "965": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "966": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "46"
    },
    "967": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        608,
        666
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "968": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        856,
        858
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "970": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP3",
      "path": "46"
    },
    "971": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "DUP2",
      "path": "46"
    },
    "972": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        839,
        860
      ],
      "op": "ADD",
      "path": "46"
    },
    "973": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "974": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        939,
        941
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "976": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP1",
      "path": "46"
    },
    "977": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "DUP6",
      "path": "46"
    },
    "978": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        922,
        943
      ],
      "op": "ADD",
      "path": "46"
    },
    "979": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        915,
        945
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "980": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1060,
        1062
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "982": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP1",
      "path": "46"
    },
    "983": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "DUP8",
      "path": "46"
    },
    "984": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1043,
        1064
      ],
      "op": "ADD",
      "path": "46"
    },
    "985": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1036,
        1066
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "986": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP4",
      "path": "46",
      "statement": 2
    },
    "987": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "988": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        677,
        690
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "990": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "991": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP3",
      "path": "46"
    },
    "992": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "993": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "994": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "995": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "996": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "997": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP7",
      "path": "46"
    },
    "998": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "999": {
      "op": "DUP11"
    },
    "1000": {
      "op": "SWAP1"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1003": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1027,
        1068
      ],
      "op": "BYTE",
      "path": "46"
    },
    "1004": {
      "op": "SWAP3"
    },
    "1005": {
      "op": "DUP6"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "op": "DUP4"
    },
    "1008": {
      "op": "SWAP1"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "DUP5"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "DUP4"
    },
    "1013": {
      "op": "SWAP1"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1017": {
      "op": "DUP5"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "DUP2"
    },
    "1020": {
      "op": "SWAP1"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1023": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        832,
        862
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1024": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "1026": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1032": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1034": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1035": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1037": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1038": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1039": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1040": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1041": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1042": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SUB",
      "path": "46"
    },
    "1043": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1044": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1045": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "GAS",
      "path": "46"
    },
    "1046": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1047": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1048": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1049": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1050": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x427"
    },
    "1053": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1054": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1055": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1057": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1058": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1059": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1060": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1062": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1063": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1064": {
      "op": "POP"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1068": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1071": {
      "op": "NOT"
    },
    "1072": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "ADD",
      "path": "46"
    },
    "1073": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1074": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1095,
        1137
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1075": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        452,
        1144
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1076": {
      "op": "POP"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "op": "POP"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "o",
      "offset": [
        452,
        1144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1084": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1085": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9777,
        9784
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1087": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        9825
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1088": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1090": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1091": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1093": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "1094": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x44E"
    },
    "1097": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1098": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "1101": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "1102": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1103": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1105": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1106": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1108": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1109": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1110": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "1111": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "1112": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1113": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1114": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1115": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1117": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1118": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1119": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1120": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1121": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1123": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "1124": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1127": {
      "op": "DUP1"
    },
    "1128": {
      "op": "MLOAD"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1131": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "1134": {
      "op": "DUP4"
    },
    "1135": {
      "op": "CODECOPY"
    },
    "1136": {
      "op": "DUP2"
    },
    "1137": {
      "op": "MLOAD"
    },
    "1138": {
      "op": "SWAP2"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1142": {
      "op": "DUP1"
    },
    "1143": {
      "op": "MLOAD"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1146": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "1149": {
      "op": "DUP4"
    },
    "1150": {
      "op": "CODECOPY"
    },
    "1151": {
      "op": "DUP2"
    },
    "1152": {
      "op": "MLOAD"
    },
    "1153": {
      "op": "SWAP2"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10005,
        10018
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "1156": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10036,
        10046
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1157": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1159": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1160": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1162": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "ADD",
      "path": "46"
    },
    "1163": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x498"
    },
    "1166": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "1167": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1168": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1169": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1170": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1171": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1172": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "1175": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        9851,
        10060
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1176": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1177": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1179": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1180": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1182": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1183": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1184": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SUB",
      "path": "46"
    },
    "1185": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SUB",
      "path": "46"
    },
    "1186": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1187": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1188": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1189": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1191": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9851,
        10060
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1192": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1193": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1194": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1195": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1197": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "ADD",
      "path": "46"
    },
    "1198": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9828,
        10070
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1199": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        10070
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1200": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9801,
        10070
      ],
      "op": "POP",
      "path": "46"
    },
    "1201": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10096
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1203": {
      "offset": [
        1678,
        1756
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1205": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1206": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1208": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "ADD",
      "path": "48"
    },
    "1209": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x4FA"
    },
    "1212": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1213": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "1246": {
      "op": "DUP2"
    },
    "1247": {
      "op": "MSTORE"
    },
    "1248": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "DUP3"
    },
    "1267": {
      "op": "ADD"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "op": "SWAP1"
    },
    "1273": {
      "op": "JUMP"
    },
    "1274": {
      "offset": [
        1678,
        1756
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "1275": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1277": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1278": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1280": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1281": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "DUP4",
      "path": "48"
    },
    "1282": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "SUB",
      "path": "48"
    },
    "1283": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "SUB",
      "path": "48"
    },
    "1284": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "DUP2",
      "path": "48"
    },
    "1285": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1286": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1287": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "1289": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1678,
        1756
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "1290": {
      "offset": [
        1663,
        1758
      ],
      "op": "DUP1",
      "path": "48"
    },
    "1291": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1663,
        1758
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "1292": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1663,
        1758
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "1293": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1663,
        1758
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "1295": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1663,
        1758
      ],
      "op": "ADD",
      "path": "48"
    },
    "1296": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        1663,
        1758
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "1297": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10219,
        10224
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1298": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1300": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1301": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1303": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "ADD",
      "path": "46"
    },
    "1304": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x521"
    },
    "1307": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1308": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1309": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "1312": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10201,
        10226
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1313": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1314": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1316": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1317": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1319": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1320": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1321": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SUB",
      "path": "46"
    },
    "1322": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SUB",
      "path": "46"
    },
    "1323": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1324": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1325": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1326": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1328": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10201,
        10226
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1329": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1330": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1331": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1332": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1334": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "ADD",
      "path": "46"
    },
    "1335": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10190,
        10228
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1336": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10275,
        10287
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1337": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1339": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1340": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1342": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "ADD",
      "path": "46"
    },
    "1343": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x548"
    },
    "1346": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1347": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1348": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "1351": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10257,
        10289
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1352": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1353": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1355": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1356": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1359": {
      "op": "NOT"
    },
    "1360": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1361": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1362": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "SUB",
      "path": "46"
    },
    "1363": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "ADD",
      "path": "46"
    },
    "1364": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1365": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1366": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1367": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1368": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1369": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1370": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1371": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10257,
        10289
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1373": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1374": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1375": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "ADD",
      "path": "46"
    },
    "1376": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10246,
        10291
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1377": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1378": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1379": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "ADD",
      "path": "46"
    },
    "1380": {
      "op": "SWAP5"
    },
    "1381": {
      "op": "SWAP1"
    },
    "1382": {
      "op": "SWAP5"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "DUP2"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "SWAP2"
    },
    "1387": {
      "op": "SWAP1"
    },
    "1388": {
      "op": "SWAP2"
    },
    "1389": {
      "op": "MSTORE"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1392": {
      "op": "DUP2"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "op": "SWAP2"
    },
    "1395": {
      "op": "SWAP1"
    },
    "1396": {
      "op": "SWAP2"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1403": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1404": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1406": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1407": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1408": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SUB",
      "path": "46"
    },
    "1409": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SUB",
      "path": "46"
    },
    "1410": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1411": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1412": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1413": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1415": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10122,
        10305
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1416": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1417": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1418": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1419": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1421": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "ADD",
      "path": "46"
    },
    "1422": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10099,
        10315
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1423": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10315
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1424": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10081,
        10315
      ],
      "op": "POP",
      "path": "46"
    },
    "1425": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10342
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1427": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10386,
        10402
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1428": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10404,
        10411
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1429": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1431": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1432": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1434": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "ADD",
      "path": "46"
    },
    "1435": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x5A5"
    },
    "1438": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "1439": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1440": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1441": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DD1"
    },
    "1444": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10356,
        10413
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1445": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1446": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1448": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1449": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1451": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1452": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1453": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SUB",
      "path": "46"
    },
    "1454": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SUB",
      "path": "46"
    },
    "1455": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1456": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1457": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1458": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1460": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10356,
        10413
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1461": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1462": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1463": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1464": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1466": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "ADD",
      "path": "46"
    },
    "1467": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10345,
        10415
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "1468": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10415
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1469": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10326,
        10415
      ],
      "op": "POP",
      "path": "46"
    },
    "1470": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10468
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 3,
      "value": "0x5C7"
    },
    "1473": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10446,
        10454
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1474": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10456,
        10466
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1475": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10444
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x378"
    },
    "1478": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "i",
      "offset": [
        10433,
        10468
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1479": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10433,
        10468
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1480": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        10426,
        10468
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "1481": {
      "fn": "CLHouseApi.SignerOCRequest",
      "offset": [
        9580,
        10475
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "op": "POP"
    },
    "1485": {
      "op": "POP"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "op": "POP"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "fn": "CLHouseApi.SignerOCRequest",
      "jump": "o",
      "offset": [
        9580,
        10475
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1491": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1492": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1494": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1495": {
      "op": "PUSH4",
      "value": "0x1C3FE463"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1504": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "op": "SUB"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "DUP2"
    },
    "1515": {
      "op": "AND"
    },
    "1516": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1518": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1519": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1523": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1653,
        1671
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1524": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1526": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1527": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1528": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1529": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1530": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1531": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "DUP8",
      "path": "46"
    },
    "1532": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1803,
        1813
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1533": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1534": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1685,
        1697
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1535": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1536": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "AND",
      "path": "46"
    },
    "1537": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1538": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x70FF918C"
    },
    "1543": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1856
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1549": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1551": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1552": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1553": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1554": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SUB",
      "path": "46"
    },
    "1555": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1556": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1557": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "GAS",
      "path": "46"
    },
    "1558": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1559": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1560": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1561": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1562": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x627"
    },
    "1565": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1566": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1567": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1569": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1570": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1571": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1572": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1574": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1575": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1576": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1577": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1578": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1579": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1580": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1582": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1583": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1584": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1586": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "NOT",
      "path": "46"
    },
    "1587": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1589": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1590": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1591": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "AND",
      "path": "46"
    },
    "1592": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1593": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1594": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1595": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1597": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1598": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "POP",
      "path": "46"
    },
    "1599": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1600": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "ADD",
      "path": "46"
    },
    "1601": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1602": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x64B"
    },
    "1605": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1606": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1607": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "1610": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1611": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1840,
        1871
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1612": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1826,
        1871
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1891,
        1899
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 4
    },
    "1615": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x690"
    },
    "1618": {
      "branch": 18,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1619": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1621": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1630": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1633": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1635": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1636": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "ADD",
      "path": "46"
    },
    "1637": {
      "op": "MSTORE"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1642": {
      "op": "DUP3"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "op": "MSTORE"
    },
    "1645": {
      "op": "PUSH19",
      "value": "0x41646472657373206E6F742065786973742121"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1667": {
      "op": "SHL"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1670": {
      "op": "DUP3"
    },
    "1671": {
      "op": "ADD"
    },
    "1672": {
      "op": "MSTORE"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3BE"
    },
    "1679": {
      "op": "JUMP"
    },
    "1680": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1882,
        1925
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1681": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x698"
    },
    "1684": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1534"
    },
    "1687": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1688": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1936,
        1960
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1689": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 5,
      "value": "0x40"
    },
    "1691": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1692": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1701": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1702": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1704": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1705": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1706": {
      "op": "DUP4"
    },
    "1707": {
      "op": "SWAP1"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1715": {
      "op": "SHL"
    },
    "1716": {
      "op": "SUB"
    },
    "1717": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1718": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "AND",
      "path": "46"
    },
    "1719": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1720": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "1725": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2137
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1728": {
      "op": "ADD"
    },
    "1729": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1731": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1733": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1734": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1735": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1736": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SUB",
      "path": "46"
    },
    "1737": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1738": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1739": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "GAS",
      "path": "46"
    },
    "1740": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "1741": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1742": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1743": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1744": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x6DD"
    },
    "1747": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1748": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1749": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1751": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1752": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1753": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1754": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1756": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "REVERT",
      "path": "46"
    },
    "1757": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1758": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1759": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1760": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1761": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "POP",
      "path": "46"
    },
    "1762": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1764": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1765": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1766": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1768": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1769": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "1770": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "1772": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "1773": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1774": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1775": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1778": {
      "op": "NOT"
    },
    "1779": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "1780": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1781": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1782": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1784": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1785": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x705"
    },
    "1788": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1789": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1790": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1791": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "ADD",
      "path": "46"
    },
    "1792": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1793": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1E52"
    },
    "1796": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "i",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1797": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2122,
        2144
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1798": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1799": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1800": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "1802": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "DUP7",
      "path": "46"
    },
    "1803": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2098,
        2117
      ],
      "op": "ADD",
      "path": "46"
    },
    "1804": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1805": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1806": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "1807": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1809": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1810": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2068,
        2084
      ],
      "op": "ADD",
      "path": "46"
    },
    "1811": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1812": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1813": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1814": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1816": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "DUP6",
      "path": "46"
    },
    "1817": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2037,
        2054
      ],
      "op": "ADD",
      "path": "46"
    },
    "1818": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1819": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1820": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1821": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1822": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "1824": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "DUP5",
      "path": "46"
    },
    "1825": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2009,
        2023
      ],
      "op": "ADD",
      "path": "46"
    },
    "1826": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1827": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1828": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1829": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1839": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1840": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "AND",
      "path": "46"
    },
    "1841": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1842": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1971,
        2144
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1843": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2168
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 6,
      "value": "0x1"
    },
    "1845": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2164,
        2188
      ],
      "op": "EQ",
      "path": "46"
    },
    "1846": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x771"
    },
    "1849": {
      "branch": 19,
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "1850": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1852": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1861": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1864": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1866": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1867": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "ADD",
      "path": "46"
    },
    "1868": {
      "op": "MSTORE"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1873": {
      "op": "DUP3"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "PUSH13",
      "value": "0x24B9903737BA1030903AB9B2B9"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1895": {
      "op": "DUP3"
    },
    "1896": {
      "op": "ADD"
    },
    "1897": {
      "op": "MSTORE"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1900": {
      "op": "ADD"
    },
    "1901": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x3BE"
    },
    "1904": {
      "op": "JUMP"
    },
    "1905": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2155,
        2209
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1906": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 7,
      "value": "0x20"
    },
    "1908": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1909": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "ADD",
      "path": "46"
    },
    "1910": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1911": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1913": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "DUP3",
      "path": "46"
    },
    "1914": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "ADD",
      "path": "46"
    },
    "1915": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1916": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1918": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "DUP4",
      "path": "46"
    },
    "1919": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "ADD",
      "path": "46"
    },
    "1920": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1921": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "1923": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1924": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "1925": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "ADD",
      "path": "46"
    },
    "1926": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1927": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1928": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2241,
        2255
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "1929": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1930": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2269,
        2286
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "1933": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2300,
        2316
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        2330,
        2349
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "offset": [
        1501,
        2366
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "1938": {
      "op": "POP"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "CLHouseApi.GetUserInfoByAddress",
      "jump": "o",
      "offset": [
        1501,
        2366
      ],
      "op": "JUMP",
      "path": "46"
    },
    "1944": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "1945": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4181,
        4205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "1947": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4219,
        4249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1949": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4263,
        4280
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1950": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4294,
        4308
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1952": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4322,
        4338
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1953": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4352,
        4371
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1955": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4385,
        4416
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1956": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4430,
        4453
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1958": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4467,
        4493
      ],
      "op": "DUP1",
      "path": "46"
    },
    "1959": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4533
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1961": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4546,
        4556
      ],
      "op": "DUP11",
      "path": "46"
    },
    "1962": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "1963": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4518,
        4558
      ],
      "op": "POP",
      "path": "46"
    },
    "1964": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4595
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 8
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "AND",
      "path": "46"
    },
    "1974": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4606
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x59CA2D03"
    },
    "1979": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "1981": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "1982": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1983": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "1988": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "1989": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "1991": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SHL",
      "path": "46"
    },
    "1992": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "1993": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "1994": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "1996": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "1997": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "1999": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2001": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2002": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2003": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2004": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SUB",
      "path": "46"
    },
    "2005": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2006": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2007": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "GAS",
      "path": "46"
    },
    "2008": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2009": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2010": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2011": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2012": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x7E9"
    },
    "2015": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2016": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2017": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2019": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2020": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2021": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2022": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2024": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2025": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2026": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2027": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2028": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2029": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "POP",
      "path": "46"
    },
    "2030": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2032": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2033": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2034": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2036": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2037": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2038": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2040": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2041": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2042": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2043": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2046": {
      "op": "NOT"
    },
    "2047": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "AND",
      "path": "46"
    },
    "2048": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2049": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2050": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2052": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2053": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x811"
    },
    "2056": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2057": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2058": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2059": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "ADD",
      "path": "46"
    },
    "2060": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2061": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1ED4"
    },
    "2064": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2065": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4589,
        4608
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2066": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4628
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "op": "SUB"
    },
    "2075": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "AND",
      "path": "46"
    },
    "2076": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4651
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1D5FD3CA"
    },
    "2081": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2083": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2084": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2085": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2090": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2091": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2093": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SHL",
      "path": "46"
    },
    "2094": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2095": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2096": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2098": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2099": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2101": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2103": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2104": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2105": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2106": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SUB",
      "path": "46"
    },
    "2107": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2108": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2109": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "GAS",
      "path": "46"
    },
    "2110": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2111": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2112": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2113": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2114": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x84F"
    },
    "2117": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2118": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2119": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2121": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2122": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2123": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2124": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2126": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2127": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2128": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2129": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2130": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2131": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2132": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2134": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2135": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2136": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2138": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "NOT",
      "path": "46"
    },
    "2139": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2141": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2142": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2143": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "AND",
      "path": "46"
    },
    "2144": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2145": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2146": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2147": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2149": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2150": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "POP",
      "path": "46"
    },
    "2151": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2152": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "ADD",
      "path": "46"
    },
    "2153": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2154": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x873"
    },
    "2157": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2158": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2159": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "2162": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2163": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4622,
        4653
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2164": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4673
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2171": {
      "op": "SHL"
    },
    "2172": {
      "op": "SUB"
    },
    "2173": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "AND",
      "path": "46"
    },
    "2174": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4686
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xF00D6274"
    },
    "2179": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2181": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2182": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2183": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2188": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2189": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2191": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SHL",
      "path": "46"
    },
    "2192": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2193": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2194": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2196": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2197": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2199": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2201": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2202": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2203": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2204": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SUB",
      "path": "46"
    },
    "2205": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2206": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2207": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "GAS",
      "path": "46"
    },
    "2208": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2209": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2210": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2211": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2212": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8B1"
    },
    "2215": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2216": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2217": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2219": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2220": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2221": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2222": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2224": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2225": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2226": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2227": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2228": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2229": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2230": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2232": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2233": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2234": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2236": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "NOT",
      "path": "46"
    },
    "2237": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2239": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2240": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2241": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "AND",
      "path": "46"
    },
    "2242": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2243": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2244": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2245": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2247": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2248": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "POP",
      "path": "46"
    },
    "2249": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2250": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "ADD",
      "path": "46"
    },
    "2251": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2252": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x8D5"
    },
    "2255": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2256": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2257": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F08"
    },
    "2260": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2261": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4667,
        4688
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2262": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4708
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "AND",
      "path": "46"
    },
    "2272": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4718
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1F2E1339"
    },
    "2277": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2279": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2280": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2281": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2286": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2287": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2289": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SHL",
      "path": "46"
    },
    "2290": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2291": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2292": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2294": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2295": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2297": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2299": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2300": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2301": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2302": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SUB",
      "path": "46"
    },
    "2303": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2304": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2305": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "GAS",
      "path": "46"
    },
    "2306": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2307": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2308": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2309": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2310": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x913"
    },
    "2313": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2314": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2315": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2317": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2318": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2319": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2320": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2322": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2323": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2324": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2325": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2326": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2327": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2328": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2330": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2331": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2332": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2334": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "NOT",
      "path": "46"
    },
    "2335": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2337": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2338": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2339": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "AND",
      "path": "46"
    },
    "2340": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2341": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2342": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2343": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2345": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2346": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "POP",
      "path": "46"
    },
    "2347": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2348": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "ADD",
      "path": "46"
    },
    "2349": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2350": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x937"
    },
    "2353": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2354": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2355": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F08"
    },
    "2358": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2359": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4702,
        4720
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2360": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4740
      ],
      "op": "DUP5",
      "path": "46"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "SUB"
    },
    "2369": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "AND",
      "path": "46"
    },
    "2370": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4749
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "2375": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2377": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2378": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2379": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2384": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "2385": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2387": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SHL",
      "path": "46"
    },
    "2388": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2389": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2390": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2392": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2393": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2395": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2397": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2398": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2399": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2400": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SUB",
      "path": "46"
    },
    "2401": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2402": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2403": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "GAS",
      "path": "46"
    },
    "2404": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2405": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2406": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2407": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2408": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x975"
    },
    "2411": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2412": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2413": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2415": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2416": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2417": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2418": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2420": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2421": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2422": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2423": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2424": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2425": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2426": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2428": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2429": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2430": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2432": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "NOT",
      "path": "46"
    },
    "2433": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2435": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2436": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2437": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "AND",
      "path": "46"
    },
    "2438": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2439": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2440": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2441": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2443": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2444": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "POP",
      "path": "46"
    },
    "2445": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2446": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "ADD",
      "path": "46"
    },
    "2447": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2448": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x999"
    },
    "2451": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2452": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2453": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "2456": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2457": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4734,
        4751
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2458": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4771
      ],
      "op": "DUP6",
      "path": "46"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "AND",
      "path": "46"
    },
    "2468": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4783
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE68777D7"
    },
    "2473": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2475": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2476": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2477": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2482": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "2483": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2485": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SHL",
      "path": "46"
    },
    "2486": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2487": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2488": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2490": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2491": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2493": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2495": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2496": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2497": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2498": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SUB",
      "path": "46"
    },
    "2499": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2500": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2501": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "GAS",
      "path": "46"
    },
    "2502": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2503": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2504": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2505": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2506": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9D7"
    },
    "2509": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2510": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2511": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2513": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2514": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2515": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2516": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2518": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2519": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2520": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2521": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2522": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2523": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2524": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2526": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2527": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2528": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2530": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "NOT",
      "path": "46"
    },
    "2531": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2533": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2534": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2535": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "AND",
      "path": "46"
    },
    "2536": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2537": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2538": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2539": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2541": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2542": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "POP",
      "path": "46"
    },
    "2543": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2544": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "ADD",
      "path": "46"
    },
    "2545": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2546": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x9FB"
    },
    "2549": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2550": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2551": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "2554": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2555": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4765,
        4785
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2556": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4805
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2563": {
      "op": "SHL"
    },
    "2564": {
      "op": "SUB"
    },
    "2565": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "AND",
      "path": "46"
    },
    "2566": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x9C630A88"
    },
    "2571": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2573": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2574": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2575": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2580": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "2581": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2583": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SHL",
      "path": "46"
    },
    "2584": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2585": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2586": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2588": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2589": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2591": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2593": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2594": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2595": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2596": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SUB",
      "path": "46"
    },
    "2597": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2598": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2599": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "GAS",
      "path": "46"
    },
    "2600": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2601": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2602": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2603": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2604": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA39"
    },
    "2607": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2608": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2609": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2611": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2612": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2613": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2614": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2616": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2617": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2618": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2619": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2620": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2621": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2622": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2624": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2625": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2626": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2628": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "NOT",
      "path": "46"
    },
    "2629": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2631": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2632": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2633": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "AND",
      "path": "46"
    },
    "2634": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2635": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2636": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2637": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2639": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2640": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "POP",
      "path": "46"
    },
    "2641": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2642": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "ADD",
      "path": "46"
    },
    "2643": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2644": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA5D"
    },
    "2647": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2648": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2649": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "2652": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2653": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4799,
        4831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2654": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4851
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "AND",
      "path": "46"
    },
    "2664": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4867
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x1343E9A5"
    },
    "2669": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2671": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2672": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2673": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2678": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "2679": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2681": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SHL",
      "path": "46"
    },
    "2682": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2683": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2684": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2686": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2687": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2689": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2691": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2692": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2693": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2694": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SUB",
      "path": "46"
    },
    "2695": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2696": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2697": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "GAS",
      "path": "46"
    },
    "2698": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2699": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2700": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2701": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2702": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xA9B"
    },
    "2705": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2706": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2707": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2709": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2710": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2711": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2712": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2714": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2715": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2716": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2717": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2718": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2719": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2720": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2722": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2723": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2724": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2726": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "NOT",
      "path": "46"
    },
    "2727": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2729": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2730": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2731": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "AND",
      "path": "46"
    },
    "2732": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2733": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2734": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2735": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2737": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2738": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "POP",
      "path": "46"
    },
    "2739": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2740": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "ADD",
      "path": "46"
    },
    "2741": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2742": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xABF"
    },
    "2745": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2746": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2747": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "2750": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2751": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4845,
        4869
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2752": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4889
      ],
      "op": "DUP9",
      "path": "46"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "op": "SUB"
    },
    "2761": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "AND",
      "path": "46"
    },
    "2762": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4908
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xE810A58E"
    },
    "2767": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2769": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2770": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2771": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "2776": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "2777": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "2779": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SHL",
      "path": "46"
    },
    "2780": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2781": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2782": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "2784": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2785": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2787": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2789": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2790": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2791": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2792": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SUB",
      "path": "46"
    },
    "2793": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2794": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP7",
      "path": "46"
    },
    "2795": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "GAS",
      "path": "46"
    },
    "2796": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "2797": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2798": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2799": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "2800": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xAFD"
    },
    "2803": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "2804": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2805": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2807": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2808": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "2809": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2810": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2812": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "REVERT",
      "path": "46"
    },
    "2813": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2814": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2815": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2816": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2817": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2818": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2820": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2821": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "2822": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2824": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "NOT",
      "path": "46"
    },
    "2825": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "2827": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2828": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2829": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "AND",
      "path": "46"
    },
    "2830": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP3",
      "path": "46"
    },
    "2831": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2832": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2833": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2835": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2836": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "POP",
      "path": "46"
    },
    "2837": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2838": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "ADD",
      "path": "46"
    },
    "2839": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2840": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB21"
    },
    "2843": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2844": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2845": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "2848": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "i",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2849": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4883,
        4910
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2850": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2851": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2852": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2853": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2854": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2855": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2856": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2857": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2858": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2859": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2860": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2861": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2862": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2863": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2864": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2865": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2866": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2867": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2868": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4569,
        4920
      ],
      "op": "POP",
      "path": "46"
    },
    "2869": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2870": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2871": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "2872": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "2873": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP10",
      "path": "46"
    },
    "2874": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2875": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2876": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2877": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "2878": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "SWAP9",
      "path": "46"
    },
    "2879": {
      "fn": "CLHouseApi.GetHouseProperties",
      "offset": [
        4060,
        4927
      ],
      "op": "POP",
      "path": "46"
    },
    "2880": {
      "fn": "CLHouseApi.GetHouseProperties",
      "jump": "o",
      "offset": [
        4060,
        4927
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2881": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5703,
        6607
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2882": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5915,
        5922
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "2884": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        5963
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2885": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2887": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2888": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2890": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "2891": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xB53"
    },
    "2894": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2895": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "2898": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "2899": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "2900": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2902": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2903": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2905": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2906": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "2907": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "2908": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "2909": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "2910": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2911": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2912": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "2914": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "2915": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "2916": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "2917": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "2918": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "2920": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "2921": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2924": {
      "op": "DUP1"
    },
    "2925": {
      "op": "MLOAD"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2928": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "2931": {
      "op": "DUP4"
    },
    "2932": {
      "op": "CODECOPY"
    },
    "2933": {
      "op": "DUP2"
    },
    "2934": {
      "op": "MLOAD"
    },
    "2935": {
      "op": "SWAP2"
    },
    "2936": {
      "op": "MSTORE"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2939": {
      "op": "DUP1"
    },
    "2940": {
      "op": "MLOAD"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2943": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "2946": {
      "op": "DUP4"
    },
    "2947": {
      "op": "CODECOPY"
    },
    "2948": {
      "op": "DUP2"
    },
    "2949": {
      "op": "MLOAD"
    },
    "2950": {
      "op": "SWAP2"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6143,
        6156
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "2953": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6174,
        6184
      ],
      "op": "DUP8",
      "path": "46"
    },
    "2954": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2956": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2957": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2959": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "ADD",
      "path": "46"
    },
    "2960": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xB9D"
    },
    "2963": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "2964": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "2965": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "2966": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "2967": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "2968": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2969": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "2972": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMP",
      "path": "46"
    },
    "2973": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "2974": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2976": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2977": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2979": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2980": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP4",
      "path": "46"
    },
    "2981": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "2982": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SUB",
      "path": "46"
    },
    "2983": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "DUP2",
      "path": "46"
    },
    "2984": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2985": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2986": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "2988": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5989,
        6198
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "2989": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "DUP1",
      "path": "46"
    },
    "2990": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "2991": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2992": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "2994": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "ADD",
      "path": "46"
    },
    "2995": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5966,
        6208
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "2996": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "2997": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        5939,
        6208
      ],
      "op": "POP",
      "path": "46"
    },
    "2998": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6219,
        6234
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3000": {
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3002": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3003": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3005": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "ADD",
      "path": "48"
    },
    "3006": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xC10"
    },
    "3009": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3010": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3043": {
      "op": "DUP2"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3080": {
      "op": "DUP3"
    },
    "3081": {
      "op": "ADD"
    },
    "3082": {
      "op": "MSTORE"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "op": "SWAP1"
    },
    "3087": {
      "op": "JUMP"
    },
    "3088": {
      "offset": [
        1007,
        1100
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3089": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3091": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3092": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3094": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3095": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3096": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SUB",
      "path": "48"
    },
    "3097": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SUB",
      "path": "48"
    },
    "3098": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3099": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3100": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3101": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3103": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1007,
        1100
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3104": {
      "offset": [
        992,
        1102
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3105": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3106": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3107": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3109": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "ADD",
      "path": "48"
    },
    "3110": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        992,
        1102
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3111": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6325,
        6332
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3112": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6350,
        6358
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3113": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6405,
        6419
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3114": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3116": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3117": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3119": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3120": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC39"
    },
    "3123": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3124": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3125": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "3128": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3129": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3130": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3132": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3133": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3136": {
      "op": "NOT"
    },
    "3137": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3138": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3139": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "SUB",
      "path": "46"
    },
    "3140": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "ADD",
      "path": "46"
    },
    "3141": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3142": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3143": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3144": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3145": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3146": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3147": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3148": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6387,
        6421
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3150": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3151": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3152": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "ADD",
      "path": "46"
    },
    "3153": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6376,
        6423
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3154": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3155": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3156": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "ADD",
      "path": "46"
    },
    "3157": {
      "op": "SWAP6"
    },
    "3158": {
      "op": "SWAP1"
    },
    "3159": {
      "op": "SWAP6"
    },
    "3160": {
      "op": "MSTORE"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "ADD"
    },
    "3163": {
      "op": "SWAP3"
    },
    "3164": {
      "op": "SWAP1"
    },
    "3165": {
      "op": "SWAP3"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "ISZERO"
    },
    "3168": {
      "op": "ISZERO"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3171": {
      "op": "DUP3"
    },
    "3172": {
      "op": "ADD"
    },
    "3173": {
      "op": "MSTORE"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3176": {
      "op": "DUP2"
    },
    "3177": {
      "op": "ADD"
    },
    "3178": {
      "op": "SWAP2"
    },
    "3179": {
      "op": "SWAP1"
    },
    "3180": {
      "op": "SWAP2"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        6260,
        6437
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x31C"
    },
    "3188": {
      "op": "JUMP"
    },
    "3189": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3190": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5090,
        5097
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3192": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5138
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3193": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3195": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3196": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3198": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "3199": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xC87"
    },
    "3202": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3203": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "3206": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "3207": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3208": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3210": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3211": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3213": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3214": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3215": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "3216": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "3217": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3218": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3219": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3220": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3222": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3223": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3224": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3225": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3226": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3228": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "3229": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3232": {
      "op": "DUP1"
    },
    "3233": {
      "op": "MLOAD"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "3239": {
      "op": "DUP4"
    },
    "3240": {
      "op": "CODECOPY"
    },
    "3241": {
      "op": "DUP2"
    },
    "3242": {
      "op": "MLOAD"
    },
    "3243": {
      "op": "SWAP2"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3247": {
      "op": "DUP1"
    },
    "3248": {
      "op": "MLOAD"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3251": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "3254": {
      "op": "DUP4"
    },
    "3255": {
      "op": "CODECOPY"
    },
    "3256": {
      "op": "DUP2"
    },
    "3257": {
      "op": "MLOAD"
    },
    "3258": {
      "op": "SWAP2"
    },
    "3259": {
      "op": "MSTORE"
    },
    "3260": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5318,
        5331
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "3261": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5349,
        5359
      ],
      "op": "DUP8",
      "path": "46"
    },
    "3262": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3264": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3265": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3267": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "ADD",
      "path": "46"
    },
    "3268": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xCD1"
    },
    "3271": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "3272": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "3273": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "3274": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3275": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3276": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3277": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "3280": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3281": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3282": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3284": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3285": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3287": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3288": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3289": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "3290": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SUB",
      "path": "46"
    },
    "3291": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3292": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3293": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3294": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3296": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5164,
        5373
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3297": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3298": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3299": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3300": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3302": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "ADD",
      "path": "46"
    },
    "3303": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5141,
        5383
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3304": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3305": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5114,
        5383
      ],
      "op": "POP",
      "path": "46"
    },
    "3306": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5394,
        5409
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3308": {
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3310": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3311": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3313": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "ADD",
      "path": "48"
    },
    "3314": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xD1E"
    },
    "3317": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3318": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E6365290000000000"
    },
    "3351": {
      "op": "DUP2"
    },
    "3352": {
      "op": "MSTORE"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3355": {
      "op": "ADD"
    },
    "3356": {
      "op": "SWAP1"
    },
    "3357": {
      "op": "JUMP"
    },
    "3358": {
      "offset": [
        888,
        949
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "3359": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "3361": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3362": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3363": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3364": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP4",
      "path": "48"
    },
    "3365": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "SUB",
      "path": "48"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3368": {
      "op": "NOT"
    },
    "3369": {
      "offset": [
        888,
        949
      ],
      "op": "ADD",
      "path": "48"
    },
    "3370": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP2",
      "path": "48"
    },
    "3371": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3372": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3373": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3374": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        888,
        949
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "3375": {
      "offset": [
        873,
        951
      ],
      "op": "DUP1",
      "path": "48"
    },
    "3376": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "3377": {
      "offset": [
        888,
        949
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "3379": {
      "offset": [
        873,
        951
      ],
      "op": "SWAP2",
      "path": "48"
    },
    "3380": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "DUP3",
      "path": "48"
    },
    "3381": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "ADD",
      "path": "48"
    },
    "3382": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        873,
        951
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "3383": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3384": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3385": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "3386": {
      "op": "MSTORE"
    },
    "3387": {
      "op": "DUP9"
    },
    "3388": {
      "op": "ISZERO"
    },
    "3389": {
      "op": "ISZERO"
    },
    "3390": {
      "op": "DUP4"
    },
    "3391": {
      "op": "DUP4"
    },
    "3392": {
      "op": "ADD"
    },
    "3393": {
      "op": "MSTORE"
    },
    "3394": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3395": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3396": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3397": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3398": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SUB",
      "path": "46"
    },
    "3399": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3400": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "ADD",
      "path": "46"
    },
    "3401": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3402": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3405": {
      "op": "DUP5"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3408": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "3409": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5435,
        5526
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3410": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3411": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3412": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3413": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "ADD",
      "path": "46"
    },
    "3414": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3415": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3419": {
      "op": "SWAP1"
    },
    "3420": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xD6B"
    },
    "3423": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3424": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3425": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5607,
        5623
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3426": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3427": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5412,
        5536
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3428": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "3430": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "ADD",
      "path": "46"
    },
    "3431": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DD1"
    },
    "3434": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3435": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3436": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3438": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3439": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3441": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3442": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3443": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "3444": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SUB",
      "path": "46"
    },
    "3445": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3446": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3447": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3448": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3450": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5577,
        5634
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3451": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3452": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3453": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3454": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3456": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "ADD",
      "path": "46"
    },
    "3457": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5566,
        5636
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "3458": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3459": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5547,
        5636
      ],
      "op": "POP",
      "path": "46"
    },
    "3460": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 9,
      "value": "0xD8D"
    },
    "3463": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5667,
        5675
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3464": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5677,
        5687
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3465": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x378"
    },
    "3468": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3469": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5654,
        5689
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3470": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        5647,
        5689
      ],
      "op": "SWAP8",
      "path": "46"
    },
    "3471": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        4934,
        5696
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "3472": {
      "op": "POP"
    },
    "3473": {
      "op": "POP"
    },
    "3474": {
      "op": "POP"
    },
    "3475": {
      "op": "POP"
    },
    "3476": {
      "op": "POP"
    },
    "3477": {
      "op": "POP"
    },
    "3478": {
      "op": "POP"
    },
    "3479": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "o",
      "offset": [
        4934,
        5696
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3480": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3481": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2632,
        2657
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "3483": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3485": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2710,
        2720
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3486": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3487": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2682,
        2722
      ],
      "op": "POP",
      "path": "46"
    },
    "3488": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2749
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3490": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2758
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3497": {
      "op": "SHL"
    },
    "3498": {
      "op": "SUB"
    },
    "3499": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "AND",
      "path": "46"
    },
    "3500": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2767
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x19A50F49"
    },
    "3505": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3507": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3508": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3509": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3514": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "3515": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3517": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SHL",
      "path": "46"
    },
    "3518": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3519": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3520": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3522": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3523": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3525": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3527": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3528": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3529": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3530": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SUB",
      "path": "46"
    },
    "3531": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3532": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3533": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "GAS",
      "path": "46"
    },
    "3534": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3535": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3536": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3537": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3538": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xDDF"
    },
    "3541": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3542": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3543": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3545": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3546": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3547": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3548": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3550": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3551": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3552": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3553": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3554": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3555": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3556": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3558": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3559": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3560": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3562": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "NOT",
      "path": "46"
    },
    "3563": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3565": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3566": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3567": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "AND",
      "path": "46"
    },
    "3568": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3569": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3570": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3571": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3573": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3574": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3575": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3576": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "ADD",
      "path": "46"
    },
    "3577": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3578": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE03"
    },
    "3581": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3582": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3583": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "3586": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3587": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2752,
        2770
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3588": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3589": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2733,
        2770
      ],
      "op": "POP",
      "path": "46"
    },
    "3590": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2802
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3592": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2811
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3599": {
      "op": "SHL"
    },
    "3600": {
      "op": "SUB"
    },
    "3601": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "AND",
      "path": "46"
    },
    "3602": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2829
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xA693649A"
    },
    "3607": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3609": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3610": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3611": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0xFFFFFFFF"
    },
    "3616": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "3617": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0xE0"
    },
    "3619": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SHL",
      "path": "46"
    },
    "3620": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3621": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3622": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3624": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3625": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3627": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3629": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3630": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3631": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3632": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SUB",
      "path": "46"
    },
    "3633": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3634": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3635": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "GAS",
      "path": "46"
    },
    "3636": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3637": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3638": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3639": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3640": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE45"
    },
    "3643": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3644": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3645": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3647": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3648": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3649": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3650": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3652": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3653": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3654": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3655": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3656": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3657": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3658": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3660": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3661": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3662": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3664": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "NOT",
      "path": "46"
    },
    "3665": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3667": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3668": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3669": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "46"
    },
    "3670": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3671": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3672": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3673": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3675": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3676": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3677": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3678": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "46"
    },
    "3679": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3680": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE69"
    },
    "3683": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3684": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3685": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DEC"
    },
    "3688": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3689": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3690": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3691": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2780,
        2831
      ],
      "op": "POP",
      "path": "46"
    },
    "3692": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2867
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3694": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2886,
        2894
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3704": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "GT",
      "path": "46"
    },
    "3705": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3706": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE85"
    },
    "3709": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3710": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xE85"
    },
    "3713": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1598"
    },
    "3716": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3717": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3718": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3720": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3721": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3722": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3723": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3724": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3725": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3726": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3728": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MUL",
      "path": "46"
    },
    "3729": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3731": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3732": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3733": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3734": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3736": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3737": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3738": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3739": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEBE"
    },
    "3742": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3743": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3744": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3746": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3747": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3748": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEAB"
    },
    "3751": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1534"
    },
    "3754": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3755": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3756": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3757": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3758": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3760": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "ADD",
      "path": "46"
    },
    "3761": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3762": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "3764": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3765": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SUB",
      "path": "46"
    },
    "3766": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3767": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3768": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEA3"
    },
    "3771": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3772": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3773": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "POP",
      "path": "46"
    },
    "3774": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2870,
        2896
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2841,
        2896
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3777": {
      "op": "POP"
    },
    "3778": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2907,
        2920
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3780": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2955,
        2956
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "3782": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3783": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2965,
        2979
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3784": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2962
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3785": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2959,
        2979
      ],
      "op": "LT",
      "path": "46"
    },
    "3786": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3787": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFB8"
    },
    "3790": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3791": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xED6"
    },
    "3794": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1534"
    },
    "3797": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3798": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3004,
        3028
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3799": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 10,
      "value": "0x40"
    },
    "3801": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3802": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3809": {
      "op": "SHL"
    },
    "3810": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3811": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3812": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "3814": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3815": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3816": {
      "op": "DUP4"
    },
    "3817": {
      "op": "SWAP1"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "op": "SUB"
    },
    "3827": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "DUP9",
      "path": "46"
    },
    "3828": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "AND",
      "path": "46"
    },
    "3829": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3830": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "PUSH4",
      "path": "46",
      "value": "0x22B4081C"
    },
    "3835": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3225
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3838": {
      "op": "ADD"
    },
    "3839": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3841": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3843": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3844": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3845": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP4",
      "path": "46"
    },
    "3846": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SUB",
      "path": "46"
    },
    "3847": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3848": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3849": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "GAS",
      "path": "46"
    },
    "3850": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "STATICCALL",
      "path": "46"
    },
    "3851": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3852": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3853": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3854": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF1B"
    },
    "3857": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3858": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3859": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3861": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3862": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3863": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3864": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3866": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "REVERT",
      "path": "46"
    },
    "3867": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3868": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3869": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3870": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3871": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "POP",
      "path": "46"
    },
    "3872": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3874": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3875": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3876": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "3878": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3879": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "3880": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "3882": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "3883": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3884": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3885": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3888": {
      "op": "NOT"
    },
    "3889": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "3890": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3891": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3892": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3894": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3895": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF43"
    },
    "3898": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3899": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3900": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3901": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "ADD",
      "path": "46"
    },
    "3902": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3903": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1E52"
    },
    "3906": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3907": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3210,
        3232
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3908": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3909": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3910": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x80"
    },
    "3912": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "DUP7",
      "path": "46"
    },
    "3913": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3186,
        3205
      ],
      "op": "ADD",
      "path": "46"
    },
    "3914": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3915": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3916": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3917": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "3919": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3920": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3152,
        3168
      ],
      "op": "ADD",
      "path": "46"
    },
    "3921": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3922": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3923": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3924": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "3926": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "DUP6",
      "path": "46"
    },
    "3927": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3117,
        3134
      ],
      "op": "ADD",
      "path": "46"
    },
    "3928": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3929": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3930": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3931": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3932": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3934": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3935": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3085,
        3099
      ],
      "op": "ADD",
      "path": "46"
    },
    "3936": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3937": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3938": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3939": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3946": {
      "op": "SHL"
    },
    "3947": {
      "op": "SUB"
    },
    "3948": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3949": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "3950": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "AND",
      "path": "46"
    },
    "3951": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "DUP3",
      "path": "46"
    },
    "3952": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3043,
        3232
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3953": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3255
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "3955": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3251,
        3275
      ],
      "op": "EQ",
      "path": "46"
    },
    "3956": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "3957": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFA5"
    },
    "3960": {
      "branch": 20,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3961": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3316,
        3325
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 11
    },
    "3962": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3963": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3306,
        3311
      ],
      "op": "DUP5",
      "path": "46"
    },
    "3964": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3965": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "3966": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3967": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "LT",
      "path": "46"
    },
    "3968": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF8B"
    },
    "3971": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "3972": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xF8B"
    },
    "3975": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F25"
    },
    "3978": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMP",
      "path": "46"
    },
    "3979": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "3980": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3982": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "MUL",
      "path": "46"
    },
    "3983": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "3985": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "3986": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3313
      ],
      "op": "ADD",
      "path": "46"
    },
    "3987": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "DUP2",
      "path": "46"
    },
    "3988": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3989": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "3990": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3295,
        3325
      ],
      "op": "POP",
      "path": "46"
    },
    "3991": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP3",
      "path": "46",
      "statement": 12
    },
    "3992": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "DUP1",
      "path": "46"
    },
    "3993": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFA1"
    },
    "3996": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "3997": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F3B"
    },
    "4000": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4001": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4002": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4003": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "4004": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3343,
        3350
      ],
      "op": "POP",
      "path": "46"
    },
    "4005": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3247,
        3365
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4006": {
      "op": "POP"
    },
    "4007": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP1",
      "path": "46",
      "statement": 13
    },
    "4008": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xFB0"
    },
    "4011": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4012": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F3B"
    },
    "4015": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4016": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4017": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4018": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "4019": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2982,
        2987
      ],
      "op": "POP",
      "path": "46"
    },
    "4020": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xEC6"
    },
    "4023": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4024": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2936,
        3375
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP1",
      "path": "46",
      "statement": 14
    },
    "4027": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        3391,
        3400
      ],
      "op": "SWAP7",
      "path": "46"
    },
    "4028": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2513,
        3407
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "o",
      "offset": [
        2513,
        3407
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4036": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4037": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10873,
        10880
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4039": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10897,
        10921
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4040": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4042": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4043": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4045": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "4046": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0xFD6"
    },
    "4049": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4050": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "4053": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4054": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4055": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4057": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4058": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4060": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4061": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4062": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4063": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4064": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4065": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4066": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4067": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4069": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4070": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4071": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4072": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4073": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4075": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "4076": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4079": {
      "op": "DUP1"
    },
    "4080": {
      "op": "MLOAD"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "4086": {
      "op": "DUP4"
    },
    "4087": {
      "op": "CODECOPY"
    },
    "4088": {
      "op": "DUP2"
    },
    "4089": {
      "op": "MLOAD"
    },
    "4090": {
      "op": "SWAP2"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4094": {
      "op": "DUP1"
    },
    "4095": {
      "op": "MLOAD"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4098": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "4101": {
      "op": "DUP4"
    },
    "4102": {
      "op": "CODECOPY"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "MLOAD"
    },
    "4105": {
      "op": "SWAP2"
    },
    "4106": {
      "op": "MSTORE"
    },
    "4107": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11101,
        11114
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "4108": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11132,
        11140
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4109": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4111": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4112": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4114": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "ADD",
      "path": "46"
    },
    "4115": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1020"
    },
    "4118": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4119": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4120": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4121": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4122": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4123": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4124": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "4127": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10947,
        11154
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4128": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4129": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4131": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4132": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4134": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4135": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4136": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SUB",
      "path": "46"
    },
    "4137": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SUB",
      "path": "46"
    },
    "4138": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4139": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4140": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4141": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4143": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10947,
        11154
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4144": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10924,
        11164
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4145": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10924,
        11164
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4146": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10924,
        11164
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4147": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10924,
        11164
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4149": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10924,
        11164
      ],
      "op": "ADD",
      "path": "46"
    },
    "4150": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10924,
        11164
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4151": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10897,
        11164
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4152": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10897,
        11164
      ],
      "op": "POP",
      "path": "46"
    },
    "4153": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11175,
        11190
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4155": {
      "offset": [
        1816,
        2037
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4157": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4158": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4160": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "ADD",
      "path": "48"
    },
    "4161": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x112B"
    },
    "4164": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4165": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "4198": {
      "op": "DUP2"
    },
    "4199": {
      "op": "MSTORE"
    },
    "4200": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C6279"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4235": {
      "op": "DUP3"
    },
    "4236": {
      "op": "ADD"
    },
    "4237": {
      "op": "MSTORE"
    },
    "4238": {
      "op": "PUSH32",
      "value": "0x746573333220676F764D6F64656C2C75696E7432353620676F7652756C654D61"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "MSTORE"
    },
    "4276": {
      "op": "PUSH32",
      "value": "0x7855736572732C75696E7432353620676F7652756C654D61784D616E61676572"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "op": "PUSH32",
      "value": "0x732C75696E7432353620676F7652756C65417070726F7650657263656E746167"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH32",
      "value": "0x652C616464726573732077686974654C69737457616C6C657473290000000000"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4387": {
      "op": "DUP3"
    },
    "4388": {
      "op": "ADD"
    },
    "4389": {
      "op": "MSTORE"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "SWAP1"
    },
    "4394": {
      "op": "JUMP"
    },
    "4395": {
      "offset": [
        1816,
        2037
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4396": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4398": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4399": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4401": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4402": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4403": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "SUB",
      "path": "48"
    },
    "4404": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "SUB",
      "path": "48"
    },
    "4405": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4406": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4407": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4408": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4410": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1816,
        2037
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4411": {
      "offset": [
        1801,
        2039
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4412": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1801,
        2039
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4413": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1801,
        2039
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4414": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1801,
        2039
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4416": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1801,
        2039
      ],
      "op": "ADD",
      "path": "48"
    },
    "4417": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1801,
        2039
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4418": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11312,
        11322
      ],
      "op": "DUP14",
      "path": "46"
    },
    "4419": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4421": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4422": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4424": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "ADD",
      "path": "46"
    },
    "4425": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1152"
    },
    "4428": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4429": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4430": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "4433": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11294,
        11324
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4434": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4435": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4437": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4438": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4441": {
      "op": "NOT"
    },
    "4442": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4443": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "DUP5",
      "path": "46"
    },
    "4444": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "SUB",
      "path": "46"
    },
    "4445": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "ADD",
      "path": "46"
    },
    "4446": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4447": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4448": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4449": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4450": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4451": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11283,
        11326
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4452": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11283,
        11326
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4453": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11294,
        11324
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4455": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11283,
        11326
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4456": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11283,
        11326
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4457": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11283,
        11326
      ],
      "op": "ADD",
      "path": "46"
    },
    "4458": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11283,
        11326
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4459": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4460": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4461": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "ADD",
      "path": "46"
    },
    "4462": {
      "op": "SWAP4"
    },
    "4463": {
      "op": "SWAP1"
    },
    "4464": {
      "op": "SWAP4"
    },
    "4465": {
      "op": "MSTORE"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "op": "SWAP2"
    },
    "4469": {
      "op": "SWAP1"
    },
    "4470": {
      "op": "SWAP2"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "DUP13"
    },
    "4473": {
      "op": "ISZERO"
    },
    "4474": {
      "op": "ISZERO"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "DUP12"
    },
    "4481": {
      "op": "ISZERO"
    },
    "4482": {
      "op": "ISZERO"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4485": {
      "op": "DUP3"
    },
    "4486": {
      "op": "ADD"
    },
    "4487": {
      "op": "MSTORE"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4490": {
      "op": "DUP2"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "DUP12"
    },
    "4493": {
      "op": "SWAP1"
    },
    "4494": {
      "op": "MSTORE"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4497": {
      "op": "DUP2"
    },
    "4498": {
      "op": "ADD"
    },
    "4499": {
      "op": "DUP11"
    },
    "4500": {
      "op": "SWAP1"
    },
    "4501": {
      "op": "MSTORE"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4504": {
      "op": "DUP2"
    },
    "4505": {
      "op": "ADD"
    },
    "4506": {
      "op": "DUP10"
    },
    "4507": {
      "op": "SWAP1"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4512": {
      "op": "DUP2"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "DUP9"
    },
    "4515": {
      "op": "SWAP1"
    },
    "4516": {
      "op": "MSTORE"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4523": {
      "op": "SHL"
    },
    "4524": {
      "op": "SUB"
    },
    "4525": {
      "op": "DUP8"
    },
    "4526": {
      "op": "AND"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "4530": {
      "op": "DUP3"
    },
    "4531": {
      "op": "ADD"
    },
    "4532": {
      "op": "MSTORE"
    },
    "4533": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4539": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4540": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4542": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4543": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4544": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "SUB",
      "path": "46"
    },
    "4545": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "SUB",
      "path": "46"
    },
    "4546": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4547": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4548": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4549": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4551": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11216,
        11644
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4552": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11193,
        11654
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4553": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11193,
        11654
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4554": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11193,
        11654
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4555": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11193,
        11654
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4557": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11193,
        11654
      ],
      "op": "ADD",
      "path": "46"
    },
    "4558": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11193,
        11654
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4559": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11175,
        11654
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4560": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11175,
        11654
      ],
      "op": "POP",
      "path": "46"
    },
    "4561": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11665,
        11681
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4563": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11725,
        11741
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4564": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11743,
        11750
      ],
      "op": "DUP3",
      "path": "46"
    },
    "4565": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4567": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4568": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4570": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "ADD",
      "path": "46"
    },
    "4571": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x11E5"
    },
    "4574": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4575": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4576": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4577": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DD1"
    },
    "4580": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11695,
        11752
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4581": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4582": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4584": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4585": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4587": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4588": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4589": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "SUB",
      "path": "46"
    },
    "4590": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "SUB",
      "path": "46"
    },
    "4591": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4592": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4593": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4594": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4596": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11695,
        11752
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4597": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11684,
        11754
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4598": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11684,
        11754
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4599": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11684,
        11754
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4600": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11684,
        11754
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4602": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11684,
        11754
      ],
      "op": "ADD",
      "path": "46"
    },
    "4603": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11684,
        11754
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4604": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11665,
        11754
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4605": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11665,
        11754
      ],
      "op": "POP",
      "path": "46"
    },
    "4606": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11772,
        11807
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 15,
      "value": "0x1207"
    },
    "4609": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11785,
        11793
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4610": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11795,
        11805
      ],
      "op": "DUP7",
      "path": "46"
    },
    "4611": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11772,
        11783
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x378"
    },
    "4614": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11772,
        11807
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4615": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11772,
        11807
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4616": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11765,
        11807
      ],
      "op": "SWAP15",
      "path": "46"
    },
    "4617": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10482,
        11814
      ],
      "op": "SWAP14",
      "path": "46"
    },
    "4618": {
      "op": "POP"
    },
    "4619": {
      "op": "POP"
    },
    "4620": {
      "op": "POP"
    },
    "4621": {
      "op": "POP"
    },
    "4622": {
      "op": "POP"
    },
    "4623": {
      "op": "POP"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "op": "POP"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "op": "POP"
    },
    "4630": {
      "op": "POP"
    },
    "4631": {
      "op": "POP"
    },
    "4632": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        10482,
        11814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4633": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6614,
        7573
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4634": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6843,
        6850
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4636": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        6891
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4637": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4639": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4640": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4642": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "4643": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x122B"
    },
    "4646": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4647": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "4650": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4651": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4652": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4654": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4655": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4657": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4658": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4659": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4660": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4661": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4662": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4663": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4664": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4666": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4667": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4668": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4669": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4670": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4672": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "4673": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4676": {
      "op": "DUP1"
    },
    "4677": {
      "op": "MLOAD"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4680": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "4683": {
      "op": "DUP4"
    },
    "4684": {
      "op": "CODECOPY"
    },
    "4685": {
      "op": "DUP2"
    },
    "4686": {
      "op": "MLOAD"
    },
    "4687": {
      "op": "SWAP2"
    },
    "4688": {
      "op": "MSTORE"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4691": {
      "op": "DUP1"
    },
    "4692": {
      "op": "MLOAD"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4695": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "4698": {
      "op": "DUP4"
    },
    "4699": {
      "op": "CODECOPY"
    },
    "4700": {
      "op": "DUP2"
    },
    "4701": {
      "op": "MLOAD"
    },
    "4702": {
      "op": "SWAP2"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7071,
        7084
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "4705": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7102,
        7112
      ],
      "op": "DUP8",
      "path": "46"
    },
    "4706": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4708": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4709": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4711": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "ADD",
      "path": "46"
    },
    "4712": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1275"
    },
    "4715": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "4716": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "4717": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "4718": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "4719": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4720": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4721": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "4724": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        6917,
        7126
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4725": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4726": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4728": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4729": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4731": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4732": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4733": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SUB",
      "path": "46"
    },
    "4734": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SUB",
      "path": "46"
    },
    "4735": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4736": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4737": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4738": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4740": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6917,
        7126
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4741": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4742": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4743": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4744": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4746": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "ADD",
      "path": "46"
    },
    "4747": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6894,
        7136
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4748": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        7136
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4749": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        6867,
        7136
      ],
      "op": "POP",
      "path": "46"
    },
    "4750": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7147,
        7162
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4752": {
      "offset": [
        1162,
        1262
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4754": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4755": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4757": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "ADD",
      "path": "48"
    },
    "4758": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x12F3"
    },
    "4761": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4762": {
      "op": "PUSH32",
      "value": "0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C"
    },
    "4795": {
      "op": "DUP2"
    },
    "4796": {
      "op": "MSTORE"
    },
    "4797": {
      "op": "PUSH32",
      "value": "0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4832": {
      "op": "DUP3"
    },
    "4833": {
      "op": "ADD"
    },
    "4834": {
      "op": "MSTORE"
    },
    "4835": {
      "op": "PUSH2",
      "value": "0x6E29"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4840": {
      "op": "SHL"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4843": {
      "op": "DUP3"
    },
    "4844": {
      "op": "ADD"
    },
    "4845": {
      "op": "MSTORE"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "4848": {
      "op": "ADD"
    },
    "4849": {
      "op": "SWAP1"
    },
    "4850": {
      "op": "JUMP"
    },
    "4851": {
      "offset": [
        1162,
        1262
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4852": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4854": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4855": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4857": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4858": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4859": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "SUB",
      "path": "48"
    },
    "4860": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "SUB",
      "path": "48"
    },
    "4861": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4862": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4863": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4864": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4866": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1162,
        1262
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4867": {
      "offset": [
        1147,
        1264
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4868": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1147,
        1264
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4869": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1147,
        1264
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4870": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1147,
        1264
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4872": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1147,
        1264
      ],
      "op": "ADD",
      "path": "48"
    },
    "4873": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1147,
        1264
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4874": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7286,
        7294
      ],
      "op": "DUP9",
      "path": "46"
    },
    "4875": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4877": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4878": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4880": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "ADD",
      "path": "46"
    },
    "4881": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x131A"
    },
    "4884": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4885": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4886": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1F64"
    },
    "4889": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        7268,
        7296
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4890": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4891": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4893": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4894": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4896": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4897": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP4",
      "path": "46"
    },
    "4898": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SUB",
      "path": "46"
    },
    "4899": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SUB",
      "path": "46"
    },
    "4900": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "DUP2",
      "path": "46"
    },
    "4901": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4902": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4903": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4905": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7268,
        7296
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "4906": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4907": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4908": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4909": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4911": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "ADD",
      "path": "46"
    },
    "4912": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7257,
        7298
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "4913": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7316,
        7324
      ],
      "op": "DUP9",
      "path": "46"
    },
    "4914": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7371,
        7385
      ],
      "op": "DUP9",
      "path": "46"
    },
    "4915": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "4917": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "4918": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "4920": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "ADD",
      "path": "46"
    },
    "4921": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0xC39"
    },
    "4924": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "4925": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "4926": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        7353,
        7387
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "4929": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        7353,
        7387
      ],
      "op": "JUMP",
      "path": "46"
    },
    "4930": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "4931": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7859,
        7866
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "4933": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        7907
      ],
      "op": "DUP1",
      "path": "46"
    },
    "4934": {
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4936": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4937": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4939": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "ADD",
      "path": "48"
    },
    "4940": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1354"
    },
    "4943": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4944": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1D1F"
    },
    "4947": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        713,
        829
      ],
      "op": "JUMP",
      "path": "48"
    },
    "4948": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "4949": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4951": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4952": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4954": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4955": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP4",
      "path": "48"
    },
    "4956": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4957": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SUB",
      "path": "48"
    },
    "4958": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "DUP2",
      "path": "48"
    },
    "4959": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4960": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4961": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "4963": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        713,
        829
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "4964": {
      "offset": [
        698,
        831
      ],
      "op": "DUP1",
      "path": "48"
    },
    "4965": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "4966": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4967": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "4969": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "ADD",
      "path": "48"
    },
    "4970": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        698,
        831
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4973": {
      "op": "DUP1"
    },
    "4974": {
      "op": "MLOAD"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4977": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "4980": {
      "op": "DUP4"
    },
    "4981": {
      "op": "CODECOPY"
    },
    "4982": {
      "op": "DUP2"
    },
    "4983": {
      "op": "MLOAD"
    },
    "4984": {
      "op": "SWAP2"
    },
    "4985": {
      "op": "MSTORE"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "DUP1"
    },
    "4989": {
      "op": "MLOAD"
    },
    "4990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4992": {
      "op": "PUSH2",
      "value": "0x1F9B"
    },
    "4995": {
      "op": "DUP4"
    },
    "4996": {
      "op": "CODECOPY"
    },
    "4997": {
      "op": "DUP2"
    },
    "4998": {
      "op": "MLOAD"
    },
    "4999": {
      "op": "SWAP2"
    },
    "5000": {
      "op": "MSTORE"
    },
    "5001": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8087,
        8100
      ],
      "op": "CHAINID",
      "path": "46"
    },
    "5002": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8118,
        8128
      ],
      "op": "DUP8",
      "path": "46"
    },
    "5003": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5005": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5006": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5008": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "ADD",
      "path": "46"
    },
    "5009": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x139E"
    },
    "5012": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP6",
      "path": "46"
    },
    "5013": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "5014": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "5015": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5016": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5017": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5018": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1D89"
    },
    "5021": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        7933,
        8142
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5022": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5023": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5025": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5026": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5028": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5029": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5030": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SUB",
      "path": "46"
    },
    "5031": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SUB",
      "path": "46"
    },
    "5032": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5033": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5034": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5035": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5037": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7933,
        8142
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5038": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5039": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5040": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5041": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5043": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "ADD",
      "path": "46"
    },
    "5044": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7910,
        8152
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5045": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        8152
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5046": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7883,
        8152
      ],
      "op": "POP",
      "path": "46"
    },
    "5047": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5049": {
      "offset": [
        1323,
        1453
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5051": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5052": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5054": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "ADD",
      "path": "48"
    },
    "5055": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "PUSH2",
      "path": "48",
      "value": "0x1437"
    },
    "5058": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5059": {
      "op": "PUSH32",
      "value": "0x7374724F434E65775573657228616464726573732077616C6C6574416464722C"
    },
    "5092": {
      "op": "DUP2"
    },
    "5093": {
      "op": "MSTORE"
    },
    "5094": {
      "op": "PUSH32",
      "value": "0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5129": {
      "op": "DUP3"
    },
    "5130": {
      "op": "ADD"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "PUSH32",
      "value": "0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5167": {
      "op": "DUP3"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "MSTORE"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5172": {
      "op": "ADD"
    },
    "5173": {
      "op": "SWAP1"
    },
    "5174": {
      "op": "JUMP"
    },
    "5175": {
      "offset": [
        1323,
        1453
      ],
      "op": "JUMPDEST",
      "path": "48"
    },
    "5176": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5178": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5179": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5181": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5182": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "DUP4",
      "path": "48"
    },
    "5183": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "SUB",
      "path": "48"
    },
    "5184": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "SUB",
      "path": "48"
    },
    "5185": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "DUP2",
      "path": "48"
    },
    "5186": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5187": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5188": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "5190": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1323,
        1453
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "5191": {
      "offset": [
        1308,
        1455
      ],
      "op": "DUP1",
      "path": "48"
    },
    "5192": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1308,
        1455
      ],
      "op": "MLOAD",
      "path": "48"
    },
    "5193": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1308,
        1455
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "5194": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1308,
        1455
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x20"
    },
    "5196": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1308,
        1455
      ],
      "op": "ADD",
      "path": "48"
    },
    "5197": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        1308,
        1455
      ],
      "op": "KECCAK256",
      "path": "48"
    },
    "5198": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8272,
        8283
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5199": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8330,
        8335
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5200": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5202": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5203": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5205": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "ADD",
      "path": "46"
    },
    "5206": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x145F"
    },
    "5209": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5210": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5211": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "5214": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8312,
        8337
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5215": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5216": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5218": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5219": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5221": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5222": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5223": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SUB",
      "path": "46"
    },
    "5224": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SUB",
      "path": "46"
    },
    "5225": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5226": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5227": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5228": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5230": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8312,
        8337
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5231": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5232": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5233": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5234": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5236": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "ADD",
      "path": "46"
    },
    "5237": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8301,
        8339
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5238": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8386,
        8398
      ],
      "op": "DUP11",
      "path": "46"
    },
    "5239": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5241": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5242": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5244": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "ADD",
      "path": "46"
    },
    "5245": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1486"
    },
    "5248": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5249": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5250": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DB5"
    },
    "5253": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8368,
        8400
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5254": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5255": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5257": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5258": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5261": {
      "op": "NOT"
    },
    "5262": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5263": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP5",
      "path": "46"
    },
    "5264": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "SUB",
      "path": "46"
    },
    "5265": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "ADD",
      "path": "46"
    },
    "5266": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5267": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5268": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5269": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5270": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5271": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5272": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5273": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8368,
        8400
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5275": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5276": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5277": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "ADD",
      "path": "46"
    },
    "5278": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8357,
        8402
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5279": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5280": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5281": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "ADD",
      "path": "46"
    },
    "5282": {
      "op": "SWAP6"
    },
    "5283": {
      "op": "SWAP1"
    },
    "5284": {
      "op": "SWAP6"
    },
    "5285": {
      "op": "MSTORE"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5292": {
      "op": "SHL"
    },
    "5293": {
      "op": "SUB"
    },
    "5294": {
      "op": "SWAP1"
    },
    "5295": {
      "op": "SWAP4"
    },
    "5296": {
      "op": "AND"
    },
    "5297": {
      "op": "SWAP3"
    },
    "5298": {
      "op": "DUP2"
    },
    "5299": {
      "op": "ADD"
    },
    "5300": {
      "op": "SWAP3"
    },
    "5301": {
      "op": "SWAP1"
    },
    "5302": {
      "op": "SWAP3"
    },
    "5303": {
      "op": "MSTORE"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5306": {
      "op": "DUP3"
    },
    "5307": {
      "op": "ADD"
    },
    "5308": {
      "op": "MSTORE"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5311": {
      "op": "DUP2"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "SWAP2"
    },
    "5314": {
      "op": "SWAP1"
    },
    "5315": {
      "op": "SWAP2"
    },
    "5316": {
      "op": "MSTORE"
    },
    "5317": {
      "op": "DUP8"
    },
    "5318": {
      "op": "ISZERO"
    },
    "5319": {
      "op": "ISZERO"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5322": {
      "op": "DUP3"
    },
    "5323": {
      "op": "ADD"
    },
    "5324": {
      "op": "MSTORE"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5327": {
      "op": "DUP2"
    },
    "5328": {
      "op": "ADD"
    },
    "5329": {
      "op": "DUP8"
    },
    "5330": {
      "op": "SWAP1"
    },
    "5331": {
      "op": "MSTORE"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5337": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5338": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5340": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5341": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5342": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SUB",
      "path": "46"
    },
    "5343": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SUB",
      "path": "46"
    },
    "5344": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5345": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5346": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5347": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5349": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8204,
        8472
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5350": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5351": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5352": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5353": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5355": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "ADD",
      "path": "46"
    },
    "5356": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8181,
        8482
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5357": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8482
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5358": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8163,
        8482
      ],
      "op": "POP",
      "path": "46"
    },
    "5359": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8509
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "5361": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8553,
        8569
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5362": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8571,
        8578
      ],
      "op": "DUP3",
      "path": "46"
    },
    "5363": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5365": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5366": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5368": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "ADD",
      "path": "46"
    },
    "5369": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1503"
    },
    "5372": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "5373": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "5374": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5375": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1DD1"
    },
    "5378": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8523,
        8580
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5379": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5380": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5382": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5383": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5385": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5386": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP4",
      "path": "46"
    },
    "5387": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SUB",
      "path": "46"
    },
    "5388": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SUB",
      "path": "46"
    },
    "5389": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5390": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5391": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5392": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "5394": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8523,
        8580
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "5395": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "DUP1",
      "path": "46"
    },
    "5396": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "5397": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5398": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "5400": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "ADD",
      "path": "46"
    },
    "5401": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8512,
        8582
      ],
      "op": "KECCAK256",
      "path": "46"
    },
    "5402": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8582
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "5403": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8493,
        8582
      ],
      "op": "POP",
      "path": "46"
    },
    "5404": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8635
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 16,
      "value": "0x1525"
    },
    "5407": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8613,
        8621
      ],
      "op": "DUP2",
      "path": "46"
    },
    "5408": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8623,
        8633
      ],
      "op": "DUP7",
      "path": "46"
    },
    "5409": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8611
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x378"
    },
    "5412": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "i",
      "offset": [
        8600,
        8635
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5413": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8600,
        8635
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "5414": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        8593,
        8635
      ],
      "op": "SWAP12",
      "path": "46"
    },
    "5415": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "offset": [
        7580,
        8642
      ],
      "op": "SWAP11",
      "path": "46"
    },
    "5416": {
      "op": "POP"
    },
    "5417": {
      "op": "POP"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "POP"
    },
    "5420": {
      "op": "POP"
    },
    "5421": {
      "op": "POP"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "op": "POP"
    },
    "5426": {
      "op": "POP"
    },
    "5427": {
      "fn": "CLHouseApi.SignerOCNewUser",
      "jump": "o",
      "offset": [
        7580,
        8642
      ],
      "op": "JUMP",
      "path": "46"
    },
    "5428": {
      "op": "JUMPDEST"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5431": {
      "op": "MLOAD"
    },
    "5432": {
      "op": "DUP1"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5438": {
      "op": "MSTORE"
    },
    "5439": {
      "op": "DUP1"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5448": {
      "op": "SHL"
    },
    "5449": {
      "op": "SUB"
    },
    "5450": {
      "op": "AND"
    },
    "5451": {
      "op": "DUP2"
    },
    "5452": {
      "op": "MSTORE"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5455": {
      "op": "ADD"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5458": {
      "op": "DUP2"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5465": {
      "op": "DUP2"
    },
    "5466": {
      "op": "MSTORE"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5469": {
      "op": "ADD"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5472": {
      "op": "ISZERO"
    },
    "5473": {
      "op": "ISZERO"
    },
    "5474": {
      "op": "DUP2"
    },
    "5475": {
      "op": "MSTORE"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5481": {
      "op": "ISZERO"
    },
    "5482": {
      "op": "ISZERO"
    },
    "5483": {
      "op": "DUP2"
    },
    "5484": {
      "op": "MSTORE"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "op": "SWAP1"
    },
    "5487": {
      "jump": "o",
      "op": "JUMP"
    },
    "5488": {
      "op": "JUMPDEST"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5495": {
      "op": "SHL"
    },
    "5496": {
      "op": "SUB"
    },
    "5497": {
      "op": "DUP2"
    },
    "5498": {
      "op": "AND"
    },
    "5499": {
      "op": "DUP2"
    },
    "5500": {
      "op": "EQ"
    },
    "5501": {
      "op": "PUSH2",
      "value": "0x1585"
    },
    "5504": {
      "op": "JUMPI"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5507": {
      "op": "DUP1"
    },
    "5508": {
      "op": "REVERT"
    },
    "5509": {
      "op": "JUMPDEST"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "jump": "o",
      "op": "JUMP"
    },
    "5512": {
      "op": "JUMPDEST"
    },
    "5513": {
      "op": "DUP1"
    },
    "5514": {
      "op": "CALLDATALOAD"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1593"
    },
    "5518": {
      "op": "DUP2"
    },
    "5519": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "5522": {
      "jump": "i",
      "op": "JUMP"
    },
    "5523": {
      "op": "JUMPDEST"
    },
    "5524": {
      "op": "SWAP2"
    },
    "5525": {
      "op": "SWAP1"
    },
    "5526": {
      "op": "POP"
    },
    "5527": {
      "jump": "o",
      "op": "JUMP"
    },
    "5528": {
      "op": "JUMPDEST"
    },
    "5529": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5536": {
      "op": "SHL"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5544": {
      "op": "MSTORE"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5549": {
      "op": "REVERT"
    },
    "5550": {
      "op": "JUMPDEST"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5553": {
      "op": "MLOAD"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5556": {
      "op": "DUP3"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5560": {
      "op": "NOT"
    },
    "5561": {
      "op": "AND"
    },
    "5562": {
      "op": "DUP2"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5570": {
      "op": "SHL"
    },
    "5571": {
      "op": "SUB"
    },
    "5572": {
      "op": "DUP2"
    },
    "5573": {
      "op": "GT"
    },
    "5574": {
      "op": "DUP3"
    },
    "5575": {
      "op": "DUP3"
    },
    "5576": {
      "op": "LT"
    },
    "5577": {
      "op": "OR"
    },
    "5578": {
      "op": "ISZERO"
    },
    "5579": {
      "op": "PUSH2",
      "value": "0x15D6"
    },
    "5582": {
      "op": "JUMPI"
    },
    "5583": {
      "op": "PUSH2",
      "value": "0x15D6"
    },
    "5586": {
      "op": "PUSH2",
      "value": "0x1598"
    },
    "5589": {
      "jump": "i",
      "op": "JUMP"
    },
    "5590": {
      "op": "JUMPDEST"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "op": "SWAP2"
    },
    "5595": {
      "op": "SWAP1"
    },
    "5596": {
      "op": "POP"
    },
    "5597": {
      "jump": "o",
      "op": "JUMP"
    },
    "5598": {
      "op": "JUMPDEST"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5607": {
      "op": "SHL"
    },
    "5608": {
      "op": "SUB"
    },
    "5609": {
      "op": "DUP3"
    },
    "5610": {
      "op": "GT"
    },
    "5611": {
      "op": "ISZERO"
    },
    "5612": {
      "op": "PUSH2",
      "value": "0x15F7"
    },
    "5615": {
      "op": "JUMPI"
    },
    "5616": {
      "op": "PUSH2",
      "value": "0x15F7"
    },
    "5619": {
      "op": "PUSH2",
      "value": "0x1598"
    },
    "5622": {
      "jump": "i",
      "op": "JUMP"
    },
    "5623": {
      "op": "JUMPDEST"
    },
    "5624": {
      "op": "POP"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5627": {
      "op": "ADD"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5630": {
      "op": "NOT"
    },
    "5631": {
      "op": "AND"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "op": "SWAP1"
    },
    "5636": {
      "jump": "o",
      "op": "JUMP"
    },
    "5637": {
      "op": "JUMPDEST"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5640": {
      "op": "DUP3"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5643": {
      "op": "DUP4"
    },
    "5644": {
      "op": "ADD"
    },
    "5645": {
      "op": "SLT"
    },
    "5646": {
      "op": "PUSH2",
      "value": "0x1616"
    },
    "5649": {
      "op": "JUMPI"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5652": {
      "op": "DUP1"
    },
    "5653": {
      "op": "REVERT"
    },
    "5654": {
      "op": "JUMPDEST"
    },
    "5655": {
      "op": "DUP2"
    },
    "5656": {
      "op": "CALLDATALOAD"
    },
    "5657": {
      "op": "PUSH2",
      "value": "0x1629"
    },
    "5660": {
      "op": "PUSH2",
      "value": "0x1624"
    },
    "5663": {
      "op": "DUP3"
    },
    "5664": {
      "op": "PUSH2",
      "value": "0x15DE"
    },
    "5667": {
      "jump": "i",
      "op": "JUMP"
    },
    "5668": {
      "op": "JUMPDEST"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "5672": {
      "jump": "i",
      "op": "JUMP"
    },
    "5673": {
      "op": "JUMPDEST"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "DUP2"
    },
    "5676": {
      "op": "MSTORE"
    },
    "5677": {
      "op": "DUP5"
    },
    "5678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5680": {
      "op": "DUP4"
    },
    "5681": {
      "op": "DUP7"
    },
    "5682": {
      "op": "ADD"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "GT"
    },
    "5685": {
      "op": "ISZERO"
    },
    "5686": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5689": {
      "op": "JUMPI"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5692": {
      "op": "DUP1"
    },
    "5693": {
      "op": "REVERT"
    },
    "5694": {
      "op": "JUMPDEST"
    },
    "5695": {
      "op": "DUP2"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5698": {
      "op": "DUP6"
    },
    "5699": {
      "op": "ADD"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5702": {
      "op": "DUP4"
    },
    "5703": {
      "op": "ADD"
    },
    "5704": {
      "op": "CALLDATACOPY"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5707": {
      "op": "SWAP2"
    },
    "5708": {
      "op": "DUP2"
    },
    "5709": {
      "op": "ADD"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5712": {
      "op": "ADD"
    },
    "5713": {
      "op": "SWAP2"
    },
    "5714": {
      "op": "SWAP1"
    },
    "5715": {
      "op": "SWAP2"
    },
    "5716": {
      "op": "MSTORE"
    },
    "5717": {
      "op": "SWAP4"
    },
    "5718": {
      "op": "SWAP3"
    },
    "5719": {
      "op": "POP"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "op": "POP"
    },
    "5722": {
      "jump": "o",
      "op": "JUMP"
    },
    "5723": {
      "op": "JUMPDEST"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5726": {
      "op": "DUP1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5729": {
      "op": "DUP1"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5734": {
      "op": "DUP7"
    },
    "5735": {
      "op": "DUP9"
    },
    "5736": {
      "op": "SUB"
    },
    "5737": {
      "op": "SLT"
    },
    "5738": {
      "op": "ISZERO"
    },
    "5739": {
      "op": "PUSH2",
      "value": "0x1673"
    },
    "5742": {
      "op": "JUMPI"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5745": {
      "op": "DUP1"
    },
    "5746": {
      "op": "REVERT"
    },
    "5747": {
      "op": "JUMPDEST"
    },
    "5748": {
      "op": "DUP6"
    },
    "5749": {
      "op": "CALLDATALOAD"
    },
    "5750": {
      "op": "PUSH2",
      "value": "0x167E"
    },
    "5753": {
      "op": "DUP2"
    },
    "5754": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "5757": {
      "jump": "i",
      "op": "JUMP"
    },
    "5758": {
      "op": "JUMPDEST"
    },
    "5759": {
      "op": "SWAP5"
    },
    "5760": {
      "op": "POP"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5763": {
      "op": "DUP7"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "CALLDATALOAD"
    },
    "5766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5772": {
      "op": "SHL"
    },
    "5773": {
      "op": "SUB"
    },
    "5774": {
      "op": "DUP1"
    },
    "5775": {
      "op": "DUP3"
    },
    "5776": {
      "op": "GT"
    },
    "5777": {
      "op": "ISZERO"
    },
    "5778": {
      "op": "PUSH2",
      "value": "0x169A"
    },
    "5781": {
      "op": "JUMPI"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5784": {
      "op": "DUP1"
    },
    "5785": {
      "op": "REVERT"
    },
    "5786": {
      "op": "JUMPDEST"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x16A6"
    },
    "5790": {
      "op": "DUP10"
    },
    "5791": {
      "op": "DUP4"
    },
    "5792": {
      "op": "DUP11"
    },
    "5793": {
      "op": "ADD"
    },
    "5794": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5797": {
      "jump": "i",
      "op": "JUMP"
    },
    "5798": {
      "op": "JUMPDEST"
    },
    "5799": {
      "op": "SWAP6"
    },
    "5800": {
      "op": "POP"
    },
    "5801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5803": {
      "op": "DUP9"
    },
    "5804": {
      "op": "ADD"
    },
    "5805": {
      "op": "CALLDATALOAD"
    },
    "5806": {
      "op": "SWAP5"
    },
    "5807": {
      "op": "POP"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5810": {
      "op": "DUP9"
    },
    "5811": {
      "op": "ADD"
    },
    "5812": {
      "op": "CALLDATALOAD"
    },
    "5813": {
      "op": "SWAP2"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "op": "PUSH2",
      "value": "0x16BF"
    },
    "5818": {
      "op": "DUP3"
    },
    "5819": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "5822": {
      "jump": "i",
      "op": "JUMP"
    },
    "5823": {
      "op": "JUMPDEST"
    },
    "5824": {
      "op": "SWAP1"
    },
    "5825": {
      "op": "SWAP3"
    },
    "5826": {
      "op": "POP"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5829": {
      "op": "DUP8"
    },
    "5830": {
      "op": "ADD"
    },
    "5831": {
      "op": "CALLDATALOAD"
    },
    "5832": {
      "op": "SWAP1"
    },
    "5833": {
      "op": "DUP1"
    },
    "5834": {
      "op": "DUP3"
    },
    "5835": {
      "op": "GT"
    },
    "5836": {
      "op": "ISZERO"
    },
    "5837": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "5840": {
      "op": "JUMPI"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5843": {
      "op": "DUP1"
    },
    "5844": {
      "op": "REVERT"
    },
    "5845": {
      "op": "JUMPDEST"
    },
    "5846": {
      "op": "POP"
    },
    "5847": {
      "op": "PUSH2",
      "value": "0x16E2"
    },
    "5850": {
      "op": "DUP9"
    },
    "5851": {
      "op": "DUP3"
    },
    "5852": {
      "op": "DUP10"
    },
    "5853": {
      "op": "ADD"
    },
    "5854": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5857": {
      "jump": "i",
      "op": "JUMP"
    },
    "5858": {
      "op": "JUMPDEST"
    },
    "5859": {
      "op": "SWAP2"
    },
    "5860": {
      "op": "POP"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "op": "SWAP3"
    },
    "5863": {
      "op": "SWAP6"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "SWAP3"
    },
    "5866": {
      "op": "SWAP6"
    },
    "5867": {
      "op": "SWAP1"
    },
    "5868": {
      "op": "SWAP4"
    },
    "5869": {
      "op": "POP"
    },
    "5870": {
      "jump": "o",
      "op": "JUMP"
    },
    "5871": {
      "op": "JUMPDEST"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5874": {
      "op": "DUP1"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5877": {
      "op": "DUP4"
    },
    "5878": {
      "op": "DUP6"
    },
    "5879": {
      "op": "SUB"
    },
    "5880": {
      "op": "SLT"
    },
    "5881": {
      "op": "ISZERO"
    },
    "5882": {
      "op": "PUSH2",
      "value": "0x1702"
    },
    "5885": {
      "op": "JUMPI"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5888": {
      "op": "DUP1"
    },
    "5889": {
      "op": "REVERT"
    },
    "5890": {
      "op": "JUMPDEST"
    },
    "5891": {
      "op": "DUP3"
    },
    "5892": {
      "op": "CALLDATALOAD"
    },
    "5893": {
      "op": "SWAP2"
    },
    "5894": {
      "op": "POP"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5897": {
      "op": "DUP4"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "CALLDATALOAD"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5906": {
      "op": "SHL"
    },
    "5907": {
      "op": "SUB"
    },
    "5908": {
      "op": "DUP2"
    },
    "5909": {
      "op": "GT"
    },
    "5910": {
      "op": "ISZERO"
    },
    "5911": {
      "op": "PUSH2",
      "value": "0x171F"
    },
    "5914": {
      "op": "JUMPI"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5917": {
      "op": "DUP1"
    },
    "5918": {
      "op": "REVERT"
    },
    "5919": {
      "op": "JUMPDEST"
    },
    "5920": {
      "op": "PUSH2",
      "value": "0x172B"
    },
    "5923": {
      "op": "DUP6"
    },
    "5924": {
      "op": "DUP3"
    },
    "5925": {
      "op": "DUP7"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5930": {
      "jump": "i",
      "op": "JUMP"
    },
    "5931": {
      "op": "JUMPDEST"
    },
    "5932": {
      "op": "SWAP2"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "POP"
    },
    "5935": {
      "op": "SWAP3"
    },
    "5936": {
      "op": "POP"
    },
    "5937": {
      "op": "SWAP3"
    },
    "5938": {
      "op": "SWAP1"
    },
    "5939": {
      "op": "POP"
    },
    "5940": {
      "jump": "o",
      "op": "JUMP"
    },
    "5941": {
      "op": "JUMPDEST"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5944": {
      "op": "DUP1"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5947": {
      "op": "DUP1"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5950": {
      "op": "DUP6"
    },
    "5951": {
      "op": "DUP8"
    },
    "5952": {
      "op": "SUB"
    },
    "5953": {
      "op": "SLT"
    },
    "5954": {
      "op": "ISZERO"
    },
    "5955": {
      "op": "PUSH2",
      "value": "0x174B"
    },
    "5958": {
      "op": "JUMPI"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5961": {
      "op": "DUP1"
    },
    "5962": {
      "op": "REVERT"
    },
    "5963": {
      "op": "JUMPDEST"
    },
    "5964": {
      "op": "DUP5"
    },
    "5965": {
      "op": "CALLDATALOAD"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5972": {
      "op": "SHL"
    },
    "5973": {
      "op": "SUB"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "DUP3"
    },
    "5976": {
      "op": "GT"
    },
    "5977": {
      "op": "ISZERO"
    },
    "5978": {
      "op": "PUSH2",
      "value": "0x1762"
    },
    "5981": {
      "op": "JUMPI"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5984": {
      "op": "DUP1"
    },
    "5985": {
      "op": "REVERT"
    },
    "5986": {
      "op": "JUMPDEST"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x176E"
    },
    "5990": {
      "op": "DUP9"
    },
    "5991": {
      "op": "DUP4"
    },
    "5992": {
      "op": "DUP10"
    },
    "5993": {
      "op": "ADD"
    },
    "5994": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5997": {
      "jump": "i",
      "op": "JUMP"
    },
    "5998": {
      "op": "JUMPDEST"
    },
    "5999": {
      "op": "SWAP6"
    },
    "6000": {
      "op": "POP"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6003": {
      "op": "DUP8"
    },
    "6004": {
      "op": "ADD"
    },
    "6005": {
      "op": "CALLDATALOAD"
    },
    "6006": {
      "op": "SWAP2"
    },
    "6007": {
      "op": "POP"
    },
    "6008": {
      "op": "DUP1"
    },
    "6009": {
      "op": "DUP3"
    },
    "6010": {
      "op": "GT"
    },
    "6011": {
      "op": "ISZERO"
    },
    "6012": {
      "op": "PUSH2",
      "value": "0x1784"
    },
    "6015": {
      "op": "JUMPI"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6018": {
      "op": "DUP1"
    },
    "6019": {
      "op": "REVERT"
    },
    "6020": {
      "op": "JUMPDEST"
    },
    "6021": {
      "op": "PUSH2",
      "value": "0x1790"
    },
    "6024": {
      "op": "DUP9"
    },
    "6025": {
      "op": "DUP4"
    },
    "6026": {
      "op": "DUP10"
    },
    "6027": {
      "op": "ADD"
    },
    "6028": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "6031": {
      "jump": "i",
      "op": "JUMP"
    },
    "6032": {
      "op": "JUMPDEST"
    },
    "6033": {
      "op": "SWAP5"
    },
    "6034": {
      "op": "POP"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6037": {
      "op": "DUP8"
    },
    "6038": {
      "op": "ADD"
    },
    "6039": {
      "op": "CALLDATALOAD"
    },
    "6040": {
      "op": "SWAP2"
    },
    "6041": {
      "op": "POP"
    },
    "6042": {
      "op": "PUSH2",
      "value": "0x17A2"
    },
    "6045": {
      "op": "DUP3"
    },
    "6046": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "6049": {
      "jump": "i",
      "op": "JUMP"
    },
    "6050": {
      "op": "JUMPDEST"
    },
    "6051": {
      "op": "SWAP1"
    },
    "6052": {
      "op": "SWAP3"
    },
    "6053": {
      "op": "POP"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6056": {
      "op": "DUP7"
    },
    "6057": {
      "op": "ADD"
    },
    "6058": {
      "op": "CALLDATALOAD"
    },
    "6059": {
      "op": "SWAP1"
    },
    "6060": {
      "op": "DUP1"
    },
    "6061": {
      "op": "DUP3"
    },
    "6062": {
      "op": "GT"
    },
    "6063": {
      "op": "ISZERO"
    },
    "6064": {
      "op": "PUSH2",
      "value": "0x17B8"
    },
    "6067": {
      "op": "JUMPI"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6070": {
      "op": "DUP1"
    },
    "6071": {
      "op": "REVERT"
    },
    "6072": {
      "op": "JUMPDEST"
    },
    "6073": {
      "op": "POP"
    },
    "6074": {
      "op": "PUSH2",
      "value": "0x17C5"
    },
    "6077": {
      "op": "DUP8"
    },
    "6078": {
      "op": "DUP3"
    },
    "6079": {
      "op": "DUP9"
    },
    "6080": {
      "op": "ADD"
    },
    "6081": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "6084": {
      "jump": "i",
      "op": "JUMP"
    },
    "6085": {
      "op": "JUMPDEST"
    },
    "6086": {
      "op": "SWAP2"
    },
    "6087": {
      "op": "POP"
    },
    "6088": {
      "op": "POP"
    },
    "6089": {
      "op": "SWAP3"
    },
    "6090": {
      "op": "SWAP6"
    },
    "6091": {
      "op": "SWAP2"
    },
    "6092": {
      "op": "SWAP5"
    },
    "6093": {
      "op": "POP"
    },
    "6094": {
      "op": "SWAP3"
    },
    "6095": {
      "op": "POP"
    },
    "6096": {
      "jump": "o",
      "op": "JUMP"
    },
    "6097": {
      "op": "JUMPDEST"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6100": {
      "op": "DUP1"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6103": {
      "op": "DUP4"
    },
    "6104": {
      "op": "DUP6"
    },
    "6105": {
      "op": "SUB"
    },
    "6106": {
      "op": "SLT"
    },
    "6107": {
      "op": "ISZERO"
    },
    "6108": {
      "op": "PUSH2",
      "value": "0x17E4"
    },
    "6111": {
      "op": "JUMPI"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6114": {
      "op": "DUP1"
    },
    "6115": {
      "op": "REVERT"
    },
    "6116": {
      "op": "JUMPDEST"
    },
    "6117": {
      "op": "DUP3"
    },
    "6118": {
      "op": "CALLDATALOAD"
    },
    "6119": {
      "op": "PUSH2",
      "value": "0x17EF"
    },
    "6122": {
      "op": "DUP2"
    },
    "6123": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "6126": {
      "jump": "i",
      "op": "JUMP"
    },
    "6127": {
      "op": "JUMPDEST"
    },
    "6128": {
      "op": "SWAP2"
    },
    "6129": {
      "op": "POP"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6132": {
      "op": "DUP4"
    },
    "6133": {
      "op": "ADD"
    },
    "6134": {
      "op": "CALLDATALOAD"
    },
    "6135": {
      "op": "PUSH2",
      "value": "0x17FF"
    },
    "6138": {
      "op": "DUP2"
    },
    "6139": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "6142": {
      "jump": "i",
      "op": "JUMP"
    },
    "6143": {
      "op": "JUMPDEST"
    },
    "6144": {
      "op": "DUP1"
    },
    "6145": {
      "op": "SWAP2"
    },
    "6146": {
      "op": "POP"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "SWAP3"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "op": "SWAP3"
    },
    "6151": {
      "op": "SWAP1"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "jump": "o",
      "op": "JUMP"
    },
    "6154": {
      "op": "JUMPDEST"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6157": {
      "op": "JUMPDEST"
    },
    "6158": {
      "op": "DUP4"
    },
    "6159": {
      "op": "DUP2"
    },
    "6160": {
      "op": "LT"
    },
    "6161": {
      "op": "ISZERO"
    },
    "6162": {
      "op": "PUSH2",
      "value": "0x1825"
    },
    "6165": {
      "op": "JUMPI"
    },
    "6166": {
      "op": "DUP2"
    },
    "6167": {
      "op": "DUP2"
    },
    "6168": {
      "op": "ADD"
    },
    "6169": {
      "op": "MLOAD"
    },
    "6170": {
      "op": "DUP4"
    },
    "6171": {
      "op": "DUP3"
    },
    "6172": {
      "op": "ADD"
    },
    "6173": {
      "op": "MSTORE"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6176": {
      "op": "ADD"
    },
    "6177": {
      "op": "PUSH2",
      "value": "0x180D"
    },
    "6180": {
      "op": "JUMP"
    },
    "6181": {
      "op": "JUMPDEST"
    },
    "6182": {
      "op": "DUP4"
    },
    "6183": {
      "op": "DUP2"
    },
    "6184": {
      "op": "GT"
    },
    "6185": {
      "op": "ISZERO"
    },
    "6186": {
      "op": "PUSH2",
      "value": "0x1834"
    },
    "6189": {
      "op": "JUMPI"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6192": {
      "op": "DUP5"
    },
    "6193": {
      "op": "DUP5"
    },
    "6194": {
      "op": "ADD"
    },
    "6195": {
      "op": "MSTORE"
    },
    "6196": {
      "op": "JUMPDEST"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "op": "POP"
    },
    "6199": {
      "op": "POP"
    },
    "6200": {
      "op": "POP"
    },
    "6201": {
      "jump": "o",
      "op": "JUMP"
    },
    "6202": {
      "op": "JUMPDEST"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6205": {
      "op": "DUP2"
    },
    "6206": {
      "op": "MLOAD"
    },
    "6207": {
      "op": "DUP1"
    },
    "6208": {
      "op": "DUP5"
    },
    "6209": {
      "op": "MSTORE"
    },
    "6210": {
      "op": "PUSH2",
      "value": "0x1852"
    },
    "6213": {
      "op": "DUP2"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6216": {
      "op": "DUP7"
    },
    "6217": {
      "op": "ADD"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6220": {
      "op": "DUP7"
    },
    "6221": {
      "op": "ADD"
    },
    "6222": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6225": {
      "jump": "i",
      "op": "JUMP"
    },
    "6226": {
      "op": "JUMPDEST"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6232": {
      "op": "NOT"
    },
    "6233": {
      "op": "AND"
    },
    "6234": {
      "op": "SWAP3"
    },
    "6235": {
      "op": "SWAP1"
    },
    "6236": {
      "op": "SWAP3"
    },
    "6237": {
      "op": "ADD"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6240": {
      "op": "ADD"
    },
    "6241": {
      "op": "SWAP3"
    },
    "6242": {
      "op": "SWAP2"
    },
    "6243": {
      "op": "POP"
    },
    "6244": {
      "op": "POP"
    },
    "6245": {
      "jump": "o",
      "op": "JUMP"
    },
    "6246": {
      "op": "JUMPDEST"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6249": {
      "op": "DUP2"
    },
    "6250": {
      "op": "MSTORE"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6253": {
      "op": "PUSH2",
      "value": "0x1879"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6258": {
      "op": "DUP4"
    },
    "6259": {
      "op": "ADD"
    },
    "6260": {
      "op": "DUP8"
    },
    "6261": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "6264": {
      "jump": "i",
      "op": "JUMP"
    },
    "6265": {
      "op": "JUMPDEST"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6268": {
      "op": "DUP4"
    },
    "6269": {
      "op": "ADD"
    },
    "6270": {
      "op": "SWAP6"
    },
    "6271": {
      "op": "SWAP1"
    },
    "6272": {
      "op": "SWAP6"
    },
    "6273": {
      "op": "MSTORE"
    },
    "6274": {
      "op": "POP"
    },
    "6275": {
      "op": "SWAP2"
    },
    "6276": {
      "op": "ISZERO"
    },
    "6277": {
      "op": "ISZERO"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6280": {
      "op": "DUP4"
    },
    "6281": {
      "op": "ADD"
    },
    "6282": {
      "op": "MSTORE"
    },
    "6283": {
      "op": "ISZERO"
    },
    "6284": {
      "op": "ISZERO"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6287": {
      "op": "SWAP1"
    },
    "6288": {
      "op": "SWAP2"
    },
    "6289": {
      "op": "ADD"
    },
    "6290": {
      "op": "MSTORE"
    },
    "6291": {
      "op": "SWAP2"
    },
    "6292": {
      "op": "SWAP1"
    },
    "6293": {
      "op": "POP"
    },
    "6294": {
      "jump": "o",
      "op": "JUMP"
    },
    "6295": {
      "op": "JUMPDEST"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6300": {
      "op": "DUP3"
    },
    "6301": {
      "op": "DUP5"
    },
    "6302": {
      "op": "SUB"
    },
    "6303": {
      "op": "SLT"
    },
    "6304": {
      "op": "ISZERO"
    },
    "6305": {
      "op": "PUSH2",
      "value": "0x18A9"
    },
    "6308": {
      "op": "JUMPI"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6311": {
      "op": "DUP1"
    },
    "6312": {
      "op": "REVERT"
    },
    "6313": {
      "op": "JUMPDEST"
    },
    "6314": {
      "op": "DUP2"
    },
    "6315": {
      "op": "CALLDATALOAD"
    },
    "6316": {
      "op": "PUSH2",
      "value": "0x18B4"
    },
    "6319": {
      "op": "DUP2"
    },
    "6320": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "6323": {
      "jump": "i",
      "op": "JUMP"
    },
    "6324": {
      "op": "JUMPDEST"
    },
    "6325": {
      "op": "SWAP4"
    },
    "6326": {
      "op": "SWAP3"
    },
    "6327": {
      "op": "POP"
    },
    "6328": {
      "op": "POP"
    },
    "6329": {
      "op": "POP"
    },
    "6330": {
      "jump": "o",
      "op": "JUMP"
    },
    "6331": {
      "op": "JUMPDEST"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6334": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6337": {
      "op": "DUP1"
    },
    "6338": {
      "op": "DUP4"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "PUSH2",
      "value": "0x18CF"
    },
    "6343": {
      "op": "DUP2"
    },
    "6344": {
      "op": "DUP5"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "DUP14"
    },
    "6347": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "6350": {
      "jump": "i",
      "op": "JUMP"
    },
    "6351": {
      "op": "JUMPDEST"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6354": {
      "op": "DUP5"
    },
    "6355": {
      "op": "ADD"
    },
    "6356": {
      "op": "SWAP12"
    },
    "6357": {
      "op": "SWAP1"
    },
    "6358": {
      "op": "SWAP12"
    },
    "6359": {
      "op": "MSTORE"
    },
    "6360": {
      "op": "POP"
    },
    "6361": {
      "op": "POP"
    },
    "6362": {
      "op": "SWAP7"
    },
    "6363": {
      "op": "ISZERO"
    },
    "6364": {
      "op": "ISZERO"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6367": {
      "op": "DUP9"
    },
    "6368": {
      "op": "ADD"
    },
    "6369": {
      "op": "MSTORE"
    },
    "6370": {
      "op": "SWAP5"
    },
    "6371": {
      "op": "ISZERO"
    },
    "6372": {
      "op": "ISZERO"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6375": {
      "op": "DUP8"
    },
    "6376": {
      "op": "ADD"
    },
    "6377": {
      "op": "MSTORE"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6380": {
      "op": "DUP7"
    },
    "6381": {
      "op": "ADD"
    },
    "6382": {
      "op": "SWAP4"
    },
    "6383": {
      "op": "SWAP1"
    },
    "6384": {
      "op": "SWAP4"
    },
    "6385": {
      "op": "MSTORE"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6388": {
      "op": "DUP6"
    },
    "6389": {
      "op": "ADD"
    },
    "6390": {
      "op": "SWAP2"
    },
    "6391": {
      "op": "SWAP1"
    },
    "6392": {
      "op": "SWAP2"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6396": {
      "op": "DUP5"
    },
    "6397": {
      "op": "ADD"
    },
    "6398": {
      "op": "MSTORE"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6401": {
      "op": "DUP4"
    },
    "6402": {
      "op": "ADD"
    },
    "6403": {
      "op": "MSTORE"
    },
    "6404": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6407": {
      "op": "SWAP1"
    },
    "6408": {
      "op": "SWAP2"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "MSTORE"
    },
    "6411": {
      "op": "SWAP2"
    },
    "6412": {
      "op": "SWAP1"
    },
    "6413": {
      "op": "POP"
    },
    "6414": {
      "jump": "o",
      "op": "JUMP"
    },
    "6415": {
      "op": "JUMPDEST"
    },
    "6416": {
      "op": "DUP1"
    },
    "6417": {
      "op": "ISZERO"
    },
    "6418": {
      "op": "ISZERO"
    },
    "6419": {
      "op": "DUP2"
    },
    "6420": {
      "op": "EQ"
    },
    "6421": {
      "op": "PUSH2",
      "value": "0x1585"
    },
    "6424": {
      "op": "JUMPI"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6427": {
      "op": "DUP1"
    },
    "6428": {
      "op": "REVERT"
    },
    "6429": {
      "op": "JUMPDEST"
    },
    "6430": {
      "op": "DUP1"
    },
    "6431": {
      "op": "CALLDATALOAD"
    },
    "6432": {
      "op": "PUSH2",
      "value": "0x1593"
    },
    "6435": {
      "op": "DUP2"
    },
    "6436": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "6439": {
      "jump": "i",
      "op": "JUMP"
    },
    "6440": {
      "op": "JUMPDEST"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6443": {
      "op": "DUP1"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6446": {
      "op": "DUP1"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6451": {
      "op": "DUP7"
    },
    "6452": {
      "op": "DUP9"
    },
    "6453": {
      "op": "SUB"
    },
    "6454": {
      "op": "SLT"
    },
    "6455": {
      "op": "ISZERO"
    },
    "6456": {
      "op": "PUSH2",
      "value": "0x1940"
    },
    "6459": {
      "op": "JUMPI"
    },
    "6460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6462": {
      "op": "DUP1"
    },
    "6463": {
      "op": "REVERT"
    },
    "6464": {
      "op": "JUMPDEST"
    },
    "6465": {
      "op": "DUP6"
    },
    "6466": {
      "op": "CALLDATALOAD"
    },
    "6467": {
      "op": "SWAP5"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6471": {
      "op": "DUP7"
    },
    "6472": {
      "op": "ADD"
    },
    "6473": {
      "op": "CALLDATALOAD"
    },
    "6474": {
      "op": "PUSH2",
      "value": "0x1952"
    },
    "6477": {
      "op": "DUP2"
    },
    "6478": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "6481": {
      "jump": "i",
      "op": "JUMP"
    },
    "6482": {
      "op": "JUMPDEST"
    },
    "6483": {
      "op": "SWAP4"
    },
    "6484": {
      "op": "POP"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6487": {
      "op": "DUP7"
    },
    "6488": {
      "op": "ADD"
    },
    "6489": {
      "op": "CALLDATALOAD"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6496": {
      "op": "SHL"
    },
    "6497": {
      "op": "SUB"
    },
    "6498": {
      "op": "DUP1"
    },
    "6499": {
      "op": "DUP3"
    },
    "6500": {
      "op": "GT"
    },
    "6501": {
      "op": "ISZERO"
    },
    "6502": {
      "op": "PUSH2",
      "value": "0x196E"
    },
    "6505": {
      "op": "JUMPI"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6508": {
      "op": "DUP1"
    },
    "6509": {
      "op": "REVERT"
    },
    "6510": {
      "op": "JUMPDEST"
    },
    "6511": {
      "op": "PUSH2",
      "value": "0x197A"
    },
    "6514": {
      "op": "DUP10"
    },
    "6515": {
      "op": "DUP4"
    },
    "6516": {
      "op": "DUP11"
    },
    "6517": {
      "op": "ADD"
    },
    "6518": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "6521": {
      "jump": "i",
      "op": "JUMP"
    },
    "6522": {
      "op": "JUMPDEST"
    },
    "6523": {
      "op": "SWAP5"
    },
    "6524": {
      "op": "POP"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6527": {
      "op": "DUP9"
    },
    "6528": {
      "op": "ADD"
    },
    "6529": {
      "op": "CALLDATALOAD"
    },
    "6530": {
      "op": "SWAP2"
    },
    "6531": {
      "op": "POP"
    },
    "6532": {
      "op": "PUSH2",
      "value": "0x16BF"
    },
    "6535": {
      "op": "DUP3"
    },
    "6536": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "6539": {
      "jump": "i",
      "op": "JUMP"
    },
    "6540": {
      "op": "JUMPDEST"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6543": {
      "op": "DUP1"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6548": {
      "op": "DUP5"
    },
    "6549": {
      "op": "DUP7"
    },
    "6550": {
      "op": "SUB"
    },
    "6551": {
      "op": "SLT"
    },
    "6552": {
      "op": "ISZERO"
    },
    "6553": {
      "op": "PUSH2",
      "value": "0x19A1"
    },
    "6556": {
      "op": "JUMPI"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6559": {
      "op": "DUP1"
    },
    "6560": {
      "op": "REVERT"
    },
    "6561": {
      "op": "JUMPDEST"
    },
    "6562": {
      "op": "DUP4"
    },
    "6563": {
      "op": "CALLDATALOAD"
    },
    "6564": {
      "op": "PUSH2",
      "value": "0x19AC"
    },
    "6567": {
      "op": "DUP2"
    },
    "6568": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "6571": {
      "jump": "i",
      "op": "JUMP"
    },
    "6572": {
      "op": "JUMPDEST"
    },
    "6573": {
      "op": "SWAP3"
    },
    "6574": {
      "op": "POP"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6577": {
      "op": "DUP5"
    },
    "6578": {
      "op": "ADD"
    },
    "6579": {
      "op": "CALLDATALOAD"
    },
    "6580": {
      "op": "PUSH2",
      "value": "0x19BC"
    },
    "6583": {
      "op": "DUP2"
    },
    "6584": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "6587": {
      "jump": "i",
      "op": "JUMP"
    },
    "6588": {
      "op": "JUMPDEST"
    },
    "6589": {
      "op": "SWAP2"
    },
    "6590": {
      "op": "POP"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6593": {
      "op": "DUP5"
    },
    "6594": {
      "op": "ADD"
    },
    "6595": {
      "op": "CALLDATALOAD"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6602": {
      "op": "SHL"
    },
    "6603": {
      "op": "SUB"
    },
    "6604": {
      "op": "DUP2"
    },
    "6605": {
      "op": "GT"
    },
    "6606": {
      "op": "ISZERO"
    },
    "6607": {
      "op": "PUSH2",
      "value": "0x19D7"
    },
    "6610": {
      "op": "JUMPI"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6613": {
      "op": "DUP1"
    },
    "6614": {
      "op": "REVERT"
    },
    "6615": {
      "op": "JUMPDEST"
    },
    "6616": {
      "op": "PUSH2",
      "value": "0x19E3"
    },
    "6619": {
      "op": "DUP7"
    },
    "6620": {
      "op": "DUP3"
    },
    "6621": {
      "op": "DUP8"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "6626": {
      "jump": "i",
      "op": "JUMP"
    },
    "6627": {
      "op": "JUMPDEST"
    },
    "6628": {
      "op": "SWAP2"
    },
    "6629": {
      "op": "POP"
    },
    "6630": {
      "op": "POP"
    },
    "6631": {
      "op": "SWAP3"
    },
    "6632": {
      "op": "POP"
    },
    "6633": {
      "op": "SWAP3"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "op": "SWAP3"
    },
    "6636": {
      "jump": "o",
      "op": "JUMP"
    },
    "6637": {
      "op": "JUMPDEST"
    },
    "6638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6642": {
      "op": "DUP1"
    },
    "6643": {
      "op": "DUP4"
    },
    "6644": {
      "op": "ADD"
    },
    "6645": {
      "op": "DUP2"
    },
    "6646": {
      "op": "DUP5"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "DUP1"
    },
    "6649": {
      "op": "DUP6"
    },
    "6650": {
      "op": "MLOAD"
    },
    "6651": {
      "op": "DUP1"
    },
    "6652": {
      "op": "DUP4"
    },
    "6653": {
      "op": "MSTORE"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6656": {
      "op": "SWAP3"
    },
    "6657": {
      "op": "POP"
    },
    "6658": {
      "op": "DUP3"
    },
    "6659": {
      "op": "DUP7"
    },
    "6660": {
      "op": "ADD"
    },
    "6661": {
      "op": "SWAP2"
    },
    "6662": {
      "op": "POP"
    },
    "6663": {
      "op": "DUP3"
    },
    "6664": {
      "op": "DUP2"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6667": {
      "op": "SHL"
    },
    "6668": {
      "op": "DUP8"
    },
    "6669": {
      "op": "ADD"
    },
    "6670": {
      "op": "ADD"
    },
    "6671": {
      "op": "DUP5"
    },
    "6672": {
      "op": "DUP9"
    },
    "6673": {
      "op": "ADD"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6676": {
      "op": "JUMPDEST"
    },
    "6677": {
      "op": "DUP4"
    },
    "6678": {
      "op": "DUP2"
    },
    "6679": {
      "op": "LT"
    },
    "6680": {
      "op": "ISZERO"
    },
    "6681": {
      "op": "PUSH2",
      "value": "0x1A83"
    },
    "6684": {
      "op": "JUMPI"
    },
    "6685": {
      "op": "DUP9"
    },
    "6686": {
      "op": "DUP4"
    },
    "6687": {
      "op": "SUB"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6690": {
      "op": "NOT"
    },
    "6691": {
      "op": "ADD"
    },
    "6692": {
      "op": "DUP6"
    },
    "6693": {
      "op": "MSTORE"
    },
    "6694": {
      "op": "DUP2"
    },
    "6695": {
      "op": "MLOAD"
    },
    "6696": {
      "op": "DUP1"
    },
    "6697": {
      "op": "MLOAD"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6704": {
      "op": "SHL"
    },
    "6705": {
      "op": "SUB"
    },
    "6706": {
      "op": "AND"
    },
    "6707": {
      "op": "DUP5"
    },
    "6708": {
      "op": "MSTORE"
    },
    "6709": {
      "op": "DUP8"
    },
    "6710": {
      "op": "DUP2"
    },
    "6711": {
      "op": "ADD"
    },
    "6712": {
      "op": "MLOAD"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6715": {
      "op": "DUP10"
    },
    "6716": {
      "op": "DUP7"
    },
    "6717": {
      "op": "ADD"
    },
    "6718": {
      "op": "DUP2"
    },
    "6719": {
      "op": "SWAP1"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "SWAP1"
    },
    "6722": {
      "op": "PUSH2",
      "value": "0x1A4D"
    },
    "6725": {
      "op": "DUP3"
    },
    "6726": {
      "op": "DUP8"
    },
    "6727": {
      "op": "ADD"
    },
    "6728": {
      "op": "DUP3"
    },
    "6729": {
      "op": "PUSH2",
      "value": "0x183A"
    },
    "6732": {
      "jump": "i",
      "op": "JUMP"
    },
    "6733": {
      "op": "JUMPDEST"
    },
    "6734": {
      "op": "DUP4"
    },
    "6735": {
      "op": "DUP11"
    },
    "6736": {
      "op": "ADD"
    },
    "6737": {
      "op": "MLOAD"
    },
    "6738": {
      "op": "DUP8"
    },
    "6739": {
      "op": "DUP12"
    },
    "6740": {
      "op": "ADD"
    },
    "6741": {
      "op": "MSTORE"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6744": {
      "op": "DUP1"
    },
    "6745": {
      "op": "DUP6"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "MLOAD"
    },
    "6748": {
      "op": "ISZERO"
    },
    "6749": {
      "op": "ISZERO"
    },
    "6750": {
      "op": "SWAP1"
    },
    "6751": {
      "op": "DUP9"
    },
    "6752": {
      "op": "ADD"
    },
    "6753": {
      "op": "MSTORE"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6756": {
      "op": "SWAP4"
    },
    "6757": {
      "op": "DUP5"
    },
    "6758": {
      "op": "ADD"
    },
    "6759": {
      "op": "MLOAD"
    },
    "6760": {
      "op": "ISZERO"
    },
    "6761": {
      "op": "ISZERO"
    },
    "6762": {
      "op": "SWAP4"
    },
    "6763": {
      "op": "SWAP1"
    },
    "6764": {
      "op": "SWAP7"
    },
    "6765": {
      "op": "ADD"
    },
    "6766": {
      "op": "SWAP3"
    },
    "6767": {
      "op": "SWAP1"
    },
    "6768": {
      "op": "SWAP3"
    },
    "6769": {
      "op": "MSTORE"
    },
    "6770": {
      "op": "POP"
    },
    "6771": {
      "op": "POP"
    },
    "6772": {
      "op": "SWAP4"
    },
    "6773": {
      "op": "DUP7"
    },
    "6774": {
      "op": "ADD"
    },
    "6775": {
      "op": "SWAP4"
    },
    "6776": {
      "op": "SWAP1"
    },
    "6777": {
      "op": "DUP7"
    },
    "6778": {
      "op": "ADD"
    },
    "6779": {
      "op": "SWAP1"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6782": {
      "op": "ADD"
    },
    "6783": {
      "op": "PUSH2",
      "value": "0x1A14"
    },
    "6786": {
      "op": "JUMP"
    },
    "6787": {
      "op": "JUMPDEST"
    },
    "6788": {
      "op": "POP"
    },
    "6789": {
      "op": "SWAP1"
    },
    "6790": {
      "op": "SWAP9"
    },
    "6791": {
      "op": "SWAP8"
    },
    "6792": {
      "op": "POP"
    },
    "6793": {
      "op": "POP"
    },
    "6794": {
      "op": "POP"
    },
    "6795": {
      "op": "POP"
    },
    "6796": {
      "op": "POP"
    },
    "6797": {
      "op": "POP"
    },
    "6798": {
      "op": "POP"
    },
    "6799": {
      "op": "POP"
    },
    "6800": {
      "jump": "o",
      "op": "JUMP"
    },
    "6801": {
      "op": "JUMPDEST"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6804": {
      "op": "DUP1"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6807": {
      "op": "DUP1"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6810": {
      "op": "DUP1"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6813": {
      "op": "DUP1"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6816": {
      "op": "DUP1"
    },
    "6817": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "6820": {
      "op": "DUP12"
    },
    "6821": {
      "op": "DUP14"
    },
    "6822": {
      "op": "SUB"
    },
    "6823": {
      "op": "SLT"
    },
    "6824": {
      "op": "ISZERO"
    },
    "6825": {
      "op": "PUSH2",
      "value": "0x1AB1"
    },
    "6828": {
      "op": "JUMPI"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6831": {
      "op": "DUP1"
    },
    "6832": {
      "op": "REVERT"
    },
    "6833": {
      "op": "JUMPDEST"
    },
    "6834": {
      "op": "DUP11"
    },
    "6835": {
      "op": "CALLDATALOAD"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6842": {
      "op": "SHL"
    },
    "6843": {
      "op": "SUB"
    },
    "6844": {
      "op": "DUP1"
    },
    "6845": {
      "op": "DUP3"
    },
    "6846": {
      "op": "GT"
    },
    "6847": {
      "op": "ISZERO"
    },
    "6848": {
      "op": "PUSH2",
      "value": "0x1AC8"
    },
    "6851": {
      "op": "JUMPI"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6854": {
      "op": "DUP1"
    },
    "6855": {
      "op": "REVERT"
    },
    "6856": {
      "op": "JUMPDEST"
    },
    "6857": {
      "op": "PUSH2",
      "value": "0x1AD4"
    },
    "6860": {
      "op": "DUP15"
    },
    "6861": {
      "op": "DUP4"
    },
    "6862": {
      "op": "DUP16"
    },
    "6863": {
      "op": "ADD"
    },
    "6864": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "6867": {
      "jump": "i",
      "op": "JUMP"
    },
    "6868": {
      "op": "JUMPDEST"
    },
    "6869": {
      "op": "SWAP12"
    },
    "6870": {
      "op": "POP"
    },
    "6871": {
      "op": "PUSH2",
      "value": "0x1AE2"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6876": {
      "op": "DUP15"
    },
    "6877": {
      "op": "ADD"
    },
    "6878": {
      "op": "PUSH2",
      "value": "0x191D"
    },
    "6881": {
      "jump": "i",
      "op": "JUMP"
    },
    "6882": {
      "op": "JUMPDEST"
    },
    "6883": {
      "op": "SWAP11"
    },
    "6884": {
      "op": "POP"
    },
    "6885": {
      "op": "PUSH2",
      "value": "0x1AF0"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6890": {
      "op": "DUP15"
    },
    "6891": {
      "op": "ADD"
    },
    "6892": {
      "op": "PUSH2",
      "value": "0x191D"
    },
    "6895": {
      "jump": "i",
      "op": "JUMP"
    },
    "6896": {
      "op": "JUMPDEST"
    },
    "6897": {
      "op": "SWAP10"
    },
    "6898": {
      "op": "POP"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6901": {
      "op": "DUP14"
    },
    "6902": {
      "op": "ADD"
    },
    "6903": {
      "op": "CALLDATALOAD"
    },
    "6904": {
      "op": "SWAP9"
    },
    "6905": {
      "op": "POP"
    },
    "6906": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6908": {
      "op": "DUP14"
    },
    "6909": {
      "op": "ADD"
    },
    "6910": {
      "op": "CALLDATALOAD"
    },
    "6911": {
      "op": "SWAP8"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6915": {
      "op": "DUP14"
    },
    "6916": {
      "op": "ADD"
    },
    "6917": {
      "op": "CALLDATALOAD"
    },
    "6918": {
      "op": "SWAP7"
    },
    "6919": {
      "op": "POP"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6922": {
      "op": "DUP14"
    },
    "6923": {
      "op": "ADD"
    },
    "6924": {
      "op": "CALLDATALOAD"
    },
    "6925": {
      "op": "SWAP6"
    },
    "6926": {
      "op": "POP"
    },
    "6927": {
      "op": "PUSH2",
      "value": "0x1B1A"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6932": {
      "op": "DUP15"
    },
    "6933": {
      "op": "ADD"
    },
    "6934": {
      "op": "PUSH2",
      "value": "0x1588"
    },
    "6937": {
      "jump": "i",
      "op": "JUMP"
    },
    "6938": {
      "op": "JUMPDEST"
    },
    "6939": {
      "op": "SWAP5"
    },
    "6940": {
      "op": "POP"
    },
    "6941": {
      "op": "PUSH2",
      "value": "0x1B29"
    },
    "6944": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6947": {
      "op": "DUP15"
    },
    "6948": {
      "op": "ADD"
    },
    "6949": {
      "op": "PUSH2",
      "value": "0x1588"
    },
    "6952": {
      "jump": "i",
      "op": "JUMP"
    },
    "6953": {
      "op": "JUMPDEST"
    },
    "6954": {
      "op": "SWAP4"
    },
    "6955": {
      "op": "POP"
    },
    "6956": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6959": {
      "op": "DUP14"
    },
    "6960": {
      "op": "ADD"
    },
    "6961": {
      "op": "CALLDATALOAD"
    },
    "6962": {
      "op": "SWAP2"
    },
    "6963": {
      "op": "POP"
    },
    "6964": {
      "op": "DUP1"
    },
    "6965": {
      "op": "DUP3"
    },
    "6966": {
      "op": "GT"
    },
    "6967": {
      "op": "ISZERO"
    },
    "6968": {
      "op": "PUSH2",
      "value": "0x1B40"
    },
    "6971": {
      "op": "JUMPI"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6974": {
      "op": "DUP1"
    },
    "6975": {
      "op": "REVERT"
    },
    "6976": {
      "op": "JUMPDEST"
    },
    "6977": {
      "op": "POP"
    },
    "6978": {
      "op": "PUSH2",
      "value": "0x1B4D"
    },
    "6981": {
      "op": "DUP14"
    },
    "6982": {
      "op": "DUP3"
    },
    "6983": {
      "op": "DUP15"
    },
    "6984": {
      "op": "ADD"
    },
    "6985": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "6988": {
      "jump": "i",
      "op": "JUMP"
    },
    "6989": {
      "op": "JUMPDEST"
    },
    "6990": {
      "op": "SWAP2"
    },
    "6991": {
      "op": "POP"
    },
    "6992": {
      "op": "POP"
    },
    "6993": {
      "op": "SWAP3"
    },
    "6994": {
      "op": "SWAP6"
    },
    "6995": {
      "op": "SWAP9"
    },
    "6996": {
      "op": "SWAP12"
    },
    "6997": {
      "op": "SWAP2"
    },
    "6998": {
      "op": "SWAP5"
    },
    "6999": {
      "op": "SWAP8"
    },
    "7000": {
      "op": "SWAP11"
    },
    "7001": {
      "op": "POP"
    },
    "7002": {
      "op": "SWAP3"
    },
    "7003": {
      "op": "SWAP6"
    },
    "7004": {
      "op": "SWAP9"
    },
    "7005": {
      "op": "POP"
    },
    "7006": {
      "jump": "o",
      "op": "JUMP"
    },
    "7007": {
      "op": "JUMPDEST"
    },
    "7008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7010": {
      "op": "DUP1"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7013": {
      "op": "DUP1"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7018": {
      "op": "DUP7"
    },
    "7019": {
      "op": "DUP9"
    },
    "7020": {
      "op": "SUB"
    },
    "7021": {
      "op": "SLT"
    },
    "7022": {
      "op": "ISZERO"
    },
    "7023": {
      "op": "PUSH2",
      "value": "0x1B77"
    },
    "7026": {
      "op": "JUMPI"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7029": {
      "op": "DUP1"
    },
    "7030": {
      "op": "REVERT"
    },
    "7031": {
      "op": "JUMPDEST"
    },
    "7032": {
      "op": "DUP6"
    },
    "7033": {
      "op": "CALLDATALOAD"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7040": {
      "op": "SHL"
    },
    "7041": {
      "op": "SUB"
    },
    "7042": {
      "op": "DUP1"
    },
    "7043": {
      "op": "DUP3"
    },
    "7044": {
      "op": "GT"
    },
    "7045": {
      "op": "ISZERO"
    },
    "7046": {
      "op": "PUSH2",
      "value": "0x1B8E"
    },
    "7049": {
      "op": "JUMPI"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7052": {
      "op": "DUP1"
    },
    "7053": {
      "op": "REVERT"
    },
    "7054": {
      "op": "JUMPDEST"
    },
    "7055": {
      "op": "DUP2"
    },
    "7056": {
      "op": "DUP9"
    },
    "7057": {
      "op": "ADD"
    },
    "7058": {
      "op": "SWAP2"
    },
    "7059": {
      "op": "POP"
    },
    "7060": {
      "op": "DUP9"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7063": {
      "op": "DUP4"
    },
    "7064": {
      "op": "ADD"
    },
    "7065": {
      "op": "SLT"
    },
    "7066": {
      "op": "PUSH2",
      "value": "0x1BA2"
    },
    "7069": {
      "op": "JUMPI"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7072": {
      "op": "DUP1"
    },
    "7073": {
      "op": "REVERT"
    },
    "7074": {
      "op": "JUMPDEST"
    },
    "7075": {
      "op": "DUP2"
    },
    "7076": {
      "op": "CALLDATALOAD"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7079": {
      "op": "DUP3"
    },
    "7080": {
      "op": "DUP3"
    },
    "7081": {
      "op": "GT"
    },
    "7082": {
      "op": "ISZERO"
    },
    "7083": {
      "op": "PUSH2",
      "value": "0x1BB6"
    },
    "7086": {
      "op": "JUMPI"
    },
    "7087": {
      "op": "PUSH2",
      "value": "0x1BB6"
    },
    "7090": {
      "op": "PUSH2",
      "value": "0x1598"
    },
    "7093": {
      "jump": "i",
      "op": "JUMP"
    },
    "7094": {
      "op": "JUMPDEST"
    },
    "7095": {
      "op": "DUP2"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7098": {
      "op": "SHL"
    },
    "7099": {
      "op": "PUSH2",
      "value": "0x1BC5"
    },
    "7102": {
      "op": "DUP3"
    },
    "7103": {
      "op": "DUP3"
    },
    "7104": {
      "op": "ADD"
    },
    "7105": {
      "op": "PUSH2",
      "value": "0x15AE"
    },
    "7108": {
      "jump": "i",
      "op": "JUMP"
    },
    "7109": {
      "op": "JUMPDEST"
    },
    "7110": {
      "op": "SWAP3"
    },
    "7111": {
      "op": "DUP4"
    },
    "7112": {
      "op": "MSTORE"
    },
    "7113": {
      "op": "DUP5"
    },
    "7114": {
      "op": "DUP2"
    },
    "7115": {
      "op": "ADD"
    },
    "7116": {
      "op": "DUP3"
    },
    "7117": {
      "op": "ADD"
    },
    "7118": {
      "op": "SWAP3"
    },
    "7119": {
      "op": "DUP3"
    },
    "7120": {
      "op": "DUP2"
    },
    "7121": {
      "op": "ADD"
    },
    "7122": {
      "op": "SWAP1"
    },
    "7123": {
      "op": "DUP14"
    },
    "7124": {
      "op": "DUP6"
    },
    "7125": {
      "op": "GT"
    },
    "7126": {
      "op": "ISZERO"
    },
    "7127": {
      "op": "PUSH2",
      "value": "0x1BDF"
    },
    "7130": {
      "op": "JUMPI"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7133": {
      "op": "DUP1"
    },
    "7134": {
      "op": "REVERT"
    },
    "7135": {
      "op": "JUMPDEST"
    },
    "7136": {
      "op": "SWAP6"
    },
    "7137": {
      "op": "DUP4"
    },
    "7138": {
      "op": "ADD"
    },
    "7139": {
      "op": "SWAP6"
    },
    "7140": {
      "op": "JUMPDEST"
    },
    "7141": {
      "op": "DUP5"
    },
    "7142": {
      "op": "DUP8"
    },
    "7143": {
      "op": "LT"
    },
    "7144": {
      "op": "ISZERO"
    },
    "7145": {
      "op": "PUSH2",
      "value": "0x1BFD"
    },
    "7148": {
      "op": "JUMPI"
    },
    "7149": {
      "op": "DUP7"
    },
    "7150": {
      "op": "CALLDATALOAD"
    },
    "7151": {
      "op": "DUP3"
    },
    "7152": {
      "op": "MSTORE"
    },
    "7153": {
      "op": "SWAP6"
    },
    "7154": {
      "op": "DUP4"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "op": "SWAP6"
    },
    "7157": {
      "op": "SWAP1"
    },
    "7158": {
      "op": "DUP4"
    },
    "7159": {
      "op": "ADD"
    },
    "7160": {
      "op": "SWAP1"
    },
    "7161": {
      "op": "PUSH2",
      "value": "0x1BE4"
    },
    "7164": {
      "op": "JUMP"
    },
    "7165": {
      "op": "JUMPDEST"
    },
    "7166": {
      "op": "SWAP11"
    },
    "7167": {
      "op": "POP"
    },
    "7168": {
      "op": "PUSH2",
      "value": "0x1C0D"
    },
    "7171": {
      "op": "SWAP2"
    },
    "7172": {
      "op": "POP"
    },
    "7173": {
      "op": "POP"
    },
    "7174": {
      "op": "DUP11"
    },
    "7175": {
      "op": "DUP3"
    },
    "7176": {
      "op": "ADD"
    },
    "7177": {
      "op": "PUSH2",
      "value": "0x191D"
    },
    "7180": {
      "jump": "i",
      "op": "JUMP"
    },
    "7181": {
      "op": "JUMPDEST"
    },
    "7182": {
      "op": "SWAP8"
    },
    "7183": {
      "op": "POP"
    },
    "7184": {
      "op": "POP"
    },
    "7185": {
      "op": "POP"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7188": {
      "op": "DUP9"
    },
    "7189": {
      "op": "ADD"
    },
    "7190": {
      "op": "CALLDATALOAD"
    },
    "7191": {
      "op": "SWAP2"
    },
    "7192": {
      "op": "POP"
    },
    "7193": {
      "op": "DUP1"
    },
    "7194": {
      "op": "DUP3"
    },
    "7195": {
      "op": "GT"
    },
    "7196": {
      "op": "ISZERO"
    },
    "7197": {
      "op": "PUSH2",
      "value": "0x1C25"
    },
    "7200": {
      "op": "JUMPI"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7203": {
      "op": "DUP1"
    },
    "7204": {
      "op": "REVERT"
    },
    "7205": {
      "op": "JUMPDEST"
    },
    "7206": {
      "op": "PUSH2",
      "value": "0x1C31"
    },
    "7209": {
      "op": "DUP10"
    },
    "7210": {
      "op": "DUP4"
    },
    "7211": {
      "op": "DUP11"
    },
    "7212": {
      "op": "ADD"
    },
    "7213": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "7216": {
      "jump": "i",
      "op": "JUMP"
    },
    "7217": {
      "op": "JUMPDEST"
    },
    "7218": {
      "op": "SWAP5"
    },
    "7219": {
      "op": "POP"
    },
    "7220": {
      "op": "PUSH2",
      "value": "0x1C3F"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7225": {
      "op": "DUP10"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "op": "PUSH2",
      "value": "0x1588"
    },
    "7230": {
      "jump": "i",
      "op": "JUMP"
    },
    "7231": {
      "op": "JUMPDEST"
    },
    "7232": {
      "op": "SWAP4"
    },
    "7233": {
      "op": "POP"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7236": {
      "op": "DUP9"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "CALLDATALOAD"
    },
    "7239": {
      "op": "SWAP2"
    },
    "7240": {
      "op": "POP"
    },
    "7241": {
      "op": "DUP1"
    },
    "7242": {
      "op": "DUP3"
    },
    "7243": {
      "op": "GT"
    },
    "7244": {
      "op": "ISZERO"
    },
    "7245": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "7248": {
      "op": "JUMPI"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7251": {
      "op": "DUP1"
    },
    "7252": {
      "op": "REVERT"
    },
    "7253": {
      "op": "JUMPDEST"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7256": {
      "op": "DUP1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7259": {
      "op": "DUP1"
    },
    "7260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7262": {
      "op": "DUP1"
    },
    "7263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7267": {
      "op": "DUP9"
    },
    "7268": {
      "op": "DUP11"
    },
    "7269": {
      "op": "SUB"
    },
    "7270": {
      "op": "SLT"
    },
    "7271": {
      "op": "ISZERO"
    },
    "7272": {
      "op": "PUSH2",
      "value": "0x1C70"
    },
    "7275": {
      "op": "JUMPI"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7278": {
      "op": "DUP1"
    },
    "7279": {
      "op": "REVERT"
    },
    "7280": {
      "op": "JUMPDEST"
    },
    "7281": {
      "op": "DUP8"
    },
    "7282": {
      "op": "CALLDATALOAD"
    },
    "7283": {
      "op": "PUSH2",
      "value": "0x1C7B"
    },
    "7286": {
      "op": "DUP2"
    },
    "7287": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "7290": {
      "jump": "i",
      "op": "JUMP"
    },
    "7291": {
      "op": "JUMPDEST"
    },
    "7292": {
      "op": "SWAP7"
    },
    "7293": {
      "op": "POP"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7296": {
      "op": "DUP9"
    },
    "7297": {
      "op": "ADD"
    },
    "7298": {
      "op": "CALLDATALOAD"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "op": "SUB"
    },
    "7307": {
      "op": "DUP1"
    },
    "7308": {
      "op": "DUP3"
    },
    "7309": {
      "op": "GT"
    },
    "7310": {
      "op": "ISZERO"
    },
    "7311": {
      "op": "PUSH2",
      "value": "0x1C97"
    },
    "7314": {
      "op": "JUMPI"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7317": {
      "op": "DUP1"
    },
    "7318": {
      "op": "REVERT"
    },
    "7319": {
      "op": "JUMPDEST"
    },
    "7320": {
      "op": "PUSH2",
      "value": "0x1CA3"
    },
    "7323": {
      "op": "DUP12"
    },
    "7324": {
      "op": "DUP4"
    },
    "7325": {
      "op": "DUP13"
    },
    "7326": {
      "op": "ADD"
    },
    "7327": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "7330": {
      "jump": "i",
      "op": "JUMP"
    },
    "7331": {
      "op": "JUMPDEST"
    },
    "7332": {
      "op": "SWAP8"
    },
    "7333": {
      "op": "POP"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7336": {
      "op": "DUP11"
    },
    "7337": {
      "op": "ADD"
    },
    "7338": {
      "op": "CALLDATALOAD"
    },
    "7339": {
      "op": "SWAP2"
    },
    "7340": {
      "op": "POP"
    },
    "7341": {
      "op": "DUP1"
    },
    "7342": {
      "op": "DUP3"
    },
    "7343": {
      "op": "GT"
    },
    "7344": {
      "op": "ISZERO"
    },
    "7345": {
      "op": "PUSH2",
      "value": "0x1CB9"
    },
    "7348": {
      "op": "JUMPI"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7351": {
      "op": "DUP1"
    },
    "7352": {
      "op": "REVERT"
    },
    "7353": {
      "op": "JUMPDEST"
    },
    "7354": {
      "op": "PUSH2",
      "value": "0x1CC5"
    },
    "7357": {
      "op": "DUP12"
    },
    "7358": {
      "op": "DUP4"
    },
    "7359": {
      "op": "DUP13"
    },
    "7360": {
      "op": "ADD"
    },
    "7361": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "7364": {
      "jump": "i",
      "op": "JUMP"
    },
    "7365": {
      "op": "JUMPDEST"
    },
    "7366": {
      "op": "SWAP7"
    },
    "7367": {
      "op": "POP"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7370": {
      "op": "DUP11"
    },
    "7371": {
      "op": "ADD"
    },
    "7372": {
      "op": "CALLDATALOAD"
    },
    "7373": {
      "op": "SWAP2"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "7378": {
      "op": "DUP3"
    },
    "7379": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "7382": {
      "jump": "i",
      "op": "JUMP"
    },
    "7383": {
      "op": "JUMPDEST"
    },
    "7384": {
      "op": "DUP2"
    },
    "7385": {
      "op": "SWAP6"
    },
    "7386": {
      "op": "POP"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7389": {
      "op": "DUP11"
    },
    "7390": {
      "op": "ADD"
    },
    "7391": {
      "op": "CALLDATALOAD"
    },
    "7392": {
      "op": "SWAP5"
    },
    "7393": {
      "op": "POP"
    },
    "7394": {
      "op": "PUSH2",
      "value": "0x1CED"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7399": {
      "op": "DUP12"
    },
    "7400": {
      "op": "ADD"
    },
    "7401": {
      "op": "PUSH2",
      "value": "0x1588"
    },
    "7404": {
      "jump": "i",
      "op": "JUMP"
    },
    "7405": {
      "op": "JUMPDEST"
    },
    "7406": {
      "op": "SWAP4"
    },
    "7407": {
      "op": "POP"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7410": {
      "op": "DUP11"
    },
    "7411": {
      "op": "ADD"
    },
    "7412": {
      "op": "CALLDATALOAD"
    },
    "7413": {
      "op": "SWAP2"
    },
    "7414": {
      "op": "POP"
    },
    "7415": {
      "op": "DUP1"
    },
    "7416": {
      "op": "DUP3"
    },
    "7417": {
      "op": "GT"
    },
    "7418": {
      "op": "ISZERO"
    },
    "7419": {
      "op": "PUSH2",
      "value": "0x1D03"
    },
    "7422": {
      "op": "JUMPI"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7425": {
      "op": "DUP1"
    },
    "7426": {
      "op": "REVERT"
    },
    "7427": {
      "op": "JUMPDEST"
    },
    "7428": {
      "op": "POP"
    },
    "7429": {
      "op": "PUSH2",
      "value": "0x1D10"
    },
    "7432": {
      "op": "DUP11"
    },
    "7433": {
      "op": "DUP3"
    },
    "7434": {
      "op": "DUP12"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "7439": {
      "jump": "i",
      "op": "JUMP"
    },
    "7440": {
      "op": "JUMPDEST"
    },
    "7441": {
      "op": "SWAP2"
    },
    "7442": {
      "op": "POP"
    },
    "7443": {
      "op": "POP"
    },
    "7444": {
      "op": "SWAP3"
    },
    "7445": {
      "op": "SWAP6"
    },
    "7446": {
      "op": "SWAP9"
    },
    "7447": {
      "op": "SWAP2"
    },
    "7448": {
      "op": "SWAP5"
    },
    "7449": {
      "op": "SWAP8"
    },
    "7450": {
      "op": "POP"
    },
    "7451": {
      "op": "SWAP3"
    },
    "7452": {
      "op": "SWAP6"
    },
    "7453": {
      "op": "POP"
    },
    "7454": {
      "jump": "o",
      "op": "JUMP"
    },
    "7455": {
      "op": "JUMPDEST"
    },
    "7456": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "7489": {
      "op": "DUP2"
    },
    "7490": {
      "op": "MSTORE"
    },
    "7491": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7526": {
      "op": "DUP3"
    },
    "7527": {
      "op": "ADD"
    },
    "7528": {
      "op": "MSTORE"
    },
    "7529": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7550": {
      "op": "SHL"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7553": {
      "op": "DUP3"
    },
    "7554": {
      "op": "ADD"
    },
    "7555": {
      "op": "MSTORE"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7558": {
      "op": "ADD"
    },
    "7559": {
      "op": "SWAP1"
    },
    "7560": {
      "jump": "o",
      "op": "JUMP"
    },
    "7561": {
      "op": "JUMPDEST"
    },
    "7562": {
      "op": "SWAP5"
    },
    "7563": {
      "op": "DUP6"
    },
    "7564": {
      "op": "MSTORE"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7567": {
      "op": "DUP6"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "SWAP4"
    },
    "7570": {
      "op": "SWAP1"
    },
    "7571": {
      "op": "SWAP4"
    },
    "7572": {
      "op": "MSTORE"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7575": {
      "op": "DUP5"
    },
    "7576": {
      "op": "ADD"
    },
    "7577": {
      "op": "SWAP2"
    },
    "7578": {
      "op": "SWAP1"
    },
    "7579": {
      "op": "SWAP2"
    },
    "7580": {
      "op": "MSTORE"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7583": {
      "op": "DUP4"
    },
    "7584": {
      "op": "ADD"
    },
    "7585": {
      "op": "MSTORE"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7592": {
      "op": "SHL"
    },
    "7593": {
      "op": "SUB"
    },
    "7594": {
      "op": "AND"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7597": {
      "op": "DUP3"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "SWAP1"
    },
    "7604": {
      "jump": "o",
      "op": "JUMP"
    },
    "7605": {
      "op": "JUMPDEST"
    },
    "7606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7608": {
      "op": "DUP3"
    },
    "7609": {
      "op": "MLOAD"
    },
    "7610": {
      "op": "PUSH2",
      "value": "0x1DC7"
    },
    "7613": {
      "op": "DUP2"
    },
    "7614": {
      "op": "DUP5"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7617": {
      "op": "DUP8"
    },
    "7618": {
      "op": "ADD"
    },
    "7619": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "7622": {
      "jump": "i",
      "op": "JUMP"
    },
    "7623": {
      "op": "JUMPDEST"
    },
    "7624": {
      "op": "SWAP2"
    },
    "7625": {
      "op": "SWAP1"
    },
    "7626": {
      "op": "SWAP2"
    },
    "7627": {
      "op": "ADD"
    },
    "7628": {
      "op": "SWAP3"
    },
    "7629": {
      "op": "SWAP2"
    },
    "7630": {
      "op": "POP"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "jump": "o",
      "op": "JUMP"
    },
    "7633": {
      "op": "JUMPDEST"
    },
    "7634": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7639": {
      "op": "SHL"
    },
    "7640": {
      "op": "DUP2"
    },
    "7641": {
      "op": "MSTORE"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7644": {
      "op": "DUP2"
    },
    "7645": {
      "op": "ADD"
    },
    "7646": {
      "op": "SWAP3"
    },
    "7647": {
      "op": "SWAP1"
    },
    "7648": {
      "op": "SWAP3"
    },
    "7649": {
      "op": "MSTORE"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7652": {
      "op": "DUP3"
    },
    "7653": {
      "op": "ADD"
    },
    "7654": {
      "op": "MSTORE"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "7657": {
      "op": "ADD"
    },
    "7658": {
      "op": "SWAP1"
    },
    "7659": {
      "jump": "o",
      "op": "JUMP"
    },
    "7660": {
      "op": "JUMPDEST"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7665": {
      "op": "DUP3"
    },
    "7666": {
      "op": "DUP5"
    },
    "7667": {
      "op": "SUB"
    },
    "7668": {
      "op": "SLT"
    },
    "7669": {
      "op": "ISZERO"
    },
    "7670": {
      "op": "PUSH2",
      "value": "0x1DFE"
    },
    "7673": {
      "op": "JUMPI"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7676": {
      "op": "DUP1"
    },
    "7677": {
      "op": "REVERT"
    },
    "7678": {
      "op": "JUMPDEST"
    },
    "7679": {
      "op": "POP"
    },
    "7680": {
      "op": "MLOAD"
    },
    "7681": {
      "op": "SWAP2"
    },
    "7682": {
      "op": "SWAP1"
    },
    "7683": {
      "op": "POP"
    },
    "7684": {
      "jump": "o",
      "op": "JUMP"
    },
    "7685": {
      "op": "JUMPDEST"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7688": {
      "op": "DUP3"
    },
    "7689": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7691": {
      "op": "DUP4"
    },
    "7692": {
      "op": "ADD"
    },
    "7693": {
      "op": "SLT"
    },
    "7694": {
      "op": "PUSH2",
      "value": "0x1E16"
    },
    "7697": {
      "op": "JUMPI"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7700": {
      "op": "DUP1"
    },
    "7701": {
      "op": "REVERT"
    },
    "7702": {
      "op": "JUMPDEST"
    },
    "7703": {
      "op": "DUP2"
    },
    "7704": {
      "op": "MLOAD"
    },
    "7705": {
      "op": "PUSH2",
      "value": "0x1E24"
    },
    "7708": {
      "op": "PUSH2",
      "value": "0x1624"
    },
    "7711": {
      "op": "DUP3"
    },
    "7712": {
      "op": "PUSH2",
      "value": "0x15DE"
    },
    "7715": {
      "jump": "i",
      "op": "JUMP"
    },
    "7716": {
      "op": "JUMPDEST"
    },
    "7717": {
      "op": "DUP2"
    },
    "7718": {
      "op": "DUP2"
    },
    "7719": {
      "op": "MSTORE"
    },
    "7720": {
      "op": "DUP5"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7723": {
      "op": "DUP4"
    },
    "7724": {
      "op": "DUP7"
    },
    "7725": {
      "op": "ADD"
    },
    "7726": {
      "op": "ADD"
    },
    "7727": {
      "op": "GT"
    },
    "7728": {
      "op": "ISZERO"
    },
    "7729": {
      "op": "PUSH2",
      "value": "0x1E39"
    },
    "7732": {
      "op": "JUMPI"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7735": {
      "op": "DUP1"
    },
    "7736": {
      "op": "REVERT"
    },
    "7737": {
      "op": "JUMPDEST"
    },
    "7738": {
      "op": "PUSH2",
      "value": "0x1E4A"
    },
    "7741": {
      "op": "DUP3"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7744": {
      "op": "DUP4"
    },
    "7745": {
      "op": "ADD"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7748": {
      "op": "DUP8"
    },
    "7749": {
      "op": "ADD"
    },
    "7750": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "7753": {
      "jump": "i",
      "op": "JUMP"
    },
    "7754": {
      "op": "JUMPDEST"
    },
    "7755": {
      "op": "SWAP5"
    },
    "7756": {
      "op": "SWAP4"
    },
    "7757": {
      "op": "POP"
    },
    "7758": {
      "op": "POP"
    },
    "7759": {
      "op": "POP"
    },
    "7760": {
      "op": "POP"
    },
    "7761": {
      "jump": "o",
      "op": "JUMP"
    },
    "7762": {
      "op": "JUMPDEST"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7765": {
      "op": "DUP1"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7768": {
      "op": "DUP1"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7773": {
      "op": "DUP7"
    },
    "7774": {
      "op": "DUP9"
    },
    "7775": {
      "op": "SUB"
    },
    "7776": {
      "op": "SLT"
    },
    "7777": {
      "op": "ISZERO"
    },
    "7778": {
      "op": "PUSH2",
      "value": "0x1E6A"
    },
    "7781": {
      "op": "JUMPI"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7784": {
      "op": "DUP1"
    },
    "7785": {
      "op": "REVERT"
    },
    "7786": {
      "op": "JUMPDEST"
    },
    "7787": {
      "op": "DUP6"
    },
    "7788": {
      "op": "MLOAD"
    },
    "7789": {
      "op": "PUSH2",
      "value": "0x1E75"
    },
    "7792": {
      "op": "DUP2"
    },
    "7793": {
      "op": "PUSH2",
      "value": "0x1570"
    },
    "7796": {
      "jump": "i",
      "op": "JUMP"
    },
    "7797": {
      "op": "JUMPDEST"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7800": {
      "op": "DUP8"
    },
    "7801": {
      "op": "ADD"
    },
    "7802": {
      "op": "MLOAD"
    },
    "7803": {
      "op": "SWAP1"
    },
    "7804": {
      "op": "SWAP6"
    },
    "7805": {
      "op": "POP"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7812": {
      "op": "SHL"
    },
    "7813": {
      "op": "SUB"
    },
    "7814": {
      "op": "DUP2"
    },
    "7815": {
      "op": "GT"
    },
    "7816": {
      "op": "ISZERO"
    },
    "7817": {
      "op": "PUSH2",
      "value": "0x1E91"
    },
    "7820": {
      "op": "JUMPI"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7823": {
      "op": "DUP1"
    },
    "7824": {
      "op": "REVERT"
    },
    "7825": {
      "op": "JUMPDEST"
    },
    "7826": {
      "op": "PUSH2",
      "value": "0x1E9D"
    },
    "7829": {
      "op": "DUP9"
    },
    "7830": {
      "op": "DUP3"
    },
    "7831": {
      "op": "DUP10"
    },
    "7832": {
      "op": "ADD"
    },
    "7833": {
      "op": "PUSH2",
      "value": "0x1E05"
    },
    "7836": {
      "jump": "i",
      "op": "JUMP"
    },
    "7837": {
      "op": "JUMPDEST"
    },
    "7838": {
      "op": "SWAP5"
    },
    "7839": {
      "op": "POP"
    },
    "7840": {
      "op": "POP"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7843": {
      "op": "DUP7"
    },
    "7844": {
      "op": "ADD"
    },
    "7845": {
      "op": "MLOAD"
    },
    "7846": {
      "op": "SWAP3"
    },
    "7847": {
      "op": "POP"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7850": {
      "op": "DUP7"
    },
    "7851": {
      "op": "ADD"
    },
    "7852": {
      "op": "MLOAD"
    },
    "7853": {
      "op": "PUSH2",
      "value": "0x1EB5"
    },
    "7856": {
      "op": "DUP2"
    },
    "7857": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "7860": {
      "jump": "i",
      "op": "JUMP"
    },
    "7861": {
      "op": "JUMPDEST"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7864": {
      "op": "DUP8"
    },
    "7865": {
      "op": "ADD"
    },
    "7866": {
      "op": "MLOAD"
    },
    "7867": {
      "op": "SWAP1"
    },
    "7868": {
      "op": "SWAP3"
    },
    "7869": {
      "op": "POP"
    },
    "7870": {
      "op": "PUSH2",
      "value": "0x1EC6"
    },
    "7873": {
      "op": "DUP2"
    },
    "7874": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "7877": {
      "jump": "i",
      "op": "JUMP"
    },
    "7878": {
      "op": "JUMPDEST"
    },
    "7879": {
      "op": "DUP1"
    },
    "7880": {
      "op": "SWAP2"
    },
    "7881": {
      "op": "POP"
    },
    "7882": {
      "op": "POP"
    },
    "7883": {
      "op": "SWAP3"
    },
    "7884": {
      "op": "SWAP6"
    },
    "7885": {
      "op": "POP"
    },
    "7886": {
      "op": "SWAP3"
    },
    "7887": {
      "op": "SWAP6"
    },
    "7888": {
      "op": "SWAP1"
    },
    "7889": {
      "op": "SWAP4"
    },
    "7890": {
      "op": "POP"
    },
    "7891": {
      "jump": "o",
      "op": "JUMP"
    },
    "7892": {
      "op": "JUMPDEST"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7897": {
      "op": "DUP3"
    },
    "7898": {
      "op": "DUP5"
    },
    "7899": {
      "op": "SUB"
    },
    "7900": {
      "op": "SLT"
    },
    "7901": {
      "op": "ISZERO"
    },
    "7902": {
      "op": "PUSH2",
      "value": "0x1EE6"
    },
    "7905": {
      "op": "JUMPI"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7908": {
      "op": "DUP1"
    },
    "7909": {
      "op": "REVERT"
    },
    "7910": {
      "op": "JUMPDEST"
    },
    "7911": {
      "op": "DUP2"
    },
    "7912": {
      "op": "MLOAD"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7919": {
      "op": "SHL"
    },
    "7920": {
      "op": "SUB"
    },
    "7921": {
      "op": "DUP2"
    },
    "7922": {
      "op": "GT"
    },
    "7923": {
      "op": "ISZERO"
    },
    "7924": {
      "op": "PUSH2",
      "value": "0x1EFC"
    },
    "7927": {
      "op": "JUMPI"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7930": {
      "op": "DUP1"
    },
    "7931": {
      "op": "REVERT"
    },
    "7932": {
      "op": "JUMPDEST"
    },
    "7933": {
      "op": "PUSH2",
      "value": "0x1E4A"
    },
    "7936": {
      "op": "DUP5"
    },
    "7937": {
      "op": "DUP3"
    },
    "7938": {
      "op": "DUP6"
    },
    "7939": {
      "op": "ADD"
    },
    "7940": {
      "op": "PUSH2",
      "value": "0x1E05"
    },
    "7943": {
      "jump": "i",
      "op": "JUMP"
    },
    "7944": {
      "op": "JUMPDEST"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7949": {
      "op": "DUP3"
    },
    "7950": {
      "op": "DUP5"
    },
    "7951": {
      "op": "SUB"
    },
    "7952": {
      "op": "SLT"
    },
    "7953": {
      "op": "ISZERO"
    },
    "7954": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "7957": {
      "op": "JUMPI"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7960": {
      "op": "DUP1"
    },
    "7961": {
      "op": "REVERT"
    },
    "7962": {
      "op": "JUMPDEST"
    },
    "7963": {
      "op": "DUP2"
    },
    "7964": {
      "op": "MLOAD"
    },
    "7965": {
      "op": "PUSH2",
      "value": "0x18B4"
    },
    "7968": {
      "op": "DUP2"
    },
    "7969": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "7972": {
      "jump": "i",
      "op": "JUMP"
    },
    "7973": {
      "op": "JUMPDEST"
    },
    "7974": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7981": {
      "op": "SHL"
    },
    "7982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7984": {
      "op": "MSTORE"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7989": {
      "op": "MSTORE"
    },
    "7990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7994": {
      "op": "REVERT"
    },
    "7995": {
      "op": "JUMPDEST"
    },
    "7996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8000": {
      "op": "NOT"
    },
    "8001": {
      "op": "DUP3"
    },
    "8002": {
      "op": "EQ"
    },
    "8003": {
      "op": "ISZERO"
    },
    "8004": {
      "op": "PUSH2",
      "value": "0x1F5D"
    },
    "8007": {
      "op": "JUMPI"
    },
    "8008": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8015": {
      "op": "SHL"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8018": {
      "op": "MSTORE"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8023": {
      "op": "MSTORE"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8028": {
      "op": "REVERT"
    },
    "8029": {
      "op": "JUMPDEST"
    },
    "8030": {
      "op": "POP"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "ADD"
    },
    "8034": {
      "op": "SWAP1"
    },
    "8035": {
      "jump": "o",
      "op": "JUMP"
    },
    "8036": {
      "op": "JUMPDEST"
    },
    "8037": {
      "op": "DUP2"
    },
    "8038": {
      "op": "MLOAD"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8041": {
      "op": "SWAP1"
    },
    "8042": {
      "op": "DUP3"
    },
    "8043": {
      "op": "SWAP1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8046": {
      "op": "DUP1"
    },
    "8047": {
      "op": "DUP7"
    },
    "8048": {
      "op": "ADD"
    },
    "8049": {
      "op": "DUP5"
    },
    "8050": {
      "op": "JUMPDEST"
    },
    "8051": {
      "op": "DUP4"
    },
    "8052": {
      "op": "DUP2"
    },
    "8053": {
      "op": "LT"
    },
    "8054": {
      "op": "ISZERO"
    },
    "8055": {
      "op": "PUSH2",
      "value": "0x1F8E"
    },
    "8058": {
      "op": "JUMPI"
    },
    "8059": {
      "op": "DUP2"
    },
    "8060": {
      "op": "MLOAD"
    },
    "8061": {
      "op": "DUP6"
    },
    "8062": {
      "op": "MSTORE"
    },
    "8063": {
      "op": "SWAP4"
    },
    "8064": {
      "op": "DUP3"
    },
    "8065": {
      "op": "ADD"
    },
    "8066": {
      "op": "SWAP4"
    },
    "8067": {
      "op": "SWAP1"
    },
    "8068": {
      "op": "DUP3"
    },
    "8069": {
      "op": "ADD"
    },
    "8070": {
      "op": "SWAP1"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8073": {
      "op": "ADD"
    },
    "8074": {
      "op": "PUSH2",
      "value": "0x1F72"
    },
    "8077": {
      "op": "JUMP"
    },
    "8078": {
      "op": "JUMPDEST"
    },
    "8079": {
      "op": "POP"
    },
    "8080": {
      "op": "SWAP3"
    },
    "8081": {
      "op": "SWAP7"
    },
    "8082": {
      "op": "SWAP6"
    },
    "8083": {
      "op": "POP"
    },
    "8084": {
      "op": "POP"
    },
    "8085": {
      "op": "POP"
    },
    "8086": {
      "op": "POP"
    },
    "8087": {
      "op": "POP"
    },
    "8088": {
      "op": "POP"
    },
    "8089": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0ab0b3410b8e6f285ce6c68f98849a04f810da2a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"../../interfaces/ICLHouse.sol\";\n\n/// @title Some funtions to interact with a CLHouse\n/// @author Leonardo Urrego\n/// @notice This contract is only for test \ncontract CLHouseApi {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            signR := mload( add( _signature, 32 ) )\n            // second 32 bytes\n            signS := mload( add( _signature, 64 ) )\n            // final byte (first byte of the next 32 bytes)\n            signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n    /// @notice Get the info of an user in one especific CLH\n    /// @param _houseAddr Address of the CLH\n    /// @param _walletAddr Address of the user\n    /// @return name Nickname ot other user identificaction\n    /// @return balance How much money have deposited\n    /// @return isUser true if is User\n    /// @return isManager true if is manager\n    function GetUserInfoByAddress(\n        address _houseAddr,\n        address _walletAddr\n    )\n        external\n        view\n        returns(\n            string memory name,\n            uint balance,\n            bool isUser,\n            bool isManager\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 uid = daoCLH.mapIdUser( _walletAddr );\n\n        require( 0 != uid , \"Address not exist!!\" );\n\n        strUser memory houseUser;\n\n        (   houseUser.walletAddr,\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n        require( true == houseUser.isUser  , \"Is not a user\" );\n\n        return (\n            houseUser.name,\n            houseUser.balance,\n            houseUser.isUser,\n            houseUser.isManager\n        );\n    }\n\n    /// @notice The list of all users address\n    /// @param _houseAddr address of the CLH\n    /// @return arrUsers array with list of users\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strUser[] memory arrUsers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 numUsers = daoCLH.numUsers( );\n        uint256 arrUsersLength = daoCLH.GetArrUsersLength();\n        strUser[] memory _arrUsers = new strUser[] ( numUsers );\n\n        uint256 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrUsersLength ; uid++ ) {\n            strUser memory houseUser;\n\n            (   houseUser.walletAddr,\n                houseUser.name,\n                houseUser.balance,\n                houseUser.isUser,\n                houseUser.isManager ) = daoCLH.arrUsers( uid );\n\n            if( true == houseUser.isUser ){\n                _arrUsers[ index ] = houseUser;\n                index++;\n            }\n        }\n        return _arrUsers;\n    }\n\n    /// @notice All properties of a House\n    /// @param _houseAddr CLH address\n    /// @return HOUSE_NAME name of the CLH\n    /// @return HOUSE_GOVERNANCE_MODEL Hash of governance model\n    /// @return housePrivate True if is private\n    /// @return houseOpen True if is Open\n    /// @return numUsers Current users of a CLH\n    /// @return numManagers Current managers of a CLH\n    /// @return govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagers`\n    /// @return govRuleMaxUsers Max of all users (including managers)\n    /// @return govRuleMaxManagers Max of managers that CLH can accept (only for COMMITTEE )\n    function GetHouseProperties(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            string memory HOUSE_NAME,\n            bytes32 HOUSE_GOVERNANCE_MODEL,\n            bool housePrivate,\n            bool houseOpen,\n            uint256 numUsers,\n            uint256 numManagers,\n            uint256 govRuleApprovPercentage,\n            uint256 govRuleMaxUsers,\n            uint256 govRuleMaxManagers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        return(\n            daoCLH.HOUSE_NAME(),\n            daoCLH.HOUSE_GOVERNANCE_MODEL(),\n            daoCLH.housePrivate(),\n            daoCLH.houseOpen(),\n            daoCLH.numUsers(),\n            daoCLH.numManagers(),\n            daoCLH.govRuleApprovPercentage(),\n            daoCLH.govRuleMaxUsers(),\n            daoCLH.govRuleMaxManagers()\n        );\n    }\n\n\n    function SignerOCInvit(\n        bool _acceptance,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCBulkVote(\n        uint256[] memory _propIds,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCBULKVOTE_HASH__,\n                keccak256( abi.encodePacked( _propIds ) ),\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCDelUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCDELUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCRequest(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256 _govRuleMaxUsers,\n        uint256 _govRuleMaxManagers,\n        uint256 _govRuleApprovPercentage,\n        address _whiteListWallets,\n        address _addrCLF,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _addrCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRuleMaxUsers,\n                _govRuleMaxManagers,\n                _govRuleApprovPercentage,\n                _whiteListWallets\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "223:11593:46:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/APICLH/CLHouseApi.sol",
  "type": "contract"
}